{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"IBM Deep Search Toolkit \u00b6 Interact with the Deep Search platform for new knowledge explorations and discoveries The Deep Search Toolkit is a Python SDK allowing a user to interact with the Deep Search platform. The Toolkit provides easy-to-use functionalities for several common processes such as document conversion, graph creation and querying. Learn about IBM Deep Search Quick Links \u00b6 Deep Search Github Getting started User guide Install the Deep Search Toolkit \u00b6 The Deep Search Toolkit is available as a PyPI package . It can be installed using the standard Python package managers like pip , poetry , etc. Requirements \u00b6 Python 3.8+ Install using pip \u00b6 $ pip install deepsearch-toolkit ---> 100%","title":"Home"},{"location":"#ibm-deep-search-toolkit","text":"Interact with the Deep Search platform for new knowledge explorations and discoveries The Deep Search Toolkit is a Python SDK allowing a user to interact with the Deep Search platform. The Toolkit provides easy-to-use functionalities for several common processes such as document conversion, graph creation and querying. Learn about IBM Deep Search","title":"IBM Deep Search Toolkit"},{"location":"#quick-links","text":"Deep Search Github Getting started User guide","title":"Quick Links"},{"location":"#install-the-deep-search-toolkit","text":"The Deep Search Toolkit is available as a PyPI package . It can be installed using the standard Python package managers like pip , poetry , etc.","title":"Install the Deep Search Toolkit"},{"location":"#requirements","text":"Python 3.8+","title":"Requirements"},{"location":"#install-using-pip","text":"$ pip install deepsearch-toolkit ---> 100%","title":"Install using pip"},{"location":"api-reference/","text":"API Reference \u00b6 DeepSearch Toolkit core \u00b6 cli \u00b6 plugins \u00b6 DeepsearchCliPlugin \u00b6 deepsearch_cli_add_group () \u00b6 Add a deepsearch CLI command group. :return: A typer.Typer instance with a name set. util \u00b6 config_paths \u00b6 config_dir () \u00b6 Get the path to the configuration directory config_file_path () \u00b6 Get the actual path to the configuration file. This takes into account the following paths (from most to least relevant): The file pointed to by $DEEPSEARCH_TOOLKIT_CONFIG_FILE The file $PWD/deepsearch_toolkit.json , if it exists The result of default_config_file_path() , which is os-dependent default_config_file_path () \u00b6 Get the path to the configuration file cps \u00b6 CpsApi \u00b6 default_from_env () classmethod \u00b6 Connect to CPS's API using a configured environment file apis \u00b6 kg \u00b6 create \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech api \u00b6 edges_api \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech EdgesApi \u00b6 Bases: object Do not edit the class manually. create_edges ( edges , ** kwargs ) \u00b6 create_edges # noqa: E501 Create new edges. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_edges(edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[EdgeModel] edges: The edges is an array of objects. Each of the objects contains the name of the edge, its symmetry and optionally its source and target categories. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. create_edges_with_http_info ( edges , ** kwargs ) \u00b6 create_edges # noqa: E501 Create new edges. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_edges_with_http_info(edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[EdgeModel] edges: The edges is an array of objects. Each of the objects contains the name of the edge, its symmetry and optionally its source and target categories. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_edges ( names , ** kwargs ) \u00b6 delete_edges # noqa: E501 Delete an edge in the graph. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_edges(names, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] names: Name of the edges to be deleted (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_edges_with_http_info ( names , ** kwargs ) \u00b6 delete_edges # noqa: E501 Delete an edge in the graph. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_edges_with_http_info(names, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] names: Name of the edges to be deleted (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_edges_from_hashes ( operation , edges , ** kwargs ) \u00b6 update_edges_from_hashes # noqa: E501 Update the matrix of a(n) edge(s) using the node-hashes. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_edges_from_hashes(operation, edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str operation: The operation-type that is performed when updating the edge. (required) :param list[object] edges: The parameters is an array of objects. Each of the objects contains the name of the edge and the elements (the arrays \"I\", \"J\" and \"W\"). The arrays are encoded according to the encoding type. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_edges_from_hashes_with_http_info ( operation , edges , ** kwargs ) \u00b6 update_edges_from_hashes # noqa: E501 Update the matrix of a(n) edge(s) using the node-hashes. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_edges_from_hashes_with_http_info(operation, edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str operation: The operation-type that is performed when updating the edge. (required) :param list[object] edges: The parameters is an array of objects. Each of the objects contains the name of the edge and the elements (the arrays \"I\", \"J\" and \"W\"). The arrays are encoded according to the encoding type. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_edges_from_indices ( encoding , operation , edges , ** kwargs ) \u00b6 update_edges_from_indices # noqa: E501 Update the matrix of a(n) edge(s) using the node-indices. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_edges_from_indices(encoding, operation, edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str encoding: The encoding of the indices in the sparse matrix. (required) :param str operation: The operation-type that is performed when updating the edge. (required) :param list[EdgeMatrix] edges: The parameters is an array of objects. Each of the objects contains the name of the edge and the elements (the arrays \"I\", \"J\" and \"W\"). The arrays are encoded according to the encoding type. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_edges_from_indices_with_http_info ( encoding , operation , edges , ** kwargs ) \u00b6 update_edges_from_indices # noqa: E501 Update the matrix of a(n) edge(s) using the node-indices. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_edges_from_indices_with_http_info(encoding, operation, edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str encoding: The encoding of the indices in the sparse matrix. (required) :param str operation: The operation-type that is performed when updating the edge. (required) :param list[EdgeMatrix] edges: The parameters is an array of objects. Each of the objects contains the name of the edge and the elements (the arrays \"I\", \"J\" and \"W\"). The arrays are encoded according to the encoding type. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_edges_from_mongo ( edges , ** kwargs ) \u00b6 update_edges_from_mongo # noqa: E501 Update the edges from documents in Mongo-DB's. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_edges_from_mongo(edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[MongoEdge] edges: The edges is an array of objects. Each of the objects contains the name of the edge, the source and target node-categories (which points to ingested MongoDB's used for the node creation) (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_edges_from_mongo_with_http_info ( edges , ** kwargs ) \u00b6 update_edges_from_mongo # noqa: E501 Update the edges from documents in Mongo-DB's. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_edges_from_mongo_with_http_info(edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[MongoEdge] edges: The edges is an array of objects. Each of the objects contains the name of the edge, the source and target node-categories (which points to ingested MongoDB's used for the node creation) (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_edges_from_names ( operation , edges , ** kwargs ) \u00b6 update_edges_from_names # noqa: E501 Update the matrix of a(n) edge(s) using the node-names. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_edges_from_names(operation, edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str operation: The operation-type that is performed when updating the edge. (required) :param list[object] edges: The parameters is an array of objects. Each of the objects contains the name of the edge and the elements (the arrays \"I\", \"J\" and \"W\"). The arrays are encoded according to the encoding type. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_edges_from_names_with_http_info ( operation , edges , ** kwargs ) \u00b6 update_edges_from_names # noqa: E501 Update the matrix of a(n) edge(s) using the node-names. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_edges_from_names_with_http_info(operation, edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str operation: The operation-type that is performed when updating the edge. (required) :param list[object] edges: The parameters is an array of objects. Each of the objects contains the name of the edge and the elements (the arrays \"I\", \"J\" and \"W\"). The arrays are encoded according to the encoding type. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_edges_from_triplets ( operation , edges , ** kwargs ) \u00b6 update_edges_from_triplets # noqa: E501 Update the matrix of a(n) edge(s) using triplets (in which node i & j are referred to by name or hash). # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_edges_from_triplets(operation, edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str operation: The operation-type that is performed when updating the edge. (required) :param list[object] edges: The edges is an array of objects. Each of the objects contains the name of the edge and the elements. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_edges_from_triplets_with_http_info ( operation , edges , ** kwargs ) \u00b6 update_edges_from_triplets # noqa: E501 Update the matrix of a(n) edge(s) using triplets (in which node i & j are referred to by name or hash). # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_edges_from_triplets_with_http_info(operation, edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str operation: The operation-type that is performed when updating the edge. (required) :param list[object] edges: The edges is an array of objects. Each of the objects contains the name of the edge and the elements. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. indices_api \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech IndicesApi \u00b6 Bases: object Do not edit the class manually. rebuild_indices ( node_sets , node_tables , ** kwargs ) \u00b6 rebuild_indices # noqa: E501 Rebuild the indices for fast node-lookup and node-search. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.rebuild_indices(node_sets, node_tables, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str node_sets: Rebuild the node sets for the categories and databases. (required) :param str node_tables: Rebuild the node tables for the node-name search. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. rebuild_indices_with_http_info ( node_sets , node_tables , ** kwargs ) \u00b6 rebuild_indices # noqa: E501 Rebuild the indices for fast node-lookup and node-search. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.rebuild_indices_with_http_info(node_sets, node_tables, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str node_sets: Rebuild the node sets for the categories and databases. (required) :param str node_tables: Rebuild the node tables for the node-name search. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. knowledge_graphs_api \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech KnowledgeGraphsApi \u00b6 Bases: object Do not edit the class manually. clear_graph ( ** kwargs ) \u00b6 clear_graph # noqa: E501 Clear the current in-memory graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.clear_graph(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. clear_graph_with_http_info ( ** kwargs ) \u00b6 clear_graph # noqa: E501 Clear the current in-memory graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.clear_graph_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. load_graph_from_disk ( root , name , ** kwargs ) \u00b6 load_graph_from_disk # noqa: E501 Load a graph from disk # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_graph_from_disk(root, name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str root: The root path on disk where we store the KG. (required) :param str name: The name of the current KG. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. load_graph_from_disk_with_http_info ( root , name , ** kwargs ) \u00b6 load_graph_from_disk # noqa: E501 Load a graph from disk # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_graph_from_disk_with_http_info(root, name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str root: The root path on disk where we store the KG. (required) :param str name: The name of the current KG. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. load_graph_from_s3 ( ** kwargs ) \u00b6 load_graph_from_s3 # noqa: E501 Load a graph from object-store using S3-API. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_graph_from_s3(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param InlineObject arguments: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. load_graph_from_s3_with_http_info ( ** kwargs ) \u00b6 load_graph_from_s3 # noqa: E501 Load a graph from object-store using S3-API. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_graph_from_s3_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param InlineObject arguments: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_edges_on_disk ( root , name , ** kwargs ) \u00b6 save_edges_on_disk # noqa: E501 Saves all edges on disk in CSV format. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_edges_on_disk(root, name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str root: The root path on disk where we store the KG. (required) :param str name: The name of the folder where all edges will be stored in csv format. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_edges_on_disk_with_http_info ( root , name , ** kwargs ) \u00b6 save_edges_on_disk # noqa: E501 Saves all edges on disk in CSV format. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_edges_on_disk_with_http_info(root, name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str root: The root path on disk where we store the KG. (required) :param str name: The name of the folder where all edges will be stored in csv format. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_edges_on_s3 ( arguments , ** kwargs ) \u00b6 save_edges_on_s3 # noqa: E501 Saves all edges of the graph in CSV format on object-store using S3-API. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_edges_on_s3(arguments, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param InlineObject1 arguments: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_edges_on_s3_with_http_info ( arguments , ** kwargs ) \u00b6 save_edges_on_s3 # noqa: E501 Saves all edges of the graph in CSV format on object-store using S3-API. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_edges_on_s3_with_http_info(arguments, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param InlineObject1 arguments: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_graph_on_disk ( root , name , ** kwargs ) \u00b6 save_graph_on_disk # noqa: E501 Save a graph on disk # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_graph_on_disk(root, name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str root: The root path on disk where we store the KG. (required) :param str name: The name of the current KG. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_graph_on_disk_with_http_info ( root , name , ** kwargs ) \u00b6 save_graph_on_disk # noqa: E501 Save a graph on disk # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_graph_on_disk_with_http_info(root, name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str root: The root path on disk where we store the KG. (required) :param str name: The name of the current KG. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_graph_on_s3 ( ** kwargs ) \u00b6 save_graph_on_s3 # noqa: E501 Save a graph from object-store using S3-API. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_graph_on_s3(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param InlineObject2 arguments: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_graph_on_s3_with_http_info ( ** kwargs ) \u00b6 save_graph_on_s3 # noqa: E501 Save a graph from object-store using S3-API. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_graph_on_s3_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param InlineObject2 arguments: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. nodes_api \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech NodesApi \u00b6 Bases: object Do not edit the class manually. create_nodes ( categories , size , ** kwargs ) \u00b6 create_nodes # noqa: E501 Creates a set of new nodes in the graph. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_nodes(categories, size, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] categories: Categories to which the newly created nodes belong (required) :param int size: number of nodes to be created (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. create_nodes_with_http_info ( categories , size , ** kwargs ) \u00b6 create_nodes # noqa: E501 Creates a set of new nodes in the graph. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_nodes_with_http_info(categories, size, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] categories: Categories to which the newly created nodes belong (required) :param int size: number of nodes to be created (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. ingest_nodes ( rebuild_indices , nodes , ** kwargs ) \u00b6 ingest_nodes # noqa: E501 Create a set of new nodes in the graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.ingest_nodes(rebuild_indices, nodes, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str rebuild_indices: Rebuild the node lookup-indices after ingestion. (required) :param list[Node] nodes: Array of nodes (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. ingest_nodes_mongo ( rebuild_indices , databases , ** kwargs ) \u00b6 ingest_nodes_mongo # noqa: E501 Create a set of new nodes in the graph from a Mongo-DB # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.ingest_nodes_mongo(rebuild_indices, databases, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str rebuild_indices: Rebuild the node lookup-indices after ingestion. (required) :param list[DatabaseSource] databases: Array of Mongo-databases/collections to ingest. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. ingest_nodes_mongo_with_http_info ( rebuild_indices , databases , ** kwargs ) \u00b6 ingest_nodes_mongo # noqa: E501 Create a set of new nodes in the graph from a Mongo-DB # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.ingest_nodes_mongo_with_http_info(rebuild_indices, databases, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str rebuild_indices: Rebuild the node lookup-indices after ingestion. (required) :param list[DatabaseSource] databases: Array of Mongo-databases/collections to ingest. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. ingest_nodes_with_http_info ( rebuild_indices , nodes , ** kwargs ) \u00b6 ingest_nodes # noqa: E501 Create a set of new nodes in the graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.ingest_nodes_with_http_info(rebuild_indices, nodes, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str rebuild_indices: Rebuild the node lookup-indices after ingestion. (required) :param list[Node] nodes: Array of nodes (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. tasks_api \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech TasksApi \u00b6 Bases: object Do not edit the class manually. async_task_result ( uuid , ** kwargs ) \u00b6 async_task_result # noqa: E501 returns the result of the asynchronous task # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.async_task_result(uuid, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str uuid: The UUID of the task. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. async_task_result_with_http_info ( uuid , ** kwargs ) \u00b6 async_task_result # noqa: E501 returns the result of the asynchronous task # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.async_task_result_with_http_info(uuid, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str uuid: The UUID of the task. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. async_task_status ( uuid , ** kwargs ) \u00b6 async_task_status # noqa: E501 returns the status of the asynchronous task # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.async_task_status(uuid, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str uuid: The UUID of the task. (required) :param bool thorough: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. async_task_status_with_http_info ( uuid , ** kwargs ) \u00b6 async_task_status # noqa: E501 returns the status of the asynchronous task # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.async_task_status_with_http_info(uuid, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str uuid: The UUID of the task. (required) :param bool thorough: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. api_client \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech ApiClient \u00b6 Bases: object Generic API client for OpenAPI client library builds. OpenAPI generic API client. This client handles the client- server communication, and is invariant across implementations. Specifics of the methods and models for each application are generated from the OpenAPI templates. NOTE: This class is auto generated by OpenAPI Generator. Ref: https://openapi-generator.tech Do not edit the class manually. :param configuration: .Configuration object for this client :param header_name: a header to pass when making calls to the API. :param header_value: a header value to pass when making calls to the API. :param cookie: a cookie to include in the header when making calls to the API :param pool_threads: The number of threads to use for async requests to the API. More threads means more concurrent API requests. __deserialize ( data , klass ) \u00b6 Deserializes dict, list, str into an object. :param data: dict, list or str. :param klass: class literal, or string of class name. :return: object. __deserialize_date ( string ) \u00b6 Deserializes string to date. :param string: str. :return: date. __deserialize_datetime ( string ) \u00b6 Deserializes string to datetime. The string should be in iso8601 datetime format. :param string: str. :return: datetime. __deserialize_file ( response ) \u00b6 Deserializes body to file Saves response body into a file in a temporary folder, using the filename from the Content-Disposition header if provided. :param response: RESTResponse. :return: file path. __deserialize_model ( data , klass ) \u00b6 Deserializes list or dict to model. :param data: dict, list. :param klass: class literal. :return: model object. __deserialize_object ( value ) \u00b6 Return an original value. :return: object. __deserialize_primitive ( data , klass ) \u00b6 Deserializes string to primitive type. :param data: str. :param klass: class literal. :return: int, long, float, str, bool. call_api ( resource_path , method , path_params = None , query_params = None , header_params = None , body = None , post_params = None , files = None , response_type = None , auth_settings = None , async_req = None , _return_http_data_only = None , collection_formats = None , _preload_content = True , _request_timeout = None , _host = None ) \u00b6 Makes the HTTP request (synchronous) and returns deserialized data. To make an async_req request, set the async_req parameter. :param resource_path: Path to method endpoint. :param method: Method to call. :param path_params: Path parameters in the url. :param query_params: Query parameters in the url. :param header_params: Header parameters to be placed in the request header. :param body: Request body. :param post_params dict: Request post form parameters, for application/x-www-form-urlencoded , multipart/form-data . :param auth_settings list: Auth Settings names for the request. :param response: Response data type. :param files dict: key -> filename, value -> filepath, for multipart/form-data . :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param collection_formats: dict of collection formats for path, query, header, and post parameters. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: If async_req parameter is True, the request will be called asynchronously. The method will return the request thread. If parameter async_req is False or missing, then the method will return the response directly. deserialize ( response , response_type ) \u00b6 Deserializes response into an object. :param response: RESTResponse object to be deserialized. :param response_type: class literal for deserialized object, or string of class name. :return: deserialized object. files_parameters ( files = None ) \u00b6 Builds form parameters. :param files: File parameters. :return: Form parameters with files. parameters_to_tuples ( params , collection_formats ) \u00b6 Get parameters as list of tuples, formatting collections. :param params: Parameters as dict or list of two-tuples :param dict collection_formats: Parameter collection formats :return: Parameters as list of tuples, collections formatted pool () property \u00b6 Create thread pool on first request avoids instantiating unused threadpool for blocking clients. request ( method , url , query_params = None , headers = None , post_params = None , body = None , _preload_content = True , _request_timeout = None ) \u00b6 Makes the HTTP request using RESTClient. sanitize_for_serialization ( obj ) \u00b6 Builds a JSON POST object. If obj is None, return None. If obj is str, int, long, float, bool, return directly. If obj is datetime.datetime, datetime.date convert to string in iso8601 format. If obj is list, sanitize each element in the list. If obj is dict, return the dict. If obj is OpenAPI model, return the properties dict. :param obj: The data to serialize. :return: The serialized form of data. select_header_accept ( accepts ) \u00b6 Returns Accept based on an array of accepts provided. :param accepts: List of headers. :return: Accept (e.g. application/json). select_header_content_type ( content_types ) \u00b6 Returns Content-Type based on an array of content_types provided. :param content_types: List of content-types. :return: Content-Type (e.g. application/json). update_params_for_auth ( headers , querys , auth_settings ) \u00b6 Updates header and query params based on authentication setting. :param headers: Header parameters dict to be updated. :param querys: Query parameters tuple list to be updated. :param auth_settings: Authentication setting identifiers list. user_agent () property writable \u00b6 User agent for this API client configuration \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech Configuration \u00b6 Bases: object This class is auto generated by OpenAPI Generator Do not edit the class manually. :param host: Base url :param api_key: Dict to store API key(s). Each entry in the dict specifies an API key. The dict key is the name of the security scheme in the OAS specification. The dict value is the API key secret. :param api_key_prefix: Dict to store API prefix (e.g. Bearer) The dict key is the name of the security scheme in the OAS specification. The dict value is an API key prefix when generating the auth data. :param username: Username for HTTP basic authentication :param password: Password for HTTP basic authentication :param discard_unknown_keys: Boolean value indicating whether to discard unknown properties. A server may send a response that includes additional properties that are not known by the client in the following scenarios: 1. The OpenAPI document is incomplete, i.e. it does not match the server implementation. 2. The client was generated using an older version of the OpenAPI document and the server has been upgraded since then. If a schema in the OpenAPI document defines the additionalProperties attribute, then all undeclared properties received by the server are injected into the additional properties map. In that case, there are undeclared properties, and nothing to discard. :Example: API Key Authentication Example. Given the following security scheme in the OpenAPI specification: components: securitySchemes: cookieAuth: # name for the security scheme type: apiKey in: cookie name: JSESSIONID # cookie name You can programmatically set the cookie: conf = cps.apis.kg.create.Configuration( api_key={'cookieAuth': 'abc123'} api_key_prefix={'cookieAuth': 'JSESSIONID'} ) The following cookie will be added to the HTTP request: Cookie: JSESSIONID abc123 assert_hostname = None instance-attribute \u00b6 Set this to True/False to enable/disable SSL hostname verification. cert_file = None instance-attribute \u00b6 client certificate file connection_pool_maxsize = multiprocessing . cpu_count () * 5 instance-attribute \u00b6 urllib3 connection pool's maximum number of connections saved per pool. urllib3 uses 1 connection as default value, but this is not the best value when you are making a lot of possibly parallel requests to the same host, which is often the case here. cpu_count * 5 is used as default value to increase performance. host = host instance-attribute \u00b6 Default Base url key_file = None instance-attribute \u00b6 client key file logger = {} instance-attribute \u00b6 Logging Settings logger_file_handler = None instance-attribute \u00b6 Log file handler logger_stream_handler = None instance-attribute \u00b6 Log stream handler password = password instance-attribute \u00b6 Password for HTTP basic authentication proxy = None instance-attribute \u00b6 Proxy URL proxy_headers = None instance-attribute \u00b6 Proxy headers refresh_api_key_hook = None instance-attribute \u00b6 function hook to refresh API key if expired retries = None instance-attribute \u00b6 Adding retries to override urllib3 default value 3 safe_chars_for_path_param = '' instance-attribute \u00b6 Safe chars for path_param ssl_ca_cert = None instance-attribute \u00b6 Set this to customize the certificate file to verify the peer. temp_folder_path = None instance-attribute \u00b6 Temp file folder for downloading files username = username instance-attribute \u00b6 Username for HTTP basic authentication verify_ssl = True instance-attribute \u00b6 SSL/TLS verification Set this to false to skip verifying SSL certificate when calling API from https server. __init__ ( host = 'http://localhost/api/kg/create/v1' , api_key = None , api_key_prefix = None , username = None , password = None , discard_unknown_keys = False ) \u00b6 Constructor auth_settings () \u00b6 Gets Auth Settings dict for api client. :return: The Auth Settings information dict. debug () property writable \u00b6 Debug status :param value: The debug status, True or False. :type: bool get_api_key_with_prefix ( identifier ) \u00b6 Gets API key (with prefix if set). :param identifier: The identifier of apiKey. :return: The token for api key authentication. get_basic_auth_token () \u00b6 Gets HTTP basic authentication header (string). :return: The token for basic HTTP authentication. get_default_copy () classmethod \u00b6 Return new instance of configuration. This method returns newly created, based on default constructor, object of Configuration class or returns a copy of default configuration passed by the set_default method. :return: The configuration object. get_host_from_settings ( index , variables = None ) \u00b6 Gets host URL based on the index and variables :param index: array index of the host settings :param variables: hash of variable and the corresponding value :return: URL based on host settings get_host_settings () \u00b6 Gets an array of host settings :return: An array of host settings logger_file () property writable \u00b6 The logger file. If the logger_file is None, then add stream handler and remove file handler. Otherwise, add file handler and remove stream handler. :param value: The logger_file path. :type: str logger_format () property writable \u00b6 The logger format. The logger_formatter will be updated when sets logger_format. :param value: The format string. :type: str set_default ( default ) classmethod \u00b6 Set default instance of configuration. It stores default configuration, which can be returned by get_default_copy method. :param default: object of Configuration to_debug_report () \u00b6 Gets the essential information for debugging. :return: The report for debugging. exceptions \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech ApiException \u00b6 Bases: OpenApiException __str__ () \u00b6 Custom error messages for exception ApiKeyError \u00b6 Bases: OpenApiException , KeyError __init__ ( msg , path_to_item = None ) \u00b6 Parameters: Name Type Description Default msg str the exception message required ApiTypeError \u00b6 Bases: OpenApiException , TypeError __init__ ( msg , path_to_item = None , valid_classes = None , key_type = None ) \u00b6 Raises an exception for TypeErrors Parameters: Name Type Description Default msg str the exception message required Other Parameters: Name Type Description path_to_item list a list of keys an indices to get to the current_item None if unset valid_classes tuple the primitive classes that current item should be an instance of None if unset key_type bool False if our value is a value in a dict True if it is a key in a dict False if our item is an item in a list None if unset ApiValueError \u00b6 Bases: OpenApiException , ValueError __init__ ( msg , path_to_item = None ) \u00b6 Parameters: Name Type Description Default msg str the exception message required OpenApiException \u00b6 Bases: Exception The base exception class for all OpenAPIExceptions render_path ( path_to_item ) \u00b6 Returns a string representation of a path models \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech database_source \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech DatabaseSource \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( categories = None , collections = None , data_fields = None , mongo = None , s3 = None , local_vars_configuration = None ) \u00b6 DatabaseSource - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint categories () property writable \u00b6 Gets the categories of this DatabaseSource. # noqa: E501 :return: The categories of this DatabaseSource. # noqa: E501 :rtype: list[str] collections () property writable \u00b6 Gets the collections of this DatabaseSource. # noqa: E501 :return: The collections of this DatabaseSource. # noqa: E501 :rtype: list[str] data_fields () property writable \u00b6 Gets the data_fields of this DatabaseSource. # noqa: E501 :return: The data_fields of this DatabaseSource. # noqa: E501 :rtype: list[str] mongo () property writable \u00b6 Gets the mongo of this DatabaseSource. # noqa: E501 :return: The mongo of this DatabaseSource. # noqa: E501 :rtype: DatabaseSourceMongo s3 () property writable \u00b6 Gets the s3 of this DatabaseSource. # noqa: E501 :return: The s3 of this DatabaseSource. # noqa: E501 :rtype: DatabaseSourceS3 to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model database_source_mongo \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech DatabaseSourceMongo \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( database = None , uri = None , local_vars_configuration = None ) \u00b6 DatabaseSourceMongo - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint database () property writable \u00b6 Gets the database of this DatabaseSourceMongo. # noqa: E501 :return: The database of this DatabaseSourceMongo. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model uri () property writable \u00b6 Gets the uri of this DatabaseSourceMongo. # noqa: E501 :return: The uri of this DatabaseSourceMongo. # noqa: E501 :rtype: str database_source_s3 \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech DatabaseSourceS3 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( access_key = None , bucket = None , host = None , is_secure = None , port = None , secret_key = None , local_vars_configuration = None ) \u00b6 DatabaseSourceS3 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint access_key () property writable \u00b6 Gets the access_key of this DatabaseSourceS3. # noqa: E501 :return: The access_key of this DatabaseSourceS3. # noqa: E501 :rtype: str bucket () property writable \u00b6 Gets the bucket of this DatabaseSourceS3. # noqa: E501 :return: The bucket of this DatabaseSourceS3. # noqa: E501 :rtype: str host () property writable \u00b6 Gets the host of this DatabaseSourceS3. # noqa: E501 :return: The host of this DatabaseSourceS3. # noqa: E501 :rtype: str is_secure () property writable \u00b6 Gets the is_secure of this DatabaseSourceS3. # noqa: E501 :return: The is_secure of this DatabaseSourceS3. # noqa: E501 :rtype: bool port () property writable \u00b6 Gets the port of this DatabaseSourceS3. # noqa: E501 :return: The port of this DatabaseSourceS3. # noqa: E501 :rtype: int secret_key () property writable \u00b6 Gets the secret_key of this DatabaseSourceS3. # noqa: E501 :return: The secret_key of this DatabaseSourceS3. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model edge_matrix \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech EdgeMatrix \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( elements = None , name = None , local_vars_configuration = None ) \u00b6 EdgeMatrix - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint elements () property writable \u00b6 Gets the elements of this EdgeMatrix. # noqa: E501 :return: The elements of this EdgeMatrix. # noqa: E501 :rtype: object name () property writable \u00b6 Gets the name of this EdgeMatrix. # noqa: E501 :return: The name of this EdgeMatrix. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model edge_model \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech EdgeModel \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , source_categories = None , symmetric = None , target_categories = None , local_vars_configuration = None ) \u00b6 EdgeModel - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this EdgeModel. # noqa: E501 :return: The name of this EdgeModel. # noqa: E501 :rtype: str source_categories () property writable \u00b6 Gets the source_categories of this EdgeModel. # noqa: E501 :return: The source_categories of this EdgeModel. # noqa: E501 :rtype: list[str] symmetric () property writable \u00b6 Gets the symmetric of this EdgeModel. # noqa: E501 :return: The symmetric of this EdgeModel. # noqa: E501 :rtype: bool target_categories () property writable \u00b6 Gets the target_categories of this EdgeModel. # noqa: E501 :return: The target_categories of this EdgeModel. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model inline_object \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech InlineObject \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( bucket = None , key = None , s3_coordinates = None , local_vars_configuration = None ) \u00b6 InlineObject - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bucket () property writable \u00b6 Gets the bucket of this InlineObject. # noqa: E501 Bucket name to retrieve graph # noqa: E501 :return: The bucket of this InlineObject. # noqa: E501 :rtype: str key () property writable \u00b6 Gets the key of this InlineObject. # noqa: E501 Object key name # noqa: E501 :return: The key of this InlineObject. # noqa: E501 :rtype: str s3_coordinates () property writable \u00b6 Gets the s3_coordinates of this InlineObject. # noqa: E501 :return: The s3_coordinates of this InlineObject. # noqa: E501 :rtype: S3Source to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model inline_object1 \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech InlineObject1 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( bucket = None , key = None , s3_coordinates = None , local_vars_configuration = None ) \u00b6 InlineObject1 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bucket () property writable \u00b6 Gets the bucket of this InlineObject1. # noqa: E501 Bucket name to retrieve graph # noqa: E501 :return: The bucket of this InlineObject1. # noqa: E501 :rtype: str key () property writable \u00b6 Gets the key of this InlineObject1. # noqa: E501 Object key name # noqa: E501 :return: The key of this InlineObject1. # noqa: E501 :rtype: str s3_coordinates () property writable \u00b6 Gets the s3_coordinates of this InlineObject1. # noqa: E501 :return: The s3_coordinates of this InlineObject1. # noqa: E501 :rtype: S3Source to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model inline_object2 \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech InlineObject2 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( bucket = None , key = None , s3_coordinates = None , local_vars_configuration = None ) \u00b6 InlineObject2 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bucket () property writable \u00b6 Gets the bucket of this InlineObject2. # noqa: E501 Bucket name to retrieve graph # noqa: E501 :return: The bucket of this InlineObject2. # noqa: E501 :rtype: str key () property writable \u00b6 Gets the key of this InlineObject2. # noqa: E501 Object key name # noqa: E501 :return: The key of this InlineObject2. # noqa: E501 :rtype: str s3_coordinates () property writable \u00b6 Gets the s3_coordinates of this InlineObject2. # noqa: E501 :return: The s3_coordinates of this InlineObject2. # noqa: E501 :rtype: S3Source to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model mongo_edge \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech MongoEdge \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , source = None , symmetric = True , target = None , local_vars_configuration = None ) \u00b6 MongoEdge - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this MongoEdge. # noqa: E501 :return: The name of this MongoEdge. # noqa: E501 :rtype: str source () property writable \u00b6 Gets the source of this MongoEdge. # noqa: E501 :return: The source of this MongoEdge. # noqa: E501 :rtype: list[MongoEdgeItem] symmetric () property writable \u00b6 Gets the symmetric of this MongoEdge. # noqa: E501 :return: The symmetric of this MongoEdge. # noqa: E501 :rtype: bool target () property writable \u00b6 Gets the target of this MongoEdge. # noqa: E501 :return: The target of this MongoEdge. # noqa: E501 :rtype: list[MongoEdgeItem] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model mongo_edge_item \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech MongoEdgeItem \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( category = None , fields = None , local_vars_configuration = None ) \u00b6 MongoEdgeItem - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint category () property writable \u00b6 Gets the category of this MongoEdgeItem. # noqa: E501 :return: The category of this MongoEdgeItem. # noqa: E501 :rtype: str fields () property writable \u00b6 Gets the fields of this MongoEdgeItem. # noqa: E501 :return: The fields of this MongoEdgeItem. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model node \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech Node \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( categories = None , database = None , hash = None , name = None , synonyms = None , local_vars_configuration = None ) \u00b6 Node - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint categories () property writable \u00b6 Gets the categories of this Node. # noqa: E501 :return: The categories of this Node. # noqa: E501 :rtype: list[str] database () property writable \u00b6 Gets the database of this Node. # noqa: E501 :return: The database of this Node. # noqa: E501 :rtype: object hash () property writable \u00b6 Gets the hash of this Node. # noqa: E501 :return: The hash of this Node. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this Node. # noqa: E501 :return: The name of this Node. # noqa: E501 :rtype: str synonyms () property writable \u00b6 Gets the synonyms of this Node. # noqa: E501 :return: The synonyms of this Node. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model s3_source \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech S3Source \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( access_key = None , host = None , is_secure = False , location = None , port = None , secret_key = None , verify = False , local_vars_configuration = None ) \u00b6 S3Source - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint access_key () property writable \u00b6 Gets the access_key of this S3Source. # noqa: E501 :return: The access_key of this S3Source. # noqa: E501 :rtype: str host () property writable \u00b6 Gets the host of this S3Source. # noqa: E501 :return: The host of this S3Source. # noqa: E501 :rtype: str is_secure () property writable \u00b6 Gets the is_secure of this S3Source. # noqa: E501 :return: The is_secure of this S3Source. # noqa: E501 :rtype: bool location () property writable \u00b6 Gets the location of this S3Source. # noqa: E501 :return: The location of this S3Source. # noqa: E501 :rtype: str port () property writable \u00b6 Gets the port of this S3Source. # noqa: E501 :return: The port of this S3Source. # noqa: E501 :rtype: int secret_key () property writable \u00b6 Gets the secret_key of this S3Source. # noqa: E501 :return: The secret_key of this S3Source. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model verify () property writable \u00b6 Gets the verify of this S3Source. # noqa: E501 :return: The verify of this S3Source. # noqa: E501 :rtype: bool sparse_matrix_with_names_or_hashes \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech SparseMatrixWithNamesOrHashes \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( i = None , j = None , w = None , local_vars_configuration = None ) \u00b6 SparseMatrixWithNamesOrHashes - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint i () property writable \u00b6 Gets the i of this SparseMatrixWithNamesOrHashes. # noqa: E501 :return: The i of this SparseMatrixWithNamesOrHashes. # noqa: E501 :rtype: list[str] j () property writable \u00b6 Gets the j of this SparseMatrixWithNamesOrHashes. # noqa: E501 :return: The j of this SparseMatrixWithNamesOrHashes. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model w () property writable \u00b6 Gets the w of this SparseMatrixWithNamesOrHashes. # noqa: E501 :return: The w of this SparseMatrixWithNamesOrHashes. # noqa: E501 :rtype: list[float] triplet \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech Triplet \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( i = None , j = None , w = None , local_vars_configuration = None ) \u00b6 Triplet - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint i () property writable \u00b6 Gets the i of this Triplet. # noqa: E501 :return: The i of this Triplet. # noqa: E501 :rtype: str j () property writable \u00b6 Gets the j of this Triplet. # noqa: E501 :return: The j of this Triplet. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model w () property writable \u00b6 Gets the w of this Triplet. # noqa: E501 :return: The w of this Triplet. # noqa: E501 :rtype: float rest \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech RESTClientObject \u00b6 Bases: object request ( method , url , query_params = None , headers = None , body = None , post_params = None , _preload_content = True , _request_timeout = None ) \u00b6 Perform requests. :param method: http request method :param url: http request url :param query_params: query parameters in the url :param headers: http request headers :param body: request json body, for application/json :param post_params: request post parameters, application/x-www-form-urlencoded and multipart/form-data :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. RESTResponse \u00b6 Bases: io . IOBase getheader ( name , default = None ) \u00b6 Returns a given response header. getheaders () \u00b6 Returns a dictionary of the response headers. query \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech api \u00b6 description_api \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech DescriptionApi \u00b6 Bases: object Do not edit the class manually. get_graph_description ( ** kwargs ) \u00b6 get_graph_description # noqa: E501 Get a description of the graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_graph_description(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: GraphDescription If the method is called asynchronously, returns the request thread. get_graph_description_with_http_info ( ** kwargs ) \u00b6 get_graph_description # noqa: E501 Get a description of the graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_graph_description_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(GraphDescription, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_graph_modules ( ** kwargs ) \u00b6 get_graph_modules # noqa: E501 Get graph-modules # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_graph_modules(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ResponseModel If the method is called asynchronously, returns the request thread. get_graph_modules_with_http_info ( ** kwargs ) \u00b6 get_graph_modules # noqa: E501 Get graph-modules # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_graph_modules_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ResponseModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_graph_status ( ** kwargs ) \u00b6 get_graph_status # noqa: E501 Get graph status (health check) # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_graph_status(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ResponseModel If the method is called asynchronously, returns the request thread. get_graph_status_with_http_info ( ** kwargs ) \u00b6 get_graph_status # noqa: E501 Get graph status (health check) # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_graph_status_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ResponseModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_graph_version ( ** kwargs ) \u00b6 get_graph_version # noqa: E501 Get graph-version # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_graph_version(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ResponseModel If the method is called asynchronously, returns the request thread. get_graph_version_with_http_info ( ** kwargs ) \u00b6 get_graph_version # noqa: E501 Get graph-version # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_graph_version_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ResponseModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. inspect_api \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech InspectApi \u00b6 Bases: object Do not edit the class manually. inspect_graph_edges ( ** kwargs ) \u00b6 inspect_graph_edges # noqa: E501 Get an image of the edges # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.inspect_graph_edges(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. inspect_graph_edges_with_http_info ( ** kwargs ) \u00b6 inspect_graph_edges # noqa: E501 Get an image of the edges # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.inspect_graph_edges_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. inspect_graph_topology ( ** kwargs ) \u00b6 inspect_graph_topology # noqa: E501 Get an image of the topology of the graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.inspect_graph_topology(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. inspect_graph_topology_with_http_info ( ** kwargs ) \u00b6 inspect_graph_topology # noqa: E501 Get an image of the topology of the graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.inspect_graph_topology_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. inspect_node_categories ( ** kwargs ) \u00b6 inspect_node_categories # noqa: E501 Get an image of the node-categories # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.inspect_node_categories(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. inspect_node_categories_with_http_info ( ** kwargs ) \u00b6 inspect_node_categories # noqa: E501 Get an image of the node-categories # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.inspect_node_categories_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. node_data_retrieval_api \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech NodeDataRetrievalApi \u00b6 Bases: object Do not edit the class manually. retrieve_many_node_data_json ( data , ** kwargs ) \u00b6 retrieve_many_node_data_json # noqa: E501 Bulk retrieve the data associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_many_node_data_json(data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[InlineObject] data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: dict(str, object) If the method is called asynchronously, returns the request thread. retrieve_many_node_data_json_with_http_info ( data , ** kwargs ) \u00b6 retrieve_many_node_data_json # noqa: E501 Bulk retrieve the data associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_many_node_data_json_with_http_info(data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[InlineObject] data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(dict(str, object), status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. retrieve_node_annotations ( db , id , ** kwargs ) \u00b6 retrieve_node_annotations # noqa: E501 Retrieve the Annotations associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_annotations(db, id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param bool render_markup: If selected the output json will contain the rendered html snippets :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: object If the method is called asynchronously, returns the request thread. retrieve_node_annotations_with_http_info ( db , id , ** kwargs ) \u00b6 retrieve_node_annotations # noqa: E501 Retrieve the Annotations associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_annotations_with_http_info(db, id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param bool render_markup: If selected the output json will contain the rendered html snippets :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(object, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. retrieve_node_data_by_key ( db , id , key , ** kwargs ) \u00b6 retrieve_node_data_by_key # noqa: E501 Retrieve the data associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_data_by_key(db, id, key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param str key: The data key to retrieve (required) :param int index: The index for the data inside this key :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. retrieve_node_data_by_key_with_http_info ( db , id , key , ** kwargs ) \u00b6 retrieve_node_data_by_key # noqa: E501 Retrieve the data associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_data_by_key_with_http_info(db, id, key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param str key: The data key to retrieve (required) :param int index: The index for the data inside this key :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. retrieve_node_data_image ( db , id , ** kwargs ) \u00b6 retrieve_node_data_image # noqa: E501 Retrieve the data associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_data_image(db, id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. retrieve_node_data_image_with_http_info ( db , id , ** kwargs ) \u00b6 retrieve_node_data_image # noqa: E501 Retrieve the data associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_data_image_with_http_info(db, id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. retrieve_node_data_json ( db , id , ** kwargs ) \u00b6 retrieve_node_data_json # noqa: E501 Retrieve the data associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_data_json(db, id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param InlineObject options: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: dict(str, object) If the method is called asynchronously, returns the request thread. retrieve_node_data_json_with_http_info ( db , id , ** kwargs ) \u00b6 retrieve_node_data_json # noqa: E501 Retrieve the data associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_data_json_with_http_info(db, id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param InlineObject options: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(dict(str, object), status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. retrieve_node_data_keys ( db , id , ** kwargs ) \u00b6 retrieve_node_data_keys # noqa: E501 Retrieve the data keys available for the node # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_data_keys(db, id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. retrieve_node_data_keys_with_http_info ( db , id , ** kwargs ) \u00b6 retrieve_node_data_keys # noqa: E501 Retrieve the data keys available for the node # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_data_keys_with_http_info(db, id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. retrieve_node_data_url_by_key ( db , id , key , ** kwargs ) \u00b6 retrieve_node_data_url_by_key # noqa: E501 Retrieve the data associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_data_url_by_key(db, id, key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param str key: The data key to retrieve (required) :param int index: The index for the data inside this key :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. retrieve_node_data_url_by_key_with_http_info ( db , id , key , ** kwargs ) \u00b6 retrieve_node_data_url_by_key # noqa: E501 Retrieve the data associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_data_url_by_key_with_http_info(db, id, key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param str key: The data key to retrieve (required) :param int index: The index for the data inside this key :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. node_retrieval_api \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech NodeRetrievalApi \u00b6 Bases: object Do not edit the class manually. retrieve_nodes_by_categories ( categories , ** kwargs ) \u00b6 retrieve_nodes_by_categories # noqa: E501 Retrieve nodes by their categories # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_nodes_by_categories(categories, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] categories: Array of node categories (required) :param int limit: Maximum number of returned nodes, use -1 for all. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: NodesResponseModel If the method is called asynchronously, returns the request thread. retrieve_nodes_by_categories_with_http_info ( categories , ** kwargs ) \u00b6 retrieve_nodes_by_categories # noqa: E501 Retrieve nodes by their categories # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_nodes_by_categories_with_http_info(categories, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] categories: Array of node categories (required) :param int limit: Maximum number of returned nodes, use -1 for all. :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(NodesResponseModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. retrieve_nodes_by_databases ( databases , ** kwargs ) \u00b6 retrieve_nodes_by_databases # noqa: E501 Retrieve nodes by their databases # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_nodes_by_databases(databases, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] databases: Array of node databases (required) :param int limit: Maximum number of returned nodes, use -1 for all. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: NodesResponseModel If the method is called asynchronously, returns the request thread. retrieve_nodes_by_databases_with_http_info ( databases , ** kwargs ) \u00b6 retrieve_nodes_by_databases # noqa: E501 Retrieve nodes by their databases # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_nodes_by_databases_with_http_info(databases, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] databases: Array of node databases (required) :param int limit: Maximum number of returned nodes, use -1 for all. :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(NodesResponseModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. retrieve_nodes_by_indices ( indices , ** kwargs ) \u00b6 retrieve_nodes_by_indices # noqa: E501 Retrieve nodes by their graph-index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_nodes_by_indices(indices, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[int] indices: Array of node indices (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: NodesResponseModel If the method is called asynchronously, returns the request thread. retrieve_nodes_by_indices_with_http_info ( indices , ** kwargs ) \u00b6 retrieve_nodes_by_indices # noqa: E501 Retrieve nodes by their graph-index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_nodes_by_indices_with_http_info(indices, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[int] indices: Array of node indices (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(NodesResponseModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. retrieve_nodes_by_names ( names , ** kwargs ) \u00b6 retrieve_nodes_by_names # noqa: E501 Retrieve nodes by their graph-index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_nodes_by_names(names, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] names: Array of node names (required) :param int limit: Maximum number of returned nodes, use -1 for all. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: NodesResponseModel If the method is called asynchronously, returns the request thread. retrieve_nodes_by_names_with_http_info ( names , ** kwargs ) \u00b6 retrieve_nodes_by_names # noqa: E501 Retrieve nodes by their graph-index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_nodes_by_names_with_http_info(names, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] names: Array of node names (required) :param int limit: Maximum number of returned nodes, use -1 for all. :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(NodesResponseModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. node_search_api \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech NodeSearchApi \u00b6 Bases: object Do not edit the class manually. search_nodes_approximately ( epsilon , names , ** kwargs ) \u00b6 search_nodes_approximately # noqa: E501 Search for nodes that have an approximate name. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.search_nodes_approximately(epsilon, names, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param float epsilon: similarity (required) :param list[str] names: names contained in node (required) :param int limit: Maximum number of returned nodes, use -1 for all. :param str category: Search only for nodes in this category. By default, we search in all categories. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: NodesResponseModel If the method is called asynchronously, returns the request thread. search_nodes_approximately_with_http_info ( epsilon , names , ** kwargs ) \u00b6 search_nodes_approximately # noqa: E501 Search for nodes that have an approximate name. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.search_nodes_approximately_with_http_info(epsilon, names, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param float epsilon: similarity (required) :param list[str] names: names contained in node (required) :param int limit: Maximum number of returned nodes, use -1 for all. :param str category: Search only for nodes in this category. By default, we search in all categories. :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(NodesResponseModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. search_nodes_regex ( regular_expressions , ** kwargs ) \u00b6 search_nodes_regex # noqa: E501 Search for nodes that have a name that matches the regular expressions. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.search_nodes_regex(regular_expressions, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] regular_expressions: regular expressions for node-names (required) :param int limit: Maximum number of returned nodes, use -1 for all. :param str category: Search only for nodes in this category. By default, we search in all categories. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: NodesResponseModel If the method is called asynchronously, returns the request thread. search_nodes_regex_with_http_info ( regular_expressions , ** kwargs ) \u00b6 search_nodes_regex # noqa: E501 Search for nodes that have a name that matches the regular expressions. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.search_nodes_regex_with_http_info(regular_expressions, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] regular_expressions: regular expressions for node-names (required) :param int limit: Maximum number of returned nodes, use -1 for all. :param str category: Search only for nodes in this category. By default, we search in all categories. :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(NodesResponseModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. query_api \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech QueryApi \u00b6 Bases: object Do not edit the class manually. query_auth_config ( ** kwargs ) \u00b6 query_auth_config # noqa: E501 Retrieve the current auth config. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_auth_config(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: AuthConfig If the method is called asynchronously, returns the request thread. query_auth_config_with_http_info ( ** kwargs ) \u00b6 query_auth_config # noqa: E501 Retrieve the current auth config. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_auth_config_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(AuthConfig, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. query_get_correlated_nodes_from_indices ( a , b , normalization , indices , ** kwargs ) \u00b6 query_get_correlated_nodes_from_indices # noqa: E501 Retrieve the correlated nodes for some initial nodes-indices. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_get_correlated_nodes_from_indices(a, b, normalization, indices, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str a: Find neighbours of nodes for this edge only. (required) :param str b: Find neighbours of nodes for this edge only. (required) :param str normalization: Rank the nodes according to L2- or Linf-normalization (required) :param list[int] indices: node-indices (required) :param str filter: Filter the retrieved nodes by this category. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. query_get_correlated_nodes_from_indices_with_http_info ( a , b , normalization , indices , ** kwargs ) \u00b6 query_get_correlated_nodes_from_indices # noqa: E501 Retrieve the correlated nodes for some initial nodes-indices. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_get_correlated_nodes_from_indices_with_http_info(a, b, normalization, indices, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str a: Find neighbours of nodes for this edge only. (required) :param str b: Find neighbours of nodes for this edge only. (required) :param str normalization: Rank the nodes according to L2- or Linf-normalization (required) :param list[int] indices: node-indices (required) :param str filter: Filter the retrieved nodes by this category. :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. query_get_correlated_nodes_from_names ( epsilon , a , b , normalization , names , ** kwargs ) \u00b6 query_get_correlated_nodes_from_names # noqa: E501 Retrieve the correlated nodes for some initial nodes-names. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_get_correlated_nodes_from_names(epsilon, a, b, normalization, names, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param float epsilon: Find all nodes with a name similarity above epsilon. (required) :param str a: Find neighbours of nodes for this edge only. (required) :param str b: Find neighbours of nodes for this edge only. (required) :param str normalization: Rank the nodes according to L2- or Linf-normalization (required) :param list[str] names: Name of the nodes (required) :param str filter: Filter the retrieved nodes by this category :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. query_get_correlated_nodes_from_names_with_http_info ( epsilon , a , b , normalization , names , ** kwargs ) \u00b6 query_get_correlated_nodes_from_names # noqa: E501 Retrieve the correlated nodes for some initial nodes-names. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_get_correlated_nodes_from_names_with_http_info(epsilon, a, b, normalization, names, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param float epsilon: Find all nodes with a name similarity above epsilon. (required) :param str a: Find neighbours of nodes for this edge only. (required) :param str b: Find neighbours of nodes for this edge only. (required) :param str normalization: Rank the nodes according to L2- or Linf-normalization (required) :param list[str] names: Name of the nodes (required) :param str filter: Filter the retrieved nodes by this category :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. query_get_degree ( edge_name , degree_type , indices_type , indices , ** kwargs ) \u00b6 query_get_degree # noqa: E501 Retrieve the in or out degree of nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_get_degree(edge_name, degree_type, indices_type, indices, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str edge_name: name of the edge (required) :param str degree_type: select in or out degree of the nodes (required) :param str indices_type: select if you want to search in a specific set of indices or in a range of indices (required) :param list[int] indices: node-indices (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. query_get_degree_with_http_info ( edge_name , degree_type , indices_type , indices , ** kwargs ) \u00b6 query_get_degree # noqa: E501 Retrieve the in or out degree of nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_get_degree_with_http_info(edge_name, degree_type, indices_type, indices, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str edge_name: name of the edge (required) :param str degree_type: select in or out degree of the nodes (required) :param str indices_type: select if you want to search in a specific set of indices or in a range of indices (required) :param list[int] indices: node-indices (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. query_get_neighbours ( indices , ** kwargs ) \u00b6 query_get_neighbours # noqa: E501 Retrieve the neighbours of nodes. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_get_neighbours(indices, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[int] indices: node-indices (required) :param str edge: Find neighbours of nodes for this edge only. By default, we search the neighbours over all edges. :param int limit: Limit the total number of neighbours returned. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. query_get_neighbours_with_http_info ( indices , ** kwargs ) \u00b6 query_get_neighbours # noqa: E501 Retrieve the neighbours of nodes. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_get_neighbours_with_http_info(indices, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[int] indices: node-indices (required) :param str edge: Find neighbours of nodes for this edge only. By default, we search the neighbours over all edges. :param int limit: Limit the total number of neighbours returned. :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. query_run_parallel_workflow ( pworkflow , ** kwargs ) \u00b6 query_run_parallel_workflow # noqa: E501 Run in parallel Directed Acyclic Graph (DAG) workflows # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_run_parallel_workflow(pworkflow, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param object pworkflow: Input for parallel Directed Acyclic Graph (DAG) workflows (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: WorkflowResponseModel If the method is called asynchronously, returns the request thread. query_run_parallel_workflow_with_http_info ( pworkflow , ** kwargs ) \u00b6 query_run_parallel_workflow # noqa: E501 Run in parallel Directed Acyclic Graph (DAG) workflows # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_run_parallel_workflow_with_http_info(pworkflow, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param object pworkflow: Input for parallel Directed Acyclic Graph (DAG) workflows (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(WorkflowResponseModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. query_run_workflow ( workflow , ** kwargs ) \u00b6 query_run_workflow # noqa: E501 Run a Directed Acyclic Graph (DAG) workflow # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_run_workflow(workflow, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[dict(str, object)] workflow: Input for Directed Acyclic Graph (DAG) workflow (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[WorkflowResponse] If the method is called asynchronously, returns the request thread. query_run_workflow_with_http_info ( workflow , ** kwargs ) \u00b6 query_run_workflow # noqa: E501 Run a Directed Acyclic Graph (DAG) workflow # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_run_workflow_with_http_info(workflow, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[dict(str, object)] workflow: Input for Directed Acyclic Graph (DAG) workflow (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[WorkflowResponse], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. query_suggest_workflow ( search_string , ** kwargs ) \u00b6 query_suggest_workflow # noqa: E501 Suggest a workflow based on a given search string. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_suggest_workflow(search_string, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str search_string: Query string to generate a workflow for. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. query_suggest_workflow_with_http_info ( search_string , ** kwargs ) \u00b6 query_suggest_workflow # noqa: E501 Suggest a workflow based on a given search string. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_suggest_workflow_with_http_info(search_string, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str search_string: Query string to generate a workflow for. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. api_client \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech ApiClient \u00b6 Bases: object Generic API client for OpenAPI client library builds. OpenAPI generic API client. This client handles the client- server communication, and is invariant across implementations. Specifics of the methods and models for each application are generated from the OpenAPI templates. NOTE: This class is auto generated by OpenAPI Generator. Ref: https://openapi-generator.tech Do not edit the class manually. :param configuration: .Configuration object for this client :param header_name: a header to pass when making calls to the API. :param header_value: a header value to pass when making calls to the API. :param cookie: a cookie to include in the header when making calls to the API :param pool_threads: The number of threads to use for async requests to the API. More threads means more concurrent API requests. __deserialize ( data , klass ) \u00b6 Deserializes dict, list, str into an object. :param data: dict, list or str. :param klass: class literal, or string of class name. :return: object. __deserialize_date ( string ) \u00b6 Deserializes string to date. :param string: str. :return: date. __deserialize_datetime ( string ) \u00b6 Deserializes string to datetime. The string should be in iso8601 datetime format. :param string: str. :return: datetime. __deserialize_file ( response ) \u00b6 Deserializes body to file Saves response body into a file in a temporary folder, using the filename from the Content-Disposition header if provided. :param response: RESTResponse. :return: file path. __deserialize_model ( data , klass ) \u00b6 Deserializes list or dict to model. :param data: dict, list. :param klass: class literal. :return: model object. __deserialize_object ( value ) \u00b6 Return an original value. :return: object. __deserialize_primitive ( data , klass ) \u00b6 Deserializes string to primitive type. :param data: str. :param klass: class literal. :return: int, long, float, str, bool. call_api ( resource_path , method , path_params = None , query_params = None , header_params = None , body = None , post_params = None , files = None , response_type = None , auth_settings = None , async_req = None , _return_http_data_only = None , collection_formats = None , _preload_content = True , _request_timeout = None , _host = None ) \u00b6 Makes the HTTP request (synchronous) and returns deserialized data. To make an async_req request, set the async_req parameter. :param resource_path: Path to method endpoint. :param method: Method to call. :param path_params: Path parameters in the url. :param query_params: Query parameters in the url. :param header_params: Header parameters to be placed in the request header. :param body: Request body. :param post_params dict: Request post form parameters, for application/x-www-form-urlencoded , multipart/form-data . :param auth_settings list: Auth Settings names for the request. :param response: Response data type. :param files dict: key -> filename, value -> filepath, for multipart/form-data . :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param collection_formats: dict of collection formats for path, query, header, and post parameters. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: If async_req parameter is True, the request will be called asynchronously. The method will return the request thread. If parameter async_req is False or missing, then the method will return the response directly. deserialize ( response , response_type ) \u00b6 Deserializes response into an object. :param response: RESTResponse object to be deserialized. :param response_type: class literal for deserialized object, or string of class name. :return: deserialized object. files_parameters ( files = None ) \u00b6 Builds form parameters. :param files: File parameters. :return: Form parameters with files. parameters_to_tuples ( params , collection_formats ) \u00b6 Get parameters as list of tuples, formatting collections. :param params: Parameters as dict or list of two-tuples :param dict collection_formats: Parameter collection formats :return: Parameters as list of tuples, collections formatted pool () property \u00b6 Create thread pool on first request avoids instantiating unused threadpool for blocking clients. request ( method , url , query_params = None , headers = None , post_params = None , body = None , _preload_content = True , _request_timeout = None ) \u00b6 Makes the HTTP request using RESTClient. sanitize_for_serialization ( obj ) \u00b6 Builds a JSON POST object. If obj is None, return None. If obj is str, int, long, float, bool, return directly. If obj is datetime.datetime, datetime.date convert to string in iso8601 format. If obj is list, sanitize each element in the list. If obj is dict, return the dict. If obj is OpenAPI model, return the properties dict. :param obj: The data to serialize. :return: The serialized form of data. select_header_accept ( accepts ) \u00b6 Returns Accept based on an array of accepts provided. :param accepts: List of headers. :return: Accept (e.g. application/json). select_header_content_type ( content_types ) \u00b6 Returns Content-Type based on an array of content_types provided. :param content_types: List of content-types. :return: Content-Type (e.g. application/json). update_params_for_auth ( headers , querys , auth_settings ) \u00b6 Updates header and query params based on authentication setting. :param headers: Header parameters dict to be updated. :param querys: Query parameters tuple list to be updated. :param auth_settings: Authentication setting identifiers list. user_agent () property writable \u00b6 User agent for this API client configuration \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech Configuration \u00b6 Bases: object This class is auto generated by OpenAPI Generator Do not edit the class manually. :param host: Base url :param api_key: Dict to store API key(s). Each entry in the dict specifies an API key. The dict key is the name of the security scheme in the OAS specification. The dict value is the API key secret. :param api_key_prefix: Dict to store API prefix (e.g. Bearer) The dict key is the name of the security scheme in the OAS specification. The dict value is an API key prefix when generating the auth data. :param username: Username for HTTP basic authentication :param password: Password for HTTP basic authentication :param discard_unknown_keys: Boolean value indicating whether to discard unknown properties. A server may send a response that includes additional properties that are not known by the client in the following scenarios: 1. The OpenAPI document is incomplete, i.e. it does not match the server implementation. 2. The client was generated using an older version of the OpenAPI document and the server has been upgraded since then. If a schema in the OpenAPI document defines the additionalProperties attribute, then all undeclared properties received by the server are injected into the additional properties map. In that case, there are undeclared properties, and nothing to discard. :Example: API Key Authentication Example. Given the following security scheme in the OpenAPI specification: components: securitySchemes: cookieAuth: # name for the security scheme type: apiKey in: cookie name: JSESSIONID # cookie name You can programmatically set the cookie: conf = cps.apis.kg.query.Configuration( api_key={'cookieAuth': 'abc123'} api_key_prefix={'cookieAuth': 'JSESSIONID'} ) The following cookie will be added to the HTTP request: Cookie: JSESSIONID abc123 assert_hostname = None instance-attribute \u00b6 Set this to True/False to enable/disable SSL hostname verification. cert_file = None instance-attribute \u00b6 client certificate file connection_pool_maxsize = multiprocessing . cpu_count () * 5 instance-attribute \u00b6 urllib3 connection pool's maximum number of connections saved per pool. urllib3 uses 1 connection as default value, but this is not the best value when you are making a lot of possibly parallel requests to the same host, which is often the case here. cpu_count * 5 is used as default value to increase performance. host = host instance-attribute \u00b6 Default Base url key_file = None instance-attribute \u00b6 client key file logger = {} instance-attribute \u00b6 Logging Settings logger_file_handler = None instance-attribute \u00b6 Log file handler logger_stream_handler = None instance-attribute \u00b6 Log stream handler password = password instance-attribute \u00b6 Password for HTTP basic authentication proxy = None instance-attribute \u00b6 Proxy URL proxy_headers = None instance-attribute \u00b6 Proxy headers refresh_api_key_hook = None instance-attribute \u00b6 function hook to refresh API key if expired retries = None instance-attribute \u00b6 Adding retries to override urllib3 default value 3 safe_chars_for_path_param = '' instance-attribute \u00b6 Safe chars for path_param ssl_ca_cert = None instance-attribute \u00b6 Set this to customize the certificate file to verify the peer. temp_folder_path = None instance-attribute \u00b6 Temp file folder for downloading files username = username instance-attribute \u00b6 Username for HTTP basic authentication verify_ssl = True instance-attribute \u00b6 SSL/TLS verification Set this to false to skip verifying SSL certificate when calling API from https server. __init__ ( host = 'http://localhost/query/v1' , api_key = None , api_key_prefix = None , username = None , password = None , discard_unknown_keys = False ) \u00b6 Constructor auth_settings () \u00b6 Gets Auth Settings dict for api client. :return: The Auth Settings information dict. debug () property writable \u00b6 Debug status :param value: The debug status, True or False. :type: bool get_api_key_with_prefix ( identifier ) \u00b6 Gets API key (with prefix if set). :param identifier: The identifier of apiKey. :return: The token for api key authentication. get_basic_auth_token () \u00b6 Gets HTTP basic authentication header (string). :return: The token for basic HTTP authentication. get_default_copy () classmethod \u00b6 Return new instance of configuration. This method returns newly created, based on default constructor, object of Configuration class or returns a copy of default configuration passed by the set_default method. :return: The configuration object. get_host_from_settings ( index , variables = None ) \u00b6 Gets host URL based on the index and variables :param index: array index of the host settings :param variables: hash of variable and the corresponding value :return: URL based on host settings get_host_settings () \u00b6 Gets an array of host settings :return: An array of host settings logger_file () property writable \u00b6 The logger file. If the logger_file is None, then add stream handler and remove file handler. Otherwise, add file handler and remove stream handler. :param value: The logger_file path. :type: str logger_format () property writable \u00b6 The logger format. The logger_formatter will be updated when sets logger_format. :param value: The format string. :type: str set_default ( default ) classmethod \u00b6 Set default instance of configuration. It stores default configuration, which can be returned by get_default_copy method. :param default: object of Configuration to_debug_report () \u00b6 Gets the essential information for debugging. :return: The report for debugging. exceptions \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech ApiException \u00b6 Bases: OpenApiException __str__ () \u00b6 Custom error messages for exception ApiKeyError \u00b6 Bases: OpenApiException , KeyError __init__ ( msg , path_to_item = None ) \u00b6 Parameters: Name Type Description Default msg str the exception message required ApiTypeError \u00b6 Bases: OpenApiException , TypeError __init__ ( msg , path_to_item = None , valid_classes = None , key_type = None ) \u00b6 Raises an exception for TypeErrors Parameters: Name Type Description Default msg str the exception message required Other Parameters: Name Type Description path_to_item list a list of keys an indices to get to the current_item None if unset valid_classes tuple the primitive classes that current item should be an instance of None if unset key_type bool False if our value is a value in a dict True if it is a key in a dict False if our item is an item in a list None if unset ApiValueError \u00b6 Bases: OpenApiException , ValueError __init__ ( msg , path_to_item = None ) \u00b6 Parameters: Name Type Description Default msg str the exception message required OpenApiException \u00b6 Bases: Exception The base exception class for all OpenAPIExceptions render_path ( path_to_item ) \u00b6 Returns a string representation of a path models \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech auth_config \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech AuthConfig \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( auth_method = None , auth_url = None , local_vars_configuration = None ) \u00b6 AuthConfig - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint auth_method () property writable \u00b6 Gets the auth_method of this AuthConfig. # noqa: E501 :return: The auth_method of this AuthConfig. # noqa: E501 :rtype: str auth_url () property writable \u00b6 Gets the auth_url of this AuthConfig. # noqa: E501 :return: The auth_url of this AuthConfig. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model error_model \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech ErrorModel \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( status = None , title = None , detail = None , type = None , local_vars_configuration = None ) \u00b6 ErrorModel - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint detail () property writable \u00b6 Gets the detail of this ErrorModel. # noqa: E501 :return: The detail of this ErrorModel. # noqa: E501 :rtype: str status () property writable \u00b6 Gets the status of this ErrorModel. # noqa: E501 :return: The status of this ErrorModel. # noqa: E501 :rtype: int title () property writable \u00b6 Gets the title of this ErrorModel. # noqa: E501 :return: The title of this ErrorModel. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this ErrorModel. # noqa: E501 :return: The type of this ErrorModel. # noqa: E501 :rtype: str graph_description \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech GraphDescription \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( edges = None , nodes = None , version = None , local_vars_configuration = None ) \u00b6 GraphDescription - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint edges () property writable \u00b6 Gets the edges of this GraphDescription. # noqa: E501 :return: The edges of this GraphDescription. # noqa: E501 :rtype: list[GraphEdge] nodes () property writable \u00b6 Gets the nodes of this GraphDescription. # noqa: E501 :return: The nodes of this GraphDescription. # noqa: E501 :rtype: GraphNodeDescription to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model version () property writable \u00b6 Gets the version of this GraphDescription. # noqa: E501 :return: The version of this GraphDescription. # noqa: E501 :rtype: str graph_edge \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech GraphEdge \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( source = None , target = None , matrix = None , name = None , symmetric = None , local_vars_configuration = None ) \u00b6 GraphEdge - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint matrix () property writable \u00b6 Gets the matrix of this GraphEdge. # noqa: E501 :return: The matrix of this GraphEdge. # noqa: E501 :rtype: GraphMatrix name () property writable \u00b6 Gets the name of this GraphEdge. # noqa: E501 :return: The name of this GraphEdge. # noqa: E501 :rtype: str source () property writable \u00b6 Gets the source of this GraphEdge. # noqa: E501 :return: The source of this GraphEdge. # noqa: E501 :rtype: list[str] symmetric () property writable \u00b6 Gets the symmetric of this GraphEdge. # noqa: E501 :return: The symmetric of this GraphEdge. # noqa: E501 :rtype: bool target () property writable \u00b6 Gets the target of this GraphEdge. # noqa: E501 :return: The target of this GraphEdge. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model graph_matrix \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech GraphMatrix \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( bd = None , bs = None , m = None , n = None , nnz = None , local_vars_configuration = None ) \u00b6 GraphMatrix - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bd () property writable \u00b6 Gets the bd of this GraphMatrix. # noqa: E501 :return: The bd of this GraphMatrix. # noqa: E501 :rtype: int bs () property writable \u00b6 Gets the bs of this GraphMatrix. # noqa: E501 :return: The bs of this GraphMatrix. # noqa: E501 :rtype: int m () property writable \u00b6 Gets the m of this GraphMatrix. # noqa: E501 :return: The m of this GraphMatrix. # noqa: E501 :rtype: int n () property writable \u00b6 Gets the n of this GraphMatrix. # noqa: E501 :return: The n of this GraphMatrix. # noqa: E501 :rtype: int nnz () property writable \u00b6 Gets the nnz of this GraphMatrix. # noqa: E501 :return: The nnz of this GraphMatrix. # noqa: E501 :rtype: int to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model graph_node_description \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech GraphNodeDescription \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( nodes = None , categories = None , fieldnames = None , local_vars_configuration = None ) \u00b6 GraphNodeDescription - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint categories () property writable \u00b6 Gets the categories of this GraphNodeDescription. # noqa: E501 :return: The categories of this GraphNodeDescription. # noqa: E501 :rtype: list[GraphNodeDescriptionCategories] fieldnames () property writable \u00b6 Gets the fieldnames of this GraphNodeDescription. # noqa: E501 :return: The fieldnames of this GraphNodeDescription. # noqa: E501 :rtype: list[str] nodes () property writable \u00b6 Gets the nodes of this GraphNodeDescription. # noqa: E501 :return: The nodes of this GraphNodeDescription. # noqa: E501 :rtype: int to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model graph_node_description_categories \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech GraphNodeDescriptionCategories \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , databases = None , size = None , local_vars_configuration = None ) \u00b6 GraphNodeDescriptionCategories - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint databases () property writable \u00b6 Gets the databases of this GraphNodeDescriptionCategories. # noqa: E501 :return: The databases of this GraphNodeDescriptionCategories. # noqa: E501 :rtype: list[str] name () property writable \u00b6 Gets the name of this GraphNodeDescriptionCategories. # noqa: E501 :return: The name of this GraphNodeDescriptionCategories. # noqa: E501 :rtype: str size () property writable \u00b6 Gets the size of this GraphNodeDescriptionCategories. # noqa: E501 :return: The size of this GraphNodeDescriptionCategories. # noqa: E501 :rtype: int to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model inline_object \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech InlineObject \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( db = None , ids = None , projection = None , local_vars_configuration = None ) \u00b6 InlineObject - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint db () property writable \u00b6 Gets the db of this InlineObject. # noqa: E501 :return: The db of this InlineObject. # noqa: E501 :rtype: str ids () property writable \u00b6 Gets the ids of this InlineObject. # noqa: E501 :return: The ids of this InlineObject. # noqa: E501 :rtype: list[str] projection () property writable \u00b6 Gets the projection of this InlineObject. # noqa: E501 A dict specifying the fields to include or exclude. Use a dict to exclude fields from the result (e.g. projection={'main-text': false}). # noqa: E501 :return: The projection of this InlineObject. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model node \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech Node \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , hash = None , synonyms = None , categories = None , database = None , local_vars_configuration = None ) \u00b6 Node - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint categories () property writable \u00b6 Gets the categories of this Node. # noqa: E501 :return: The categories of this Node. # noqa: E501 :rtype: list[str] database () property writable \u00b6 Gets the database of this Node. # noqa: E501 :return: The database of this Node. # noqa: E501 :rtype: object hash () property writable \u00b6 Gets the hash of this Node. # noqa: E501 :return: The hash of this Node. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this Node. # noqa: E501 :return: The name of this Node. # noqa: E501 :rtype: str synonyms () property writable \u00b6 Gets the synonyms of this Node. # noqa: E501 :return: The synonyms of this Node. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model nodes_response_model \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech NodesResponseModel \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( local_vars_configuration = None ) \u00b6 NodesResponseModel - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model nodes_response_model_all_of \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech NodesResponseModelAllOf \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( parameters = None , response = None , local_vars_configuration = None ) \u00b6 NodesResponseModelAllOf - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint parameters () property writable \u00b6 Gets the parameters of this NodesResponseModelAllOf. # noqa: E501 :return: The parameters of this NodesResponseModelAllOf. # noqa: E501 :rtype: object response () property writable \u00b6 Gets the response of this NodesResponseModelAllOf. # noqa: E501 :return: The response of this NodesResponseModelAllOf. # noqa: E501 :rtype: NodesResponseModelAllOfResponse to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model nodes_response_model_all_of_response \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech NodesResponseModelAllOfResponse \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( nodes = None , local_vars_configuration = None ) \u00b6 NodesResponseModelAllOfResponse - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint nodes () property writable \u00b6 Gets the nodes of this NodesResponseModelAllOfResponse. # noqa: E501 :return: The nodes of this NodesResponseModelAllOfResponse. # noqa: E501 :rtype: list[Node] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model response_model \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech ResponseModel \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( query = None , status = None , version = None , local_vars_configuration = None ) \u00b6 ResponseModel - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint query () property writable \u00b6 Gets the query of this ResponseModel. # noqa: E501 :return: The query of this ResponseModel. # noqa: E501 :rtype: str status () property writable \u00b6 Gets the status of this ResponseModel. # noqa: E501 :return: The status of this ResponseModel. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model version () property writable \u00b6 Gets the version of this ResponseModel. # noqa: E501 :return: The version of this ResponseModel. # noqa: E501 :rtype: str workflow_response \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech WorkflowResponse \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( response_time = None , found_nodes = None , nodes = None , local_vars_configuration = None ) \u00b6 WorkflowResponse - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint found_nodes () property writable \u00b6 Gets the found_nodes of this WorkflowResponse. # noqa: E501 :return: The found_nodes of this WorkflowResponse. # noqa: E501 :rtype: int nodes () property writable \u00b6 Gets the nodes of this WorkflowResponse. # noqa: E501 :return: The nodes of this WorkflowResponse. # noqa: E501 :rtype: list[WorkflowResponseNode] response_time () property writable \u00b6 Gets the response_time of this WorkflowResponse. # noqa: E501 :return: The response_time of this WorkflowResponse. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model workflow_response_model \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech WorkflowResponseModel \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( local_vars_configuration = None ) \u00b6 WorkflowResponseModel - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model workflow_response_model_all_of \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech WorkflowResponseModelAllOf \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( parameters = None , response = None , local_vars_configuration = None ) \u00b6 WorkflowResponseModelAllOf - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint parameters () property writable \u00b6 Gets the parameters of this WorkflowResponseModelAllOf. # noqa: E501 :return: The parameters of this WorkflowResponseModelAllOf. # noqa: E501 :rtype: list[object] response () property writable \u00b6 Gets the response of this WorkflowResponseModelAllOf. # noqa: E501 :return: The response of this WorkflowResponseModelAllOf. # noqa: E501 :rtype: list[object] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model workflow_response_node \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech WorkflowResponseNode \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( categories = None , db = None , hash = None , synonyms = None , index = None , weight = None , local_vars_configuration = None ) \u00b6 WorkflowResponseNode - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint categories () property writable \u00b6 Gets the categories of this WorkflowResponseNode. # noqa: E501 :return: The categories of this WorkflowResponseNode. # noqa: E501 :rtype: list[str] db () property writable \u00b6 Gets the db of this WorkflowResponseNode. # noqa: E501 :return: The db of this WorkflowResponseNode. # noqa: E501 :rtype: str hash () property writable \u00b6 Gets the hash of this WorkflowResponseNode. # noqa: E501 :return: The hash of this WorkflowResponseNode. # noqa: E501 :rtype: str index () property writable \u00b6 Gets the index of this WorkflowResponseNode. # noqa: E501 :return: The index of this WorkflowResponseNode. # noqa: E501 :rtype: int synonyms () property writable \u00b6 Gets the synonyms of this WorkflowResponseNode. # noqa: E501 :return: The synonyms of this WorkflowResponseNode. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model weight () property writable \u00b6 Gets the weight of this WorkflowResponseNode. # noqa: E501 :return: The weight of this WorkflowResponseNode. # noqa: E501 :rtype: float rest \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech RESTClientObject \u00b6 Bases: object request ( method , url , query_params = None , headers = None , body = None , post_params = None , _preload_content = True , _request_timeout = None ) \u00b6 Perform requests. :param method: http request method :param url: http request url :param query_params: query parameters in the url :param headers: http request headers :param body: request json body, for application/json :param post_params: request post parameters, application/x-www-form-urlencoded and multipart/form-data :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. RESTResponse \u00b6 Bases: io . IOBase getheader ( name , default = None ) \u00b6 Returns a given response header. getheaders () \u00b6 Returns a dictionary of the response headers. public \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech api \u00b6 annotate_api \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotateApi \u00b6 Bases: object Do not edit the class manually. generate_project_object_annotations ( proj_key , options , ** kwargs ) \u00b6 generate_project_object_annotations # noqa: E501 Run an annotator on an object, using resources from the project. DEPRECATED , please use generate_project_object_annotations_async instead. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.generate_project_object_annotations(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param AnnotateObjectOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: AnnotatedObject1 If the method is called asynchronously, returns the request thread. generate_project_object_annotations_async ( proj_key , options , ** kwargs ) \u00b6 generate_project_object_annotations_async # noqa: E501 Run an annotator on an object, using resources from the project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.generate_project_object_annotations_async(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param AnnotateObjectOptions1 options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. generate_project_object_annotations_async_with_http_info ( proj_key , options , ** kwargs ) \u00b6 generate_project_object_annotations_async # noqa: E501 Run an annotator on an object, using resources from the project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.generate_project_object_annotations_async_with_http_info(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param AnnotateObjectOptions1 options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. generate_project_object_annotations_with_http_info ( proj_key , options , ** kwargs ) \u00b6 generate_project_object_annotations # noqa: E501 Run an annotator on an object, using resources from the project. DEPRECATED , please use generate_project_object_annotations_async instead. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.generate_project_object_annotations_with_http_info(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param AnnotateObjectOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(AnnotatedObject1, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_cached_annotator_metadata ( proj_key , options , ** kwargs ) \u00b6 get_cached_annotator_metadata # noqa: E501 Get annotator's metadata # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_cached_annotator_metadata(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param object options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: AnnotatorMetadata If the method is called asynchronously, returns the request thread. get_cached_annotator_metadata_with_http_info ( proj_key , options , ** kwargs ) \u00b6 get_cached_annotator_metadata # noqa: E501 Get annotator's metadata # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_cached_annotator_metadata_with_http_info(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param object options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(AnnotatorMetadata, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_annotator_supported_annotations ( proj_key , options , ** kwargs ) \u00b6 get_project_annotator_supported_annotations # noqa: E501 Get supported annotations for an annotator # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_annotator_supported_annotations(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param object options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: SupportedAnnotatorAnnotations If the method is called asynchronously, returns the request thread. get_project_annotator_supported_annotations_with_http_info ( proj_key , options , ** kwargs ) \u00b6 get_project_annotator_supported_annotations # noqa: E501 Get supported annotations for an annotator # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_annotator_supported_annotations_with_http_info(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param object options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(SupportedAnnotatorAnnotations, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. data_catalogs_api \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogsApi \u00b6 Bases: object Do not edit the class manually. clone_project_data_catalog ( proj_key , dc_key , options , ** kwargs ) \u00b6 clone_project_data_catalog # noqa: E501 Clone an existing data catalogue # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.clone_project_data_catalog(proj_key, dc_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param CloneDataCatalogOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: CloneDataCatalogResult If the method is called asynchronously, returns the request thread. clone_project_data_catalog_with_http_info ( proj_key , dc_key , options , ** kwargs ) \u00b6 clone_project_data_catalog # noqa: E501 Clone an existing data catalogue # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.clone_project_data_catalog_with_http_info(proj_key, dc_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param CloneDataCatalogOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(CloneDataCatalogResult, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. clone_public_data_catalog ( dc_key , options , ** kwargs ) \u00b6 clone_public_data_catalog # noqa: E501 Clone an existing public data catalogue # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.clone_public_data_catalog(dc_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dc_key: (required) :param ClonePublicDataCatalogOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: CloneDataCatalogResult If the method is called asynchronously, returns the request thread. clone_public_data_catalog_with_http_info ( dc_key , options , ** kwargs ) \u00b6 clone_public_data_catalog # noqa: E501 Clone an existing public data catalogue # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.clone_public_data_catalog_with_http_info(dc_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dc_key: (required) :param ClonePublicDataCatalogOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(CloneDataCatalogResult, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_data_catalog ( proj_key , options , ** kwargs ) \u00b6 create_project_data_catalog # noqa: E501 Create an empty data catalog # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_catalog(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateDataCatalogOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataCatalogue If the method is called asynchronously, returns the request thread. create_project_data_catalog_collection ( proj_key , dc_key , body , ** kwargs ) \u00b6 create_project_data_catalog_collection # noqa: E501 Create a collection in a data catalog # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_catalog_collection(proj_key, dc_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param CreateDataCatalogCollectionOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. create_project_data_catalog_collection_with_http_info ( proj_key , dc_key , body , ** kwargs ) \u00b6 create_project_data_catalog_collection # noqa: E501 Create a collection in a data catalog # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_catalog_collection_with_http_info(proj_key, dc_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param CreateDataCatalogCollectionOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. create_project_data_catalog_delete_token ( proj_key , dc_key , ** kwargs ) \u00b6 create_project_data_catalog_delete_token # noqa: E501 Get a token used to confirm the deletion of a data catalog. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_catalog_delete_token(proj_key, dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: TokenResponse If the method is called asynchronously, returns the request thread. create_project_data_catalog_delete_token_with_http_info ( proj_key , dc_key , ** kwargs ) \u00b6 create_project_data_catalog_delete_token # noqa: E501 Get a token used to confirm the deletion of a data catalog. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_catalog_delete_token_with_http_info(proj_key, dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(TokenResponse, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_data_catalog_with_http_info ( proj_key , options , ** kwargs ) \u00b6 create_project_data_catalog # noqa: E501 Create an empty data catalog # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_catalog_with_http_info(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateDataCatalogOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataCatalogue, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. delete_project_data_catalog ( proj_key , dc_key , confirmation_token , ** kwargs ) \u00b6 delete_project_data_catalog # noqa: E501 Delete a single data catalog # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_data_catalog(proj_key, dc_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str confirmation_token: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_data_catalog_collection ( proj_key , dc_key , collection_name , ** kwargs ) \u00b6 delete_project_data_catalog_collection # noqa: E501 Delete a single data catalog's collection # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_data_catalog_collection(proj_key, dc_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_data_catalog_collection_with_http_info ( proj_key , dc_key , collection_name , ** kwargs ) \u00b6 delete_project_data_catalog_collection # noqa: E501 Delete a single data catalog's collection # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_data_catalog_collection_with_http_info(proj_key, dc_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_data_catalog_with_http_info ( proj_key , dc_key , confirmation_token , ** kwargs ) \u00b6 delete_project_data_catalog # noqa: E501 Delete a single data catalog # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_data_catalog_with_http_info(proj_key, dc_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str confirmation_token: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. export_dataset ( proj_key , bag_key , data , ** kwargs ) \u00b6 export_dataset # noqa: E501 Export dataset from a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_dataset(proj_key, bag_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param InlineObject3 data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectTask If the method is called asynchronously, returns the request thread. export_dataset_with_http_info ( proj_key , bag_key , data , ** kwargs ) \u00b6 export_dataset # noqa: E501 Export dataset from a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_dataset_with_http_info(proj_key, bag_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param InlineObject3 data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. export_project_data_catalog_collection_data ( proj_key , dc_key , collection_name , ** kwargs ) \u00b6 export_project_data_catalog_collection_data # noqa: E501 Export the contents of a data catalog's collection # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_project_data_catalog_collection_data(proj_key, dc_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: file If the method is called asynchronously, returns the request thread. export_project_data_catalog_collection_data_with_http_info ( proj_key , dc_key , collection_name , ** kwargs ) \u00b6 export_project_data_catalog_collection_data # noqa: E501 Export the contents of a data catalog's collection # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_project_data_catalog_collection_data_with_http_info(proj_key, dc_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(file, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. export_project_data_catalog_data ( proj_key , dc_key , ** kwargs ) \u00b6 export_project_data_catalog_data # noqa: E501 Export the contents of a data catalog. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_project_data_catalog_data(proj_key, dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: file If the method is called asynchronously, returns the request thread. export_project_data_catalog_data_with_http_info ( proj_key , dc_key , ** kwargs ) \u00b6 export_project_data_catalog_data # noqa: E501 Export the contents of a data catalog. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_project_data_catalog_data_with_http_info(proj_key, dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(file, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_data_catalog_collection_data ( proj_key , dc_key , collection_name , ** kwargs ) \u00b6 get_data_catalog_collection_data # noqa: E501 Get Data Catalog Collection data. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_data_catalog_collection_data(proj_key, dc_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param str after: :param int limit: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. get_data_catalog_collection_data_with_http_info ( proj_key , dc_key , collection_name , ** kwargs ) \u00b6 get_data_catalog_collection_data # noqa: E501 Get Data Catalog Collection data. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_data_catalog_collection_data_with_http_info(proj_key, dc_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param str after: :param int limit: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. get_project_data_catalog ( proj_key , dc_key , ** kwargs ) \u00b6 get_project_data_catalog # noqa: E501 Get a single data catalogue # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_data_catalog(proj_key, dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param bool include_collections: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataCatalogue If the method is called asynchronously, returns the request thread. get_project_data_catalog_with_http_info ( proj_key , dc_key , ** kwargs ) \u00b6 get_project_data_catalog # noqa: E501 Get a single data catalogue # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_data_catalog_with_http_info(proj_key, dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param bool include_collections: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataCatalogue, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_public_data_catalog ( dc_key , ** kwargs ) \u00b6 get_public_data_catalog # noqa: E501 Get a single data catalogue that was made public # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_public_data_catalog(dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dc_key: (required) :param bool include_collections: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataCatalogue If the method is called asynchronously, returns the request thread. get_public_data_catalog_with_http_info ( dc_key , ** kwargs ) \u00b6 get_public_data_catalog # noqa: E501 Get a single data catalogue that was made public # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_public_data_catalog_with_http_info(dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dc_key: (required) :param bool include_collections: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataCatalogue, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. import_project_data_catalog_collection_data ( proj_key , dc_key , collection_name , body , ** kwargs ) \u00b6 import_project_data_catalog_collection_data # noqa: E501 Import data to a data catalog collection. The collection will be created if it doesn't exist. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.import_project_data_catalog_collection_data(proj_key, dc_key, collection_name, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param ImportToDataCatalogCollectionOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. import_project_data_catalog_collection_data_with_http_info ( proj_key , dc_key , collection_name , body , ** kwargs ) \u00b6 import_project_data_catalog_collection_data # noqa: E501 Import data to a data catalog collection. The collection will be created if it doesn't exist. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.import_project_data_catalog_collection_data_with_http_info(proj_key, dc_key, collection_name, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param ImportToDataCatalogCollectionOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. import_project_data_catalog_data ( proj_key , dc_key , body , ** kwargs ) \u00b6 import_project_data_catalog_data # noqa: E501 Import data to a data catalog. The collections will be created if they don't exist. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.import_project_data_catalog_data(proj_key, dc_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param ImportToDataCatalogOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. import_project_data_catalog_data_with_http_info ( proj_key , dc_key , body , ** kwargs ) \u00b6 import_project_data_catalog_data # noqa: E501 Import data to a data catalog. The collections will be created if they don't exist. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.import_project_data_catalog_data_with_http_info(proj_key, dc_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param ImportToDataCatalogOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. import_project_data_catalog_from_mongo ( proj_key , body , ** kwargs ) \u00b6 import_project_data_catalog_from_mongo # noqa: E501 Create a data catalogue from a mongo database # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.import_project_data_catalog_from_mongo(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param DataCatalogImportOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataCatalogImportResult If the method is called asynchronously, returns the request thread. import_project_data_catalog_from_mongo_with_http_info ( proj_key , body , ** kwargs ) \u00b6 import_project_data_catalog_from_mongo # noqa: E501 Create a data catalogue from a mongo database # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.import_project_data_catalog_from_mongo_with_http_info(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param DataCatalogImportOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataCatalogImportResult, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. import_project_data_catalog_from_url ( proj_key , body , ** kwargs ) \u00b6 import_project_data_catalog_from_url # noqa: E501 Create a data catalogue from a URL to a file # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.import_project_data_catalog_from_url(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param DataCatalogUrlImportOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataCatalogImportResult If the method is called asynchronously, returns the request thread. import_project_data_catalog_from_url_with_http_info ( proj_key , body , ** kwargs ) \u00b6 import_project_data_catalog_from_url # noqa: E501 Create a data catalogue from a URL to a file # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.import_project_data_catalog_from_url_with_http_info(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param DataCatalogUrlImportOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataCatalogImportResult, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. infer_project_data_catalog_category_schema ( proj_key , dc_key , collection_name , body , ** kwargs ) \u00b6 infer_project_data_catalog_category_schema # noqa: E501 Infer the schema for a data catalog's collection. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.infer_project_data_catalog_category_schema(proj_key, dc_key, collection_name, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param InferProjectDataCatalogCategorySchema body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. infer_project_data_catalog_category_schema_with_http_info ( proj_key , dc_key , collection_name , body , ** kwargs ) \u00b6 infer_project_data_catalog_category_schema # noqa: E501 Infer the schema for a data catalog's collection. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.infer_project_data_catalog_category_schema_with_http_info(proj_key, dc_key, collection_name, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param InferProjectDataCatalogCategorySchema body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_data_catalogs_and_collections_from_schema ( schema , ** kwargs ) \u00b6 list_data_catalogs_and_collections_from_schema # noqa: E501 List data catalogues with specific schema # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_data_catalogs_and_collections_from_schema(schema, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param dict(str, object) schema: (required) :param str proj_key: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataCatalogue] If the method is called asynchronously, returns the request thread. list_data_catalogs_and_collections_from_schema_with_http_info ( schema , ** kwargs ) \u00b6 list_data_catalogs_and_collections_from_schema # noqa: E501 List data catalogues with specific schema # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_data_catalogs_and_collections_from_schema_with_http_info(schema, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param dict(str, object) schema: (required) :param str proj_key: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataCatalogue], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_known_data_catalog_schemas ( ** kwargs ) \u00b6 list_known_data_catalog_schemas # noqa: E501 List System Known Data Catalog Schemas. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_known_data_catalog_schemas(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataCatalogSchema] If the method is called asynchronously, returns the request thread. list_known_data_catalog_schemas_with_http_info ( ** kwargs ) \u00b6 list_known_data_catalog_schemas # noqa: E501 List System Known Data Catalog Schemas. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_known_data_catalog_schemas_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataCatalogSchema], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_data_catalog_collections ( proj_key , dc_key , ** kwargs ) \u00b6 list_project_data_catalog_collections # noqa: E501 Get the collections of a data catalog. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_data_catalog_collections(proj_key, dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataCatalogCollection] If the method is called asynchronously, returns the request thread. list_project_data_catalog_collections_with_http_info ( proj_key , dc_key , ** kwargs ) \u00b6 list_project_data_catalog_collections # noqa: E501 Get the collections of a data catalog. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_data_catalog_collections_with_http_info(proj_key, dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataCatalogCollection], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_data_catalogs ( proj_key , ** kwargs ) \u00b6 list_project_data_catalogs # noqa: E501 List data catalogues for a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_data_catalogs(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str query: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataCatalogue] If the method is called asynchronously, returns the request thread. list_project_data_catalogs_with_http_info ( proj_key , ** kwargs ) \u00b6 list_project_data_catalogs # noqa: E501 List data catalogues for a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_data_catalogs_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str query: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataCatalogue], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_public_data_catalog_collections ( dc_key , ** kwargs ) \u00b6 list_public_data_catalog_collections # noqa: E501 Get the collections of a data catalog. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_data_catalog_collections(dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dc_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataCatalogCollection] If the method is called asynchronously, returns the request thread. list_public_data_catalog_collections_with_http_info ( dc_key , ** kwargs ) \u00b6 list_public_data_catalog_collections # noqa: E501 Get the collections of a data catalog. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_data_catalog_collections_with_http_info(dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dc_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataCatalogCollection], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_public_data_catalogs ( ** kwargs ) \u00b6 list_public_data_catalogs # noqa: E501 List public data catalogues # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_data_catalogs(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str query: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataCatalogue] If the method is called asynchronously, returns the request thread. list_public_data_catalogs_with_http_info ( ** kwargs ) \u00b6 list_public_data_catalogs # noqa: E501 List public data catalogues # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_data_catalogs_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str query: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataCatalogue], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. patch_project_data_catalog ( proj_key , dc_key , options , ** kwargs ) \u00b6 patch_project_data_catalog # noqa: E501 Update the metadata of a data catalog. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.patch_project_data_catalog(proj_key, dc_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param PatchDataCatalogOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataCatalogue If the method is called asynchronously, returns the request thread. patch_project_data_catalog_with_http_info ( proj_key , dc_key , options , ** kwargs ) \u00b6 patch_project_data_catalog # noqa: E501 Update the metadata of a data catalog. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.patch_project_data_catalog_with_http_info(proj_key, dc_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param PatchDataCatalogOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataCatalogue, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. upload_project_data_catalog_collection_data ( proj_key , dc_key , collection_name , file , ** kwargs ) \u00b6 upload_project_data_catalog_collection_data # noqa: E501 Upload data to a data catalog collection. The collection will be created if it doesn't exist. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_data_catalog_collection_data(proj_key, dc_key, collection_name, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param file file: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. upload_project_data_catalog_collection_data_with_http_info ( proj_key , dc_key , collection_name , file , ** kwargs ) \u00b6 upload_project_data_catalog_collection_data # noqa: E501 Upload data to a data catalog collection. The collection will be created if it doesn't exist. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_data_catalog_collection_data_with_http_info(proj_key, dc_key, collection_name, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param file file: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. upload_project_data_catalog_data ( proj_key , dc_key , file , ** kwargs ) \u00b6 upload_project_data_catalog_data # noqa: E501 Upload data to a data catalog. The collection name(s) will be inferred from the file name(s). # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_data_catalog_data(proj_key, dc_key, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param file file: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. upload_project_data_catalog_data_with_http_info ( proj_key , dc_key , file , ** kwargs ) \u00b6 upload_project_data_catalog_data # noqa: E501 Upload data to a data catalog. The collection name(s) will be inferred from the file name(s). # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_data_catalog_data_with_http_info(proj_key, dc_key, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param file file: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. data_flows_api \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowsApi \u00b6 Bases: object Do not edit the class manually. assemble_project_data_flow ( proj_key , dataflow , ** kwargs ) \u00b6 assemble_project_data_flow # noqa: E501 Run a dataflow # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.assemble_project_data_flow(proj_key, dataflow, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param KgcDataInput dataflow: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. assemble_project_data_flow_template_into_knowledge_graph ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 assemble_project_data_flow_template_into_knowledge_graph # noqa: E501 Render a single data flow template, replacing the variable placeholders by their actual values and run it. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.assemble_project_data_flow_template_into_knowledge_graph(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param RunDataFlowTemplateOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. assemble_project_data_flow_template_into_knowledge_graph_with_http_info ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 assemble_project_data_flow_template_into_knowledge_graph # noqa: E501 Render a single data flow template, replacing the variable placeholders by their actual values and run it. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.assemble_project_data_flow_template_into_knowledge_graph_with_http_info(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param RunDataFlowTemplateOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. assemble_project_data_flow_with_http_info ( proj_key , dataflow , ** kwargs ) \u00b6 assemble_project_data_flow # noqa: E501 Run a dataflow # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.assemble_project_data_flow_with_http_info(proj_key, dataflow, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param KgcDataInput dataflow: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. assemble_project_raw_data_flow_template_into_knowledge_graph ( proj_key , options , ** kwargs ) \u00b6 assemble_project_raw_data_flow_template_into_knowledge_graph # noqa: E501 Render a single data flow template, replacing the variable placeholders by their actual values and run it. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.assemble_project_raw_data_flow_template_into_knowledge_graph(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param RunDataFlowTemplateOptions1 options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. assemble_project_raw_data_flow_template_into_knowledge_graph_with_http_info ( proj_key , options , ** kwargs ) \u00b6 assemble_project_raw_data_flow_template_into_knowledge_graph # noqa: E501 Render a single data flow template, replacing the variable placeholders by their actual values and run it. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.assemble_project_raw_data_flow_template_into_knowledge_graph_with_http_info(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param RunDataFlowTemplateOptions1 options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_data_flow_template ( proj_key , options , ** kwargs ) \u00b6 create_project_data_flow_template # noqa: E501 Create a data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_flow_template(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateDataFlowTemplateOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataFlow If the method is called asynchronously, returns the request thread. create_project_data_flow_template_delete_token ( proj_key , df_tpl_key , ** kwargs ) \u00b6 create_project_data_flow_template_delete_token # noqa: E501 Get a token used to confirm the deletion of a data flow template. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_flow_template_delete_token(proj_key, df_tpl_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: TokenResponse If the method is called asynchronously, returns the request thread. create_project_data_flow_template_delete_token_with_http_info ( proj_key , df_tpl_key , ** kwargs ) \u00b6 create_project_data_flow_template_delete_token # noqa: E501 Get a token used to confirm the deletion of a data flow template. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_flow_template_delete_token_with_http_info(proj_key, df_tpl_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(TokenResponse, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_data_flow_template_with_http_info ( proj_key , options , ** kwargs ) \u00b6 create_project_data_flow_template # noqa: E501 Create a data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_flow_template_with_http_info(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateDataFlowTemplateOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataFlow, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_assemble_report ( proj_key , task_id , options , ** kwargs ) \u00b6 create_project_knowledge_graph_assemble_report # noqa: E501 Create a report for a data flow task assemble. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_assemble_report(proj_key, task_id, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param DataFlowAssembleReportOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataFlowAssembleReport If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_assemble_report_with_http_info ( proj_key , task_id , options , ** kwargs ) \u00b6 create_project_knowledge_graph_assemble_report # noqa: E501 Create a report for a data flow task assemble. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_assemble_report_with_http_info(proj_key, task_id, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param DataFlowAssembleReportOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataFlowAssembleReport, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. debug_project_data_flow_template ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 debug_project_data_flow_template # noqa: E501 (Debug) get the fully rendered data flow, with all the coordinates set. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.debug_project_data_flow_template(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param FullyRenderedDataFlow options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: object If the method is called asynchronously, returns the request thread. debug_project_data_flow_template_with_http_info ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 debug_project_data_flow_template # noqa: E501 (Debug) get the fully rendered data flow, with all the coordinates set. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.debug_project_data_flow_template_with_http_info(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param FullyRenderedDataFlow options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(object, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. delete_project_data_flow_template ( proj_key , df_tpl_key , confirmation_token , ** kwargs ) \u00b6 delete_project_data_flow_template # noqa: E501 Delete a single data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_data_flow_template(proj_key, df_tpl_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param str confirmation_token: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_data_flow_template_with_http_info ( proj_key , df_tpl_key , confirmation_token , ** kwargs ) \u00b6 delete_project_data_flow_template # noqa: E501 Delete a single data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_data_flow_template_with_http_info(proj_key, df_tpl_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param str confirmation_token: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. export_project_data_flow_template ( proj_key , df_tpl_key , ** kwargs ) \u00b6 export_project_data_flow_template # noqa: E501 Export a single data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_project_data_flow_template(proj_key, df_tpl_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: file If the method is called asynchronously, returns the request thread. export_project_data_flow_template_with_http_info ( proj_key , df_tpl_key , ** kwargs ) \u00b6 export_project_data_flow_template # noqa: E501 Export a single data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_project_data_flow_template_with_http_info(proj_key, df_tpl_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(file, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. export_public_data_flow_template ( df_tpl_key , ** kwargs ) \u00b6 export_public_data_flow_template # noqa: E501 Export a single public data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_public_data_flow_template(df_tpl_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str df_tpl_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: file If the method is called asynchronously, returns the request thread. export_public_data_flow_template_with_http_info ( df_tpl_key , ** kwargs ) \u00b6 export_public_data_flow_template # noqa: E501 Export a single public data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_public_data_flow_template_with_http_info(df_tpl_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str df_tpl_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(file, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_data_flow ( proj_key , df_tpl_key , ** kwargs ) \u00b6 get_project_data_flow # noqa: E501 Get a single data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_data_flow(proj_key, df_tpl_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataFlow If the method is called asynchronously, returns the request thread. get_project_data_flow_template_topology ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 get_project_data_flow_template_topology # noqa: E501 Render a single data flow template, replacing the variable placeholders by their actual values and get the resulting Knowledge Graph topology from it. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_data_flow_template_topology(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param DataFlowTopologyOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Topology If the method is called asynchronously, returns the request thread. get_project_data_flow_template_topology_with_http_info ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 get_project_data_flow_template_topology # noqa: E501 Render a single data flow template, replacing the variable placeholders by their actual values and get the resulting Knowledge Graph topology from it. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_data_flow_template_topology_with_http_info(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param DataFlowTopologyOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Topology, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_data_flow_with_http_info ( proj_key , df_tpl_key , ** kwargs ) \u00b6 get_project_data_flow # noqa: E501 Get a single data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_data_flow_with_http_info(proj_key, df_tpl_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataFlow, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_public_data_flow_template ( df_tpl_key , ** kwargs ) \u00b6 get_public_data_flow_template # noqa: E501 Get a single data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_public_data_flow_template(df_tpl_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str df_tpl_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataFlow If the method is called asynchronously, returns the request thread. get_public_data_flow_template_with_http_info ( df_tpl_key , ** kwargs ) \u00b6 get_public_data_flow_template # noqa: E501 Get a single data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_public_data_flow_template_with_http_info(df_tpl_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str df_tpl_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataFlow, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_data_flow_templates ( proj_key , ** kwargs ) \u00b6 list_project_data_flow_templates # noqa: E501 List a data flow templates # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_data_flow_templates(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str query: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataFlowTemplateListItem] If the method is called asynchronously, returns the request thread. list_project_data_flow_templates_with_http_info ( proj_key , ** kwargs ) \u00b6 list_project_data_flow_templates # noqa: E501 List a data flow templates # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_data_flow_templates_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str query: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataFlowTemplateListItem], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_public_data_flow_templates ( ** kwargs ) \u00b6 list_public_data_flow_templates # noqa: E501 List public data flow templates # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_data_flow_templates(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str query: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataFlowTemplateListItem] If the method is called asynchronously, returns the request thread. list_public_data_flow_templates_with_http_info ( ** kwargs ) \u00b6 list_public_data_flow_templates # noqa: E501 List public data flow templates # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_data_flow_templates_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str query: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataFlowTemplateListItem], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. load_project_data_flow ( proj_key , options , ** kwargs ) \u00b6 load_project_data_flow # noqa: E501 Load a dataflow into a KG # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_project_data_flow(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param LoadKgcDataInput options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. load_project_data_flow_template_into_knowledge_graph ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 load_project_data_flow_template_into_knowledge_graph # noqa: E501 Render a single data flow template, replacing the variable placeholders by their actual values and load it into a Knowledge Graph. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_project_data_flow_template_into_knowledge_graph(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param LoadDataFlowIntoKnowledgeGraphOptions1 options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. load_project_data_flow_template_into_knowledge_graph_with_http_info ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 load_project_data_flow_template_into_knowledge_graph # noqa: E501 Render a single data flow template, replacing the variable placeholders by their actual values and load it into a Knowledge Graph. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_project_data_flow_template_into_knowledge_graph_with_http_info(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param LoadDataFlowIntoKnowledgeGraphOptions1 options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. load_project_data_flow_with_http_info ( proj_key , options , ** kwargs ) \u00b6 load_project_data_flow # noqa: E501 Load a dataflow into a KG # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_project_data_flow_with_http_info(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param LoadKgcDataInput options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. render_project_data_flow_template ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 render_project_data_flow_template # noqa: E501 Render a single data flow template, replacing the variable placeholders by their actual values. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.render_project_data_flow_template(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param RenderDataFlowTemplateOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: object If the method is called asynchronously, returns the request thread. render_project_data_flow_template_with_http_info ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 render_project_data_flow_template # noqa: E501 Render a single data flow template, replacing the variable placeholders by their actual values. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.render_project_data_flow_template_with_http_info(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param RenderDataFlowTemplateOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(object, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. update_project_data_flow_template ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 update_project_data_flow_template # noqa: E501 Update a data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_data_flow_template(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param UpdateDataFlowOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataFlow If the method is called asynchronously, returns the request thread. update_project_data_flow_template_with_http_info ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 update_project_data_flow_template # noqa: E501 Update a data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_data_flow_template_with_http_info(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param UpdateDataFlowOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataFlow, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. upload_project_data_flow_template ( proj_key , contents , ** kwargs ) \u00b6 upload_project_data_flow_template # noqa: E501 Create a data flow template from a JSON file. DEPRECATED : use create_project_data_flow_template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_data_flow_template(proj_key, contents, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param file contents: (required) :param str name: :param str description: :param bool public: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataFlow If the method is called asynchronously, returns the request thread. upload_project_data_flow_template_with_http_info ( proj_key , contents , ** kwargs ) \u00b6 upload_project_data_flow_template # noqa: E501 Create a data flow template from a JSON file. DEPRECATED : use create_project_data_flow_template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_data_flow_template_with_http_info(proj_key, contents, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param file contents: (required) :param str name: :param str description: :param bool public: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataFlow, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. validate_project_data_flow ( proj_key , dataflow , ** kwargs ) \u00b6 validate_project_data_flow # noqa: E501 Validate a dataflow # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.validate_project_data_flow(proj_key, dataflow, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param KgcDataInput dataflow: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. validate_project_data_flow_with_http_info ( proj_key , dataflow , ** kwargs ) \u00b6 validate_project_data_flow # noqa: E501 Validate a dataflow # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.validate_project_data_flow_with_http_info(proj_key, dataflow, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param KgcDataInput dataflow: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. data_indices_api \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataIndicesApi \u00b6 Bases: object Do not edit the class manually. ccs_convert_upload_file_project_data_index ( proj_key , index_key , body , ** kwargs ) \u00b6 ccs_convert_upload_file_project_data_index # noqa: E501 Convert files via CCS and upload to a project data index (only for indices with 'deepsearch-doc' schema) # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.ccs_convert_upload_file_project_data_index(proj_key, index_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param DataIndexUploadFileSource body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: CcsTask If the method is called asynchronously, returns the request thread. ccs_convert_upload_file_project_data_index_with_http_info ( proj_key , index_key , body , ** kwargs ) \u00b6 ccs_convert_upload_file_project_data_index # noqa: E501 Convert files via CCS and upload to a project data index (only for indices with 'deepsearch-doc' schema) # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.ccs_convert_upload_file_project_data_index_with_http_info(proj_key, index_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param DataIndexUploadFileSource body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(CcsTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_data_index ( proj_key , data , ** kwargs ) \u00b6 create_project_data_index # noqa: E501 Create a project data index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_index(proj_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param object data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectDataIndexWithStatus If the method is called asynchronously, returns the request thread. create_project_data_index_delete_token ( proj_key , index_key , ** kwargs ) \u00b6 create_project_data_index_delete_token # noqa: E501 Get a token used to confirm the deletion of a project data index. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_index_delete_token(proj_key, index_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: TokenResponse If the method is called asynchronously, returns the request thread. create_project_data_index_delete_token_with_http_info ( proj_key , index_key , ** kwargs ) \u00b6 create_project_data_index_delete_token # noqa: E501 Get a token used to confirm the deletion of a project data index. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_index_delete_token_with_http_info(proj_key, index_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(TokenResponse, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_data_index_with_http_info ( proj_key , data , ** kwargs ) \u00b6 create_project_data_index # noqa: E501 Create a project data index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_index_with_http_info(proj_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param object data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectDataIndexWithStatus, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. delete_project_data_index ( proj_key , index_key , confirmation_token , ** kwargs ) \u00b6 delete_project_data_index # noqa: E501 Delete a project index data # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_data_index(proj_key, index_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param str confirmation_token: The delete confirmation token (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_data_index_with_http_info ( proj_key , index_key , confirmation_token , ** kwargs ) \u00b6 delete_project_data_index # noqa: E501 Delete a project index data # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_data_index_with_http_info(proj_key, index_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param str confirmation_token: The delete confirmation token (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. get_project_data_index ( proj_key , index_key , ** kwargs ) \u00b6 get_project_data_index # noqa: E501 Get project data index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_data_index(proj_key, index_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectDataIndexWithStatus If the method is called asynchronously, returns the request thread. get_project_data_index_with_http_info ( proj_key , index_key , ** kwargs ) \u00b6 get_project_data_index # noqa: E501 Get project data index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_data_index_with_http_info(proj_key, index_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectDataIndexWithStatus, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_data_indices ( proj_key , ** kwargs ) \u00b6 get_project_data_indices # noqa: E501 Get project data indices # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_data_indices(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[ProjectDataIndexWithStatus] If the method is called asynchronously, returns the request thread. get_project_data_indices_with_http_info ( proj_key , ** kwargs ) \u00b6 get_project_data_indices # noqa: E501 Get project data indices # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_data_indices_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[ProjectDataIndexWithStatus], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. search_project_data_index ( proj_key , index_key , parameters , ** kwargs ) \u00b6 search_project_data_index # noqa: E501 Search a project data index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.search_project_data_index(proj_key, index_key, parameters, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param dict(str, object) parameters: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ElasticIndexSearchResults If the method is called asynchronously, returns the request thread. search_project_data_index_with_http_info ( proj_key , index_key , parameters , ** kwargs ) \u00b6 search_project_data_index # noqa: E501 Search a project data index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.search_project_data_index_with_http_info(proj_key, index_key, parameters, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param dict(str, object) parameters: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ElasticIndexSearchResults, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. update_project_data_index ( proj_key , index_key , data , ** kwargs ) \u00b6 update_project_data_index # noqa: E501 Update a project data index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_data_index(proj_key, index_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param object data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectDataIndexWithStatus If the method is called asynchronously, returns the request thread. update_project_data_index_with_http_info ( proj_key , index_key , data , ** kwargs ) \u00b6 update_project_data_index # noqa: E501 Update a project data index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_data_index_with_http_info(proj_key, index_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param object data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectDataIndexWithStatus, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. upload_project_data_index_file ( proj_key , index_key , file , ** kwargs ) \u00b6 upload_project_data_index_file # noqa: E501 Upload a file to a project data index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_data_index_file(proj_key, index_key, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param file file: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. upload_project_data_index_file_with_http_info ( proj_key , index_key , file , ** kwargs ) \u00b6 upload_project_data_index_file # noqa: E501 Upload a file to a project data index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_data_index_file_with_http_info(proj_key, index_key, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param file file: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. dictionaries_api \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DictionariesApi \u00b6 Bases: object Do not edit the class manually. clone_project_dictionary ( proj_key , dict_key , body , ** kwargs ) \u00b6 clone_project_dictionary # noqa: E501 Clone an existing dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.clone_project_dictionary(proj_key, dict_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param CloneDictionaryOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DictionaryCloneResult If the method is called asynchronously, returns the request thread. clone_project_dictionary_with_http_info ( proj_key , dict_key , body , ** kwargs ) \u00b6 clone_project_dictionary # noqa: E501 Clone an existing dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.clone_project_dictionary_with_http_info(proj_key, dict_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param CloneDictionaryOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DictionaryCloneResult, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. clone_public_dictionary ( dict_key , body , ** kwargs ) \u00b6 clone_public_dictionary # noqa: E501 Clone an existing public dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.clone_public_dictionary(dict_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dict_key: (required) :param ClonePublicDictionaryOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DictionaryCloneResult If the method is called asynchronously, returns the request thread. clone_public_dictionary_with_http_info ( dict_key , body , ** kwargs ) \u00b6 clone_public_dictionary # noqa: E501 Clone an existing public dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.clone_public_dictionary_with_http_info(dict_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dict_key: (required) :param ClonePublicDictionaryOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DictionaryCloneResult, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_dictionary ( proj_key , body , ** kwargs ) \u00b6 create_project_dictionary # noqa: E501 Create an empty dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_dictionary(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateDictionaryOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Dictionary If the method is called asynchronously, returns the request thread. create_project_dictionary_collection ( proj_key , dict_key , body , ** kwargs ) \u00b6 create_project_dictionary_collection # noqa: E501 Create a collection in a dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_dictionary_collection(proj_key, dict_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param CreateCollectionInDictionaryOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. create_project_dictionary_collection_with_http_info ( proj_key , dict_key , body , ** kwargs ) \u00b6 create_project_dictionary_collection # noqa: E501 Create a collection in a dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_dictionary_collection_with_http_info(proj_key, dict_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param CreateCollectionInDictionaryOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. create_project_dictionary_delete_token ( proj_key , dict_key , ** kwargs ) \u00b6 create_project_dictionary_delete_token # noqa: E501 Get a token used to confirm the deletion of a dictionary. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_dictionary_delete_token(proj_key, dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: TokenResponse If the method is called asynchronously, returns the request thread. create_project_dictionary_delete_token_with_http_info ( proj_key , dict_key , ** kwargs ) \u00b6 create_project_dictionary_delete_token # noqa: E501 Get a token used to confirm the deletion of a dictionary. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_dictionary_delete_token_with_http_info(proj_key, dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(TokenResponse, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_dictionary_with_http_info ( proj_key , body , ** kwargs ) \u00b6 create_project_dictionary # noqa: E501 Create an empty dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_dictionary_with_http_info(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateDictionaryOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Dictionary, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. delete_project_dictionary ( proj_key , dict_key , confirmation_token , ** kwargs ) \u00b6 delete_project_dictionary # noqa: E501 Delete a single dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_dictionary(proj_key, dict_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str confirmation_token: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_dictionary_collection ( proj_key , dict_key , collection_name , ** kwargs ) \u00b6 delete_project_dictionary_collection # noqa: E501 Delete a single dictionary's collection # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_dictionary_collection(proj_key, dict_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str collection_name: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_dictionary_collection_with_http_info ( proj_key , dict_key , collection_name , ** kwargs ) \u00b6 delete_project_dictionary_collection # noqa: E501 Delete a single dictionary's collection # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_dictionary_collection_with_http_info(proj_key, dict_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str collection_name: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_dictionary_with_http_info ( proj_key , dict_key , confirmation_token , ** kwargs ) \u00b6 delete_project_dictionary # noqa: E501 Delete a single dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_dictionary_with_http_info(proj_key, dict_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str confirmation_token: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. export_project_dictionary_collection_data ( proj_key , dict_key , collection_name , ** kwargs ) \u00b6 export_project_dictionary_collection_data # noqa: E501 Export the contents of a dictionary's collection # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_project_dictionary_collection_data(proj_key, dict_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str collection_name: (required) :param str file_format: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: file If the method is called asynchronously, returns the request thread. export_project_dictionary_collection_data_with_http_info ( proj_key , dict_key , collection_name , ** kwargs ) \u00b6 export_project_dictionary_collection_data # noqa: E501 Export the contents of a dictionary's collection # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_project_dictionary_collection_data_with_http_info(proj_key, dict_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str collection_name: (required) :param str file_format: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(file, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. export_project_dictionary_data ( proj_key , dict_key , ** kwargs ) \u00b6 export_project_dictionary_data # noqa: E501 Export the contents of a dictionary. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_project_dictionary_data(proj_key, dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: file If the method is called asynchronously, returns the request thread. export_project_dictionary_data_with_http_info ( proj_key , dict_key , ** kwargs ) \u00b6 export_project_dictionary_data # noqa: E501 Export the contents of a dictionary. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_project_dictionary_data_with_http_info(proj_key, dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(file, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_dictionary ( proj_key , dict_key , ** kwargs ) \u00b6 get_project_dictionary # noqa: E501 Get a single dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_dictionary(proj_key, dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param bool include_collections: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Dictionary If the method is called asynchronously, returns the request thread. get_project_dictionary_collection_data ( proj_key , dict_key , collection_name , ** kwargs ) \u00b6 get_project_dictionary_collection_data # noqa: E501 Get a preview of the data in a dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_dictionary_collection_data(proj_key, dict_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str collection_name: (required) :param str after: :param int limit: :param str response_format: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: object If the method is called asynchronously, returns the request thread. get_project_dictionary_collection_data_with_http_info ( proj_key , dict_key , collection_name , ** kwargs ) \u00b6 get_project_dictionary_collection_data # noqa: E501 Get a preview of the data in a dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_dictionary_collection_data_with_http_info(proj_key, dict_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str collection_name: (required) :param str after: :param int limit: :param str response_format: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(object, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_dictionary_with_http_info ( proj_key , dict_key , ** kwargs ) \u00b6 get_project_dictionary # noqa: E501 Get a single dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_dictionary_with_http_info(proj_key, dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param bool include_collections: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Dictionary, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_public_dictionary ( dict_key , ** kwargs ) \u00b6 get_public_dictionary # noqa: E501 Get a single dictionary that was made public # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_public_dictionary(dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dict_key: (required) :param bool include_collections: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Dictionary If the method is called asynchronously, returns the request thread. get_public_dictionary_with_http_info ( dict_key , ** kwargs ) \u00b6 get_public_dictionary # noqa: E501 Get a single dictionary that was made public # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_public_dictionary_with_http_info(dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dict_key: (required) :param bool include_collections: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Dictionary, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. import_project_dictionary_from_mongo ( proj_key , body , ** kwargs ) \u00b6 import_project_dictionary_from_mongo # noqa: E501 Create a dictionary from a mongo database # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.import_project_dictionary_from_mongo(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param DictionaryImportOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DictionaryImportResult If the method is called asynchronously, returns the request thread. import_project_dictionary_from_mongo_with_http_info ( proj_key , body , ** kwargs ) \u00b6 import_project_dictionary_from_mongo # noqa: E501 Create a dictionary from a mongo database # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.import_project_dictionary_from_mongo_with_http_info(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param DictionaryImportOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DictionaryImportResult, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_dictionaries ( proj_key , ** kwargs ) \u00b6 list_project_dictionaries # noqa: E501 List dictionaries for a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_dictionaries(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str query: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[Dictionary] If the method is called asynchronously, returns the request thread. list_project_dictionaries_with_http_info ( proj_key , ** kwargs ) \u00b6 list_project_dictionaries # noqa: E501 List dictionaries for a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_dictionaries_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str query: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[Dictionary], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_dictionary_collections ( proj_key , dict_key , ** kwargs ) \u00b6 list_project_dictionary_collections # noqa: E501 Get the collections of a dictionary. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_dictionary_collections(proj_key, dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DictionaryCollection] If the method is called asynchronously, returns the request thread. list_project_dictionary_collections_with_http_info ( proj_key , dict_key , ** kwargs ) \u00b6 list_project_dictionary_collections # noqa: E501 Get the collections of a dictionary. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_dictionary_collections_with_http_info(proj_key, dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DictionaryCollection], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_public_dictionaries ( ** kwargs ) \u00b6 list_public_dictionaries # noqa: E501 List public dictionaries # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_dictionaries(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str query: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[Dictionary] If the method is called asynchronously, returns the request thread. list_public_dictionaries_with_http_info ( ** kwargs ) \u00b6 list_public_dictionaries # noqa: E501 List public dictionaries # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_dictionaries_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str query: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[Dictionary], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_public_dictionary_collections ( dict_key , ** kwargs ) \u00b6 list_public_dictionary_collections # noqa: E501 Get the collections of a dictionary. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_dictionary_collections(dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dict_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DictionaryCollection] If the method is called asynchronously, returns the request thread. list_public_dictionary_collections_with_http_info ( dict_key , ** kwargs ) \u00b6 list_public_dictionary_collections # noqa: E501 Get the collections of a dictionary. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_dictionary_collections_with_http_info(dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dict_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DictionaryCollection], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. update_project_dictionary ( proj_key , dict_key , options , ** kwargs ) \u00b6 update_project_dictionary # noqa: E501 Update the metadata of a dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_dictionary(proj_key, dict_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param PatchDictionaryOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Dictionary If the method is called asynchronously, returns the request thread. update_project_dictionary_collection_data ( proj_key , dict_key , collection_name , body , ** kwargs ) \u00b6 update_project_dictionary_collection_data # noqa: E501 Update the data in a dictionary's collection # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_dictionary_collection_data(proj_key, dict_key, collection_name, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str collection_name: (required) :param list[DictionaryCollectionPatch] body: A subset of JSON Patch operation list. Only add , replace , and remove is supported. See http://jsonpatch.com/ for more details. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_project_dictionary_collection_data_with_http_info ( proj_key , dict_key , collection_name , body , ** kwargs ) \u00b6 update_project_dictionary_collection_data # noqa: E501 Update the data in a dictionary's collection # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_dictionary_collection_data_with_http_info(proj_key, dict_key, collection_name, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str collection_name: (required) :param list[DictionaryCollectionPatch] body: A subset of JSON Patch operation list. Only add , replace , and remove is supported. See http://jsonpatch.com/ for more details. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_project_dictionary_with_http_info ( proj_key , dict_key , options , ** kwargs ) \u00b6 update_project_dictionary # noqa: E501 Update the metadata of a dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_dictionary_with_http_info(proj_key, dict_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param PatchDictionaryOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Dictionary, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. upload_project_dictionary_collection_data ( proj_key , dict_key , collection_name , file , ** kwargs ) \u00b6 upload_project_dictionary_collection_data # noqa: E501 Upload data to a dictionary collection. The collection will be created if it doesn't exist. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_dictionary_collection_data(proj_key, dict_key, collection_name, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str collection_name: (required) :param file file: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. upload_project_dictionary_collection_data_with_http_info ( proj_key , dict_key , collection_name , file , ** kwargs ) \u00b6 upload_project_dictionary_collection_data # noqa: E501 Upload data to a dictionary collection. The collection will be created if it doesn't exist. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_dictionary_collection_data_with_http_info(proj_key, dict_key, collection_name, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str collection_name: (required) :param file file: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. upload_project_dictionary_data ( proj_key , dict_key , file , ** kwargs ) \u00b6 upload_project_dictionary_data # noqa: E501 Upload data to a dictionary. The collection name(s) will be inferred from the file name(s). # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_dictionary_data(proj_key, dict_key, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param file file: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. upload_project_dictionary_data_with_http_info ( proj_key , dict_key , file , ** kwargs ) \u00b6 upload_project_dictionary_data # noqa: E501 Upload data to a dictionary. The collection name(s) will be inferred from the file name(s). # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_dictionary_data_with_http_info(proj_key, dict_key, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param file file: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. document_annotation_api \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DocumentAnnotationApi \u00b6 Bases: object Do not edit the class manually. annotate_document ( proj_key , body , ** kwargs ) \u00b6 annotate_document # noqa: E501 Run an annotator on a document # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.annotate_document(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param AnnotateDocumentRequest body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. annotate_document_with_http_info ( proj_key , body , ** kwargs ) \u00b6 annotate_document # noqa: E501 Run an annotator on a document # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.annotate_document_with_http_info(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param AnnotateDocumentRequest body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. delete_document_annotation_result ( proj_key , document_hash , ** kwargs ) \u00b6 delete_document_annotation_result # noqa: E501 Delete annotation results for a document # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_document_annotation_result(proj_key, document_hash, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str document_hash: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_document_annotation_result_with_http_info ( proj_key , document_hash , ** kwargs ) \u00b6 delete_document_annotation_result # noqa: E501 Delete annotation results for a document # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_document_annotation_result_with_http_info(proj_key, document_hash, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str document_hash: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. get_annotate_document_result ( proj_key , task_id , ** kwargs ) \u00b6 get_annotate_document_result # noqa: E501 Get the result of a previous document annotation # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_annotate_document_result(proj_key, task_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param float wait: Allow the response to be delayed for a few seconds to wait for the result, instead of doing client-side polling. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: InlineResponse2002 If the method is called asynchronously, returns the request thread. get_annotate_document_result_with_http_info ( proj_key , task_id , ** kwargs ) \u00b6 get_annotate_document_result # noqa: E501 Get the result of a previous document annotation # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_annotate_document_result_with_http_info(proj_key, task_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param float wait: Allow the response to be delayed for a few seconds to wait for the result, instead of doing client-side polling. :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(InlineResponse2002, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. report_inspected_document ( proj_key , body , ** kwargs ) \u00b6 report_inspected_document # noqa: E501 Submit a report on an inspected document # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.report_inspected_document(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param AnnotatedDocumentReport body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. report_inspected_document_with_http_info ( proj_key , body , ** kwargs ) \u00b6 report_inspected_document # noqa: E501 Submit a report on an inspected document # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.report_inspected_document_with_http_info(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param AnnotatedDocumentReport body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. elastic_api \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ElasticApi \u00b6 Bases: object Do not edit the class manually. get_elastic_domains ( ** kwargs ) \u00b6 get_elastic_domains # noqa: E501 List system elastic domains. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_elastic_domains(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[str] If the method is called asynchronously, returns the request thread. get_elastic_domains_with_http_info ( ** kwargs ) \u00b6 get_elastic_domains # noqa: E501 List system elastic domains. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_elastic_domains_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[str], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_elastic_query_max_size ( ** kwargs ) \u00b6 get_elastic_query_max_size # noqa: E501 Get the system maximum workable elastic query size. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_elastic_query_max_size(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: InlineResponse200 If the method is called asynchronously, returns the request thread. get_elastic_query_max_size_with_http_info ( ** kwargs ) \u00b6 get_elastic_query_max_size # noqa: E501 Get the system maximum workable elastic query size. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_elastic_query_max_size_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(InlineResponse200, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_index_search_results ( elastic_instance , elastic_index , parameters , ** kwargs ) \u00b6 get_index_search_results # noqa: E501 List elastic index search results. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_index_search_results(elastic_instance, elastic_index, parameters, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str elastic_instance: (required) :param str elastic_index: (required) :param dict(str, object) parameters: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ElasticIndexSearchResults If the method is called asynchronously, returns the request thread. get_index_search_results_with_http_info ( elastic_instance , elastic_index , parameters , ** kwargs ) \u00b6 get_index_search_results # noqa: E501 List elastic index search results. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_index_search_results_with_http_info(elastic_instance, elastic_index, parameters, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str elastic_instance: (required) :param str elastic_index: (required) :param dict(str, object) parameters: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ElasticIndexSearchResults, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_kibana_saved_queries ( elastic_instance , elastic_index , ** kwargs ) \u00b6 get_kibana_saved_queries # noqa: E501 List Kibana saved queries. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_kibana_saved_queries(elastic_instance, elastic_index, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str elastic_instance: (required) :param str elastic_index: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[KibanaSavedQueriesResult] If the method is called asynchronously, returns the request thread. get_kibana_saved_queries_with_http_info ( elastic_instance , elastic_index , ** kwargs ) \u00b6 get_kibana_saved_queries # noqa: E501 List Kibana saved queries. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_kibana_saved_queries_with_http_info(elastic_instance, elastic_index, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str elastic_instance: (required) :param str elastic_index: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[KibanaSavedQueriesResult], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_indices_from_elastic_instance ( index_type , index_domain , ** kwargs ) \u00b6 list_indices_from_elastic_instance # noqa: E501 List of indices for elastic instance. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_indices_from_elastic_instance(index_type, index_domain, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str index_type: (required) :param str index_domain: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataCollection] If the method is called asynchronously, returns the request thread. list_indices_from_elastic_instance_with_http_info ( index_type , index_domain , ** kwargs ) \u00b6 list_indices_from_elastic_instance # noqa: E501 List of indices for elastic instance. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_indices_from_elastic_instance_with_http_info(index_type, index_domain, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str index_type: (required) :param str index_domain: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataCollection], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. knowledge_graphs_api \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech KnowledgeGraphsApi \u00b6 Bases: object Do not edit the class manually. assemble_project_knowledge_graph_data_flow ( proj_key , bag_key , options , ** kwargs ) \u00b6 assemble_project_knowledge_graph_data_flow # noqa: E501 Assemble a data flow on a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.assemble_project_knowledge_graph_data_flow(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param AssembleDataFlowIntoKnowledgeGraphOptions1 options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectTask If the method is called asynchronously, returns the request thread. assemble_project_knowledge_graph_data_flow_with_http_info ( proj_key , bag_key , options , ** kwargs ) \u00b6 assemble_project_knowledge_graph_data_flow # noqa: E501 Assemble a data flow on a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.assemble_project_knowledge_graph_data_flow_with_http_info(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param AssembleDataFlowIntoKnowledgeGraphOptions1 options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. backend_assemble_project_kg_data_flow ( proj_key , bag_key , options , ** kwargs ) \u00b6 backend_assemble_project_kg_data_flow # noqa: E501 Assemble a data flow on a Knowledge Graph, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_assemble_project_kg_data_flow(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param AssembleDataFlowIntoKnowledgeGraphOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectTask If the method is called asynchronously, returns the request thread. backend_assemble_project_kg_data_flow_with_http_info ( proj_key , bag_key , options , ** kwargs ) \u00b6 backend_assemble_project_kg_data_flow # noqa: E501 Assemble a data flow on a Knowledge Graph, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_assemble_project_kg_data_flow_with_http_info(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param AssembleDataFlowIntoKnowledgeGraphOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. backend_create_project_kg ( proj_key , data , ** kwargs ) \u00b6 backend_create_project_kg # noqa: E501 Create new BAG, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_create_project_kg(proj_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateKnowledgeGraphOptions data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: BagBackendAware If the method is called asynchronously, returns the request thread. backend_create_project_kg_snapshot_from_data_flow_assembly ( proj_key , bag_key , body , ** kwargs ) \u00b6 backend_create_project_kg_snapshot_from_data_flow_assembly # noqa: E501 Create a snapshot of a Knowledge Graph from the last data flow assembly task, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_create_project_kg_snapshot_from_data_flow_assembly(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param InlineObject body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectTask If the method is called asynchronously, returns the request thread. backend_create_project_kg_snapshot_from_data_flow_assembly_with_http_info ( proj_key , bag_key , body , ** kwargs ) \u00b6 backend_create_project_kg_snapshot_from_data_flow_assembly # noqa: E501 Create a snapshot of a Knowledge Graph from the last data flow assembly task, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_create_project_kg_snapshot_from_data_flow_assembly_with_http_info(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param InlineObject body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. backend_create_project_kg_with_http_info ( proj_key , data , ** kwargs ) \u00b6 backend_create_project_kg # noqa: E501 Create new BAG, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_create_project_kg_with_http_info(proj_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateKnowledgeGraphOptions data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(BagBackendAware, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. backend_get_project_kg_status ( proj_key , bag_key , ** kwargs ) \u00b6 backend_get_project_kg_status # noqa: E501 Get the status of a Knowledge Graph, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_get_project_kg_status(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param bool details: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: BagStatusBackendAware If the method is called asynchronously, returns the request thread. backend_get_project_kg_status_with_http_info ( proj_key , bag_key , ** kwargs ) \u00b6 backend_get_project_kg_status # noqa: E501 Get the status of a Knowledge Graph, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_get_project_kg_status_with_http_info(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param bool details: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(BagStatusBackendAware, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. backend_list_project_kgs ( proj_key , ** kwargs ) \u00b6 backend_list_project_kgs # noqa: E501 List all bags in the project, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_list_project_kgs(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str term: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[BagBackendAware] If the method is called asynchronously, returns the request thread. backend_list_project_kgs_with_http_info ( proj_key , ** kwargs ) \u00b6 backend_list_project_kgs # noqa: E501 List all bags in the project, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_list_project_kgs_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str term: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[BagBackendAware], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. backend_update_project_kg_metadata ( proj_key , bag_key , data , ** kwargs ) \u00b6 backend_update_project_kg_metadata # noqa: E501 Update the metadata of a Knowledge graph, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_update_project_kg_metadata(proj_key, bag_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param PatchKnowledgeGraphOptions data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: BagBackendAware If the method is called asynchronously, returns the request thread. backend_update_project_kg_metadata_with_http_info ( proj_key , bag_key , data , ** kwargs ) \u00b6 backend_update_project_kg_metadata # noqa: E501 Update the metadata of a Knowledge graph, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_update_project_kg_metadata_with_http_info(proj_key, bag_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param PatchKnowledgeGraphOptions data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(BagBackendAware, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_knowledge_graph ( proj_key , data , ** kwargs ) \u00b6 create_project_knowledge_graph # noqa: E501 Create new BAG # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph(proj_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateKnowledgeGraphOptions1 data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Bag If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_authentication_token ( proj_key , bag_key , ** kwargs ) \u00b6 create_project_knowledge_graph_authentication_token # noqa: E501 Get a token used to authenticate in the Erlenmeyer / KG APIs of a BAG. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_authentication_token(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: TokenResponse If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_authentication_token_with_http_info ( proj_key , bag_key , ** kwargs ) \u00b6 create_project_knowledge_graph_authentication_token # noqa: E501 Get a token used to authenticate in the Erlenmeyer / KG APIs of a BAG. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_authentication_token_with_http_info(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(TokenResponse, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_backup ( proj_key , bag_key , options , ** kwargs ) \u00b6 create_project_knowledge_graph_backup # noqa: E501 Back up a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_backup(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param BackupKnowledgeGraphOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_backup_with_http_info ( proj_key , bag_key , options , ** kwargs ) \u00b6 create_project_knowledge_graph_backup # noqa: E501 Back up a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_backup_with_http_info(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param BackupKnowledgeGraphOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_delete_token ( proj_key , bag_key , ** kwargs ) \u00b6 create_project_knowledge_graph_delete_token # noqa: E501 Get a token used to confirm the deletion of a BAG. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_delete_token(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: TokenResponse If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_delete_token_with_http_info ( proj_key , bag_key , ** kwargs ) \u00b6 create_project_knowledge_graph_delete_token # noqa: E501 Get a token used to confirm the deletion of a BAG. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_delete_token_with_http_info(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(TokenResponse, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_snapshot ( proj_key , bag_key , body , ** kwargs ) \u00b6 create_project_knowledge_graph_snapshot # noqa: E501 Create a snapshot of a Knowledge Graph, with its current state. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_snapshot(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param KnowledgeGraphSnapshotOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectTask If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_snapshot_from_data_flow_assembly ( proj_key , bag_key , body , ** kwargs ) \u00b6 create_project_knowledge_graph_snapshot_from_data_flow_assembly # noqa: E501 Create a snapshot of a Knowledge Graph from the last data flow assembly task. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_snapshot_from_data_flow_assembly(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param InlineObject2 body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectTask If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_snapshot_from_data_flow_assembly_with_http_info ( proj_key , bag_key , body , ** kwargs ) \u00b6 create_project_knowledge_graph_snapshot_from_data_flow_assembly # noqa: E501 Create a snapshot of a Knowledge Graph from the last data flow assembly task. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_snapshot_from_data_flow_assembly_with_http_info(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param InlineObject2 body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_snapshot_with_http_info ( proj_key , bag_key , body , ** kwargs ) \u00b6 create_project_knowledge_graph_snapshot # noqa: E501 Create a snapshot of a Knowledge Graph, with its current state. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_snapshot_with_http_info(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param KnowledgeGraphSnapshotOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_with_http_info ( proj_key , data , ** kwargs ) \u00b6 create_project_knowledge_graph # noqa: E501 Create new BAG # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_with_http_info(proj_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateKnowledgeGraphOptions1 data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Bag, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. delete_project_knowledge_graph ( proj_key , bag_key , confirmation_token , ** kwargs ) \u00b6 delete_project_knowledge_graph # noqa: E501 Delete a BAG # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_knowledge_graph(proj_key, bag_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param str confirmation_token: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_knowledge_graph_snapshot ( proj_key , bag_key , execution_id , ** kwargs ) \u00b6 delete_project_knowledge_graph_snapshot # noqa: E501 Delete a snapshot resulting from an assembled data flow. The execution log itself is not deleted. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_knowledge_graph_snapshot(proj_key, bag_key, execution_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param str execution_id: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_knowledge_graph_snapshot_with_http_info ( proj_key , bag_key , execution_id , ** kwargs ) \u00b6 delete_project_knowledge_graph_snapshot # noqa: E501 Delete a snapshot resulting from an assembled data flow. The execution log itself is not deleted. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_knowledge_graph_snapshot_with_http_info(proj_key, bag_key, execution_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param str execution_id: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_knowledge_graph_with_http_info ( proj_key , bag_key , confirmation_token , ** kwargs ) \u00b6 delete_project_knowledge_graph # noqa: E501 Delete a BAG # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_knowledge_graph_with_http_info(proj_key, bag_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param str confirmation_token: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. get_project_knowledge_graph_authentication_callback ( proj_key , bag_key , bag_token , ** kwargs ) \u00b6 get_project_knowledge_graph_authentication_callback # noqa: E501 Final step of redirection for authentication on a BAG. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_knowledge_graph_authentication_callback(proj_key, bag_key, bag_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param str bag_token: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: KnowledgeGraphAuthenticationCallback If the method is called asynchronously, returns the request thread. get_project_knowledge_graph_authentication_callback_with_http_info ( proj_key , bag_key , bag_token , ** kwargs ) \u00b6 get_project_knowledge_graph_authentication_callback # noqa: E501 Final step of redirection for authentication on a BAG. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_knowledge_graph_authentication_callback_with_http_info(proj_key, bag_key, bag_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param str bag_token: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(KnowledgeGraphAuthenticationCallback, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_knowledge_graph_status ( proj_key , bag_key , ** kwargs ) \u00b6 get_project_knowledge_graph_status # noqa: E501 Get the status of a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_knowledge_graph_status(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param bool details: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: BagStatus If the method is called asynchronously, returns the request thread. get_project_knowledge_graph_status_with_http_info ( proj_key , bag_key , ** kwargs ) \u00b6 get_project_knowledge_graph_status # noqa: E501 Get the status of a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_knowledge_graph_status_with_http_info(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param bool details: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(BagStatus, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_knowledge_graph_usage_stats ( proj_key , bag_key , ** kwargs ) \u00b6 get_project_knowledge_graph_usage_stats # noqa: E501 Get the usage stats of a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_knowledge_graph_usage_stats(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: UsageStats If the method is called asynchronously, returns the request thread. get_project_knowledge_graph_usage_stats_with_http_info ( proj_key , bag_key , ** kwargs ) \u00b6 get_project_knowledge_graph_usage_stats # noqa: E501 Get the usage stats of a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_knowledge_graph_usage_stats_with_http_info(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(UsageStats, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_knowledge_graph_assemble_tasks ( proj_key , bag_key , ** kwargs ) \u00b6 list_project_knowledge_graph_assemble_tasks # noqa: E501 List assemble tasks for a Knowledge Graph. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_knowledge_graph_assemble_tasks(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param int limit: :param int skip: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataFlowAssembleIntoKnowledgeGraphTask] If the method is called asynchronously, returns the request thread. list_project_knowledge_graph_assemble_tasks_with_http_info ( proj_key , bag_key , ** kwargs ) \u00b6 list_project_knowledge_graph_assemble_tasks # noqa: E501 List assemble tasks for a Knowledge Graph. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_knowledge_graph_assemble_tasks_with_http_info(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param int limit: :param int skip: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataFlowAssembleIntoKnowledgeGraphTask], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_knowledge_graph_load_tasks ( proj_key , bag_key , ** kwargs ) \u00b6 list_project_knowledge_graph_load_tasks # noqa: E501 List load tasks for a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_knowledge_graph_load_tasks(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param int limit: :param int skip: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataFlowLoadIntoKnowledgeGraphTask] If the method is called asynchronously, returns the request thread. list_project_knowledge_graph_load_tasks_with_http_info ( proj_key , bag_key , ** kwargs ) \u00b6 list_project_knowledge_graph_load_tasks # noqa: E501 List load tasks for a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_knowledge_graph_load_tasks_with_http_info(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param int limit: :param int skip: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataFlowLoadIntoKnowledgeGraphTask], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_knowledge_graph_snapshots ( proj_key , bag_key , ** kwargs ) \u00b6 list_project_knowledge_graph_snapshots # noqa: E501 List snapshots for a knowledge graph from assembled data flows. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_knowledge_graph_snapshots(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[KgSnapshot] If the method is called asynchronously, returns the request thread. list_project_knowledge_graph_snapshots_with_http_info ( proj_key , bag_key , ** kwargs ) \u00b6 list_project_knowledge_graph_snapshots # noqa: E501 List snapshots for a knowledge graph from assembled data flows. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_knowledge_graph_snapshots_with_http_info(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[KgSnapshot], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_knowledge_graphs ( proj_key , ** kwargs ) \u00b6 list_project_knowledge_graphs # noqa: E501 List all bags in the project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_knowledge_graphs(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str term: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[Bag] If the method is called asynchronously, returns the request thread. list_project_knowledge_graphs_with_http_info ( proj_key , ** kwargs ) \u00b6 list_project_knowledge_graphs # noqa: E501 List all bags in the project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_knowledge_graphs_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str term: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[Bag], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_public_knowledge_graphs ( ** kwargs ) \u00b6 list_public_knowledge_graphs # noqa: E501 List all public BAGs # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_knowledge_graphs(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str term: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[Bag] If the method is called asynchronously, returns the request thread. list_public_knowledge_graphs_with_http_info ( ** kwargs ) \u00b6 list_public_knowledge_graphs # noqa: E501 List all public BAGs # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_knowledge_graphs_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str term: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[Bag], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. load_project_knowledge_graph_data_flow ( proj_key , bag_key , options , ** kwargs ) \u00b6 load_project_knowledge_graph_data_flow # noqa: E501 Load a data flow onto a Knowledge Graph. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_project_knowledge_graph_data_flow(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param LoadDataFlowIntoKnowledgeGraphOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectTask If the method is called asynchronously, returns the request thread. load_project_knowledge_graph_data_flow_with_http_info ( proj_key , bag_key , options , ** kwargs ) \u00b6 load_project_knowledge_graph_data_flow # noqa: E501 Load a data flow onto a Knowledge Graph. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_project_knowledge_graph_data_flow_with_http_info(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param LoadDataFlowIntoKnowledgeGraphOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. load_project_knowledge_graph_snapshot ( proj_key , bag_key , execution_id , ** kwargs ) \u00b6 load_project_knowledge_graph_snapshot # noqa: E501 Load a snapshot resulting from an assembled data flow # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_project_knowledge_graph_snapshot(proj_key, bag_key, execution_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param str execution_id: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. load_project_knowledge_graph_snapshot_with_http_info ( proj_key , bag_key , execution_id , ** kwargs ) \u00b6 load_project_knowledge_graph_snapshot # noqa: E501 Load a snapshot resulting from an assembled data flow # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_project_knowledge_graph_snapshot_with_http_info(proj_key, bag_key, execution_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param str execution_id: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. recreate_project_knowledge_graph_deployment ( proj_key , bag_key , body , ** kwargs ) \u00b6 recreate_project_knowledge_graph_deployment # noqa: E501 (Re)create the deployment for a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.recreate_project_knowledge_graph_deployment(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param KnowledgeGraphDeploymentRecreationOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. recreate_project_knowledge_graph_deployment_with_http_info ( proj_key , bag_key , body , ** kwargs ) \u00b6 recreate_project_knowledge_graph_deployment # noqa: E501 (Re)create the deployment for a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.recreate_project_knowledge_graph_deployment_with_http_info(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param KnowledgeGraphDeploymentRecreationOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. restore_project_knowledge_graph_backup ( proj_key , bag_key , options , ** kwargs ) \u00b6 restore_project_knowledge_graph_backup # noqa: E501 Restore a back up of a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.restore_project_knowledge_graph_backup(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param RestoreKnowledgeGraphBackupOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. restore_project_knowledge_graph_backup_with_http_info ( proj_key , bag_key , options , ** kwargs ) \u00b6 restore_project_knowledge_graph_backup # noqa: E501 Restore a back up of a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.restore_project_knowledge_graph_backup_with_http_info(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param RestoreKnowledgeGraphBackupOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. resume_project_knowledge_graph ( proj_key , bag_key , body , ** kwargs ) \u00b6 resume_project_knowledge_graph # noqa: E501 Resume a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.resume_project_knowledge_graph(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param ResumeKnowledgeGraphOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectTask If the method is called asynchronously, returns the request thread. resume_project_knowledge_graph_with_http_info ( proj_key , bag_key , body , ** kwargs ) \u00b6 resume_project_knowledge_graph # noqa: E501 Resume a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.resume_project_knowledge_graph_with_http_info(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param ResumeKnowledgeGraphOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. suspend_project_knowledge_graph ( proj_key , bag_key , options , ** kwargs ) \u00b6 suspend_project_knowledge_graph # noqa: E501 Suspend a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.suspend_project_knowledge_graph(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param SuspendKnowledgeGraphOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectTask If the method is called asynchronously, returns the request thread. suspend_project_knowledge_graph_with_http_info ( proj_key , bag_key , options , ** kwargs ) \u00b6 suspend_project_knowledge_graph # noqa: E501 Suspend a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.suspend_project_knowledge_graph_with_http_info(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param SuspendKnowledgeGraphOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. update_project_knowledge_graph_metadata ( proj_key , bag_key , data , ** kwargs ) \u00b6 update_project_knowledge_graph_metadata # noqa: E501 Update the metadata of a Knowledge graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_knowledge_graph_metadata(proj_key, bag_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param PatchKnowledgeGraphOptions1 data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Bag If the method is called asynchronously, returns the request thread. update_project_knowledge_graph_metadata_with_http_info ( proj_key , bag_key , data , ** kwargs ) \u00b6 update_project_knowledge_graph_metadata # noqa: E501 Update the metadata of a Knowledge graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_knowledge_graph_metadata_with_http_info(proj_key, bag_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param PatchKnowledgeGraphOptions1 data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Bag, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. upgrade_project_knowledge_graph_deployment ( proj_key , bag_key , body , ** kwargs ) \u00b6 upgrade_project_knowledge_graph_deployment # noqa: E501 Upgrade the deployment chart of a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upgrade_project_knowledge_graph_deployment(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param KnowledgeGraphChartUpgradeOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. upgrade_project_knowledge_graph_deployment_with_http_info ( proj_key , bag_key , body , ** kwargs ) \u00b6 upgrade_project_knowledge_graph_deployment # noqa: E501 Upgrade the deployment chart of a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upgrade_project_knowledge_graph_deployment_with_http_info(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param KnowledgeGraphChartUpgradeOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. model_configurations_api \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ModelConfigurationsApi \u00b6 Bases: object Do not edit the class manually. create_project_model_config ( proj_key , body , ** kwargs ) \u00b6 create_project_model_config # noqa: E501 Create a Model Configuration # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_model_config(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateProjectModelConfigOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ModelConfiguration If the method is called asynchronously, returns the request thread. create_project_model_config_with_http_info ( proj_key , body , ** kwargs ) \u00b6 create_project_model_config # noqa: E501 Create a Model Configuration # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_model_config_with_http_info(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateProjectModelConfigOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ModelConfiguration, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. delete_project_model_config ( proj_key , model_config_key , ** kwargs ) \u00b6 delete_project_model_config # noqa: E501 Delete a single Model Configuration # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_model_config(proj_key, model_config_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str model_config_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_model_config_with_http_info ( proj_key , model_config_key , ** kwargs ) \u00b6 delete_project_model_config # noqa: E501 Delete a single Model Configuration # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_model_config_with_http_info(proj_key, model_config_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str model_config_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. get_project_models_with_supported_annotations ( proj_key , ** kwargs ) \u00b6 get_project_models_with_supported_annotations # noqa: E501 List models with the supported annotations for a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_models_with_supported_annotations(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[ModelConfiguration] If the method is called asynchronously, returns the request thread. get_project_models_with_supported_annotations_with_http_info ( proj_key , ** kwargs ) \u00b6 get_project_models_with_supported_annotations # noqa: E501 List models with the supported annotations for a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_models_with_supported_annotations_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[ModelConfiguration], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_model_configs ( proj_key , ** kwargs ) \u00b6 list_project_model_configs # noqa: E501 List Model Configurations for a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_model_configs(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[ModelConfiguration] If the method is called asynchronously, returns the request thread. list_project_model_configs_with_http_info ( proj_key , ** kwargs ) \u00b6 list_project_model_configs # noqa: E501 List Model Configurations for a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_model_configs_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[ModelConfiguration], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_public_model_configs ( ** kwargs ) \u00b6 list_public_model_configs # noqa: E501 List public Model Configurations # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_model_configs(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[ModelConfiguration] If the method is called asynchronously, returns the request thread. list_public_model_configs_with_http_info ( ** kwargs ) \u00b6 list_public_model_configs # noqa: E501 List public Model Configurations # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_model_configs_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[ModelConfiguration], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. read_project_model_config ( proj_key , model_config_key , ** kwargs ) \u00b6 read_project_model_config # noqa: E501 Get a single Model Configuration # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.read_project_model_config(proj_key, model_config_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str model_config_key: (required) :param bool include_collections: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ModelConfiguration If the method is called asynchronously, returns the request thread. read_project_model_config_with_http_info ( proj_key , model_config_key , ** kwargs ) \u00b6 read_project_model_config # noqa: E501 Get a single Model Configuration # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.read_project_model_config_with_http_info(proj_key, model_config_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str model_config_key: (required) :param bool include_collections: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ModelConfiguration, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. read_public_model_config ( model_config_key , ** kwargs ) \u00b6 read_public_model_config # noqa: E501 Get a single Model Configuration that was made public # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.read_public_model_config(model_config_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str model_config_key: (required) :param bool include_collections: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ModelConfiguration If the method is called asynchronously, returns the request thread. read_public_model_config_with_http_info ( model_config_key , ** kwargs ) \u00b6 read_public_model_config # noqa: E501 Get a single Model Configuration that was made public # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.read_public_model_config_with_http_info(model_config_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str model_config_key: (required) :param bool include_collections: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ModelConfiguration, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. update_project_model_config ( proj_key , model_config_key , body , ** kwargs ) \u00b6 update_project_model_config # noqa: E501 Update a single Model Configuration # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_model_config(proj_key, model_config_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str model_config_key: (required) :param UpdateProjectModelConfigOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_project_model_config_with_http_info ( proj_key , model_config_key , body , ** kwargs ) \u00b6 update_project_model_config # noqa: E501 Update a single Model Configuration # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_model_config_with_http_info(proj_key, model_config_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str model_config_key: (required) :param UpdateProjectModelConfigOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. processing_model_api \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProcessingModelApi \u00b6 Bases: object Do not edit the class manually. create_data_flow_from_df_wizard ( body , ** kwargs ) \u00b6 create_data_flow_from_df_wizard # noqa: E501 Create a Data Flow from a list of CCS Collections and CPS Models. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_data_flow_from_df_wizard(body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param InlineObject1 body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProcessingModel If the method is called asynchronously, returns the request thread. create_data_flow_from_df_wizard_with_http_info ( body , ** kwargs ) \u00b6 create_data_flow_from_df_wizard # noqa: E501 Create a Data Flow from a list of CCS Collections and CPS Models. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_data_flow_from_df_wizard_with_http_info(body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param InlineObject1 body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProcessingModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_processing_models ( ** kwargs ) \u00b6 get_processing_models # noqa: E501 List the available processing models. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_processing_models(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: InlineResponse2001 If the method is called asynchronously, returns the request thread. get_processing_models_with_http_info ( ** kwargs ) \u00b6 get_processing_models # noqa: E501 List the available processing models. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_processing_models_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(InlineResponse2001, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. project_api \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectApi \u00b6 Bases: object Do not edit the class manually. get_project_default_values ( proj_key , ** kwargs ) \u00b6 get_project_default_values # noqa: E501 List project's default values # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_default_values(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectDefaultValues If the method is called asynchronously, returns the request thread. get_project_default_values_with_http_info ( proj_key , ** kwargs ) \u00b6 get_project_default_values # noqa: E501 List project's default values # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_default_values_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectDefaultValues, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. provision_project_packages ( proj_key , ** kwargs ) \u00b6 provision_project_packages # noqa: E501 Install packages on a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.provision_project_packages(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param ProjectPackageInstalationManifest body: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. provision_project_packages_with_http_info ( proj_key , ** kwargs ) \u00b6 provision_project_packages # noqa: E501 Install packages on a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.provision_project_packages_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param ProjectPackageInstalationManifest body: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. update_project_default_values ( proj_key , default_values , ** kwargs ) \u00b6 update_project_default_values # noqa: E501 List project's default values # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_default_values(proj_key, default_values, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param ProjectDefaultValues default_values: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_project_default_values_with_http_info ( proj_key , default_values , ** kwargs ) \u00b6 update_project_default_values # noqa: E501 List project's default values # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_default_values_with_http_info(proj_key, default_values, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param ProjectDefaultValues default_values: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. system_api \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemApi \u00b6 Bases: object Do not edit the class manually. delete_flavour ( flavour_name , ** kwargs ) \u00b6 delete_flavour # noqa: E501 Delete flavour from db # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_flavour(flavour_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str flavour_name: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_flavour_with_http_info ( flavour_name , ** kwargs ) \u00b6 delete_flavour # noqa: E501 Delete flavour from db # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_flavour_with_http_info(flavour_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str flavour_name: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. get_flavour ( flavour_name , ** kwargs ) \u00b6 get_flavour # noqa: E501 Get flavour from db # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_flavour(flavour_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str flavour_name: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: BagFlavourFullData If the method is called asynchronously, returns the request thread. get_flavour_with_http_info ( flavour_name , ** kwargs ) \u00b6 get_flavour # noqa: E501 Get flavour from db # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_flavour_with_http_info(flavour_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str flavour_name: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(BagFlavourFullData, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_flavours_default_quotas ( ** kwargs ) \u00b6 get_flavours_default_quotas # noqa: E501 Get flavours default values # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_flavours_default_quotas(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[BagFlavourDefaultQuota] If the method is called asynchronously, returns the request thread. get_flavours_default_quotas_with_http_info ( ** kwargs ) \u00b6 get_flavours_default_quotas # noqa: E501 Get flavours default values # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_flavours_default_quotas_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[BagFlavourDefaultQuota], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_flavour_total_kgs ( proj_key , flavour_name , ** kwargs ) \u00b6 get_project_flavour_total_kgs # noqa: E501 Gets kg total number by proj_key and flavour_key # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_flavour_total_kgs(proj_key, flavour_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str flavour_name: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectFlavourTotalKgs If the method is called asynchronously, returns the request thread. get_project_flavour_total_kgs_with_http_info ( proj_key , flavour_name , ** kwargs ) \u00b6 get_project_flavour_total_kgs # noqa: E501 Gets kg total number by proj_key and flavour_key # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_flavour_total_kgs_with_http_info(proj_key, flavour_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str flavour_name: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectFlavourTotalKgs, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_flavours_quota ( proj_key , ** kwargs ) \u00b6 get_project_flavours_quota # noqa: E501 Get project flavours quota # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_flavours_quota(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[FlavoursQuota] If the method is called asynchronously, returns the request thread. get_project_flavours_quota_with_http_info ( proj_key , ** kwargs ) \u00b6 get_project_flavours_quota # noqa: E501 Get project flavours quota # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_flavours_quota_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[FlavoursQuota], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_projects_flavours_quota ( ** kwargs ) \u00b6 get_projects_flavours_quota # noqa: E501 Get projects flavours quotas # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_projects_flavours_quota(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[ProjectsFlavoursQuota] If the method is called asynchronously, returns the request thread. get_projects_flavours_quota_with_http_info ( ** kwargs ) \u00b6 get_projects_flavours_quota # noqa: E501 Get projects flavours quotas # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_projects_flavours_quota_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[ProjectsFlavoursQuota], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_system_information ( ** kwargs ) \u00b6 get_system_information # noqa: E501 Get system info # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_system_information(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: SystemInfo If the method is called asynchronously, returns the request thread. get_system_information_with_http_info ( ** kwargs ) \u00b6 get_system_information # noqa: E501 Get system info # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_system_information_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(SystemInfo, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_system_modules_configuration ( ** kwargs ) \u00b6 get_system_modules_configuration # noqa: E501 Get modules configuration # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_system_modules_configuration(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: SystemModulesConfiguration If the method is called asynchronously, returns the request thread. get_system_modules_configuration_with_http_info ( ** kwargs ) \u00b6 get_system_modules_configuration # noqa: E501 Get modules configuration # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_system_modules_configuration_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(SystemModulesConfiguration, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_system_modules_tasks ( ** kwargs ) \u00b6 get_system_modules_tasks # noqa: E501 Get modules tasks # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_system_modules_tasks(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: SystemModulesTasks If the method is called asynchronously, returns the request thread. get_system_modules_tasks_with_http_info ( ** kwargs ) \u00b6 get_system_modules_tasks # noqa: E501 Get modules tasks # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_system_modules_tasks_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(SystemModulesTasks, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_version_report ( ** kwargs ) \u00b6 get_version_report # noqa: E501 Get deployment version report # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_version_report(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. get_version_report_with_http_info ( ** kwargs ) \u00b6 get_version_report # noqa: E501 Get deployment version report # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_version_report_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. list_all_flavours ( ** kwargs ) \u00b6 list_all_flavours # noqa: E501 Get all KG flavours storage on db # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_all_flavours(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[BagFlavourFullData] If the method is called asynchronously, returns the request thread. list_all_flavours_with_http_info ( ** kwargs ) \u00b6 list_all_flavours # noqa: E501 Get all KG flavours storage on db # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_all_flavours_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[BagFlavourFullData], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_flavours_by_project ( proj_key , ** kwargs ) \u00b6 list_flavours_by_project # noqa: E501 Get project assignment flavours # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_flavours_by_project(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectFlavours If the method is called asynchronously, returns the request thread. list_flavours_by_project_with_http_info ( proj_key , ** kwargs ) \u00b6 list_flavours_by_project # noqa: E501 Get project assignment flavours # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_flavours_by_project_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectFlavours, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_packages ( ** kwargs ) \u00b6 list_packages # noqa: E501 Get packages available in this CPS installation for installing in a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_packages(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[CpsPackage] If the method is called asynchronously, returns the request thread. list_packages_with_http_info ( ** kwargs ) \u00b6 list_packages # noqa: E501 Get packages available in this CPS installation for installing in a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_packages_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[CpsPackage], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_projects_flavours ( ** kwargs ) \u00b6 list_projects_flavours # noqa: E501 Get all projects and their flavours # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_projects_flavours(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[ProjectsFlavours] If the method is called asynchronously, returns the request thread. list_projects_flavours_with_http_info ( ** kwargs ) \u00b6 list_projects_flavours # noqa: E501 Get all projects and their flavours # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_projects_flavours_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[ProjectsFlavours], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_system_knowledge_graphs ( ** kwargs ) \u00b6 list_system_knowledge_graphs # noqa: E501 List all Knowledge Graphs in the system # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_system_knowledge_graphs(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: :param str term: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[KnowledgeGraphSystemInformation] If the method is called asynchronously, returns the request thread. list_system_knowledge_graphs_with_http_info ( ** kwargs ) \u00b6 list_system_knowledge_graphs # noqa: E501 List all Knowledge Graphs in the system # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_system_knowledge_graphs_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: :param str term: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[KnowledgeGraphSystemInformation], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. save_flavour ( new_flavour , body , ** kwargs ) \u00b6 save_flavour # noqa: E501 Save flavour on db # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_flavour(new_flavour, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param bool new_flavour: (required) :param BagFlavourFullData body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_flavour_with_http_info ( new_flavour , body , ** kwargs ) \u00b6 save_flavour # noqa: E501 Save flavour on db # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_flavour_with_http_info(new_flavour, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param bool new_flavour: (required) :param BagFlavourFullData body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_flavours_default_quotas ( flavours , ** kwargs ) \u00b6 save_flavours_default_quotas # noqa: E501 Save flavours default quota # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_flavours_default_quotas(flavours, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[BagFlavourDefaultQuota] flavours: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[BagFlavourDefaultQuota] If the method is called asynchronously, returns the request thread. save_flavours_default_quotas_with_http_info ( flavours , ** kwargs ) \u00b6 save_flavours_default_quotas # noqa: E501 Save flavours default quota # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_flavours_default_quotas_with_http_info(flavours, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[BagFlavourDefaultQuota] flavours: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[BagFlavourDefaultQuota], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. save_project_flavours ( body , ** kwargs ) \u00b6 save_project_flavours # noqa: E501 Save project flavours assignment on db # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_project_flavours(body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param ProjectsFlavours body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_project_flavours_quota ( projects_flavours_quotas , ** kwargs ) \u00b6 save_project_flavours_quota # noqa: E501 Save project flavours quota # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_project_flavours_quota(projects_flavours_quotas, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param ProjectsFlavoursQuota projects_flavours_quotas: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_project_flavours_quota_with_http_info ( projects_flavours_quotas , ** kwargs ) \u00b6 save_project_flavours_quota # noqa: E501 Save project flavours quota # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_project_flavours_quota_with_http_info(projects_flavours_quotas, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param ProjectsFlavoursQuota projects_flavours_quotas: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_project_flavours_with_http_info ( body , ** kwargs ) \u00b6 save_project_flavours # noqa: E501 Save project flavours assignment on db # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_project_flavours_with_http_info(body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param ProjectsFlavours body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. system_get_all_dcs_admin ( ** kwargs ) \u00b6 system_get_all_dcs_admin # noqa: E501 Get all data catalogs (only dc_key) for admin use # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.system_get_all_dcs_admin(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[str] If the method is called asynchronously, returns the request thread. system_get_all_dcs_admin_with_http_info ( ** kwargs ) \u00b6 system_get_all_dcs_admin # noqa: E501 Get all data catalogs (only dc_key) for admin use # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.system_get_all_dcs_admin_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[str], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. system_get_all_kgs_admin ( ** kwargs ) \u00b6 system_get_all_kgs_admin # noqa: E501 Get all kgs (only bag_key) for admin use # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.system_get_all_kgs_admin(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[str] If the method is called asynchronously, returns the request thread. system_get_all_kgs_admin_with_http_info ( ** kwargs ) \u00b6 system_get_all_kgs_admin # noqa: E501 Get all kgs (only bag_key) for admin use # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.system_get_all_kgs_admin_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[str], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. system_get_cps_summary ( ** kwargs ) \u00b6 system_get_cps_summary # noqa: E501 Get cps summary data. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.system_get_cps_summary(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[InlineResponse2003] If the method is called asynchronously, returns the request thread. system_get_cps_summary_with_http_info ( ** kwargs ) \u00b6 system_get_cps_summary # noqa: E501 Get cps summary data. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.system_get_cps_summary_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[InlineResponse2003], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. system_get_dc_storage_summary_async ( dc_key , ** kwargs ) \u00b6 system_get_dc_storage_summary_async # noqa: E501 Get dc storage summary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.system_get_dc_storage_summary_async(dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dc_key: Data catalog key (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: StorageSummaryTask If the method is called asynchronously, returns the request thread. system_get_dc_storage_summary_async_with_http_info ( dc_key , ** kwargs ) \u00b6 system_get_dc_storage_summary_async # noqa: E501 Get dc storage summary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.system_get_dc_storage_summary_async_with_http_info(dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dc_key: Data catalog key (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(StorageSummaryTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. system_get_kg_storage_summary_async ( kg_key , ** kwargs ) \u00b6 system_get_kg_storage_summary_async # noqa: E501 Get kg storage summary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.system_get_kg_storage_summary_async(kg_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str kg_key: Knowledge graph key (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: StorageSummaryTask If the method is called asynchronously, returns the request thread. system_get_kg_storage_summary_async_with_http_info ( kg_key , ** kwargs ) \u00b6 system_get_kg_storage_summary_async # noqa: E501 Get kg storage summary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.system_get_kg_storage_summary_async_with_http_info(kg_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str kg_key: Knowledge graph key (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(StorageSummaryTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. tasks_api \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TasksApi \u00b6 Bases: object Do not edit the class manually. abort_project_task ( proj_key , task_id , ** kwargs ) \u00b6 abort_project_task # noqa: E501 Abort a task. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.abort_project_task(proj_key, task_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. abort_project_task_with_http_info ( proj_key , task_id , ** kwargs ) \u00b6 abort_project_task # noqa: E501 Abort a task. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.abort_project_task_with_http_info(proj_key, task_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. get_project_celery_task ( proj_key , task_id , ** kwargs ) \u00b6 get_project_celery_task # noqa: E501 Get a celery task for a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_celery_task(proj_key, task_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: CeleryTaskPromise If the method is called asynchronously, returns the request thread. get_project_celery_task_with_http_info ( proj_key , task_id , ** kwargs ) \u00b6 get_project_celery_task # noqa: E501 Get a celery task for a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_celery_task_with_http_info(proj_key, task_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(CeleryTaskPromise, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_task ( proj_key , task_id , ** kwargs ) \u00b6 get_project_task # noqa: E501 Get a task for a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_task(proj_key, task_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectTask If the method is called asynchronously, returns the request thread. get_project_task_with_http_info ( proj_key , task_id , ** kwargs ) \u00b6 get_project_task # noqa: E501 Get a task for a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_task_with_http_info(proj_key, task_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_failure_celery_tasks ( proj_key , task_id , ** kwargs ) \u00b6 list_failure_celery_tasks # noqa: E501 Get celery tasks that failed. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_failure_celery_tasks(proj_key, task_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[CeleryTask] If the method is called asynchronously, returns the request thread. list_failure_celery_tasks_with_http_info ( proj_key , task_id , ** kwargs ) \u00b6 list_failure_celery_tasks # noqa: E501 Get celery tasks that failed. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_failure_celery_tasks_with_http_info(proj_key, task_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[CeleryTask], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_tasks ( proj_key , ** kwargs ) \u00b6 list_project_tasks # noqa: E501 List tasks for a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_tasks(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_type: :param int limit: :param int skip: :param str sort_by: :param str sort_order: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[ProjectTask] If the method is called asynchronously, returns the request thread. list_project_tasks_with_http_info ( proj_key , ** kwargs ) \u00b6 list_project_tasks # noqa: E501 List tasks for a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_tasks_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_type: :param int limit: :param int skip: :param str sort_by: :param str sort_order: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[ProjectTask], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_system_celery_tasks ( ** kwargs ) \u00b6 list_system_celery_tasks # noqa: E501 Get the status of Celery tasks. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_system_celery_tasks(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: :param str project_task_id: :param float started_since: If set, return the tasks created at or after this timestamp. Otherwise, return the tasks created up to 60 minutes of the system's date, if project_task_id is not set. :param float task_status: :param int limit: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[CeleryTask1] If the method is called asynchronously, returns the request thread. list_system_celery_tasks_with_http_info ( ** kwargs ) \u00b6 list_system_celery_tasks # noqa: E501 Get the status of Celery tasks. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_system_celery_tasks_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: :param str project_task_id: :param float started_since: If set, return the tasks created at or after this timestamp. Otherwise, return the tasks created up to 60 minutes of the system's date, if project_task_id is not set. :param float task_status: :param int limit: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[CeleryTask1], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. uploads_api \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech UploadsApi \u00b6 Bases: object Do not edit the class manually. create_project_scratch_file ( proj_key , filename , ** kwargs ) \u00b6 create_project_scratch_file # noqa: E501 Create file pointers for temporary storage # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_scratch_file(proj_key, filename, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str filename: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: TemporaryUploadFileResult If the method is called asynchronously, returns the request thread. create_project_scratch_file_with_http_info ( proj_key , filename , ** kwargs ) \u00b6 create_project_scratch_file # noqa: E501 Create file pointers for temporary storage # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_scratch_file_with_http_info(proj_key, filename, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str filename: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(TemporaryUploadFileResult, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_scratch_files ( proj_key , ** kwargs ) \u00b6 list_project_scratch_files # noqa: E501 Get temporary files uploaded to a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_scratch_files(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str scratch_ids: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[UploadedFile] If the method is called asynchronously, returns the request thread. list_project_scratch_files_with_http_info ( proj_key , ** kwargs ) \u00b6 list_project_scratch_files # noqa: E501 Get temporary files uploaded to a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_scratch_files_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str scratch_ids: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[UploadedFile], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. upload_project_scratch_file ( proj_key , file , ** kwargs ) \u00b6 upload_project_scratch_file # noqa: E501 Upload a file to temporary storage # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_scratch_file(proj_key, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param file file: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: UploadedFileResult If the method is called asynchronously, returns the request thread. upload_project_scratch_file_with_http_info ( proj_key , file , ** kwargs ) \u00b6 upload_project_scratch_file # noqa: E501 Upload a file to temporary storage # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_scratch_file_with_http_info(proj_key, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param file file: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(UploadedFileResult, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. api_client \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ApiClient \u00b6 Bases: object Generic API client for OpenAPI client library builds. OpenAPI generic API client. This client handles the client- server communication, and is invariant across implementations. Specifics of the methods and models for each application are generated from the OpenAPI templates. NOTE: This class is auto generated by OpenAPI Generator. Ref: https://openapi-generator.tech Do not edit the class manually. :param configuration: .Configuration object for this client :param header_name: a header to pass when making calls to the API. :param header_value: a header value to pass when making calls to the API. :param cookie: a cookie to include in the header when making calls to the API :param pool_threads: The number of threads to use for async requests to the API. More threads means more concurrent API requests. __deserialize ( data , klass ) \u00b6 Deserializes dict, list, str into an object. :param data: dict, list or str. :param klass: class literal, or string of class name. :return: object. __deserialize_date ( string ) \u00b6 Deserializes string to date. :param string: str. :return: date. __deserialize_datetime ( string ) \u00b6 Deserializes string to datetime. The string should be in iso8601 datetime format. :param string: str. :return: datetime. __deserialize_file ( response ) \u00b6 Deserializes body to file Saves response body into a file in a temporary folder, using the filename from the Content-Disposition header if provided. :param response: RESTResponse. :return: file path. __deserialize_model ( data , klass ) \u00b6 Deserializes list or dict to model. :param data: dict, list. :param klass: class literal. :return: model object. __deserialize_object ( value ) \u00b6 Return an original value. :return: object. __deserialize_primitive ( data , klass ) \u00b6 Deserializes string to primitive type. :param data: str. :param klass: class literal. :return: int, long, float, str, bool. call_api ( resource_path , method , path_params = None , query_params = None , header_params = None , body = None , post_params = None , files = None , response_type = None , auth_settings = None , async_req = None , _return_http_data_only = None , collection_formats = None , _preload_content = True , _request_timeout = None , _host = None ) \u00b6 Makes the HTTP request (synchronous) and returns deserialized data. To make an async_req request, set the async_req parameter. :param resource_path: Path to method endpoint. :param method: Method to call. :param path_params: Path parameters in the url. :param query_params: Query parameters in the url. :param header_params: Header parameters to be placed in the request header. :param body: Request body. :param post_params dict: Request post form parameters, for application/x-www-form-urlencoded , multipart/form-data . :param auth_settings list: Auth Settings names for the request. :param response: Response data type. :param files dict: key -> filename, value -> filepath, for multipart/form-data . :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param collection_formats: dict of collection formats for path, query, header, and post parameters. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: If async_req parameter is True, the request will be called asynchronously. The method will return the request thread. If parameter async_req is False or missing, then the method will return the response directly. deserialize ( response , response_type ) \u00b6 Deserializes response into an object. :param response: RESTResponse object to be deserialized. :param response_type: class literal for deserialized object, or string of class name. :return: deserialized object. files_parameters ( files = None ) \u00b6 Builds form parameters. :param files: File parameters. :return: Form parameters with files. parameters_to_tuples ( params , collection_formats ) \u00b6 Get parameters as list of tuples, formatting collections. :param params: Parameters as dict or list of two-tuples :param dict collection_formats: Parameter collection formats :return: Parameters as list of tuples, collections formatted pool () property \u00b6 Create thread pool on first request avoids instantiating unused threadpool for blocking clients. request ( method , url , query_params = None , headers = None , post_params = None , body = None , _preload_content = True , _request_timeout = None ) \u00b6 Makes the HTTP request using RESTClient. sanitize_for_serialization ( obj ) \u00b6 Builds a JSON POST object. If obj is None, return None. If obj is str, int, long, float, bool, return directly. If obj is datetime.datetime, datetime.date convert to string in iso8601 format. If obj is list, sanitize each element in the list. If obj is dict, return the dict. If obj is OpenAPI model, return the properties dict. :param obj: The data to serialize. :return: The serialized form of data. select_header_accept ( accepts ) \u00b6 Returns Accept based on an array of accepts provided. :param accepts: List of headers. :return: Accept (e.g. application/json). select_header_content_type ( content_types ) \u00b6 Returns Content-Type based on an array of content_types provided. :param content_types: List of content-types. :return: Content-Type (e.g. application/json). update_params_for_auth ( headers , querys , auth_settings ) \u00b6 Updates header and query params based on authentication setting. :param headers: Header parameters dict to be updated. :param querys: Query parameters tuple list to be updated. :param auth_settings: Authentication setting identifiers list. user_agent () property writable \u00b6 User agent for this API client configuration \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech Configuration \u00b6 Bases: object This class is auto generated by OpenAPI Generator Do not edit the class manually. :param host: Base url :param api_key: Dict to store API key(s). Each entry in the dict specifies an API key. The dict key is the name of the security scheme in the OAS specification. The dict value is the API key secret. :param api_key_prefix: Dict to store API prefix (e.g. Bearer) The dict key is the name of the security scheme in the OAS specification. The dict value is an API key prefix when generating the auth data. :param username: Username for HTTP basic authentication :param password: Password for HTTP basic authentication :param discard_unknown_keys: Boolean value indicating whether to discard unknown properties. A server may send a response that includes additional properties that are not known by the client in the following scenarios: 1. The OpenAPI document is incomplete, i.e. it does not match the server implementation. 2. The client was generated using an older version of the OpenAPI document and the server has been upgraded since then. If a schema in the OpenAPI document defines the additionalProperties attribute, then all undeclared properties received by the server are injected into the additional properties map. In that case, there are undeclared properties, and nothing to discard. :Example: API Key Authentication Example. Given the following security scheme in the OpenAPI specification: components: securitySchemes: cookieAuth: # name for the security scheme type: apiKey in: cookie name: JSESSIONID # cookie name You can programmatically set the cookie: conf = deepsearch.cps.apis.public.Configuration( api_key={'cookieAuth': 'abc123'} api_key_prefix={'cookieAuth': 'JSESSIONID'} ) The following cookie will be added to the HTTP request: Cookie: JSESSIONID abc123 assert_hostname = None instance-attribute \u00b6 Set this to True/False to enable/disable SSL hostname verification. cert_file = None instance-attribute \u00b6 client certificate file connection_pool_maxsize = multiprocessing . cpu_count () * 5 instance-attribute \u00b6 urllib3 connection pool's maximum number of connections saved per pool. urllib3 uses 1 connection as default value, but this is not the best value when you are making a lot of possibly parallel requests to the same host, which is often the case here. cpu_count * 5 is used as default value to increase performance. host = host instance-attribute \u00b6 Default Base url key_file = None instance-attribute \u00b6 client key file logger = {} instance-attribute \u00b6 Logging Settings logger_file_handler = None instance-attribute \u00b6 Log file handler logger_stream_handler = None instance-attribute \u00b6 Log stream handler password = password instance-attribute \u00b6 Password for HTTP basic authentication proxy = None instance-attribute \u00b6 Proxy URL proxy_headers = None instance-attribute \u00b6 Proxy headers refresh_api_key_hook = None instance-attribute \u00b6 function hook to refresh API key if expired retries = None instance-attribute \u00b6 Adding retries to override urllib3 default value 3 safe_chars_for_path_param = '' instance-attribute \u00b6 Safe chars for path_param ssl_ca_cert = None instance-attribute \u00b6 Set this to customize the certificate file to verify the peer. temp_folder_path = None instance-attribute \u00b6 Temp file folder for downloading files username = username instance-attribute \u00b6 Username for HTTP basic authentication verify_ssl = True instance-attribute \u00b6 SSL/TLS verification Set this to false to skip verifying SSL certificate when calling API from https server. __init__ ( host = 'http://localhost/api/cps/public/v1' , api_key = None , api_key_prefix = None , username = None , password = None , discard_unknown_keys = False ) \u00b6 Constructor auth_settings () \u00b6 Gets Auth Settings dict for api client. :return: The Auth Settings information dict. debug () property writable \u00b6 Debug status :param value: The debug status, True or False. :type: bool get_api_key_with_prefix ( identifier ) \u00b6 Gets API key (with prefix if set). :param identifier: The identifier of apiKey. :return: The token for api key authentication. get_basic_auth_token () \u00b6 Gets HTTP basic authentication header (string). :return: The token for basic HTTP authentication. get_default_copy () classmethod \u00b6 Return new instance of configuration. This method returns newly created, based on default constructor, object of Configuration class or returns a copy of default configuration passed by the set_default method. :return: The configuration object. get_host_from_settings ( index , variables = None ) \u00b6 Gets host URL based on the index and variables :param index: array index of the host settings :param variables: hash of variable and the corresponding value :return: URL based on host settings get_host_settings () \u00b6 Gets an array of host settings :return: An array of host settings logger_file () property writable \u00b6 The logger file. If the logger_file is None, then add stream handler and remove file handler. Otherwise, add file handler and remove stream handler. :param value: The logger_file path. :type: str logger_format () property writable \u00b6 The logger format. The logger_formatter will be updated when sets logger_format. :param value: The format string. :type: str set_default ( default ) classmethod \u00b6 Set default instance of configuration. It stores default configuration, which can be returned by get_default_copy method. :param default: object of Configuration to_debug_report () \u00b6 Gets the essential information for debugging. :return: The report for debugging. exceptions \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ApiException \u00b6 Bases: OpenApiException __str__ () \u00b6 Custom error messages for exception ApiKeyError \u00b6 Bases: OpenApiException , KeyError __init__ ( msg , path_to_item = None ) \u00b6 Parameters: Name Type Description Default msg str the exception message required ApiTypeError \u00b6 Bases: OpenApiException , TypeError __init__ ( msg , path_to_item = None , valid_classes = None , key_type = None ) \u00b6 Raises an exception for TypeErrors Parameters: Name Type Description Default msg str the exception message required Other Parameters: Name Type Description path_to_item list a list of keys an indices to get to the current_item None if unset valid_classes tuple the primitive classes that current item should be an instance of None if unset key_type bool False if our value is a value in a dict True if it is a key in a dict False if our item is an item in a list None if unset ApiValueError \u00b6 Bases: OpenApiException , ValueError __init__ ( msg , path_to_item = None ) \u00b6 Parameters: Name Type Description Default msg str the exception message required OpenApiException \u00b6 Bases: Exception The base exception class for all OpenAPIExceptions render_path ( path_to_item ) \u00b6 Returns a string representation of a path models \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech annotate_document_request \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotateDocumentRequest \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( document = None , image_annotators = None , table_annotators = None , text_annotators = None , use_cache = True , local_vars_configuration = None ) \u00b6 AnnotateDocumentRequest - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint document () property writable \u00b6 Gets the document of this AnnotateDocumentRequest. # noqa: E501 :return: The document of this AnnotateDocumentRequest. # noqa: E501 :rtype: object image_annotators () property writable \u00b6 Gets the image_annotators of this AnnotateDocumentRequest. # noqa: E501 :return: The image_annotators of this AnnotateDocumentRequest. # noqa: E501 :rtype: list[AnnotatorParametersOrRef] table_annotators () property writable \u00b6 Gets the table_annotators of this AnnotateDocumentRequest. # noqa: E501 :return: The table_annotators of this AnnotateDocumentRequest. # noqa: E501 :rtype: list[AnnotatorParametersOrRef] text_annotators () property writable \u00b6 Gets the text_annotators of this AnnotateDocumentRequest. # noqa: E501 :return: The text_annotators of this AnnotateDocumentRequest. # noqa: E501 :rtype: list[AnnotatorParametersOrRef] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model use_cache () property writable \u00b6 Gets the use_cache of this AnnotateDocumentRequest. # noqa: E501 :return: The use_cache of this AnnotateDocumentRequest. # noqa: E501 :rtype: bool annotate_object_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotateObjectOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( input = None , parameters = None , local_vars_configuration = None ) \u00b6 AnnotateObjectOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint input () property writable \u00b6 Gets the input of this AnnotateObjectOptions. # noqa: E501 :return: The input of this AnnotateObjectOptions. # noqa: E501 :rtype: AnnotatorInput parameters () property writable \u00b6 Gets the parameters of this AnnotateObjectOptions. # noqa: E501 :return: The parameters of this AnnotateObjectOptions. # noqa: E501 :rtype: dict(str, object) to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model annotate_object_options1 \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotateObjectOptions1 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( input = None , model_config_key = None , parameters = None , proj_key = None , public = None , local_vars_configuration = None ) \u00b6 AnnotateObjectOptions1 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint input () property writable \u00b6 Gets the input of this AnnotateObjectOptions1. # noqa: E501 :return: The input of this AnnotateObjectOptions1. # noqa: E501 :rtype: AnnotatorInput model_config_key () property writable \u00b6 Gets the model_config_key of this AnnotateObjectOptions1. # noqa: E501 :return: The model_config_key of this AnnotateObjectOptions1. # noqa: E501 :rtype: str parameters () property writable \u00b6 Gets the parameters of this AnnotateObjectOptions1. # noqa: E501 :return: The parameters of this AnnotateObjectOptions1. # noqa: E501 :rtype: dict(str, object) proj_key () property writable \u00b6 Gets the proj_key of this AnnotateObjectOptions1. # noqa: E501 :return: The proj_key of this AnnotateObjectOptions1. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this AnnotateObjectOptions1. # noqa: E501 :return: The public of this AnnotateObjectOptions1. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model annotated_document_report \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatedDocumentReport \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( document = None , document_annotation_parameters = None , document_conversion_parameters = None , report = None , local_vars_configuration = None ) \u00b6 AnnotatedDocumentReport - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint document () property writable \u00b6 Gets the document of this AnnotatedDocumentReport. # noqa: E501 :return: The document of this AnnotatedDocumentReport. # noqa: E501 :rtype: ProjectProjKeyAnnotateDocumentReportDocument document_annotation_parameters () property writable \u00b6 Gets the document_annotation_parameters of this AnnotatedDocumentReport. # noqa: E501 :return: The document_annotation_parameters of this AnnotatedDocumentReport. # noqa: E501 :rtype: object document_conversion_parameters () property writable \u00b6 Gets the document_conversion_parameters of this AnnotatedDocumentReport. # noqa: E501 :return: The document_conversion_parameters of this AnnotatedDocumentReport. # noqa: E501 :rtype: object report () property writable \u00b6 Gets the report of this AnnotatedDocumentReport. # noqa: E501 :return: The report of this AnnotatedDocumentReport. # noqa: E501 :rtype: ProjectProjKeyAnnotateDocumentReportReport to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model annotated_image \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatedImage \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( entities = None , properties = None , relationships = None , text = None , local_vars_configuration = None ) \u00b6 AnnotatedImage - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint entities () property writable \u00b6 Gets the entities of this AnnotatedImage. # noqa: E501 :return: The entities of this AnnotatedImage. # noqa: E501 :rtype: dict(str, list[EntityAnnotation]) properties () property writable \u00b6 Gets the properties of this AnnotatedImage. # noqa: E501 :return: The properties of this AnnotatedImage. # noqa: E501 :rtype: object relationships () property writable \u00b6 Gets the relationships of this AnnotatedImage. # noqa: E501 :return: The relationships of this AnnotatedImage. # noqa: E501 :rtype: dict(str, list[object]) text () property writable \u00b6 Gets the text of this AnnotatedImage. # noqa: E501 :return: The text of this AnnotatedImage. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model annotated_object \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatedObject \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( image = None , table = None , text = None , local_vars_configuration = None ) \u00b6 AnnotatedObject - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint image () property writable \u00b6 Gets the image of this AnnotatedObject. # noqa: E501 :return: The image of this AnnotatedObject. # noqa: E501 :rtype: AnnotatedImage table () property writable \u00b6 Gets the table of this AnnotatedObject. # noqa: E501 :return: The table of this AnnotatedObject. # noqa: E501 :rtype: AnnotatedTable text () property writable \u00b6 Gets the text of this AnnotatedObject. # noqa: E501 :return: The text of this AnnotatedObject. # noqa: E501 :rtype: AnnotatedTextLines to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model annotated_object1 \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatedObject1 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( image = None , table = None , text = None , local_vars_configuration = None ) \u00b6 AnnotatedObject1 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint image () property writable \u00b6 Gets the image of this AnnotatedObject1. # noqa: E501 :return: The image of this AnnotatedObject1. # noqa: E501 :rtype: AnnotatedImage table () property writable \u00b6 Gets the table of this AnnotatedObject1. # noqa: E501 :return: The table of this AnnotatedObject1. # noqa: E501 :rtype: AnnotatedTable text () property writable \u00b6 Gets the text of this AnnotatedObject1. # noqa: E501 :return: The text of this AnnotatedObject1. # noqa: E501 :rtype: AnnotatedTextLines to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model annotated_table \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatedTable \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( entities = None , properties = None , relationships = None , text = None , local_vars_configuration = None ) \u00b6 AnnotatedTable - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint entities () property writable \u00b6 Gets the entities of this AnnotatedTable. # noqa: E501 :return: The entities of this AnnotatedTable. # noqa: E501 :rtype: dict(str, list[EntityAnnotation]) properties () property writable \u00b6 Gets the properties of this AnnotatedTable. # noqa: E501 :return: The properties of this AnnotatedTable. # noqa: E501 :rtype: object relationships () property writable \u00b6 Gets the relationships of this AnnotatedTable. # noqa: E501 :return: The relationships of this AnnotatedTable. # noqa: E501 :rtype: dict(str, list[object]) text () property writable \u00b6 Gets the text of this AnnotatedTable. # noqa: E501 :return: The text of this AnnotatedTable. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model annotated_text \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatedText \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( entities = None , properties = None , relationships = None , text = None , local_vars_configuration = None ) \u00b6 AnnotatedText - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint entities () property writable \u00b6 Gets the entities of this AnnotatedText. # noqa: E501 :return: The entities of this AnnotatedText. # noqa: E501 :rtype: dict(str, list[EntityAnnotation]) properties () property writable \u00b6 Gets the properties of this AnnotatedText. # noqa: E501 :return: The properties of this AnnotatedText. # noqa: E501 :rtype: object relationships () property writable \u00b6 Gets the relationships of this AnnotatedText. # noqa: E501 :return: The relationships of this AnnotatedText. # noqa: E501 :rtype: dict(str, list[object]) text () property writable \u00b6 Gets the text of this AnnotatedText. # noqa: E501 :return: The text of this AnnotatedText. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model annotated_text_lines \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatedTextLines \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( entities = None , properties = None , relationships = None , text = None , local_vars_configuration = None ) \u00b6 AnnotatedTextLines - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint entities () property writable \u00b6 Gets the entities of this AnnotatedTextLines. # noqa: E501 One item per line on the original text. # noqa: E501 :return: The entities of this AnnotatedTextLines. # noqa: E501 :rtype: list[dict(str, list[EntityAnnotation])] properties () property writable \u00b6 Gets the properties of this AnnotatedTextLines. # noqa: E501 One item per line on the original text. # noqa: E501 :return: The properties of this AnnotatedTextLines. # noqa: E501 :rtype: list[object] relationships () property writable \u00b6 Gets the relationships of this AnnotatedTextLines. # noqa: E501 One item per line on the original text. # noqa: E501 :return: The relationships of this AnnotatedTextLines. # noqa: E501 :rtype: list[dict(str, list[object])] text () property writable \u00b6 Gets the text of this AnnotatedTextLines. # noqa: E501 Input text after clean up. The annotation indexes will be based on this text and not the input text. # noqa: E501 :return: The text of this AnnotatedTextLines. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model annotator_image_input \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatorImageInput \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( metadata = None , source = None , local_vars_configuration = None ) \u00b6 AnnotatorImageInput - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint metadata () property writable \u00b6 Gets the metadata of this AnnotatorImageInput. # noqa: E501 :return: The metadata of this AnnotatorImageInput. # noqa: E501 :rtype: ImageMetadata source () property writable \u00b6 Gets the source of this AnnotatorImageInput. # noqa: E501 :return: The source of this AnnotatorImageInput. # noqa: E501 :rtype: ImageSource to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model annotator_input \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatorInput \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( image = None , table = None , text = None , local_vars_configuration = None ) \u00b6 AnnotatorInput - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint image () property writable \u00b6 Gets the image of this AnnotatorInput. # noqa: E501 :return: The image of this AnnotatorInput. # noqa: E501 :rtype: AnnotatorImageInput table () property writable \u00b6 Gets the table of this AnnotatorInput. # noqa: E501 A table, specified as an array of arrays. Each outer array represents a row, and each item in the inner array represents the column. # noqa: E501 :return: The table of this AnnotatorInput. # noqa: E501 :rtype: list[list[object]] text () property writable \u00b6 Gets the text of this AnnotatorInput. # noqa: E501 :return: The text of this AnnotatorInput. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model annotator_metadata \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatorMetadata \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( author = None , description = None , name = None , url = None , version = None , local_vars_configuration = None ) \u00b6 AnnotatorMetadata - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint author () property writable \u00b6 Gets the author of this AnnotatorMetadata. # noqa: E501 :return: The author of this AnnotatorMetadata. # noqa: E501 :rtype: str description () property writable \u00b6 Gets the description of this AnnotatorMetadata. # noqa: E501 :return: The description of this AnnotatorMetadata. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this AnnotatorMetadata. # noqa: E501 :return: The name of this AnnotatorMetadata. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this AnnotatorMetadata. # noqa: E501 :return: The url of this AnnotatorMetadata. # noqa: E501 :rtype: str version () property writable \u00b6 Gets the version of this AnnotatorMetadata. # noqa: E501 :return: The version of this AnnotatorMetadata. # noqa: E501 :rtype: str annotator_parameters_or_ref \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatorParametersOrRef \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( model_config_key = None , proj_key = None , public = None , type = None , local_vars_configuration = None ) \u00b6 AnnotatorParametersOrRef - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint model_config_key () property writable \u00b6 Gets the model_config_key of this AnnotatorParametersOrRef. # noqa: E501 :return: The model_config_key of this AnnotatorParametersOrRef. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this AnnotatorParametersOrRef. # noqa: E501 :return: The proj_key of this AnnotatorParametersOrRef. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this AnnotatorParametersOrRef. # noqa: E501 :return: The public of this AnnotatorParametersOrRef. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this AnnotatorParametersOrRef. # noqa: E501 :return: The type of this AnnotatorParametersOrRef. # noqa: E501 :rtype: str annotator_supported_annotations_parameters \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatorSupportedAnnotationsParameters \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( annotator = None , annotator_settings = None , local_vars_configuration = None ) \u00b6 AnnotatorSupportedAnnotationsParameters - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint annotator () property writable \u00b6 Gets the annotator of this AnnotatorSupportedAnnotationsParameters. # noqa: E501 :return: The annotator of this AnnotatorSupportedAnnotationsParameters. # noqa: E501 :rtype: str annotator_settings () property writable \u00b6 Gets the annotator_settings of this AnnotatorSupportedAnnotationsParameters. # noqa: E501 :return: The annotator_settings of this AnnotatorSupportedAnnotationsParameters. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model assemble_data_flow_into_knowledge_graph_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AssembleDataFlowIntoKnowledgeGraphOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_flow = None , render = None , snapshot = None , local_vars_configuration = None ) \u00b6 AssembleDataFlowIntoKnowledgeGraphOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_flow () property writable \u00b6 Gets the data_flow of this AssembleDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :return: The data_flow of this AssembleDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :rtype: BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow render () property writable \u00b6 Gets the render of this AssembleDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :return: The render of this AssembleDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :rtype: BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender snapshot () property writable \u00b6 Gets the snapshot of this AssembleDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :return: The snapshot of this AssembleDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :rtype: TakeSnapshotSettingsBackendAware to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model assemble_data_flow_into_knowledge_graph_options1 \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AssembleDataFlowIntoKnowledgeGraphOptions1 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_flow = None , render = None , snapshot = None , local_vars_configuration = None ) \u00b6 AssembleDataFlowIntoKnowledgeGraphOptions1 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_flow () property writable \u00b6 Gets the data_flow of this AssembleDataFlowIntoKnowledgeGraphOptions1. # noqa: E501 :return: The data_flow of this AssembleDataFlowIntoKnowledgeGraphOptions1. # noqa: E501 :rtype: BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow render () property writable \u00b6 Gets the render of this AssembleDataFlowIntoKnowledgeGraphOptions1. # noqa: E501 :return: The render of this AssembleDataFlowIntoKnowledgeGraphOptions1. # noqa: E501 :rtype: BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender snapshot () property writable \u00b6 Gets the snapshot of this AssembleDataFlowIntoKnowledgeGraphOptions1. # noqa: E501 :return: The snapshot of this AssembleDataFlowIntoKnowledgeGraphOptions1. # noqa: E501 :rtype: TakeSnapshotSettings to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model backend_flavour \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BackendFlavour \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( kg_amqp = None , kg_legacy_api = None , local_vars_configuration = None ) \u00b6 BackendFlavour - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint kg_amqp () property writable \u00b6 Gets the kg_amqp of this BackendFlavour. # noqa: E501 :return: The kg_amqp of this BackendFlavour. # noqa: E501 :rtype: str kg_legacy_api () property writable \u00b6 Gets the kg_legacy_api of this BackendFlavour. # noqa: E501 :return: The kg_legacy_api of this BackendFlavour. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model backend_project_proj_key_bags_bag_key_tasks_assemble_dataflow_data_flow \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( df_tpl_key = None , proj_key = None , public = None , raw_data_flow = None , local_vars_configuration = None ) \u00b6 BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint df_tpl_key () property writable \u00b6 Gets the df_tpl_key of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 If set, the data flow with this key will be used. # noqa: E501 :return: The df_tpl_key of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 If set, allows for cross-project data flows to be used. # noqa: E501 :return: The proj_key of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 Must be set if the data flow template is public # noqa: E501 :return: The public of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :rtype: bool raw_data_flow () property writable \u00b6 Gets the raw_data_flow of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :return: The raw_data_flow of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :rtype: BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model backend_project_proj_key_bags_bag_key_tasks_assemble_dataflow_data_flow_raw_data_flow \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( template = None , variables = None , local_vars_configuration = None ) \u00b6 BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint template () property writable \u00b6 Gets the template of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow. # noqa: E501 Must be valid JSON # noqa: E501 :return: The template of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow. # noqa: E501 :return: The variables of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow. # noqa: E501 :rtype: object backend_project_proj_key_bags_bag_key_tasks_assemble_dataflow_render \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( variables = None , local_vars_configuration = None ) \u00b6 BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender. # noqa: E501 :return: The variables of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender. # noqa: E501 :rtype: dict(str, object) backup_knowledge_graph_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BackupKnowledgeGraphOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( backup_s3 = True , coordinates = None , local_vars_configuration = None ) \u00b6 BackupKnowledgeGraphOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint backup_s3 () property writable \u00b6 Gets the backup_s3 of this BackupKnowledgeGraphOptions. # noqa: E501 :return: The backup_s3 of this BackupKnowledgeGraphOptions. # noqa: E501 :rtype: bool coordinates () property writable \u00b6 Gets the coordinates of this BackupKnowledgeGraphOptions. # noqa: E501 :return: The coordinates of this BackupKnowledgeGraphOptions. # noqa: E501 :rtype: S3CoordinatesWithBackupKey to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model bag \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech Bag \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( svc_endpoint = None , bag_domain = None , bag_key = None , bag_url = None , flavour = None , name = None , proj_key = None , public = None , slug = None , timestamp = None , token = None , local_vars_configuration = None ) \u00b6 Bag - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bag_domain () property writable \u00b6 Gets the bag_domain of this Bag. # noqa: E501 :return: The bag_domain of this Bag. # noqa: E501 :rtype: str bag_key () property writable \u00b6 Gets the bag_key of this Bag. # noqa: E501 :return: The bag_key of this Bag. # noqa: E501 :rtype: str bag_url () property writable \u00b6 Gets the bag_url of this Bag. # noqa: E501 :return: The bag_url of this Bag. # noqa: E501 :rtype: str flavour () property writable \u00b6 Gets the flavour of this Bag. # noqa: E501 :return: The flavour of this Bag. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this Bag. # noqa: E501 :return: The name of this Bag. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this Bag. # noqa: E501 :return: The proj_key of this Bag. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this Bag. # noqa: E501 :return: The public of this Bag. # noqa: E501 :rtype: bool slug () property writable \u00b6 Gets the slug of this Bag. # noqa: E501 :return: The slug of this Bag. # noqa: E501 :rtype: str svc_endpoint () property writable \u00b6 Gets the svc_endpoint of this Bag. # noqa: E501 :return: The svc_endpoint of this Bag. # noqa: E501 :rtype: str timestamp () property writable \u00b6 Gets the timestamp of this Bag. # noqa: E501 :return: The timestamp of this Bag. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model token () property writable \u00b6 Gets the token of this Bag. # noqa: E501 :return: The token of this Bag. # noqa: E501 :rtype: str bag_amqp_backend \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagAmqpBackend \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( flavour = None , local_vars_configuration = None ) \u00b6 BagAmqpBackend - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint flavour () property writable \u00b6 Gets the flavour of this BagAmqpBackend. # noqa: E501 :return: The flavour of this BagAmqpBackend. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model bag_backend_aware \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagBackendAware \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( backend = None , bag_key = None , description = None , last_coords_resolution = None , name = None , proj_key = None , public = None , slug = None , timestamp = None , local_vars_configuration = None ) \u00b6 BagBackendAware - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint backend () property writable \u00b6 Gets the backend of this BagBackendAware. # noqa: E501 :return: The backend of this BagBackendAware. # noqa: E501 :rtype: BagBackends bag_key () property writable \u00b6 Gets the bag_key of this BagBackendAware. # noqa: E501 :return: The bag_key of this BagBackendAware. # noqa: E501 :rtype: str description () property writable \u00b6 Gets the description of this BagBackendAware. # noqa: E501 :return: The description of this BagBackendAware. # noqa: E501 :rtype: str last_coords_resolution () property writable \u00b6 Gets the last_coords_resolution of this BagBackendAware. # noqa: E501 :return: The last_coords_resolution of this BagBackendAware. # noqa: E501 :rtype: float name () property writable \u00b6 Gets the name of this BagBackendAware. # noqa: E501 :return: The name of this BagBackendAware. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this BagBackendAware. # noqa: E501 :return: The proj_key of this BagBackendAware. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this BagBackendAware. # noqa: E501 :return: The public of this BagBackendAware. # noqa: E501 :rtype: bool slug () property writable \u00b6 Gets the slug of this BagBackendAware. # noqa: E501 :return: The slug of this BagBackendAware. # noqa: E501 :rtype: str timestamp () property writable \u00b6 Gets the timestamp of this BagBackendAware. # noqa: E501 :return: The timestamp of this BagBackendAware. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model bag_backends \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagBackends \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( kg_amqp = None , kg_legacy_api = None , local_vars_configuration = None ) \u00b6 BagBackends - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint kg_amqp () property writable \u00b6 Gets the kg_amqp of this BagBackends. # noqa: E501 :return: The kg_amqp of this BagBackends. # noqa: E501 :rtype: BagAmqpBackend kg_legacy_api () property writable \u00b6 Gets the kg_legacy_api of this BagBackends. # noqa: E501 :return: The kg_legacy_api of this BagBackends. # noqa: E501 :rtype: BagKgLegacyApiBackend to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model bag_callback \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagCallback \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( callback_url = None , local_vars_configuration = None ) \u00b6 BagCallback - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint callback_url () property writable \u00b6 Gets the callback_url of this BagCallback. # noqa: E501 :return: The callback_url of this BagCallback. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model bag_component_status \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagComponentStatus \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( start_time = None , status = None , local_vars_configuration = None ) \u00b6 BagComponentStatus - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint start_time () property writable \u00b6 Gets the start_time of this BagComponentStatus. # noqa: E501 :return: The start_time of this BagComponentStatus. # noqa: E501 :rtype: float status () property writable \u00b6 Gets the status of this BagComponentStatus. # noqa: E501 :return: The status of this BagComponentStatus. # noqa: E501 :rtype: BagComponentStatusEnum to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model bag_component_status_enum \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagComponentStatusEnum \u00b6 Bases: object Do not edit the class manually. allowable_values = [ LAUNCHING , READY , BUSY , SUSPENDED , SUSPENDING , ERROR , PROVISIONING , PROVISIONING_FAILED , UNKNOWN , CHECKING , PENDING_RESOURCES , IDLE ] class-attribute \u00b6 Attributes: Name Type Description openapi_types dict The key is attribute name and the value is attribute type. attribute_map dict The key is attribute name and the value is json key in definition. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( local_vars_configuration = None ) \u00b6 BagComponentStatusEnum - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model bag_flavour \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagFlavour \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , display_name = None , name = None , local_vars_configuration = None ) \u00b6 BagFlavour - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this BagFlavour. # noqa: E501 :return: The description of this BagFlavour. # noqa: E501 :rtype: str display_name () property writable \u00b6 Gets the display_name of this BagFlavour. # noqa: E501 :return: The display_name of this BagFlavour. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this BagFlavour. # noqa: E501 :return: The name of this BagFlavour. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model bag_flavour_default_quota \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagFlavourDefaultQuota \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( default_quota = None , display_name = None , name = None , local_vars_configuration = None ) \u00b6 BagFlavourDefaultQuota - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint default_quota () property writable \u00b6 Gets the default_quota of this BagFlavourDefaultQuota. # noqa: E501 :return: The default_quota of this BagFlavourDefaultQuota. # noqa: E501 :rtype: float display_name () property writable \u00b6 Gets the display_name of this BagFlavourDefaultQuota. # noqa: E501 :return: The display_name of this BagFlavourDefaultQuota. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this BagFlavourDefaultQuota. # noqa: E501 :return: The name of this BagFlavourDefaultQuota. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model bag_flavour_full_data \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagFlavourFullData \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( backend = None , config = None , default_quota = None , description = None , display_name = None , is_from_deployment = None , name = None , order = None , project_specific = None , local_vars_configuration = None ) \u00b6 BagFlavourFullData - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint backend () property writable \u00b6 Gets the backend of this BagFlavourFullData. # noqa: E501 :return: The backend of this BagFlavourFullData. # noqa: E501 :rtype: str config () property writable \u00b6 Gets the config of this BagFlavourFullData. # noqa: E501 :return: The config of this BagFlavourFullData. # noqa: E501 :rtype: object default_quota () property writable \u00b6 Gets the default_quota of this BagFlavourFullData. # noqa: E501 :return: The default_quota of this BagFlavourFullData. # noqa: E501 :rtype: int description () property writable \u00b6 Gets the description of this BagFlavourFullData. # noqa: E501 :return: The description of this BagFlavourFullData. # noqa: E501 :rtype: str display_name () property writable \u00b6 Gets the display_name of this BagFlavourFullData. # noqa: E501 :return: The display_name of this BagFlavourFullData. # noqa: E501 :rtype: str is_from_deployment () property writable \u00b6 Gets the is_from_deployment of this BagFlavourFullData. # noqa: E501 :return: The is_from_deployment of this BagFlavourFullData. # noqa: E501 :rtype: bool name () property writable \u00b6 Gets the name of this BagFlavourFullData. # noqa: E501 :return: The name of this BagFlavourFullData. # noqa: E501 :rtype: str order () property writable \u00b6 Gets the order of this BagFlavourFullData. # noqa: E501 :return: The order of this BagFlavourFullData. # noqa: E501 :rtype: float project_specific () property writable \u00b6 Gets the project_specific of this BagFlavourFullData. # noqa: E501 :return: The project_specific of this BagFlavourFullData. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model bag_kg_legacy_api_backend \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagKgLegacyApiBackend \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( svc_endpoint = None , bag_domain = None , bag_url = None , flavour = None , token = None , local_vars_configuration = None ) \u00b6 BagKgLegacyApiBackend - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bag_domain () property writable \u00b6 Gets the bag_domain of this BagKgLegacyApiBackend. # noqa: E501 :return: The bag_domain of this BagKgLegacyApiBackend. # noqa: E501 :rtype: str bag_url () property writable \u00b6 Gets the bag_url of this BagKgLegacyApiBackend. # noqa: E501 :return: The bag_url of this BagKgLegacyApiBackend. # noqa: E501 :rtype: str flavour () property writable \u00b6 Gets the flavour of this BagKgLegacyApiBackend. # noqa: E501 :return: The flavour of this BagKgLegacyApiBackend. # noqa: E501 :rtype: str svc_endpoint () property writable \u00b6 Gets the svc_endpoint of this BagKgLegacyApiBackend. # noqa: E501 :return: The svc_endpoint of this BagKgLegacyApiBackend. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model token () property writable \u00b6 Gets the token of this BagKgLegacyApiBackend. # noqa: E501 :return: The token of this BagKgLegacyApiBackend. # noqa: E501 :rtype: str bag_status \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagStatus \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( components = None , status = None , local_vars_configuration = None ) \u00b6 BagStatus - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint components () property writable \u00b6 Gets the components of this BagStatus. # noqa: E501 :return: The components of this BagStatus. # noqa: E501 :rtype: BagStatusComponents status () property writable \u00b6 Gets the status of this BagStatus. # noqa: E501 :return: The status of this BagStatus. # noqa: E501 :rtype: BagComponentStatusEnum to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model bag_status_backend_aware \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagStatusBackendAware \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( kg_amqp = None , kg_legacy_api = None , overall_status = None , local_vars_configuration = None ) \u00b6 BagStatusBackendAware - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint kg_amqp () property writable \u00b6 Gets the kg_amqp of this BagStatusBackendAware. # noqa: E501 :return: The kg_amqp of this BagStatusBackendAware. # noqa: E501 :rtype: BagStatusBackendAwareKgAmqp kg_legacy_api () property writable \u00b6 Gets the kg_legacy_api of this BagStatusBackendAware. # noqa: E501 :return: The kg_legacy_api of this BagStatusBackendAware. # noqa: E501 :rtype: BagStatus overall_status () property writable \u00b6 Gets the overall_status of this BagStatusBackendAware. # noqa: E501 :return: The overall_status of this BagStatusBackendAware. # noqa: E501 :rtype: BagComponentStatusEnum to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model bag_status_backend_aware_kg_amqp \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagStatusBackendAwareKgAmqp \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( status = None , local_vars_configuration = None ) \u00b6 BagStatusBackendAwareKgAmqp - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint status () property writable \u00b6 Gets the status of this BagStatusBackendAwareKgAmqp. # noqa: E501 :return: The status of this BagStatusBackendAwareKgAmqp. # noqa: E501 :rtype: BagComponentStatusEnum to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model bag_status_components \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagStatusComponents \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( erlenmeyer_api = None , erlenmeyer_ui = None , kg = None , local_vars_configuration = None ) \u00b6 BagStatusComponents - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint erlenmeyer_api () property writable \u00b6 Gets the erlenmeyer_api of this BagStatusComponents. # noqa: E501 Status of the Erlenmeyer API for this Graph # noqa: E501 :return: The erlenmeyer_api of this BagStatusComponents. # noqa: E501 :rtype: BagComponentStatus erlenmeyer_ui () property writable \u00b6 Gets the erlenmeyer_ui of this BagStatusComponents. # noqa: E501 Status of the Erlenmeyer UI for this Graph # noqa: E501 :return: The erlenmeyer_ui of this BagStatusComponents. # noqa: E501 :rtype: BagComponentStatus kg () property writable \u00b6 Gets the kg of this BagStatusComponents. # noqa: E501 Status of the Knowledge Graph and its API # noqa: E501 :return: The kg of this BagStatusComponents. # noqa: E501 :rtype: BagComponentStatus to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model catalog_reference \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CatalogReference \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collection_name = None , dc_key = None , proj_key = None , local_vars_configuration = None ) \u00b6 CatalogReference - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collection_name () property writable \u00b6 Gets the collection_name of this CatalogReference. # noqa: E501 :return: The collection_name of this CatalogReference. # noqa: E501 :rtype: str dc_key () property writable \u00b6 Gets the dc_key of this CatalogReference. # noqa: E501 :return: The dc_key of this CatalogReference. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this CatalogReference. # noqa: E501 :return: The proj_key of this CatalogReference. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model ccs_collection_reference \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CcsCollectionReference \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collection_name = None , language = None , proj_key = None , local_vars_configuration = None ) \u00b6 CcsCollectionReference - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collection_name () property writable \u00b6 Gets the collection_name of this CcsCollectionReference. # noqa: E501 :return: The collection_name of this CcsCollectionReference. # noqa: E501 :rtype: str language () property writable \u00b6 Gets the language of this CcsCollectionReference. # noqa: E501 :return: The language of this CcsCollectionReference. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this CcsCollectionReference. # noqa: E501 :return: The proj_key of this CcsCollectionReference. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model ccs_task \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CcsTask \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( ccs_collection_name = None , ccs_project_key = None , task_id = None , local_vars_configuration = None ) \u00b6 CcsTask - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint ccs_collection_name () property writable \u00b6 Gets the ccs_collection_name of this CcsTask. # noqa: E501 :return: The ccs_collection_name of this CcsTask. # noqa: E501 :rtype: str ccs_project_key () property writable \u00b6 Gets the ccs_project_key of this CcsTask. # noqa: E501 :return: The ccs_project_key of this CcsTask. # noqa: E501 :rtype: str task_id () property writable \u00b6 Gets the task_id of this CcsTask. # noqa: E501 :return: The task_id of this CcsTask. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model celery_task \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CeleryTask \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( failures = None , proj_key = None , task_id = None , local_vars_configuration = None ) \u00b6 CeleryTask - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint failures () property writable \u00b6 Gets the failures of this CeleryTask. # noqa: E501 :return: The failures of this CeleryTask. # noqa: E501 :rtype: list[SystemCeleryTasksFailureFailures] proj_key () property writable \u00b6 Gets the proj_key of this CeleryTask. # noqa: E501 :return: The proj_key of this CeleryTask. # noqa: E501 :rtype: str task_id () property writable \u00b6 Gets the task_id of this CeleryTask. # noqa: E501 :return: The task_id of this CeleryTask. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model celery_task1 \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CeleryTask1 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( completed_at = None , created_at = None , meta = None , metrics = None , proj_key = None , project_task_id = None , project_task_type = None , started_at = None , task_id = None , task_status = None , task_type = None , worker_name = None , local_vars_configuration = None ) \u00b6 CeleryTask1 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint completed_at () property writable \u00b6 Gets the completed_at of this CeleryTask1. # noqa: E501 :return: The completed_at of this CeleryTask1. # noqa: E501 :rtype: float created_at () property writable \u00b6 Gets the created_at of this CeleryTask1. # noqa: E501 :return: The created_at of this CeleryTask1. # noqa: E501 :rtype: float meta () property writable \u00b6 Gets the meta of this CeleryTask1. # noqa: E501 :return: The meta of this CeleryTask1. # noqa: E501 :rtype: dict(str, object) metrics () property writable \u00b6 Gets the metrics of this CeleryTask1. # noqa: E501 :return: The metrics of this CeleryTask1. # noqa: E501 :rtype: object proj_key () property writable \u00b6 Gets the proj_key of this CeleryTask1. # noqa: E501 :return: The proj_key of this CeleryTask1. # noqa: E501 :rtype: str project_task_id () property writable \u00b6 Gets the project_task_id of this CeleryTask1. # noqa: E501 :return: The project_task_id of this CeleryTask1. # noqa: E501 :rtype: str project_task_type () property writable \u00b6 Gets the project_task_type of this CeleryTask1. # noqa: E501 :return: The project_task_type of this CeleryTask1. # noqa: E501 :rtype: str started_at () property writable \u00b6 Gets the started_at of this CeleryTask1. # noqa: E501 :return: The started_at of this CeleryTask1. # noqa: E501 :rtype: float task_id () property writable \u00b6 Gets the task_id of this CeleryTask1. # noqa: E501 :return: The task_id of this CeleryTask1. # noqa: E501 :rtype: str task_status () property writable \u00b6 Gets the task_status of this CeleryTask1. # noqa: E501 :return: The task_status of this CeleryTask1. # noqa: E501 :rtype: str task_type () property writable \u00b6 Gets the task_type of this CeleryTask1. # noqa: E501 :return: The task_type of this CeleryTask1. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model worker_name () property writable \u00b6 Gets the worker_name of this CeleryTask1. # noqa: E501 :return: The worker_name of this CeleryTask1. # noqa: E501 :rtype: str celery_task_promise \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CeleryTaskPromise \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( result = None , task_id = None , task_status = None , local_vars_configuration = None ) \u00b6 CeleryTaskPromise - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint result () property writable \u00b6 Gets the result of this CeleryTaskPromise. # noqa: E501 :return: The result of this CeleryTaskPromise. # noqa: E501 :rtype: object task_id () property writable \u00b6 Gets the task_id of this CeleryTaskPromise. # noqa: E501 :return: The task_id of this CeleryTaskPromise. # noqa: E501 :rtype: str task_status () property writable \u00b6 Gets the task_status of this CeleryTaskPromise. # noqa: E501 :return: The task_status of this CeleryTaskPromise. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model clone_data_catalog_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CloneDataCatalogOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collections = None , copy_s3 = True , description = None , name = None , public = None , local_vars_configuration = None ) \u00b6 CloneDataCatalogOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collections () property writable \u00b6 Gets the collections of this CloneDataCatalogOptions. # noqa: E501 :return: The collections of this CloneDataCatalogOptions. # noqa: E501 :rtype: list[str] copy_s3 () property writable \u00b6 Gets the copy_s3 of this CloneDataCatalogOptions. # noqa: E501 Should the catalog's S3 data also be copied? # noqa: E501 :return: The copy_s3 of this CloneDataCatalogOptions. # noqa: E501 :rtype: bool description () property writable \u00b6 Gets the description of this CloneDataCatalogOptions. # noqa: E501 :return: The description of this CloneDataCatalogOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this CloneDataCatalogOptions. # noqa: E501 :return: The name of this CloneDataCatalogOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this CloneDataCatalogOptions. # noqa: E501 :return: The public of this CloneDataCatalogOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model clone_data_catalog_result \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CloneDataCatalogResult \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( clone_task = None , data_catalogue = None , local_vars_configuration = None ) \u00b6 CloneDataCatalogResult - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint clone_task () property writable \u00b6 Gets the clone_task of this CloneDataCatalogResult. # noqa: E501 :return: The clone_task of this CloneDataCatalogResult. # noqa: E501 :rtype: Task data_catalogue () property writable \u00b6 Gets the data_catalogue of this CloneDataCatalogResult. # noqa: E501 :return: The data_catalogue of this CloneDataCatalogResult. # noqa: E501 :rtype: DataCatalogue to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model clone_dictionary_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CloneDictionaryOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collections = None , copy_s3 = True , description = None , name = None , public = None , local_vars_configuration = None ) \u00b6 CloneDictionaryOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collections () property writable \u00b6 Gets the collections of this CloneDictionaryOptions. # noqa: E501 :return: The collections of this CloneDictionaryOptions. # noqa: E501 :rtype: list[str] copy_s3 () property writable \u00b6 Gets the copy_s3 of this CloneDictionaryOptions. # noqa: E501 Should the dictionary's S3 data also be copied? # noqa: E501 :return: The copy_s3 of this CloneDictionaryOptions. # noqa: E501 :rtype: bool description () property writable \u00b6 Gets the description of this CloneDictionaryOptions. # noqa: E501 :return: The description of this CloneDictionaryOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this CloneDictionaryOptions. # noqa: E501 :return: The name of this CloneDictionaryOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this CloneDictionaryOptions. # noqa: E501 :return: The public of this CloneDictionaryOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model clone_public_data_catalog_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ClonePublicDataCatalogOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collections = None , copy_s3 = True , description = None , name = None , proj_key = None , public = None , local_vars_configuration = None ) \u00b6 ClonePublicDataCatalogOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collections () property writable \u00b6 Gets the collections of this ClonePublicDataCatalogOptions. # noqa: E501 :return: The collections of this ClonePublicDataCatalogOptions. # noqa: E501 :rtype: list[str] copy_s3 () property writable \u00b6 Gets the copy_s3 of this ClonePublicDataCatalogOptions. # noqa: E501 Should the catalog's S3 data also be copied? # noqa: E501 :return: The copy_s3 of this ClonePublicDataCatalogOptions. # noqa: E501 :rtype: bool description () property writable \u00b6 Gets the description of this ClonePublicDataCatalogOptions. # noqa: E501 :return: The description of this ClonePublicDataCatalogOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ClonePublicDataCatalogOptions. # noqa: E501 :return: The name of this ClonePublicDataCatalogOptions. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ClonePublicDataCatalogOptions. # noqa: E501 The project key of the project to store the resulting data catalogue # noqa: E501 :return: The proj_key of this ClonePublicDataCatalogOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this ClonePublicDataCatalogOptions. # noqa: E501 :return: The public of this ClonePublicDataCatalogOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model clone_public_dictionary_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ClonePublicDictionaryOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collections = None , copy_s3 = True , description = None , name = None , proj_key = None , public = None , local_vars_configuration = None ) \u00b6 ClonePublicDictionaryOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collections () property writable \u00b6 Gets the collections of this ClonePublicDictionaryOptions. # noqa: E501 :return: The collections of this ClonePublicDictionaryOptions. # noqa: E501 :rtype: list[str] copy_s3 () property writable \u00b6 Gets the copy_s3 of this ClonePublicDictionaryOptions. # noqa: E501 Should the dictionary's S3 data also be copied? # noqa: E501 :return: The copy_s3 of this ClonePublicDictionaryOptions. # noqa: E501 :rtype: bool description () property writable \u00b6 Gets the description of this ClonePublicDictionaryOptions. # noqa: E501 :return: The description of this ClonePublicDictionaryOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ClonePublicDictionaryOptions. # noqa: E501 :return: The name of this ClonePublicDictionaryOptions. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ClonePublicDictionaryOptions. # noqa: E501 The project key of the project to store the resulting dictionary # noqa: E501 :return: The proj_key of this ClonePublicDictionaryOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this ClonePublicDictionaryOptions. # noqa: E501 :return: The public of this ClonePublicDictionaryOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model collection_list_coordinates \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CollectionListCoordinates \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collections = None , local_vars_configuration = None ) \u00b6 CollectionListCoordinates - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collections () property writable \u00b6 Gets the collections of this CollectionListCoordinates. # noqa: E501 :return: The collections of this CollectionListCoordinates. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model cps_model_reference \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CpsModelReference \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( model_config_key = None , proj_key = None , local_vars_configuration = None ) \u00b6 CpsModelReference - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint model_config_key () property writable \u00b6 Gets the model_config_key of this CpsModelReference. # noqa: E501 :return: The model_config_key of this CpsModelReference. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this CpsModelReference. # noqa: E501 :return: The proj_key of this CpsModelReference. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model cps_package \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CpsPackage \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( dependencies = None , description = None , name = None , package_id = None , type = None , local_vars_configuration = None ) \u00b6 CpsPackage - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint dependencies () property writable \u00b6 Gets the dependencies of this CpsPackage. # noqa: E501 :return: The dependencies of this CpsPackage. # noqa: E501 :rtype: list[str] description () property writable \u00b6 Gets the description of this CpsPackage. # noqa: E501 :return: The description of this CpsPackage. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this CpsPackage. # noqa: E501 :return: The name of this CpsPackage. # noqa: E501 :rtype: str package_id () property writable \u00b6 Gets the package_id of this CpsPackage. # noqa: E501 :return: The package_id of this CpsPackage. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this CpsPackage. # noqa: E501 :return: The type of this CpsPackage. # noqa: E501 :rtype: str create_collection_in_dictionary_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CreateCollectionInDictionaryOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collection_name = None , local_vars_configuration = None ) \u00b6 CreateCollectionInDictionaryOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collection_name () property writable \u00b6 Gets the collection_name of this CreateCollectionInDictionaryOptions. # noqa: E501 :return: The collection_name of this CreateCollectionInDictionaryOptions. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model create_data_catalog_collection_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CreateDataCatalogCollectionOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collection_name = None , local_vars_configuration = None ) \u00b6 CreateDataCatalogCollectionOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collection_name () property writable \u00b6 Gets the collection_name of this CreateDataCatalogCollectionOptions. # noqa: E501 :return: The collection_name of this CreateDataCatalogCollectionOptions. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model create_data_catalog_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CreateDataCatalogOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( category_schemas = None , collections_data_flows = None , description = None , name = None , public = None , topologydata_flows = None , local_vars_configuration = None ) \u00b6 CreateDataCatalogOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint category_schemas () property writable \u00b6 Gets the category_schemas of this CreateDataCatalogOptions. # noqa: E501 :return: The category_schemas of this CreateDataCatalogOptions. # noqa: E501 :rtype: list[DataCatalogCategorySchema] collections_data_flows () property writable \u00b6 Gets the collections_data_flows of this CreateDataCatalogOptions. # noqa: E501 :return: The collections_data_flows of this CreateDataCatalogOptions. # noqa: E501 :rtype: list[DataCatalogDataFlow] description () property writable \u00b6 Gets the description of this CreateDataCatalogOptions. # noqa: E501 :return: The description of this CreateDataCatalogOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this CreateDataCatalogOptions. # noqa: E501 :return: The name of this CreateDataCatalogOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this CreateDataCatalogOptions. # noqa: E501 :return: The public of this CreateDataCatalogOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model topologydata_flows () property writable \u00b6 Gets the topologydata_flows of this CreateDataCatalogOptions. # noqa: E501 :return: The topologydata_flows of this CreateDataCatalogOptions. # noqa: E501 :rtype: list[DataCatalogTopology] create_data_flow_template_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CreateDataFlowTemplateOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , name = None , public = None , template = None , variables = None , local_vars_configuration = None ) \u00b6 CreateDataFlowTemplateOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this CreateDataFlowTemplateOptions. # noqa: E501 :return: The description of this CreateDataFlowTemplateOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this CreateDataFlowTemplateOptions. # noqa: E501 :return: The name of this CreateDataFlowTemplateOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this CreateDataFlowTemplateOptions. # noqa: E501 :return: The public of this CreateDataFlowTemplateOptions. # noqa: E501 :rtype: bool template () property writable \u00b6 Gets the template of this CreateDataFlowTemplateOptions. # noqa: E501 :return: The template of this CreateDataFlowTemplateOptions. # noqa: E501 :rtype: DataFlowTemplate to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this CreateDataFlowTemplateOptions. # noqa: E501 :return: The variables of this CreateDataFlowTemplateOptions. # noqa: E501 :rtype: dict(str, ProjectProjKeyKgcDataflowTemplatesVariables) create_dictionary_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CreateDictionaryOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , name = None , public = None , local_vars_configuration = None ) \u00b6 CreateDictionaryOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this CreateDictionaryOptions. # noqa: E501 :return: The description of this CreateDictionaryOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this CreateDictionaryOptions. # noqa: E501 :return: The name of this CreateDictionaryOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this CreateDictionaryOptions. # noqa: E501 :return: The public of this CreateDictionaryOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model create_knowledge_graph_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CreateKnowledgeGraphOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , flavours = None , name = None , public = None , local_vars_configuration = None ) \u00b6 CreateKnowledgeGraphOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this CreateKnowledgeGraphOptions. # noqa: E501 Description of the BAG # noqa: E501 :return: The description of this CreateKnowledgeGraphOptions. # noqa: E501 :rtype: str flavours () property writable \u00b6 Gets the flavours of this CreateKnowledgeGraphOptions. # noqa: E501 Flavours names of the bag. Determines its available resources # noqa: E501 :return: The flavours of this CreateKnowledgeGraphOptions. # noqa: E501 :rtype: list[str] name () property writable \u00b6 Gets the name of this CreateKnowledgeGraphOptions. # noqa: E501 Name of the BAG # noqa: E501 :return: The name of this CreateKnowledgeGraphOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this CreateKnowledgeGraphOptions. # noqa: E501 If true, the BAG will be publicly available # noqa: E501 :return: The public of this CreateKnowledgeGraphOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model create_knowledge_graph_options1 \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CreateKnowledgeGraphOptions1 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , flavour = None , name = None , public = None , local_vars_configuration = None ) \u00b6 CreateKnowledgeGraphOptions1 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this CreateKnowledgeGraphOptions1. # noqa: E501 Description of the BAG # noqa: E501 :return: The description of this CreateKnowledgeGraphOptions1. # noqa: E501 :rtype: str flavour () property writable \u00b6 Gets the flavour of this CreateKnowledgeGraphOptions1. # noqa: E501 \"Flavour\" of the BAG, determines its available resources. # noqa: E501 :return: The flavour of this CreateKnowledgeGraphOptions1. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this CreateKnowledgeGraphOptions1. # noqa: E501 Name of the BAG # noqa: E501 :return: The name of this CreateKnowledgeGraphOptions1. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this CreateKnowledgeGraphOptions1. # noqa: E501 If true, the BAG will be publicly available # noqa: E501 :return: The public of this CreateKnowledgeGraphOptions1. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model create_project_model_config_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CreateProjectModelConfigOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( configurations = None , description = None , model_config_key = None , name = None , public = None , local_vars_configuration = None ) \u00b6 CreateProjectModelConfigOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint configurations () property writable \u00b6 Gets the configurations of this CreateProjectModelConfigOptions. # noqa: E501 :return: The configurations of this CreateProjectModelConfigOptions. # noqa: E501 :rtype: ProjectProjKeyModelConfigsConfigurations description () property writable \u00b6 Gets the description of this CreateProjectModelConfigOptions. # noqa: E501 :return: The description of this CreateProjectModelConfigOptions. # noqa: E501 :rtype: str model_config_key () property writable \u00b6 Gets the model_config_key of this CreateProjectModelConfigOptions. # noqa: E501 :return: The model_config_key of this CreateProjectModelConfigOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this CreateProjectModelConfigOptions. # noqa: E501 :return: The name of this CreateProjectModelConfigOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this CreateProjectModelConfigOptions. # noqa: E501 :return: The public of this CreateProjectModelConfigOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model data_catalog_category_schema \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogCategorySchema \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( key = None , schema = None , local_vars_configuration = None ) \u00b6 DataCatalogCategorySchema - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint key () property writable \u00b6 Gets the key of this DataCatalogCategorySchema. # noqa: E501 :return: The key of this DataCatalogCategorySchema. # noqa: E501 :rtype: str schema () property writable \u00b6 Gets the schema of this DataCatalogCategorySchema. # noqa: E501 :return: The schema of this DataCatalogCategorySchema. # noqa: E501 :rtype: dict(str, object) to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model data_catalog_collection \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogCollection \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( item_count = None , name = None , local_vars_configuration = None ) \u00b6 DataCatalogCollection - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint item_count () property writable \u00b6 Gets the item_count of this DataCatalogCollection. # noqa: E501 :return: The item_count of this DataCatalogCollection. # noqa: E501 :rtype: int name () property writable \u00b6 Gets the name of this DataCatalogCollection. # noqa: E501 :return: The name of this DataCatalogCollection. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model data_catalog_data_flow \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogDataFlow \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_flows = None , key = None , local_vars_configuration = None ) \u00b6 DataCatalogDataFlow - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_flows () property writable \u00b6 Gets the data_flows of this DataCatalogDataFlow. # noqa: E501 :return: The data_flows of this DataCatalogDataFlow. # noqa: E501 :rtype: list[object] key () property writable \u00b6 Gets the key of this DataCatalogDataFlow. # noqa: E501 :return: The key of this DataCatalogDataFlow. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model data_catalog_import_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogImportOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( options = None , target = None , local_vars_configuration = None ) \u00b6 DataCatalogImportOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint options () property writable \u00b6 Gets the options of this DataCatalogImportOptions. # noqa: E501 :return: The options of this DataCatalogImportOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesFromMongoOptions target () property writable \u00b6 Gets the target of this DataCatalogImportOptions. # noqa: E501 :return: The target of this DataCatalogImportOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesFromMongoTarget to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model data_catalog_import_result \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogImportResult \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_catalogue = None , import_task = None , local_vars_configuration = None ) \u00b6 DataCatalogImportResult - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_catalogue () property writable \u00b6 Gets the data_catalogue of this DataCatalogImportResult. # noqa: E501 :return: The data_catalogue of this DataCatalogImportResult. # noqa: E501 :rtype: DataCatalogue import_task () property writable \u00b6 Gets the import_task of this DataCatalogImportResult. # noqa: E501 :return: The import_task of this DataCatalogImportResult. # noqa: E501 :rtype: Task to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model data_catalog_provenance_log \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogProvenanceLog \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collection_name = None , source = None , timestamp = None , user = None , local_vars_configuration = None ) \u00b6 DataCatalogProvenanceLog - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collection_name () property writable \u00b6 Gets the collection_name of this DataCatalogProvenanceLog. # noqa: E501 :return: The collection_name of this DataCatalogProvenanceLog. # noqa: E501 :rtype: str source () property writable \u00b6 Gets the source of this DataCatalogProvenanceLog. # noqa: E501 :return: The source of this DataCatalogProvenanceLog. # noqa: E501 :rtype: DataCatalogProvenanceLogSource timestamp () property writable \u00b6 Gets the timestamp of this DataCatalogProvenanceLog. # noqa: E501 :return: The timestamp of this DataCatalogProvenanceLog. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model user () property writable \u00b6 Gets the user of this DataCatalogProvenanceLog. # noqa: E501 :return: The user of this DataCatalogProvenanceLog. # noqa: E501 :rtype: DataCatalogProvenanceLogUser data_catalog_provenance_log_source \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogProvenanceLogSource \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( ccs = None , clone = None , elastic = None , file = None , mongo_s3 = None , url = None , local_vars_configuration = None ) \u00b6 DataCatalogProvenanceLogSource - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint ccs () property writable \u00b6 Gets the ccs of this DataCatalogProvenanceLogSource. # noqa: E501 :return: The ccs of this DataCatalogProvenanceLogSource. # noqa: E501 :rtype: object clone () property writable \u00b6 Gets the clone of this DataCatalogProvenanceLogSource. # noqa: E501 :return: The clone of this DataCatalogProvenanceLogSource. # noqa: E501 :rtype: object elastic () property writable \u00b6 Gets the elastic of this DataCatalogProvenanceLogSource. # noqa: E501 :return: The elastic of this DataCatalogProvenanceLogSource. # noqa: E501 :rtype: object file () property writable \u00b6 Gets the file of this DataCatalogProvenanceLogSource. # noqa: E501 :return: The file of this DataCatalogProvenanceLogSource. # noqa: E501 :rtype: object mongo_s3 () property writable \u00b6 Gets the mongo_s3 of this DataCatalogProvenanceLogSource. # noqa: E501 :return: The mongo_s3 of this DataCatalogProvenanceLogSource. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this DataCatalogProvenanceLogSource. # noqa: E501 :return: The url of this DataCatalogProvenanceLogSource. # noqa: E501 :rtype: object data_catalog_provenance_log_user \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogProvenanceLogUser \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( email = None , name = None , user_key = None , local_vars_configuration = None ) \u00b6 DataCatalogProvenanceLogUser - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint email () property writable \u00b6 Gets the email of this DataCatalogProvenanceLogUser. # noqa: E501 :return: The email of this DataCatalogProvenanceLogUser. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this DataCatalogProvenanceLogUser. # noqa: E501 :return: The name of this DataCatalogProvenanceLogUser. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model user_key () property writable \u00b6 Gets the user_key of this DataCatalogProvenanceLogUser. # noqa: E501 :return: The user_key of this DataCatalogProvenanceLogUser. # noqa: E501 :rtype: str data_catalog_schema \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogSchema \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , schema = None , local_vars_configuration = None ) \u00b6 DataCatalogSchema - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this DataCatalogSchema. # noqa: E501 :return: The name of this DataCatalogSchema. # noqa: E501 :rtype: str schema () property writable \u00b6 Gets the schema of this DataCatalogSchema. # noqa: E501 :return: The schema of this DataCatalogSchema. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model data_catalog_topology \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogTopology \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( categories = None , edges = None , local_vars_configuration = None ) \u00b6 DataCatalogTopology - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint categories () property writable \u00b6 Gets the categories of this DataCatalogTopology. # noqa: E501 :return: The categories of this DataCatalogTopology. # noqa: E501 :rtype: list[DataCatalogTopologyNode] edges () property writable \u00b6 Gets the edges of this DataCatalogTopology. # noqa: E501 :return: The edges of this DataCatalogTopology. # noqa: E501 :rtype: list[DataCatalogTopologyEdge] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model data_catalog_topology_edge \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogTopologyEdge \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , source = None , source_field = None , target = None , target_field = None , local_vars_configuration = None ) \u00b6 DataCatalogTopologyEdge - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this DataCatalogTopologyEdge. # noqa: E501 :return: The name of this DataCatalogTopologyEdge. # noqa: E501 :rtype: str source () property writable \u00b6 Gets the source of this DataCatalogTopologyEdge. # noqa: E501 :return: The source of this DataCatalogTopologyEdge. # noqa: E501 :rtype: list[str] source_field () property writable \u00b6 Gets the source_field of this DataCatalogTopologyEdge. # noqa: E501 :return: The source_field of this DataCatalogTopologyEdge. # noqa: E501 :rtype: str target () property writable \u00b6 Gets the target of this DataCatalogTopologyEdge. # noqa: E501 :return: The target of this DataCatalogTopologyEdge. # noqa: E501 :rtype: list[str] target_field () property writable \u00b6 Gets the target_field of this DataCatalogTopologyEdge. # noqa: E501 :return: The target_field of this DataCatalogTopologyEdge. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model data_catalog_topology_node \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogTopologyNode \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_fields = None , name = None , local_vars_configuration = None ) \u00b6 DataCatalogTopologyNode - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_fields () property writable \u00b6 Gets the data_fields of this DataCatalogTopologyNode. # noqa: E501 :return: The data_fields of this DataCatalogTopologyNode. # noqa: E501 :rtype: list[str] name () property writable \u00b6 Gets the name of this DataCatalogTopologyNode. # noqa: E501 :return: The name of this DataCatalogTopologyNode. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model data_catalog_url_import_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogUrlImportOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( options = None , target = None , local_vars_configuration = None ) \u00b6 DataCatalogUrlImportOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint options () property writable \u00b6 Gets the options of this DataCatalogUrlImportOptions. # noqa: E501 :return: The options of this DataCatalogUrlImportOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesFromUrlOptions target () property writable \u00b6 Gets the target of this DataCatalogUrlImportOptions. # noqa: E501 :return: The target of this DataCatalogUrlImportOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesFromMongoTarget to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model data_catalogue \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogue \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( category_schemas = None , collections = None , collections_data_flows = None , copy_of = None , created_at = None , created_by = None , dc_key = None , description = None , name = None , proj_key = None , provenance_logs = None , public = None , topology = None , local_vars_configuration = None ) \u00b6 DataCatalogue - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint category_schemas () property writable \u00b6 Gets the category_schemas of this DataCatalogue. # noqa: E501 :return: The category_schemas of this DataCatalogue. # noqa: E501 :rtype: list[DataCatalogCategorySchema] collections () property writable \u00b6 Gets the collections of this DataCatalogue. # noqa: E501 :return: The collections of this DataCatalogue. # noqa: E501 :rtype: list[DataCatalogCollection] collections_data_flows () property writable \u00b6 Gets the collections_data_flows of this DataCatalogue. # noqa: E501 :return: The collections_data_flows of this DataCatalogue. # noqa: E501 :rtype: list[DataCatalogDataFlow] copy_of () property writable \u00b6 Gets the copy_of of this DataCatalogue. # noqa: E501 :return: The copy_of of this DataCatalogue. # noqa: E501 :rtype: str created_at () property writable \u00b6 Gets the created_at of this DataCatalogue. # noqa: E501 :return: The created_at of this DataCatalogue. # noqa: E501 :rtype: float created_by () property writable \u00b6 Gets the created_by of this DataCatalogue. # noqa: E501 :return: The created_by of this DataCatalogue. # noqa: E501 :rtype: str dc_key () property writable \u00b6 Gets the dc_key of this DataCatalogue. # noqa: E501 :return: The dc_key of this DataCatalogue. # noqa: E501 :rtype: str description () property writable \u00b6 Gets the description of this DataCatalogue. # noqa: E501 :return: The description of this DataCatalogue. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this DataCatalogue. # noqa: E501 :return: The name of this DataCatalogue. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this DataCatalogue. # noqa: E501 :return: The proj_key of this DataCatalogue. # noqa: E501 :rtype: str provenance_logs () property writable \u00b6 Gets the provenance_logs of this DataCatalogue. # noqa: E501 :return: The provenance_logs of this DataCatalogue. # noqa: E501 :rtype: list[DataCatalogProvenanceLog] public () property writable \u00b6 Gets the public of this DataCatalogue. # noqa: E501 :return: The public of this DataCatalogue. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model topology () property writable \u00b6 Gets the topology of this DataCatalogue. # noqa: E501 :return: The topology of this DataCatalogue. # noqa: E501 :rtype: DataCatalogTopology data_collection \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCollection \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( documents = None , health = None , metadata = None , name = None , source = None , status = None , local_vars_configuration = None ) \u00b6 DataCollection - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint documents () property writable \u00b6 Gets the documents of this DataCollection. # noqa: E501 :return: The documents of this DataCollection. # noqa: E501 :rtype: float health () property writable \u00b6 Gets the health of this DataCollection. # noqa: E501 :return: The health of this DataCollection. # noqa: E501 :rtype: str metadata () property writable \u00b6 Gets the metadata of this DataCollection. # noqa: E501 :return: The metadata of this DataCollection. # noqa: E501 :rtype: DataCollectionMetadata name () property writable \u00b6 Gets the name of this DataCollection. # noqa: E501 :return: The name of this DataCollection. # noqa: E501 :rtype: str source () property writable \u00b6 Gets the source of this DataCollection. # noqa: E501 :return: The source of this DataCollection. # noqa: E501 :rtype: DataCollectionSource status () property writable \u00b6 Gets the status of this DataCollection. # noqa: E501 :return: The status of this DataCollection. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model data_collection_metadata \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCollectionMetadata \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( aliases = None , created = None , description = None , domain = None , source = None , storage = None , type = None , version = None , local_vars_configuration = None ) \u00b6 DataCollectionMetadata - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint aliases () property writable \u00b6 Gets the aliases of this DataCollectionMetadata. # noqa: E501 :return: The aliases of this DataCollectionMetadata. # noqa: E501 :rtype: list[str] created () property writable \u00b6 Gets the created of this DataCollectionMetadata. # noqa: E501 :return: The created of this DataCollectionMetadata. # noqa: E501 :rtype: str description () property writable \u00b6 Gets the description of this DataCollectionMetadata. # noqa: E501 :return: The description of this DataCollectionMetadata. # noqa: E501 :rtype: str domain () property writable \u00b6 Gets the domain of this DataCollectionMetadata. # noqa: E501 :return: The domain of this DataCollectionMetadata. # noqa: E501 :rtype: list[str] source () property writable \u00b6 Gets the source of this DataCollectionMetadata. # noqa: E501 :return: The source of this DataCollectionMetadata. # noqa: E501 :rtype: str storage () property writable \u00b6 Gets the storage of this DataCollectionMetadata. # noqa: E501 :return: The storage of this DataCollectionMetadata. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this DataCollectionMetadata. # noqa: E501 :return: The type of this DataCollectionMetadata. # noqa: E501 :rtype: str version () property writable \u00b6 Gets the version of this DataCollectionMetadata. # noqa: E501 :return: The version of this DataCollectionMetadata. # noqa: E501 :rtype: str data_collection_source \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCollectionSource \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( elastic_id = None , index_key = None , proj_key = None , local_vars_configuration = None ) \u00b6 DataCollectionSource - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint elastic_id () property writable \u00b6 Gets the elastic_id of this DataCollectionSource. # noqa: E501 :return: The elastic_id of this DataCollectionSource. # noqa: E501 :rtype: str index_key () property writable \u00b6 Gets the index_key of this DataCollectionSource. # noqa: E501 :return: The index_key of this DataCollectionSource. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this DataCollectionSource. # noqa: E501 :return: The proj_key of this DataCollectionSource. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model data_flow \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlow \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( created_at = None , description = None , df_tpl_key = None , name = None , proj_key = None , public = None , template = None , updated_at = None , variables = None , local_vars_configuration = None ) \u00b6 DataFlow - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint created_at () property writable \u00b6 Gets the created_at of this DataFlow. # noqa: E501 :return: The created_at of this DataFlow. # noqa: E501 :rtype: float description () property writable \u00b6 Gets the description of this DataFlow. # noqa: E501 :return: The description of this DataFlow. # noqa: E501 :rtype: str df_tpl_key () property writable \u00b6 Gets the df_tpl_key of this DataFlow. # noqa: E501 :return: The df_tpl_key of this DataFlow. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this DataFlow. # noqa: E501 :return: The name of this DataFlow. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this DataFlow. # noqa: E501 :return: The proj_key of this DataFlow. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this DataFlow. # noqa: E501 :return: The public of this DataFlow. # noqa: E501 :rtype: bool template () property writable \u00b6 Gets the template of this DataFlow. # noqa: E501 :return: The template of this DataFlow. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model updated_at () property writable \u00b6 Gets the updated_at of this DataFlow. # noqa: E501 :return: The updated_at of this DataFlow. # noqa: E501 :rtype: float variables () property writable \u00b6 Gets the variables of this DataFlow. # noqa: E501 :return: The variables of this DataFlow. # noqa: E501 :rtype: dict(str, object) data_flow_assemble_into_knowledge_graph_task \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowAssembleIntoKnowledgeGraphTask \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_flow = None , timestamp = None , local_vars_configuration = None ) \u00b6 DataFlowAssembleIntoKnowledgeGraphTask - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_flow () property writable \u00b6 Gets the data_flow of this DataFlowAssembleIntoKnowledgeGraphTask. # noqa: E501 :return: The data_flow of this DataFlowAssembleIntoKnowledgeGraphTask. # noqa: E501 :rtype: ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow timestamp () property writable \u00b6 Gets the timestamp of this DataFlowAssembleIntoKnowledgeGraphTask. # noqa: E501 :return: The timestamp of this DataFlowAssembleIntoKnowledgeGraphTask. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model data_flow_assemble_report \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowAssembleReport \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( dataflow_tasks = None , task_id = None , local_vars_configuration = None ) \u00b6 DataFlowAssembleReport - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint dataflow_tasks () property writable \u00b6 Gets the dataflow_tasks of this DataFlowAssembleReport. # noqa: E501 :return: The dataflow_tasks of this DataFlowAssembleReport. # noqa: E501 :rtype: dict(str, DataFlowAssembleReportSingleTask) task_id () property writable \u00b6 Gets the task_id of this DataFlowAssembleReport. # noqa: E501 :return: The task_id of this DataFlowAssembleReport. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model data_flow_assemble_report_cause \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowAssembleReportCause \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( type = None , value = None , local_vars_configuration = None ) \u00b6 DataFlowAssembleReportCause - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this DataFlowAssembleReportCause. # noqa: E501 :return: The type of this DataFlowAssembleReportCause. # noqa: E501 :rtype: str value () property writable \u00b6 Gets the value of this DataFlowAssembleReportCause. # noqa: E501 :return: The value of this DataFlowAssembleReportCause. # noqa: E501 :rtype: object data_flow_assemble_report_chunks \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowAssembleReportChunks \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( completed = None , failure = None , spawned = None , success = None , total = None , local_vars_configuration = None ) \u00b6 DataFlowAssembleReportChunks - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint completed () property writable \u00b6 Gets the completed of this DataFlowAssembleReportChunks. # noqa: E501 :return: The completed of this DataFlowAssembleReportChunks. # noqa: E501 :rtype: int failure () property writable \u00b6 Gets the failure of this DataFlowAssembleReportChunks. # noqa: E501 :return: The failure of this DataFlowAssembleReportChunks. # noqa: E501 :rtype: int spawned () property writable \u00b6 Gets the spawned of this DataFlowAssembleReportChunks. # noqa: E501 :return: The spawned of this DataFlowAssembleReportChunks. # noqa: E501 :rtype: int success () property writable \u00b6 Gets the success of this DataFlowAssembleReportChunks. # noqa: E501 :return: The success of this DataFlowAssembleReportChunks. # noqa: E501 :rtype: int to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model total () property writable \u00b6 Gets the total of this DataFlowAssembleReportChunks. # noqa: E501 :return: The total of this DataFlowAssembleReportChunks. # noqa: E501 :rtype: int data_flow_assemble_report_errors \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowAssembleReportErrors \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( cause = None , timestamp = None , local_vars_configuration = None ) \u00b6 DataFlowAssembleReportErrors - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint cause () property writable \u00b6 Gets the cause of this DataFlowAssembleReportErrors. # noqa: E501 :return: The cause of this DataFlowAssembleReportErrors. # noqa: E501 :rtype: DataFlowAssembleReportCause timestamp () property writable \u00b6 Gets the timestamp of this DataFlowAssembleReportErrors. # noqa: E501 :return: The timestamp of this DataFlowAssembleReportErrors. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model data_flow_assemble_report_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowAssembleReportOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( event_log_level = 'error' , max_errors = None , local_vars_configuration = None ) \u00b6 DataFlowAssembleReportOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint event_log_level () property writable \u00b6 Gets the event_log_level of this DataFlowAssembleReportOptions. # noqa: E501 :return: The event_log_level of this DataFlowAssembleReportOptions. # noqa: E501 :rtype: str max_errors () property writable \u00b6 Gets the max_errors of this DataFlowAssembleReportOptions. # noqa: E501 :return: The max_errors of this DataFlowAssembleReportOptions. # noqa: E501 :rtype: int to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model data_flow_assemble_report_single_task \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowAssembleReportSingleTask \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( chunks = None , errors = None , progress = None , status = None , task_type = None , local_vars_configuration = None ) \u00b6 DataFlowAssembleReportSingleTask - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint chunks () property writable \u00b6 Gets the chunks of this DataFlowAssembleReportSingleTask. # noqa: E501 :return: The chunks of this DataFlowAssembleReportSingleTask. # noqa: E501 :rtype: DataFlowAssembleReportChunks errors () property writable \u00b6 Gets the errors of this DataFlowAssembleReportSingleTask. # noqa: E501 :return: The errors of this DataFlowAssembleReportSingleTask. # noqa: E501 :rtype: list[DataFlowAssembleReportErrors] progress () property writable \u00b6 Gets the progress of this DataFlowAssembleReportSingleTask. # noqa: E501 :return: The progress of this DataFlowAssembleReportSingleTask. # noqa: E501 :rtype: float status () property writable \u00b6 Gets the status of this DataFlowAssembleReportSingleTask. # noqa: E501 :return: The status of this DataFlowAssembleReportSingleTask. # noqa: E501 :rtype: str task_type () property writable \u00b6 Gets the task_type of this DataFlowAssembleReportSingleTask. # noqa: E501 :return: The task_type of this DataFlowAssembleReportSingleTask. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model data_flow_load_into_knowledge_graph_task \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowLoadIntoKnowledgeGraphTask \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_flow = None , save = None , timestamp = None , local_vars_configuration = None ) \u00b6 DataFlowLoadIntoKnowledgeGraphTask - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_flow () property writable \u00b6 Gets the data_flow of this DataFlowLoadIntoKnowledgeGraphTask. # noqa: E501 :return: The data_flow of this DataFlowLoadIntoKnowledgeGraphTask. # noqa: E501 :rtype: ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow save () property writable \u00b6 Gets the save of this DataFlowLoadIntoKnowledgeGraphTask. # noqa: E501 :return: The save of this DataFlowLoadIntoKnowledgeGraphTask. # noqa: E501 :rtype: object timestamp () property writable \u00b6 Gets the timestamp of this DataFlowLoadIntoKnowledgeGraphTask. # noqa: E501 :return: The timestamp of this DataFlowLoadIntoKnowledgeGraphTask. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model data_flow_template \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowTemplate \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( config = None , data_flow = None , local_vars_configuration = None ) \u00b6 DataFlowTemplate - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint config () property writable \u00b6 Gets the config of this DataFlowTemplate. # noqa: E501 :return: The config of this DataFlowTemplate. # noqa: E501 :rtype: object data_flow () property writable \u00b6 Gets the data_flow of this DataFlowTemplate. # noqa: E501 :return: The data_flow of this DataFlowTemplate. # noqa: E501 :rtype: list[object] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model data_flow_template_list_item \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowTemplateListItem \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( created_at = None , description = None , df_tpl_key = None , name = None , proj_key = None , public = None , updated_at = None , local_vars_configuration = None ) \u00b6 DataFlowTemplateListItem - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint created_at () property writable \u00b6 Gets the created_at of this DataFlowTemplateListItem. # noqa: E501 :return: The created_at of this DataFlowTemplateListItem. # noqa: E501 :rtype: float description () property writable \u00b6 Gets the description of this DataFlowTemplateListItem. # noqa: E501 :return: The description of this DataFlowTemplateListItem. # noqa: E501 :rtype: str df_tpl_key () property writable \u00b6 Gets the df_tpl_key of this DataFlowTemplateListItem. # noqa: E501 :return: The df_tpl_key of this DataFlowTemplateListItem. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this DataFlowTemplateListItem. # noqa: E501 :return: The name of this DataFlowTemplateListItem. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this DataFlowTemplateListItem. # noqa: E501 :return: The proj_key of this DataFlowTemplateListItem. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this DataFlowTemplateListItem. # noqa: E501 :return: The public of this DataFlowTemplateListItem. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model updated_at () property writable \u00b6 Gets the updated_at of this DataFlowTemplateListItem. # noqa: E501 :return: The updated_at of this DataFlowTemplateListItem. # noqa: E501 :rtype: float data_flow_template_variable \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowTemplateVariable \u00b6 Bases: object Do not edit the class manually. allowable_values = [ STRING , BOOLEAN , NUMBER , INTEGER , DATACATALOGID , DICTIONARYID , KNOWLEDGEGRAPHID , MODELCONFIGURATIONID , FILE , SECRETSTRING , ELASTICID , DATACATALOGCOLLECTION , DICTIONARYCOLLECTION , KNOWLEDGEGRAPHCOLLECTION , CCSCOLLECTION , DOCUMENTSOURCES ] class-attribute \u00b6 Attributes: Name Type Description openapi_types dict The key is attribute name and the value is attribute type. attribute_map dict The key is attribute name and the value is json key in definition. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( local_vars_configuration = None ) \u00b6 DataFlowTemplateVariable - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model data_flow_topology_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowTopologyOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( variables = None , local_vars_configuration = None ) \u00b6 DataFlowTopologyOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this DataFlowTopologyOptions. # noqa: E501 :return: The variables of this DataFlowTopologyOptions. # noqa: E501 :rtype: dict(str, object) data_index_upload_file_source \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataIndexUploadFileSource \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( file_url = None , scratch_files_id = None , local_vars_configuration = None ) \u00b6 DataIndexUploadFileSource - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint file_url () property writable \u00b6 Gets the file_url of this DataIndexUploadFileSource. # noqa: E501 File URL to be converted and uploaded to the data index # noqa: E501 :return: The file_url of this DataIndexUploadFileSource. # noqa: E501 :rtype: str scratch_files_id () property writable \u00b6 Gets the scratch_files_id of this DataIndexUploadFileSource. # noqa: E501 List of CCS's scratch files id to be converted and uploaded to the data index # noqa: E501 :return: The scratch_files_id of this DataIndexUploadFileSource. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model dictionary \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech Dictionary \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collections = None , copy_of = None , created_at = None , created_by = None , description = None , dict_key = None , name = None , proj_key = None , public = None , local_vars_configuration = None ) \u00b6 Dictionary - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collections () property writable \u00b6 Gets the collections of this Dictionary. # noqa: E501 :return: The collections of this Dictionary. # noqa: E501 :rtype: list[DictionaryCollection] copy_of () property writable \u00b6 Gets the copy_of of this Dictionary. # noqa: E501 :return: The copy_of of this Dictionary. # noqa: E501 :rtype: str created_at () property writable \u00b6 Gets the created_at of this Dictionary. # noqa: E501 :return: The created_at of this Dictionary. # noqa: E501 :rtype: float created_by () property writable \u00b6 Gets the created_by of this Dictionary. # noqa: E501 :return: The created_by of this Dictionary. # noqa: E501 :rtype: str description () property writable \u00b6 Gets the description of this Dictionary. # noqa: E501 :return: The description of this Dictionary. # noqa: E501 :rtype: str dict_key () property writable \u00b6 Gets the dict_key of this Dictionary. # noqa: E501 :return: The dict_key of this Dictionary. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this Dictionary. # noqa: E501 :return: The name of this Dictionary. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this Dictionary. # noqa: E501 :return: The proj_key of this Dictionary. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this Dictionary. # noqa: E501 :return: The public of this Dictionary. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model dictionary_clone_result \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DictionaryCloneResult \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( clone_task = None , dictionary = None , local_vars_configuration = None ) \u00b6 DictionaryCloneResult - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint clone_task () property writable \u00b6 Gets the clone_task of this DictionaryCloneResult. # noqa: E501 :return: The clone_task of this DictionaryCloneResult. # noqa: E501 :rtype: Task dictionary () property writable \u00b6 Gets the dictionary of this DictionaryCloneResult. # noqa: E501 :return: The dictionary of this DictionaryCloneResult. # noqa: E501 :rtype: Dictionary to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model dictionary_collection \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DictionaryCollection \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( item_count = None , name = None , local_vars_configuration = None ) \u00b6 DictionaryCollection - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint item_count () property writable \u00b6 Gets the item_count of this DictionaryCollection. # noqa: E501 :return: The item_count of this DictionaryCollection. # noqa: E501 :rtype: int name () property writable \u00b6 Gets the name of this DictionaryCollection. # noqa: E501 :return: The name of this DictionaryCollection. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model dictionary_collection_csv_data \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DictionaryCollectionCsvData \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( body = None , header = None , local_vars_configuration = None ) \u00b6 DictionaryCollectionCsvData - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint body () property writable \u00b6 Gets the body of this DictionaryCollectionCsvData. # noqa: E501 :return: The body of this DictionaryCollectionCsvData. # noqa: E501 :rtype: str header () property writable \u00b6 Gets the header of this DictionaryCollectionCsvData. # noqa: E501 :return: The header of this DictionaryCollectionCsvData. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model dictionary_collection_patch \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DictionaryCollectionPatch \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( op = None , path = None , value = None , local_vars_configuration = None ) \u00b6 DictionaryCollectionPatch - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint op () property writable \u00b6 Gets the op of this DictionaryCollectionPatch. # noqa: E501 :return: The op of this DictionaryCollectionPatch. # noqa: E501 :rtype: str path () property writable \u00b6 Gets the path of this DictionaryCollectionPatch. # noqa: E501 A path (see JSON patch specification) in the format /{objectid} for existing objects, or /- for new objects ( add operations). # noqa: E501 :return: The path of this DictionaryCollectionPatch. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model value () property writable \u00b6 Gets the value of this DictionaryCollectionPatch. # noqa: E501 :return: The value of this DictionaryCollectionPatch. # noqa: E501 :rtype: DictionaryEntry dictionary_entry \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DictionaryEntry \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , synonyms = None , local_vars_configuration = None ) \u00b6 DictionaryEntry - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this DictionaryEntry. # noqa: E501 :return: The name of this DictionaryEntry. # noqa: E501 :rtype: str synonyms () property writable \u00b6 Gets the synonyms of this DictionaryEntry. # noqa: E501 :return: The synonyms of this DictionaryEntry. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model dictionary_import_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DictionaryImportOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( options = None , target = None , local_vars_configuration = None ) \u00b6 DictionaryImportOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint options () property writable \u00b6 Gets the options of this DictionaryImportOptions. # noqa: E501 :return: The options of this DictionaryImportOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesFromMongoOptions target () property writable \u00b6 Gets the target of this DictionaryImportOptions. # noqa: E501 :return: The target of this DictionaryImportOptions. # noqa: E501 :rtype: ProjectProjKeyDictionariesFromMongoTarget to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model dictionary_import_result \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DictionaryImportResult \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( dictionary = None , import_task = None , local_vars_configuration = None ) \u00b6 DictionaryImportResult - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint dictionary () property writable \u00b6 Gets the dictionary of this DictionaryImportResult. # noqa: E501 :return: The dictionary of this DictionaryImportResult. # noqa: E501 :rtype: Dictionary import_task () property writable \u00b6 Gets the import_task of this DictionaryImportResult. # noqa: E501 :return: The import_task of this DictionaryImportResult. # noqa: E501 :rtype: Task to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model elastic_coordinates \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ElasticCoordinates \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( ca_certificate_base64 = None , dangerously_disable_ssl_validation = None , hosts = None , local_vars_configuration = None ) \u00b6 ElasticCoordinates - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint ca_certificate_base64 () property writable \u00b6 Gets the ca_certificate_base64 of this ElasticCoordinates. # noqa: E501 :return: The ca_certificate_base64 of this ElasticCoordinates. # noqa: E501 :rtype: str dangerously_disable_ssl_validation () property writable \u00b6 Gets the dangerously_disable_ssl_validation of this ElasticCoordinates. # noqa: E501 :return: The dangerously_disable_ssl_validation of this ElasticCoordinates. # noqa: E501 :rtype: bool hosts () property writable \u00b6 Gets the hosts of this ElasticCoordinates. # noqa: E501 :return: The hosts of this ElasticCoordinates. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model elastic_index_search_query_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ElasticIndexSearchQueryOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( source = None , aggs = None , _from = None , query = None , size = None , sort = None , local_vars_configuration = None ) \u00b6 ElasticIndexSearchQueryOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint _from () property writable \u00b6 Gets the _from of this ElasticIndexSearchQueryOptions. # noqa: E501 :return: The _from of this ElasticIndexSearchQueryOptions. # noqa: E501 :rtype: float aggs () property writable \u00b6 Gets the aggs of this ElasticIndexSearchQueryOptions. # noqa: E501 :return: The aggs of this ElasticIndexSearchQueryOptions. # noqa: E501 :rtype: object query () property writable \u00b6 Gets the query of this ElasticIndexSearchQueryOptions. # noqa: E501 :return: The query of this ElasticIndexSearchQueryOptions. # noqa: E501 :rtype: dict(str, object) size () property writable \u00b6 Gets the size of this ElasticIndexSearchQueryOptions. # noqa: E501 :return: The size of this ElasticIndexSearchQueryOptions. # noqa: E501 :rtype: float sort () property writable \u00b6 Gets the sort of this ElasticIndexSearchQueryOptions. # noqa: E501 :return: The sort of this ElasticIndexSearchQueryOptions. # noqa: E501 :rtype: list[object] source () property writable \u00b6 Gets the source of this ElasticIndexSearchQueryOptions. # noqa: E501 :return: The source of this ElasticIndexSearchQueryOptions. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model elastic_index_search_results \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ElasticIndexSearchResults \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( aggregations = None , items = None , total = None , local_vars_configuration = None ) \u00b6 ElasticIndexSearchResults - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint aggregations () property writable \u00b6 Gets the aggregations of this ElasticIndexSearchResults. # noqa: E501 :return: The aggregations of this ElasticIndexSearchResults. # noqa: E501 :rtype: object items () property writable \u00b6 Gets the items of this ElasticIndexSearchResults. # noqa: E501 :return: The items of this ElasticIndexSearchResults. # noqa: E501 :rtype: list[object] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model total () property writable \u00b6 Gets the total of this ElasticIndexSearchResults. # noqa: E501 :return: The total of this ElasticIndexSearchResults. # noqa: E501 :rtype: float entity_annotation \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech EntityAnnotation \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( match = None , range = None , subtype = None , type = None , local_vars_configuration = None ) \u00b6 EntityAnnotation - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint match () property writable \u00b6 Gets the match of this EntityAnnotation. # noqa: E501 :return: The match of this EntityAnnotation. # noqa: E501 :rtype: str range () property writable \u00b6 Gets the range of this EntityAnnotation. # noqa: E501 2-Tuple representing the low and high indexes of the matching substring # noqa: E501 :return: The range of this EntityAnnotation. # noqa: E501 :rtype: list[int] subtype () property writable \u00b6 Gets the subtype of this EntityAnnotation. # noqa: E501 :return: The subtype of this EntityAnnotation. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this EntityAnnotation. # noqa: E501 :return: The type of this EntityAnnotation. # noqa: E501 :rtype: str entity_annotation_descriptor \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech EntityAnnotationDescriptor \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_fields = None , description = None , key = None , local_vars_configuration = None ) \u00b6 EntityAnnotationDescriptor - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_fields () property writable \u00b6 Gets the data_fields of this EntityAnnotationDescriptor. # noqa: E501 :return: The data_fields of this EntityAnnotationDescriptor. # noqa: E501 :rtype: list[str] description () property writable \u00b6 Gets the description of this EntityAnnotationDescriptor. # noqa: E501 :return: The description of this EntityAnnotationDescriptor. # noqa: E501 :rtype: str key () property writable \u00b6 Gets the key of this EntityAnnotationDescriptor. # noqa: E501 :return: The key of this EntityAnnotationDescriptor. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model error_response \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ErrorResponse \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( error_code = None , error_message = None , local_vars_configuration = None ) \u00b6 ErrorResponse - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint error_code () property writable \u00b6 Gets the error_code of this ErrorResponse. # noqa: E501 :return: The error_code of this ErrorResponse. # noqa: E501 :rtype: str error_message () property writable \u00b6 Gets the error_message of this ErrorResponse. # noqa: E501 :return: The error_message of this ErrorResponse. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model flavours_quota \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech FlavoursQuota \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( display_name = None , name = None , quota = None , local_vars_configuration = None ) \u00b6 FlavoursQuota - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint display_name () property writable \u00b6 Gets the display_name of this FlavoursQuota. # noqa: E501 :return: The display_name of this FlavoursQuota. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this FlavoursQuota. # noqa: E501 :return: The name of this FlavoursQuota. # noqa: E501 :rtype: str quota () property writable \u00b6 Gets the quota of this FlavoursQuota. # noqa: E501 :return: The quota of this FlavoursQuota. # noqa: E501 :rtype: int to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model fully_rendered_data_flow \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech FullyRenderedDataFlow \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( target_bag = None , variables = None , local_vars_configuration = None ) \u00b6 FullyRenderedDataFlow - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint target_bag () property writable \u00b6 Gets the target_bag of this FullyRenderedDataFlow. # noqa: E501 :return: The target_bag of this FullyRenderedDataFlow. # noqa: E501 :rtype: ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this FullyRenderedDataFlow. # noqa: E501 :return: The variables of this FullyRenderedDataFlow. # noqa: E501 :rtype: dict(str, object) image_cells \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ImageCells \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data = None , local_vars_configuration = None ) \u00b6 ImageCells - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data () property writable \u00b6 Gets the data of this ImageCells. # noqa: E501 A 6-tuple consisting of x1, y1, x2, y2, font, coordinates # noqa: E501 :return: The data of this ImageCells. # noqa: E501 :rtype: list[object] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model image_info \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ImageInfo \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( height = None , width = None , local_vars_configuration = None ) \u00b6 ImageInfo - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint height () property writable \u00b6 Gets the height of this ImageInfo. # noqa: E501 :return: The height of this ImageInfo. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model width () property writable \u00b6 Gets the width of this ImageInfo. # noqa: E501 :return: The width of this ImageInfo. # noqa: E501 :rtype: float image_metadata \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ImageMetadata \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( cells = None , info = None , local_vars_configuration = None ) \u00b6 ImageMetadata - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint cells () property writable \u00b6 Gets the cells of this ImageMetadata. # noqa: E501 :return: The cells of this ImageMetadata. # noqa: E501 :rtype: ImageCells info () property writable \u00b6 Gets the info of this ImageMetadata. # noqa: E501 :return: The info of this ImageMetadata. # noqa: E501 :rtype: ImageInfo to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model image_source \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ImageSource \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( proj_key = None , scratch_id = None , url = None , local_vars_configuration = None ) \u00b6 ImageSource - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint proj_key () property writable \u00b6 Gets the proj_key of this ImageSource. # noqa: E501 :return: The proj_key of this ImageSource. # noqa: E501 :rtype: str scratch_id () property writable \u00b6 Gets the scratch_id of this ImageSource. # noqa: E501 :return: The scratch_id of this ImageSource. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this ImageSource. # noqa: E501 :return: The url of this ImageSource. # noqa: E501 :rtype: str import_from_elastic_to_data_catalog_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ImportFromElasticToDataCatalogOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( coordinates = None , elastic_id = None , parameters = None , local_vars_configuration = None ) \u00b6 ImportFromElasticToDataCatalogOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint coordinates () property writable \u00b6 Gets the coordinates of this ImportFromElasticToDataCatalogOptions. # noqa: E501 :return: The coordinates of this ImportFromElasticToDataCatalogOptions. # noqa: E501 :rtype: ElasticCoordinates elastic_id () property writable \u00b6 Gets the elastic_id of this ImportFromElasticToDataCatalogOptions. # noqa: E501 :return: The elastic_id of this ImportFromElasticToDataCatalogOptions. # noqa: E501 :rtype: str parameters () property writable \u00b6 Gets the parameters of this ImportFromElasticToDataCatalogOptions. # noqa: E501 :return: The parameters of this ImportFromElasticToDataCatalogOptions. # noqa: E501 :rtype: ImportFromElasticToDataCatalogOptionsParameters to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model import_from_elastic_to_data_catalog_options_parameters \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ImportFromElasticToDataCatalogOptionsParameters \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( import_s3_data = None , index = None , page_size = None , query_options = None , s3 = None , local_vars_configuration = None ) \u00b6 ImportFromElasticToDataCatalogOptionsParameters - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint import_s3_data () property writable \u00b6 Gets the import_s3_data of this ImportFromElasticToDataCatalogOptionsParameters. # noqa: E501 :return: The import_s3_data of this ImportFromElasticToDataCatalogOptionsParameters. # noqa: E501 :rtype: bool index () property writable \u00b6 Gets the index of this ImportFromElasticToDataCatalogOptionsParameters. # noqa: E501 :return: The index of this ImportFromElasticToDataCatalogOptionsParameters. # noqa: E501 :rtype: str page_size () property writable \u00b6 Gets the page_size of this ImportFromElasticToDataCatalogOptionsParameters. # noqa: E501 :return: The page_size of this ImportFromElasticToDataCatalogOptionsParameters. # noqa: E501 :rtype: float query_options () property writable \u00b6 Gets the query_options of this ImportFromElasticToDataCatalogOptionsParameters. # noqa: E501 :return: The query_options of this ImportFromElasticToDataCatalogOptionsParameters. # noqa: E501 :rtype: ImportFromElasticToDataCatalogOptionsParametersQueryOptions s3 () property writable \u00b6 Gets the s3 of this ImportFromElasticToDataCatalogOptionsParameters. # noqa: E501 :return: The s3 of this ImportFromElasticToDataCatalogOptionsParameters. # noqa: E501 :rtype: ImportFromElasticToDataCatalogS3Coords to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model import_from_elastic_to_data_catalog_options_parameters_query_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ImportFromElasticToDataCatalogOptionsParametersQueryOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( source = None , query = None , size = None , local_vars_configuration = None ) \u00b6 ImportFromElasticToDataCatalogOptionsParametersQueryOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint query () property writable \u00b6 Gets the query of this ImportFromElasticToDataCatalogOptionsParametersQueryOptions. # noqa: E501 :return: The query of this ImportFromElasticToDataCatalogOptionsParametersQueryOptions. # noqa: E501 :rtype: dict(str, object) size () property writable \u00b6 Gets the size of this ImportFromElasticToDataCatalogOptionsParametersQueryOptions. # noqa: E501 :return: The size of this ImportFromElasticToDataCatalogOptionsParametersQueryOptions. # noqa: E501 :rtype: float source () property writable \u00b6 Gets the source of this ImportFromElasticToDataCatalogOptionsParametersQueryOptions. # noqa: E501 :return: The source of this ImportFromElasticToDataCatalogOptionsParametersQueryOptions. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model import_from_elastic_to_data_catalog_s3_coords \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ImportFromElasticToDataCatalogS3Coords \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( access_key = None , bucket = None , host = None , key_prefix = None , location = None , port = None , secret_key = None , ssl = None , verify_ssl = None , local_vars_configuration = None ) \u00b6 ImportFromElasticToDataCatalogS3Coords - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint access_key () property writable \u00b6 Gets the access_key of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :return: The access_key of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :rtype: str bucket () property writable \u00b6 Gets the bucket of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :return: The bucket of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :rtype: str host () property writable \u00b6 Gets the host of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :return: The host of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :rtype: str key_prefix () property writable \u00b6 Gets the key_prefix of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :return: The key_prefix of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :rtype: str location () property writable \u00b6 Gets the location of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :return: The location of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :rtype: str port () property writable \u00b6 Gets the port of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :return: The port of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :rtype: int secret_key () property writable \u00b6 Gets the secret_key of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :return: The secret_key of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :rtype: str ssl () property writable \u00b6 Gets the ssl of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :return: The ssl of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model verify_ssl () property writable \u00b6 Gets the verify_ssl of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :return: The verify_ssl of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :rtype: bool import_to_data_catalog_collection_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ImportToDataCatalogCollectionOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( ccs = None , elastic = None , url = None , local_vars_configuration = None ) \u00b6 ImportToDataCatalogCollectionOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint ccs () property writable \u00b6 Gets the ccs of this ImportToDataCatalogCollectionOptions. # noqa: E501 :return: The ccs of this ImportToDataCatalogCollectionOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs elastic () property writable \u00b6 Gets the elastic of this ImportToDataCatalogCollectionOptions. # noqa: E501 :return: The elastic of this ImportToDataCatalogCollectionOptions. # noqa: E501 :rtype: ImportFromElasticToDataCatalogOptions to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this ImportToDataCatalogCollectionOptions. # noqa: E501 :return: The url of this ImportToDataCatalogCollectionOptions. # noqa: E501 :rtype: str import_to_data_catalog_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ImportToDataCatalogOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( coordinates = None , url = None , local_vars_configuration = None ) \u00b6 ImportToDataCatalogOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint coordinates () property writable \u00b6 Gets the coordinates of this ImportToDataCatalogOptions. # noqa: E501 :return: The coordinates of this ImportToDataCatalogOptions. # noqa: E501 :rtype: MongoS3CoordinatesWithCollectionList to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this ImportToDataCatalogOptions. # noqa: E501 :return: The url of this ImportToDataCatalogOptions. # noqa: E501 :rtype: str infer_project_data_catalog_category_schema \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech InferProjectDataCatalogCategorySchema \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( sample_size = None , local_vars_configuration = None ) \u00b6 InferProjectDataCatalogCategorySchema - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint sample_size () property writable \u00b6 Gets the sample_size of this InferProjectDataCatalogCategorySchema. # noqa: E501 :return: The sample_size of this InferProjectDataCatalogCategorySchema. # noqa: E501 :rtype: int to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model inline_object \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech InlineObject \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( snapshot = None , local_vars_configuration = None ) \u00b6 InlineObject - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint snapshot () property writable \u00b6 Gets the snapshot of this InlineObject. # noqa: E501 :return: The snapshot of this InlineObject. # noqa: E501 :rtype: TakeSnapshotSettingsBackendAware to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model inline_object1 \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech InlineObject1 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( access_token = None , catalog_document_collections = None , ccs_document_collections = None , data_catalogs = None , entity_mappings = None , models = None , local_vars_configuration = None ) \u00b6 InlineObject1 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint access_token () property writable \u00b6 Gets the access_token of this InlineObject1. # noqa: E501 :return: The access_token of this InlineObject1. # noqa: E501 :rtype: str catalog_document_collections () property writable \u00b6 Gets the catalog_document_collections of this InlineObject1. # noqa: E501 :return: The catalog_document_collections of this InlineObject1. # noqa: E501 :rtype: list[CatalogReference] ccs_document_collections () property writable \u00b6 Gets the ccs_document_collections of this InlineObject1. # noqa: E501 :return: The ccs_document_collections of this InlineObject1. # noqa: E501 :rtype: list[CcsCollectionReference] data_catalogs () property writable \u00b6 Gets the data_catalogs of this InlineObject1. # noqa: E501 :return: The data_catalogs of this InlineObject1. # noqa: E501 :rtype: list[CatalogReference] entity_mappings () property writable \u00b6 Gets the entity_mappings of this InlineObject1. # noqa: E501 :return: The entity_mappings of this InlineObject1. # noqa: E501 :rtype: dict(str, str) models () property writable \u00b6 Gets the models of this InlineObject1. # noqa: E501 :return: The models of this InlineObject1. # noqa: E501 :rtype: list[CpsModelReference] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model inline_object2 \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech InlineObject2 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( snapshot = None , local_vars_configuration = None ) \u00b6 InlineObject2 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint snapshot () property writable \u00b6 Gets the snapshot of this InlineObject2. # noqa: E501 :return: The snapshot of this InlineObject2. # noqa: E501 :rtype: TakeSnapshotSettings to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model inline_object3 \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech InlineObject3 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( info = None , local_vars_configuration = None ) \u00b6 InlineObject3 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint info () property writable \u00b6 Gets the info of this InlineObject3. # noqa: E501 :return: The info of this InlineObject3. # noqa: E501 :rtype: ProjectProjKeyBagsBagKeyTasksExportDatasetInfo to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model inline_response200 \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech InlineResponse200 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( elastic_query_max_size = None , local_vars_configuration = None ) \u00b6 InlineResponse200 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint elastic_query_max_size () property writable \u00b6 Gets the elastic_query_max_size of this InlineResponse200. # noqa: E501 :return: The elastic_query_max_size of this InlineResponse200. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model inline_response2001 \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech InlineResponse2001 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( processing_models = None , local_vars_configuration = None ) \u00b6 InlineResponse2001 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint processing_models () property writable \u00b6 Gets the processing_models of this InlineResponse2001. # noqa: E501 :return: The processing_models of this InlineResponse2001. # noqa: E501 :rtype: list[ProcessingModelDescription] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model inline_response2002 \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech InlineResponse2002 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( done = None , result = None , task_id = None , task_status = None , local_vars_configuration = None ) \u00b6 InlineResponse2002 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint done () property writable \u00b6 Gets the done of this InlineResponse2002. # noqa: E501 :return: The done of this InlineResponse2002. # noqa: E501 :rtype: bool result () property writable \u00b6 Gets the result of this InlineResponse2002. # noqa: E501 :return: The result of this InlineResponse2002. # noqa: E501 :rtype: object task_id () property writable \u00b6 Gets the task_id of this InlineResponse2002. # noqa: E501 :return: The task_id of this InlineResponse2002. # noqa: E501 :rtype: str task_status () property writable \u00b6 Gets the task_status of this InlineResponse2002. # noqa: E501 :return: The task_status of this InlineResponse2002. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model inline_response2003 \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech InlineResponse2003 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( avail_cpu_slots = None , avail_mem_slots = None , avail_slots = None , name = None , num_nodes = None , number_kgs = None , running_kgs = None , workers_pool = None , local_vars_configuration = None ) \u00b6 InlineResponse2003 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint avail_cpu_slots () property writable \u00b6 Gets the avail_cpu_slots of this InlineResponse2003. # noqa: E501 :return: The avail_cpu_slots of this InlineResponse2003. # noqa: E501 :rtype: int avail_mem_slots () property writable \u00b6 Gets the avail_mem_slots of this InlineResponse2003. # noqa: E501 :return: The avail_mem_slots of this InlineResponse2003. # noqa: E501 :rtype: int avail_slots () property writable \u00b6 Gets the avail_slots of this InlineResponse2003. # noqa: E501 :return: The avail_slots of this InlineResponse2003. # noqa: E501 :rtype: int name () property writable \u00b6 Gets the name of this InlineResponse2003. # noqa: E501 :return: The name of this InlineResponse2003. # noqa: E501 :rtype: str num_nodes () property writable \u00b6 Gets the num_nodes of this InlineResponse2003. # noqa: E501 :return: The num_nodes of this InlineResponse2003. # noqa: E501 :rtype: int number_kgs () property writable \u00b6 Gets the number_kgs of this InlineResponse2003. # noqa: E501 :return: The number_kgs of this InlineResponse2003. # noqa: E501 :rtype: int running_kgs () property writable \u00b6 Gets the running_kgs of this InlineResponse2003. # noqa: E501 :return: The running_kgs of this InlineResponse2003. # noqa: E501 :rtype: int to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model workers_pool () property writable \u00b6 Gets the workers_pool of this InlineResponse2003. # noqa: E501 :return: The workers_pool of this InlineResponse2003. # noqa: E501 :rtype: str kg_snapshot \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech KgSnapshot \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_flow = None , is_current = None , name = None , project_task_id = None , task_type = None , timestamp = None , local_vars_configuration = None ) \u00b6 KgSnapshot - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_flow () property writable \u00b6 Gets the data_flow of this KgSnapshot. # noqa: E501 :return: The data_flow of this KgSnapshot. # noqa: E501 :rtype: object is_current () property writable \u00b6 Gets the is_current of this KgSnapshot. # noqa: E501 :return: The is_current of this KgSnapshot. # noqa: E501 :rtype: bool name () property writable \u00b6 Gets the name of this KgSnapshot. # noqa: E501 :return: The name of this KgSnapshot. # noqa: E501 :rtype: str project_task_id () property writable \u00b6 Gets the project_task_id of this KgSnapshot. # noqa: E501 :return: The project_task_id of this KgSnapshot. # noqa: E501 :rtype: str task_type () property writable \u00b6 Gets the task_type of this KgSnapshot. # noqa: E501 :return: The task_type of this KgSnapshot. # noqa: E501 :rtype: str timestamp () property writable \u00b6 Gets the timestamp of this KgSnapshot. # noqa: E501 :return: The timestamp of this KgSnapshot. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model kgc_data_input \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech KgcDataInput \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( config = None , data_flow = None , local_vars_configuration = None ) \u00b6 KgcDataInput - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint config () property writable \u00b6 Gets the config of this KgcDataInput. # noqa: E501 :return: The config of this KgcDataInput. # noqa: E501 :rtype: object data_flow () property writable \u00b6 Gets the data_flow of this KgcDataInput. # noqa: E501 :return: The data_flow of this KgcDataInput. # noqa: E501 :rtype: list[dict(str, object)] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model kibana_saved_queries_result \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech KibanaSavedQueriesResult \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , fields = None , query = None , title = None , local_vars_configuration = None ) \u00b6 KibanaSavedQueriesResult - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this KibanaSavedQueriesResult. # noqa: E501 :return: The description of this KibanaSavedQueriesResult. # noqa: E501 :rtype: str fields () property writable \u00b6 Gets the fields of this KibanaSavedQueriesResult. # noqa: E501 :return: The fields of this KibanaSavedQueriesResult. # noqa: E501 :rtype: list[str] query () property writable \u00b6 Gets the query of this KibanaSavedQueriesResult. # noqa: E501 :return: The query of this KibanaSavedQueriesResult. # noqa: E501 :rtype: str title () property writable \u00b6 Gets the title of this KibanaSavedQueriesResult. # noqa: E501 :return: The title of this KibanaSavedQueriesResult. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model knowledge_graph_authentication_callback \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech KnowledgeGraphAuthenticationCallback \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( callback_url = None , local_vars_configuration = None ) \u00b6 KnowledgeGraphAuthenticationCallback - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint callback_url () property writable \u00b6 Gets the callback_url of this KnowledgeGraphAuthenticationCallback. # noqa: E501 :return: The callback_url of this KnowledgeGraphAuthenticationCallback. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model knowledge_graph_chart_upgrade_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech KnowledgeGraphChartUpgradeOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( chart = None , local_vars_configuration = None ) \u00b6 KnowledgeGraphChartUpgradeOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint chart () property writable \u00b6 Gets the chart of this KnowledgeGraphChartUpgradeOptions. # noqa: E501 :return: The chart of this KnowledgeGraphChartUpgradeOptions. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model knowledge_graph_deployment_recreation_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech KnowledgeGraphDeploymentRecreationOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( force = None , local_vars_configuration = None ) \u00b6 KnowledgeGraphDeploymentRecreationOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint force () property writable \u00b6 Gets the force of this KnowledgeGraphDeploymentRecreationOptions. # noqa: E501 :return: The force of this KnowledgeGraphDeploymentRecreationOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model knowledge_graph_snapshot_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech KnowledgeGraphSnapshotOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , local_vars_configuration = None ) \u00b6 KnowledgeGraphSnapshotOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this KnowledgeGraphSnapshotOptions. # noqa: E501 :return: The name of this KnowledgeGraphSnapshotOptions. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model knowledge_graph_system_information \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech KnowledgeGraphSystemInformation \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( backend = None , bag_domain = None , bag_key = None , bag_url = None , name = None , proj_key = None , project_name = None , public = None , slug = None , timestamp = None , local_vars_configuration = None ) \u00b6 KnowledgeGraphSystemInformation - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint backend () property writable \u00b6 Gets the backend of this KnowledgeGraphSystemInformation. # noqa: E501 :return: The backend of this KnowledgeGraphSystemInformation. # noqa: E501 :rtype: dict(str, SystemKgsBackend) bag_domain () property writable \u00b6 Gets the bag_domain of this KnowledgeGraphSystemInformation. # noqa: E501 :return: The bag_domain of this KnowledgeGraphSystemInformation. # noqa: E501 :rtype: str bag_key () property writable \u00b6 Gets the bag_key of this KnowledgeGraphSystemInformation. # noqa: E501 :return: The bag_key of this KnowledgeGraphSystemInformation. # noqa: E501 :rtype: str bag_url () property writable \u00b6 Gets the bag_url of this KnowledgeGraphSystemInformation. # noqa: E501 :return: The bag_url of this KnowledgeGraphSystemInformation. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this KnowledgeGraphSystemInformation. # noqa: E501 :return: The name of this KnowledgeGraphSystemInformation. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this KnowledgeGraphSystemInformation. # noqa: E501 :return: The proj_key of this KnowledgeGraphSystemInformation. # noqa: E501 :rtype: str project_name () property writable \u00b6 Gets the project_name of this KnowledgeGraphSystemInformation. # noqa: E501 :return: The project_name of this KnowledgeGraphSystemInformation. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this KnowledgeGraphSystemInformation. # noqa: E501 :return: The public of this KnowledgeGraphSystemInformation. # noqa: E501 :rtype: bool slug () property writable \u00b6 Gets the slug of this KnowledgeGraphSystemInformation. # noqa: E501 :return: The slug of this KnowledgeGraphSystemInformation. # noqa: E501 :rtype: str timestamp () property writable \u00b6 Gets the timestamp of this KnowledgeGraphSystemInformation. # noqa: E501 :return: The timestamp of this KnowledgeGraphSystemInformation. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model linked_ccs_instances \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech LinkedCcsInstances \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , id = None , local_vars_configuration = None ) \u00b6 LinkedCcsInstances - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this LinkedCcsInstances. # noqa: E501 :return: The description of this LinkedCcsInstances. # noqa: E501 :rtype: str id () property writable \u00b6 Gets the id of this LinkedCcsInstances. # noqa: E501 :return: The id of this LinkedCcsInstances. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model load_data_flow_into_knowledge_graph_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech LoadDataFlowIntoKnowledgeGraphOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_flow = None , render = None , save = None , local_vars_configuration = None ) \u00b6 LoadDataFlowIntoKnowledgeGraphOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_flow () property writable \u00b6 Gets the data_flow of this LoadDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :return: The data_flow of this LoadDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :rtype: BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow render () property writable \u00b6 Gets the render of this LoadDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :return: The render of this LoadDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :rtype: BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender save () property writable \u00b6 Gets the save of this LoadDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :return: The save of this LoadDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model load_data_flow_into_knowledge_graph_options1 \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech LoadDataFlowIntoKnowledgeGraphOptions1 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( render = None , target = None , local_vars_configuration = None ) \u00b6 LoadDataFlowIntoKnowledgeGraphOptions1 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint render () property writable \u00b6 Gets the render of this LoadDataFlowIntoKnowledgeGraphOptions1. # noqa: E501 :return: The render of this LoadDataFlowIntoKnowledgeGraphOptions1. # noqa: E501 :rtype: ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender target () property writable \u00b6 Gets the target of this LoadDataFlowIntoKnowledgeGraphOptions1. # noqa: E501 :return: The target of this LoadDataFlowIntoKnowledgeGraphOptions1. # noqa: E501 :rtype: ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadTarget to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model load_kgc_data_input \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech LoadKgcDataInput \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( dataflow = None , target = None , local_vars_configuration = None ) \u00b6 LoadKgcDataInput - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint dataflow () property writable \u00b6 Gets the dataflow of this LoadKgcDataInput. # noqa: E501 :return: The dataflow of this LoadKgcDataInput. # noqa: E501 :rtype: LoadKgcDataInputDataflow target () property writable \u00b6 Gets the target of this LoadKgcDataInput. # noqa: E501 :return: The target of this LoadKgcDataInput. # noqa: E501 :rtype: LoadKgcDataInputTarget to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model load_kgc_data_input_dataflow \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech LoadKgcDataInputDataflow \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( config = None , data_flow = None , local_vars_configuration = None ) \u00b6 LoadKgcDataInputDataflow - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint config () property writable \u00b6 Gets the config of this LoadKgcDataInputDataflow. # noqa: E501 :return: The config of this LoadKgcDataInputDataflow. # noqa: E501 :rtype: object data_flow () property writable \u00b6 Gets the data_flow of this LoadKgcDataInputDataflow. # noqa: E501 :return: The data_flow of this LoadKgcDataInputDataflow. # noqa: E501 :rtype: list[object] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model load_kgc_data_input_target \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech LoadKgcDataInputTarget \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( bag_key = None , save = None , local_vars_configuration = None ) \u00b6 LoadKgcDataInputTarget - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bag_key () property writable \u00b6 Gets the bag_key of this LoadKgcDataInputTarget. # noqa: E501 :return: The bag_key of this LoadKgcDataInputTarget. # noqa: E501 :rtype: str save () property writable \u00b6 Gets the save of this LoadKgcDataInputTarget. # noqa: E501 :return: The save of this LoadKgcDataInputTarget. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model model_configuration \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ModelConfiguration \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( configurations = None , created_at = None , created_by = None , description = None , model_config_key = None , name = None , proj_key = None , public = None , supported_annotations = None , local_vars_configuration = None ) \u00b6 ModelConfiguration - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint configurations () property writable \u00b6 Gets the configurations of this ModelConfiguration. # noqa: E501 :return: The configurations of this ModelConfiguration. # noqa: E501 :rtype: dict(str, object) created_at () property writable \u00b6 Gets the created_at of this ModelConfiguration. # noqa: E501 :return: The created_at of this ModelConfiguration. # noqa: E501 :rtype: float created_by () property writable \u00b6 Gets the created_by of this ModelConfiguration. # noqa: E501 :return: The created_by of this ModelConfiguration. # noqa: E501 :rtype: str description () property writable \u00b6 Gets the description of this ModelConfiguration. # noqa: E501 :return: The description of this ModelConfiguration. # noqa: E501 :rtype: str model_config_key () property writable \u00b6 Gets the model_config_key of this ModelConfiguration. # noqa: E501 :return: The model_config_key of this ModelConfiguration. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ModelConfiguration. # noqa: E501 :return: The name of this ModelConfiguration. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ModelConfiguration. # noqa: E501 :return: The proj_key of this ModelConfiguration. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this ModelConfiguration. # noqa: E501 :return: The public of this ModelConfiguration. # noqa: E501 :rtype: bool supported_annotations () property writable \u00b6 Gets the supported_annotations of this ModelConfiguration. # noqa: E501 :return: The supported_annotations of this ModelConfiguration. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model model_supported_annotations_parameters \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ModelSupportedAnnotationsParameters \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( model_config_key = None , proj_key = None , public = None , local_vars_configuration = None ) \u00b6 ModelSupportedAnnotationsParameters - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint model_config_key () property writable \u00b6 Gets the model_config_key of this ModelSupportedAnnotationsParameters. # noqa: E501 :return: The model_config_key of this ModelSupportedAnnotationsParameters. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ModelSupportedAnnotationsParameters. # noqa: E501 :return: The proj_key of this ModelSupportedAnnotationsParameters. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this ModelSupportedAnnotationsParameters. # noqa: E501 :return: The public of this ModelSupportedAnnotationsParameters. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model mongo_coordinates \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech MongoCoordinates \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( database = None , uri = None , local_vars_configuration = None ) \u00b6 MongoCoordinates - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint database () property writable \u00b6 Gets the database of this MongoCoordinates. # noqa: E501 :return: The database of this MongoCoordinates. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model uri () property writable \u00b6 Gets the uri of this MongoCoordinates. # noqa: E501 :return: The uri of this MongoCoordinates. # noqa: E501 :rtype: str mongo_s3_coordinates \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech MongoS3Coordinates \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( mongo = None , s3 = None , local_vars_configuration = None ) \u00b6 MongoS3Coordinates - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint mongo () property writable \u00b6 Gets the mongo of this MongoS3Coordinates. # noqa: E501 :return: The mongo of this MongoS3Coordinates. # noqa: E501 :rtype: MongoCoordinates s3 () property writable \u00b6 Gets the s3 of this MongoS3Coordinates. # noqa: E501 :return: The s3 of this MongoS3Coordinates. # noqa: E501 :rtype: S3Coordinates to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model mongo_s3_coordinates_with_collection_list \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech MongoS3CoordinatesWithCollectionList \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( mongo = None , s3 = None , collections = None , local_vars_configuration = None ) \u00b6 MongoS3CoordinatesWithCollectionList - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collections () property writable \u00b6 Gets the collections of this MongoS3CoordinatesWithCollectionList. # noqa: E501 :return: The collections of this MongoS3CoordinatesWithCollectionList. # noqa: E501 :rtype: list[str] mongo () property writable \u00b6 Gets the mongo of this MongoS3CoordinatesWithCollectionList. # noqa: E501 :return: The mongo of this MongoS3CoordinatesWithCollectionList. # noqa: E501 :rtype: MongoCoordinates s3 () property writable \u00b6 Gets the s3 of this MongoS3CoordinatesWithCollectionList. # noqa: E501 :return: The s3 of this MongoS3CoordinatesWithCollectionList. # noqa: E501 :rtype: S3Coordinates to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model patch_data_catalog_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech PatchDataCatalogOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( category_schemas = None , collections_data_flows = None , description = None , name = None , public = None , topology = None , local_vars_configuration = None ) \u00b6 PatchDataCatalogOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint category_schemas () property writable \u00b6 Gets the category_schemas of this PatchDataCatalogOptions. # noqa: E501 :return: The category_schemas of this PatchDataCatalogOptions. # noqa: E501 :rtype: list[DataCatalogCategorySchema] collections_data_flows () property writable \u00b6 Gets the collections_data_flows of this PatchDataCatalogOptions. # noqa: E501 :return: The collections_data_flows of this PatchDataCatalogOptions. # noqa: E501 :rtype: list[DataCatalogDataFlow] description () property writable \u00b6 Gets the description of this PatchDataCatalogOptions. # noqa: E501 :return: The description of this PatchDataCatalogOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this PatchDataCatalogOptions. # noqa: E501 :return: The name of this PatchDataCatalogOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this PatchDataCatalogOptions. # noqa: E501 :return: The public of this PatchDataCatalogOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model topology () property writable \u00b6 Gets the topology of this PatchDataCatalogOptions. # noqa: E501 :return: The topology of this PatchDataCatalogOptions. # noqa: E501 :rtype: DataCatalogTopology patch_dictionary_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech PatchDictionaryOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , name = None , public = None , local_vars_configuration = None ) \u00b6 PatchDictionaryOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this PatchDictionaryOptions. # noqa: E501 :return: The description of this PatchDictionaryOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this PatchDictionaryOptions. # noqa: E501 :return: The name of this PatchDictionaryOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this PatchDictionaryOptions. # noqa: E501 :return: The public of this PatchDictionaryOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model patch_knowledge_graph_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech PatchKnowledgeGraphOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , name = None , public = None , local_vars_configuration = None ) \u00b6 PatchKnowledgeGraphOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this PatchKnowledgeGraphOptions. # noqa: E501 :return: The description of this PatchKnowledgeGraphOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this PatchKnowledgeGraphOptions. # noqa: E501 :return: The name of this PatchKnowledgeGraphOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this PatchKnowledgeGraphOptions. # noqa: E501 :return: The public of this PatchKnowledgeGraphOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model patch_knowledge_graph_options1 \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech PatchKnowledgeGraphOptions1 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , name = None , public = None , local_vars_configuration = None ) \u00b6 PatchKnowledgeGraphOptions1 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this PatchKnowledgeGraphOptions1. # noqa: E501 :return: The description of this PatchKnowledgeGraphOptions1. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this PatchKnowledgeGraphOptions1. # noqa: E501 :return: The name of this PatchKnowledgeGraphOptions1. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this PatchKnowledgeGraphOptions1. # noqa: E501 :return: The public of this PatchKnowledgeGraphOptions1. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model problem \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech Problem \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( detail = None , status = None , title = None , type = None , local_vars_configuration = None ) \u00b6 Problem - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint detail () property writable \u00b6 Gets the detail of this Problem. # noqa: E501 :return: The detail of this Problem. # noqa: E501 :rtype: str status () property writable \u00b6 Gets the status of this Problem. # noqa: E501 :return: The status of this Problem. # noqa: E501 :rtype: int title () property writable \u00b6 Gets the title of this Problem. # noqa: E501 :return: The title of this Problem. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this Problem. # noqa: E501 :return: The type of this Problem. # noqa: E501 :rtype: str processing_model \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProcessingModel \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( dataflow = None , variables = None , local_vars_configuration = None ) \u00b6 ProcessingModel - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint dataflow () property writable \u00b6 Gets the dataflow of this ProcessingModel. # noqa: E501 :return: The dataflow of this ProcessingModel. # noqa: E501 :rtype: ProcessingModelDataFlow to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this ProcessingModel. # noqa: E501 :return: The variables of this ProcessingModel. # noqa: E501 :rtype: dict(str, ProjectProjKeyModelConfigsConfigurations) processing_model_data_flow \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProcessingModelDataFlow \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( config = None , data_flow = None , local_vars_configuration = None ) \u00b6 ProcessingModelDataFlow - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint config () property writable \u00b6 Gets the config of this ProcessingModelDataFlow. # noqa: E501 :return: The config of this ProcessingModelDataFlow. # noqa: E501 :rtype: object data_flow () property writable \u00b6 Gets the data_flow of this ProcessingModelDataFlow. # noqa: E501 :return: The data_flow of this ProcessingModelDataFlow. # noqa: E501 :rtype: list[object] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model processing_model_description \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProcessingModelDescription \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , display_name = None , name = None , local_vars_configuration = None ) \u00b6 ProcessingModelDescription - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this ProcessingModelDescription. # noqa: E501 :return: The description of this ProcessingModelDescription. # noqa: E501 :rtype: str display_name () property writable \u00b6 Gets the display_name of this ProcessingModelDescription. # noqa: E501 :return: The display_name of this ProcessingModelDescription. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ProcessingModelDescription. # noqa: E501 :return: The name of this ProcessingModelDescription. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_data_index_non_view \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectDataIndexNonView \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , name = None , schema_key = 'generic' , local_vars_configuration = None ) \u00b6 ProjectDataIndexNonView - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this ProjectDataIndexNonView. # noqa: E501 Description of the Index # noqa: E501 :return: The description of this ProjectDataIndexNonView. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ProjectDataIndexNonView. # noqa: E501 Name of the data index # noqa: E501 :return: The name of this ProjectDataIndexNonView. # noqa: E501 :rtype: str schema_key () property writable \u00b6 Gets the schema_key of this ProjectDataIndexNonView. # noqa: E501 Schema key # noqa: E501 :return: The schema_key of this ProjectDataIndexNonView. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_data_index_source \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectDataIndexSource \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( index_key = None , proj_key = None , local_vars_configuration = None ) \u00b6 ProjectDataIndexSource - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint index_key () property writable \u00b6 Gets the index_key of this ProjectDataIndexSource. # noqa: E501 :return: The index_key of this ProjectDataIndexSource. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ProjectDataIndexSource. # noqa: E501 :return: The proj_key of this ProjectDataIndexSource. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_data_index_view \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectDataIndexView \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , name = None , view_of = None , local_vars_configuration = None ) \u00b6 ProjectDataIndexView - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this ProjectDataIndexView. # noqa: E501 Description of the index view # noqa: E501 :return: The description of this ProjectDataIndexView. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ProjectDataIndexView. # noqa: E501 Name of the data index view # noqa: E501 :return: The name of this ProjectDataIndexView. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model view_of () property writable \u00b6 Gets the view_of of this ProjectDataIndexView. # noqa: E501 :return: The view_of of this ProjectDataIndexView. # noqa: E501 :rtype: ProjectDataIndexViewOf project_data_index_view_of \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectDataIndexViewOf \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( index_key = None , instance_id = None , proj_key = None , query_options = None , local_vars_configuration = None ) \u00b6 ProjectDataIndexViewOf - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint index_key () property writable \u00b6 Gets the index_key of this ProjectDataIndexViewOf. # noqa: E501 Data index key # noqa: E501 :return: The index_key of this ProjectDataIndexViewOf. # noqa: E501 :rtype: str instance_id () property writable \u00b6 Gets the instance_id of this ProjectDataIndexViewOf. # noqa: E501 Instance id key, if the source is a data asset # noqa: E501 :return: The instance_id of this ProjectDataIndexViewOf. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ProjectDataIndexViewOf. # noqa: E501 Project id key, if the source is a project data index # noqa: E501 :return: The proj_key of this ProjectDataIndexViewOf. # noqa: E501 :rtype: str query_options () property writable \u00b6 Gets the query_options of this ProjectDataIndexViewOf. # noqa: E501 :return: The query_options of this ProjectDataIndexViewOf. # noqa: E501 :rtype: ElasticIndexSearchQueryOptions to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_data_index_with_status \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectDataIndexWithStatus \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( creation_date = None , description = None , documents = None , health = None , name = None , schema_key = None , source = None , status = None , type = None , view_of = None , local_vars_configuration = None ) \u00b6 ProjectDataIndexWithStatus - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint creation_date () property writable \u00b6 Gets the creation_date of this ProjectDataIndexWithStatus. # noqa: E501 :return: The creation_date of this ProjectDataIndexWithStatus. # noqa: E501 :rtype: str description () property writable \u00b6 Gets the description of this ProjectDataIndexWithStatus. # noqa: E501 :return: The description of this ProjectDataIndexWithStatus. # noqa: E501 :rtype: str documents () property writable \u00b6 Gets the documents of this ProjectDataIndexWithStatus. # noqa: E501 :return: The documents of this ProjectDataIndexWithStatus. # noqa: E501 :rtype: float health () property writable \u00b6 Gets the health of this ProjectDataIndexWithStatus. # noqa: E501 :return: The health of this ProjectDataIndexWithStatus. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ProjectDataIndexWithStatus. # noqa: E501 :return: The name of this ProjectDataIndexWithStatus. # noqa: E501 :rtype: str schema_key () property writable \u00b6 Gets the schema_key of this ProjectDataIndexWithStatus. # noqa: E501 Index's schema key # noqa: E501 :return: The schema_key of this ProjectDataIndexWithStatus. # noqa: E501 :rtype: str source () property writable \u00b6 Gets the source of this ProjectDataIndexWithStatus. # noqa: E501 :return: The source of this ProjectDataIndexWithStatus. # noqa: E501 :rtype: ProjectDataIndexSource status () property writable \u00b6 Gets the status of this ProjectDataIndexWithStatus. # noqa: E501 :return: The status of this ProjectDataIndexWithStatus. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this ProjectDataIndexWithStatus. # noqa: E501 Index type, user friendly format # noqa: E501 :return: The type of this ProjectDataIndexWithStatus. # noqa: E501 :rtype: str view_of () property writable \u00b6 Gets the view_of of this ProjectDataIndexWithStatus. # noqa: E501 :return: The view_of of this ProjectDataIndexWithStatus. # noqa: E501 :rtype: ProjectDataIndexWithStatusViewOf project_data_index_with_status_view_of \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectDataIndexWithStatusViewOf \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( elastic_id = None , index_key = None , proj_key = None , query_options = None , local_vars_configuration = None ) \u00b6 ProjectDataIndexWithStatusViewOf - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint elastic_id () property writable \u00b6 Gets the elastic_id of this ProjectDataIndexWithStatusViewOf. # noqa: E501 :return: The elastic_id of this ProjectDataIndexWithStatusViewOf. # noqa: E501 :rtype: str index_key () property writable \u00b6 Gets the index_key of this ProjectDataIndexWithStatusViewOf. # noqa: E501 :return: The index_key of this ProjectDataIndexWithStatusViewOf. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ProjectDataIndexWithStatusViewOf. # noqa: E501 :return: The proj_key of this ProjectDataIndexWithStatusViewOf. # noqa: E501 :rtype: str query_options () property writable \u00b6 Gets the query_options of this ProjectDataIndexWithStatusViewOf. # noqa: E501 :return: The query_options of this ProjectDataIndexWithStatusViewOf. # noqa: E501 :rtype: ElasticIndexSearchQueryOptions to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_default_values \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectDefaultValues \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( ccs_project = None , dataflow = None , local_vars_configuration = None ) \u00b6 ProjectDefaultValues - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint ccs_project () property writable \u00b6 Gets the ccs_project of this ProjectDefaultValues. # noqa: E501 :return: The ccs_project of this ProjectDefaultValues. # noqa: E501 :rtype: ProjectDefaultValuesCcsProject dataflow () property writable \u00b6 Gets the dataflow of this ProjectDefaultValues. # noqa: E501 :return: The dataflow of this ProjectDefaultValues. # noqa: E501 :rtype: ProjectDefaultValuesDataflow to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_default_values_ccs_project \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectDefaultValuesCcsProject \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collection_name = None , name = None , proj_key = None , local_vars_configuration = None ) \u00b6 ProjectDefaultValuesCcsProject - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collection_name () property writable \u00b6 Gets the collection_name of this ProjectDefaultValuesCcsProject. # noqa: E501 :return: The collection_name of this ProjectDefaultValuesCcsProject. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ProjectDefaultValuesCcsProject. # noqa: E501 :return: The name of this ProjectDefaultValuesCcsProject. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ProjectDefaultValuesCcsProject. # noqa: E501 :return: The proj_key of this ProjectDefaultValuesCcsProject. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_default_values_dataflow \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectDefaultValuesDataflow \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( df_tpl_key = None , name = None , local_vars_configuration = None ) \u00b6 ProjectDefaultValuesDataflow - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint df_tpl_key () property writable \u00b6 Gets the df_tpl_key of this ProjectDefaultValuesDataflow. # noqa: E501 :return: The df_tpl_key of this ProjectDefaultValuesDataflow. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ProjectDefaultValuesDataflow. # noqa: E501 :return: The name of this ProjectDefaultValuesDataflow. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_flavour_total_kgs \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectFlavourTotalKgs \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( flavour_name = None , proj_key = None , total_kgs = None , local_vars_configuration = None ) \u00b6 ProjectFlavourTotalKgs - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint flavour_name () property writable \u00b6 Gets the flavour_name of this ProjectFlavourTotalKgs. # noqa: E501 :return: The flavour_name of this ProjectFlavourTotalKgs. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ProjectFlavourTotalKgs. # noqa: E501 :return: The proj_key of this ProjectFlavourTotalKgs. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model total_kgs () property writable \u00b6 Gets the total_kgs of this ProjectFlavourTotalKgs. # noqa: E501 :return: The total_kgs of this ProjectFlavourTotalKgs. # noqa: E501 :rtype: int project_flavours \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectFlavours \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( flavours = None , proj_key = None , local_vars_configuration = None ) \u00b6 ProjectFlavours - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint flavours () property writable \u00b6 Gets the flavours of this ProjectFlavours. # noqa: E501 :return: The flavours of this ProjectFlavours. # noqa: E501 :rtype: list[BagFlavourFullData] proj_key () property writable \u00b6 Gets the proj_key of this ProjectFlavours. # noqa: E501 :return: The proj_key of this ProjectFlavours. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_package_instalation_manifest \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectPackageInstalationManifest \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( packages = None , local_vars_configuration = None ) \u00b6 ProjectPackageInstalationManifest - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint packages () property writable \u00b6 Gets the packages of this ProjectPackageInstalationManifest. # noqa: E501 :return: The packages of this ProjectPackageInstalationManifest. # noqa: E501 :rtype: list[ProjectProjKeyPackagesPackages] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_proj_key_annotate_document_report_document \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyAnnotateDocumentReportDocument \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( input_scratch_id = None , output_scratch_id = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyAnnotateDocumentReportDocument - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint input_scratch_id () property writable \u00b6 Gets the input_scratch_id of this ProjectProjKeyAnnotateDocumentReportDocument. # noqa: E501 :return: The input_scratch_id of this ProjectProjKeyAnnotateDocumentReportDocument. # noqa: E501 :rtype: str output_scratch_id () property writable \u00b6 Gets the output_scratch_id of this ProjectProjKeyAnnotateDocumentReportDocument. # noqa: E501 :return: The output_scratch_id of this ProjectProjKeyAnnotateDocumentReportDocument. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_proj_key_annotate_document_report_report \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyAnnotateDocumentReportReport \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , review_consent = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyAnnotateDocumentReportReport - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this ProjectProjKeyAnnotateDocumentReportReport. # noqa: E501 :return: The description of this ProjectProjKeyAnnotateDocumentReportReport. # noqa: E501 :rtype: str review_consent () property writable \u00b6 Gets the review_consent of this ProjectProjKeyAnnotateDocumentReportReport. # noqa: E501 :return: The review_consent of this ProjectProjKeyAnnotateDocumentReportReport. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_proj_key_bags_bag_key_tasks_assemble_dataflow_data_flow \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( render_options = None , template = None , variables = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint render_options () property writable \u00b6 Gets the render_options of this ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :return: The render_options of this ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :rtype: ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions template () property writable \u00b6 Gets the template of this ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :return: The template of this ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :return: The variables of this ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :rtype: object project_proj_key_bags_bag_key_tasks_assemble_dataflow_data_flow_render_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( target_bag = None , variables = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint target_bag () property writable \u00b6 Gets the target_bag of this ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions. # noqa: E501 :return: The target_bag of this ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions. # noqa: E501 :return: The variables of this ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions. # noqa: E501 :rtype: object project_proj_key_bags_bag_key_tasks_export_dataset_info \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyBagsBagKeyTasksExportDatasetInfo \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collection_key = None , coords = None , include_s3_data = False , node_list = None , projection = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyBagsBagKeyTasksExportDatasetInfo - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collection_key () property writable \u00b6 Gets the collection_key of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfo. # noqa: E501 :return: The collection_key of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfo. # noqa: E501 :rtype: str coords () property writable \u00b6 Gets the coords of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfo. # noqa: E501 :return: The coords of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfo. # noqa: E501 :rtype: ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords include_s3_data () property writable \u00b6 Gets the include_s3_data of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfo. # noqa: E501 :return: The include_s3_data of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfo. # noqa: E501 :rtype: bool node_list () property writable \u00b6 Gets the node_list of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfo. # noqa: E501 :return: The node_list of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfo. # noqa: E501 :rtype: list[ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList] projection () property writable \u00b6 Gets the projection of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfo. # noqa: E501 A dict specifying the fields to include or exclude. Use a dict to exclude fields from the result (e.g. projection={'main-text': false}). # noqa: E501 :return: The projection of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfo. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_proj_key_bags_bag_key_tasks_export_dataset_info_coords \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( databases = None , node_collection = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint databases () property writable \u00b6 Gets the databases of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords. # noqa: E501 :return: The databases of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords. # noqa: E501 :rtype: object node_collection () property writable \u00b6 Gets the node_collection of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords. # noqa: E501 :return: The node_collection of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords. # noqa: E501 :rtype: ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_proj_key_bags_bag_key_tasks_export_dataset_info_coords_node_collection \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collection = None , collection_name_prefix = None , database = None , uri = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collection () property writable \u00b6 Gets the collection of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection. # noqa: E501 :return: The collection of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection. # noqa: E501 :rtype: str collection_name_prefix () property writable \u00b6 Gets the collection_name_prefix of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection. # noqa: E501 :return: The collection_name_prefix of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection. # noqa: E501 :rtype: str database () property writable \u00b6 Gets the database of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection. # noqa: E501 :return: The database of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model uri () property writable \u00b6 Gets the uri of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection. # noqa: E501 :return: The uri of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection. # noqa: E501 :rtype: str project_proj_key_bags_bag_key_tasks_export_dataset_info_node_list \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( db = None , id = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint db () property writable \u00b6 Gets the db of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList. # noqa: E501 :return: The db of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList. # noqa: E501 :rtype: str id () property writable \u00b6 Gets the id of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList. # noqa: E501 :return: The id of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_proj_key_bags_bag_key_tasks_suspend_snapshot \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyBagsBagKeyTasksSuspendSnapshot \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyBagsBagKeyTasksSuspendSnapshot - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this ProjectProjKeyBagsBagKeyTasksSuspendSnapshot. # noqa: E501 :return: The name of this ProjectProjKeyBagsBagKeyTasksSuspendSnapshot. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_proj_key_data_catalogues_dc_key_collections_collection_name_actions_import_ccs \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( auth_token = None , export_package_mongo_options = None , proj_key = None , source_collection_name = None , url = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint auth_token () property writable \u00b6 Gets the auth_token of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs. # noqa: E501 :return: The auth_token of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs. # noqa: E501 :rtype: str export_package_mongo_options () property writable \u00b6 Gets the export_package_mongo_options of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs. # noqa: E501 :return: The export_package_mongo_options of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions proj_key () property writable \u00b6 Gets the proj_key of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs. # noqa: E501 :return: The proj_key of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs. # noqa: E501 :rtype: str source_collection_name () property writable \u00b6 Gets the source_collection_name of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs. # noqa: E501 :return: The source_collection_name of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs. # noqa: E501 :return: The url of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs. # noqa: E501 :rtype: str project_proj_key_data_catalogues_dc_key_collections_collection_name_actions_import_ccs_export_package_mongo_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( assemble_options = None , incremental = None , inputs = None , package_options = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint assemble_options () property writable \u00b6 Gets the assemble_options of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions. # noqa: E501 :return: The assemble_options of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions incremental () property writable \u00b6 Gets the incremental of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions. # noqa: E501 :return: The incremental of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions. # noqa: E501 :rtype: bool inputs () property writable \u00b6 Gets the inputs of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions. # noqa: E501 :return: The inputs of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsInputs package_options () property writable \u00b6 Gets the package_options of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions. # noqa: E501 :return: The package_options of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_proj_key_data_catalogues_dc_key_collections_collection_name_actions_import_ccs_export_package_mongo_options_assemble_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( mode = None , options = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint mode () property writable \u00b6 Gets the mode of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions. # noqa: E501 :return: The mode of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode options () property writable \u00b6 Gets the options of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions. # noqa: E501 :return: The options of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsOptions to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_proj_key_data_catalogues_dc_key_collections_collection_name_actions_import_ccs_export_package_mongo_options_assemble_options_mode \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( page_elements = None , tables = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint page_elements () property writable \u00b6 Gets the page_elements of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode. # noqa: E501 Which type of annotations to filter for the page elements: H (human annotations), M (model generated) # noqa: E501 :return: The page_elements of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode. # noqa: E501 :rtype: list[str] tables () property writable \u00b6 Gets the tables of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode. # noqa: E501 Which type of annotations to filter for the tables: H (human annotations), M (model generated) # noqa: E501 :return: The tables of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_proj_key_data_catalogues_dc_key_collections_collection_name_actions_import_ccs_export_package_mongo_options_assemble_options_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( include_incomplete_documents = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint include_incomplete_documents () property writable \u00b6 Gets the include_incomplete_documents of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsOptions. # noqa: E501 Include documents with missing pages? (e.g. no annotations for some pages) # noqa: E501 :return: The include_incomplete_documents of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_proj_key_data_catalogues_dc_key_collections_collection_name_actions_import_ccs_export_package_mongo_options_inputs \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsInputs \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( document_hashes = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsInputs - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint document_hashes () property writable \u00b6 Gets the document_hashes of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsInputs. # noqa: E501 :return: The document_hashes of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsInputs. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_proj_key_data_catalogues_dc_key_collections_collection_name_actions_import_ccs_export_package_mongo_options_package_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( match_mode = 'document_hash' , redirect_keys_to_s3 = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint match_mode () property writable \u00b6 Gets the match_mode of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions. # noqa: E501 :return: The match_mode of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions. # noqa: E501 :rtype: str redirect_keys_to_s3 () property writable \u00b6 Gets the redirect_keys_to_s3 of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions. # noqa: E501 :return: The redirect_keys_to_s3 of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_proj_key_data_catalogues_from_mongo_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDataCataloguesFromMongoOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( coordinates = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDataCataloguesFromMongoOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint coordinates () property writable \u00b6 Gets the coordinates of this ProjectProjKeyDataCataloguesFromMongoOptions. # noqa: E501 :return: The coordinates of this ProjectProjKeyDataCataloguesFromMongoOptions. # noqa: E501 :rtype: MongoS3CoordinatesWithCollectionList to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_proj_key_data_catalogues_from_mongo_target \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDataCataloguesFromMongoTarget \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , name = None , public = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDataCataloguesFromMongoTarget - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this ProjectProjKeyDataCataloguesFromMongoTarget. # noqa: E501 :return: The description of this ProjectProjKeyDataCataloguesFromMongoTarget. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ProjectProjKeyDataCataloguesFromMongoTarget. # noqa: E501 :return: The name of this ProjectProjKeyDataCataloguesFromMongoTarget. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this ProjectProjKeyDataCataloguesFromMongoTarget. # noqa: E501 :return: The public of this ProjectProjKeyDataCataloguesFromMongoTarget. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_proj_key_data_catalogues_from_url_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDataCataloguesFromUrlOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( url = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDataCataloguesFromUrlOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this ProjectProjKeyDataCataloguesFromUrlOptions. # noqa: E501 :return: The url of this ProjectProjKeyDataCataloguesFromUrlOptions. # noqa: E501 :rtype: str project_proj_key_dictionaries_from_mongo_target \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDictionariesFromMongoTarget \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , name = None , public = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDictionariesFromMongoTarget - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this ProjectProjKeyDictionariesFromMongoTarget. # noqa: E501 :return: The description of this ProjectProjKeyDictionariesFromMongoTarget. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ProjectProjKeyDictionariesFromMongoTarget. # noqa: E501 :return: The name of this ProjectProjKeyDictionariesFromMongoTarget. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this ProjectProjKeyDictionariesFromMongoTarget. # noqa: E501 :return: The public of this ProjectProjKeyDictionariesFromMongoTarget. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_proj_key_kgc_dataflow_templates_debug_df_tpl_key_target_bag \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( bag_key = None , proj_key = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bag_key () property writable \u00b6 Gets the bag_key of this ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag. # noqa: E501 :return: The bag_key of this ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag. # noqa: E501 :return: The proj_key of this ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_proj_key_kgc_dataflow_templates_df_tpl_key_actions_load_render \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( target_bag = None , variables = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint target_bag () property writable \u00b6 Gets the target_bag of this ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender. # noqa: E501 :return: The target_bag of this ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender. # noqa: E501 :rtype: ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender. # noqa: E501 :return: The variables of this ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender. # noqa: E501 :rtype: dict(str, object) project_proj_key_kgc_dataflow_templates_df_tpl_key_actions_load_render_target_bag \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( bag_key = None , proj_key = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bag_key () property writable \u00b6 Gets the bag_key of this ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag. # noqa: E501 :return: The bag_key of this ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag. # noqa: E501 If set, this will override the 'proj_key' parameter in the path, allowing cross-project KGs to be used. # noqa: E501 :return: The proj_key of this ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_proj_key_kgc_dataflow_templates_df_tpl_key_actions_load_target \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadTarget \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( save = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadTarget - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint save () property writable \u00b6 Gets the save of this ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadTarget. # noqa: E501 :return: The save of this ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadTarget. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_proj_key_kgc_dataflow_templates_variables \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyKgcDataflowTemplatesVariables \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( default_value = None , type = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyKgcDataflowTemplatesVariables - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint default_value () property writable \u00b6 Gets the default_value of this ProjectProjKeyKgcDataflowTemplatesVariables. # noqa: E501 :return: The default_value of this ProjectProjKeyKgcDataflowTemplatesVariables. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this ProjectProjKeyKgcDataflowTemplatesVariables. # noqa: E501 :return: The type of this ProjectProjKeyKgcDataflowTemplatesVariables. # noqa: E501 :rtype: DataFlowTemplateVariable project_proj_key_kgc_raw_dataflow_templates_actions_run_data_flow \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( template = None , variables = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint template () property writable \u00b6 Gets the template of this ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow. # noqa: E501 :return: The template of this ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow. # noqa: E501 :rtype: ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow. # noqa: E501 :return: The variables of this ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow. # noqa: E501 :rtype: dict(str, object) project_proj_key_kgc_raw_dataflow_templates_actions_run_data_flow_template \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( config = None , data_flow = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint config () property writable \u00b6 Gets the config of this ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate. # noqa: E501 :return: The config of this ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate. # noqa: E501 :rtype: object data_flow () property writable \u00b6 Gets the data_flow of this ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate. # noqa: E501 :return: The data_flow of this ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate. # noqa: E501 :rtype: list[object] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_proj_key_model_configs_configurations \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyModelConfigsConfigurations \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( type = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyModelConfigsConfigurations - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this ProjectProjKeyModelConfigsConfigurations. # noqa: E501 :return: The type of this ProjectProjKeyModelConfigsConfigurations. # noqa: E501 :rtype: str project_proj_key_packages_packages \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyPackagesPackages \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( overrides = None , package_id = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyPackagesPackages - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint overrides () property writable \u00b6 Gets the overrides of this ProjectProjKeyPackagesPackages. # noqa: E501 :return: The overrides of this ProjectProjKeyPackagesPackages. # noqa: E501 :rtype: object package_id () property writable \u00b6 Gets the package_id of this ProjectProjKeyPackagesPackages. # noqa: E501 :return: The package_id of this ProjectProjKeyPackagesPackages. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_task \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectTask \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( completed_at = None , created_at = None , meta = None , progress = None , proj_key = None , started_at = None , task_id = None , task_status = None , task_type = None , user_key = None , local_vars_configuration = None ) \u00b6 ProjectTask - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint completed_at () property writable \u00b6 Gets the completed_at of this ProjectTask. # noqa: E501 :return: The completed_at of this ProjectTask. # noqa: E501 :rtype: float created_at () property writable \u00b6 Gets the created_at of this ProjectTask. # noqa: E501 :return: The created_at of this ProjectTask. # noqa: E501 :rtype: float meta () property writable \u00b6 Gets the meta of this ProjectTask. # noqa: E501 :return: The meta of this ProjectTask. # noqa: E501 :rtype: object progress () property writable \u00b6 Gets the progress of this ProjectTask. # noqa: E501 :return: The progress of this ProjectTask. # noqa: E501 :rtype: float proj_key () property writable \u00b6 Gets the proj_key of this ProjectTask. # noqa: E501 :return: The proj_key of this ProjectTask. # noqa: E501 :rtype: str started_at () property writable \u00b6 Gets the started_at of this ProjectTask. # noqa: E501 :return: The started_at of this ProjectTask. # noqa: E501 :rtype: float task_id () property writable \u00b6 Gets the task_id of this ProjectTask. # noqa: E501 :return: The task_id of this ProjectTask. # noqa: E501 :rtype: str task_status () property writable \u00b6 Gets the task_status of this ProjectTask. # noqa: E501 :return: The task_status of this ProjectTask. # noqa: E501 :rtype: str task_type () property writable \u00b6 Gets the task_type of this ProjectTask. # noqa: E501 :return: The task_type of this ProjectTask. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model user_key () property writable \u00b6 Gets the user_key of this ProjectTask. # noqa: E501 :return: The user_key of this ProjectTask. # noqa: E501 :rtype: str projects_flavours \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectsFlavours \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( flavours = None , name = None , proj_key = None , local_vars_configuration = None ) \u00b6 ProjectsFlavours - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint flavours () property writable \u00b6 Gets the flavours of this ProjectsFlavours. # noqa: E501 :return: The flavours of this ProjectsFlavours. # noqa: E501 :rtype: list[ProjectsFlavoursFlavours] name () property writable \u00b6 Gets the name of this ProjectsFlavours. # noqa: E501 :return: The name of this ProjectsFlavours. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ProjectsFlavours. # noqa: E501 :return: The proj_key of this ProjectsFlavours. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model projects_flavours_flavours \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectsFlavoursFlavours \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( display_name = None , name = None , local_vars_configuration = None ) \u00b6 ProjectsFlavoursFlavours - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint display_name () property writable \u00b6 Gets the display_name of this ProjectsFlavoursFlavours. # noqa: E501 :return: The display_name of this ProjectsFlavoursFlavours. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ProjectsFlavoursFlavours. # noqa: E501 :return: The name of this ProjectsFlavoursFlavours. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model projects_flavours_quota \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectsFlavoursQuota \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , proj_key = None , quotas = None , local_vars_configuration = None ) \u00b6 ProjectsFlavoursQuota - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this ProjectsFlavoursQuota. # noqa: E501 :return: The name of this ProjectsFlavoursQuota. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ProjectsFlavoursQuota. # noqa: E501 :return: The proj_key of this ProjectsFlavoursQuota. # noqa: E501 :rtype: str quotas () property writable \u00b6 Gets the quotas of this ProjectsFlavoursQuota. # noqa: E501 :return: The quotas of this ProjectsFlavoursQuota. # noqa: E501 :rtype: list[FlavoursQuota] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model related_task \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech RelatedTask \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( task_id = None , task_type = None , local_vars_configuration = None ) \u00b6 RelatedTask - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint task_id () property writable \u00b6 Gets the task_id of this RelatedTask. # noqa: E501 :return: The task_id of this RelatedTask. # noqa: E501 :rtype: str task_type () property writable \u00b6 Gets the task_type of this RelatedTask. # noqa: E501 :return: The task_type of this RelatedTask. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model relationship_annotation_column \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech RelationshipAnnotationColumn \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( entities = None , key = None , local_vars_configuration = None ) \u00b6 RelationshipAnnotationColumn - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint entities () property writable \u00b6 Gets the entities of this RelationshipAnnotationColumn. # noqa: E501 :return: The entities of this RelationshipAnnotationColumn. # noqa: E501 :rtype: list[str] key () property writable \u00b6 Gets the key of this RelationshipAnnotationColumn. # noqa: E501 :return: The key of this RelationshipAnnotationColumn. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model relationship_annotation_descriptor \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech RelationshipAnnotationDescriptor \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( columns = None , description = None , key = None , local_vars_configuration = None ) \u00b6 RelationshipAnnotationDescriptor - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint columns () property writable \u00b6 Gets the columns of this RelationshipAnnotationDescriptor. # noqa: E501 :return: The columns of this RelationshipAnnotationDescriptor. # noqa: E501 :rtype: list[RelationshipAnnotationColumn] description () property writable \u00b6 Gets the description of this RelationshipAnnotationDescriptor. # noqa: E501 :return: The description of this RelationshipAnnotationDescriptor. # noqa: E501 :rtype: str key () property writable \u00b6 Gets the key of this RelationshipAnnotationDescriptor. # noqa: E501 :return: The key of this RelationshipAnnotationDescriptor. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model render_data_flow_template_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech RenderDataFlowTemplateOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( target_bag = None , variables = None , local_vars_configuration = None ) \u00b6 RenderDataFlowTemplateOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint target_bag () property writable \u00b6 Gets the target_bag of this RenderDataFlowTemplateOptions. # noqa: E501 :return: The target_bag of this RenderDataFlowTemplateOptions. # noqa: E501 :rtype: ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this RenderDataFlowTemplateOptions. # noqa: E501 :return: The variables of this RenderDataFlowTemplateOptions. # noqa: E501 :rtype: dict(str, object) restore_knowledge_graph_backup_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech RestoreKnowledgeGraphBackupOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( coordinates = None , local_vars_configuration = None ) \u00b6 RestoreKnowledgeGraphBackupOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint coordinates () property writable \u00b6 Gets the coordinates of this RestoreKnowledgeGraphBackupOptions. # noqa: E501 :return: The coordinates of this RestoreKnowledgeGraphBackupOptions. # noqa: E501 :rtype: S3CoordinatesWithBackupKey to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model resume_knowledge_graph_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ResumeKnowledgeGraphOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( reset = None , snapshot_to_restore_id = None , local_vars_configuration = None ) \u00b6 ResumeKnowledgeGraphOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint reset () property writable \u00b6 Gets the reset of this ResumeKnowledgeGraphOptions. # noqa: E501 :return: The reset of this ResumeKnowledgeGraphOptions. # noqa: E501 :rtype: bool snapshot_to_restore_id () property writable \u00b6 Gets the snapshot_to_restore_id of this ResumeKnowledgeGraphOptions. # noqa: E501 :return: The snapshot_to_restore_id of this ResumeKnowledgeGraphOptions. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model run_data_flow_template_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech RunDataFlowTemplateOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( target_bag_key = None , variables = None , local_vars_configuration = None ) \u00b6 RunDataFlowTemplateOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint target_bag_key () property writable \u00b6 Gets the target_bag_key of this RunDataFlowTemplateOptions. # noqa: E501 :return: The target_bag_key of this RunDataFlowTemplateOptions. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this RunDataFlowTemplateOptions. # noqa: E501 :return: The variables of this RunDataFlowTemplateOptions. # noqa: E501 :rtype: dict(str, object) run_data_flow_template_options1 \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech RunDataFlowTemplateOptions1 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_flow = None , log_task = True , variable_values = None , local_vars_configuration = None ) \u00b6 RunDataFlowTemplateOptions1 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_flow () property writable \u00b6 Gets the data_flow of this RunDataFlowTemplateOptions1. # noqa: E501 :return: The data_flow of this RunDataFlowTemplateOptions1. # noqa: E501 :rtype: ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow log_task () property writable \u00b6 Gets the log_task of this RunDataFlowTemplateOptions1. # noqa: E501 :return: The log_task of this RunDataFlowTemplateOptions1. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variable_values () property writable \u00b6 Gets the variable_values of this RunDataFlowTemplateOptions1. # noqa: E501 :return: The variable_values of this RunDataFlowTemplateOptions1. # noqa: E501 :rtype: dict(str, object) s3_coordinates \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech S3Coordinates \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( access_key = None , bucket = None , host = None , key_prefix = None , location = None , port = None , secret_key = None , ssl = None , verify_ssl = None , local_vars_configuration = None ) \u00b6 S3Coordinates - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint access_key () property writable \u00b6 Gets the access_key of this S3Coordinates. # noqa: E501 :return: The access_key of this S3Coordinates. # noqa: E501 :rtype: str bucket () property writable \u00b6 Gets the bucket of this S3Coordinates. # noqa: E501 :return: The bucket of this S3Coordinates. # noqa: E501 :rtype: str host () property writable \u00b6 Gets the host of this S3Coordinates. # noqa: E501 :return: The host of this S3Coordinates. # noqa: E501 :rtype: str key_prefix () property writable \u00b6 Gets the key_prefix of this S3Coordinates. # noqa: E501 :return: The key_prefix of this S3Coordinates. # noqa: E501 :rtype: str location () property writable \u00b6 Gets the location of this S3Coordinates. # noqa: E501 :return: The location of this S3Coordinates. # noqa: E501 :rtype: str port () property writable \u00b6 Gets the port of this S3Coordinates. # noqa: E501 :return: The port of this S3Coordinates. # noqa: E501 :rtype: int secret_key () property writable \u00b6 Gets the secret_key of this S3Coordinates. # noqa: E501 :return: The secret_key of this S3Coordinates. # noqa: E501 :rtype: str ssl () property writable \u00b6 Gets the ssl of this S3Coordinates. # noqa: E501 :return: The ssl of this S3Coordinates. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model verify_ssl () property writable \u00b6 Gets the verify_ssl of this S3Coordinates. # noqa: E501 :return: The verify_ssl of this S3Coordinates. # noqa: E501 :rtype: bool s3_coordinates_with_backup_key \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech S3CoordinatesWithBackupKey \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( access_key = None , backup_key = None , bucket = None , host = None , location = None , port = None , presigned = None , secret_key = None , ssl = None , verify_ssl = None , local_vars_configuration = None ) \u00b6 S3CoordinatesWithBackupKey - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint access_key () property writable \u00b6 Gets the access_key of this S3CoordinatesWithBackupKey. # noqa: E501 :return: The access_key of this S3CoordinatesWithBackupKey. # noqa: E501 :rtype: str backup_key () property writable \u00b6 Gets the backup_key of this S3CoordinatesWithBackupKey. # noqa: E501 :return: The backup_key of this S3CoordinatesWithBackupKey. # noqa: E501 :rtype: str bucket () property writable \u00b6 Gets the bucket of this S3CoordinatesWithBackupKey. # noqa: E501 :return: The bucket of this S3CoordinatesWithBackupKey. # noqa: E501 :rtype: str host () property writable \u00b6 Gets the host of this S3CoordinatesWithBackupKey. # noqa: E501 :return: The host of this S3CoordinatesWithBackupKey. # noqa: E501 :rtype: str location () property writable \u00b6 Gets the location of this S3CoordinatesWithBackupKey. # noqa: E501 :return: The location of this S3CoordinatesWithBackupKey. # noqa: E501 :rtype: str port () property writable \u00b6 Gets the port of this S3CoordinatesWithBackupKey. # noqa: E501 :return: The port of this S3CoordinatesWithBackupKey. # noqa: E501 :rtype: int presigned () property writable \u00b6 Gets the presigned of this S3CoordinatesWithBackupKey. # noqa: E501 :return: The presigned of this S3CoordinatesWithBackupKey. # noqa: E501 :rtype: S3CoordinatesWithBackupKeyPresigned secret_key () property writable \u00b6 Gets the secret_key of this S3CoordinatesWithBackupKey. # noqa: E501 :return: The secret_key of this S3CoordinatesWithBackupKey. # noqa: E501 :rtype: str ssl () property writable \u00b6 Gets the ssl of this S3CoordinatesWithBackupKey. # noqa: E501 :return: The ssl of this S3CoordinatesWithBackupKey. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model verify_ssl () property writable \u00b6 Gets the verify_ssl of this S3CoordinatesWithBackupKey. # noqa: E501 :return: The verify_ssl of this S3CoordinatesWithBackupKey. # noqa: E501 :rtype: bool s3_coordinates_with_backup_key_presigned \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech S3CoordinatesWithBackupKeyPresigned \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( fields = None , url = None , local_vars_configuration = None ) \u00b6 S3CoordinatesWithBackupKeyPresigned - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint fields () property writable \u00b6 Gets the fields of this S3CoordinatesWithBackupKeyPresigned. # noqa: E501 :return: The fields of this S3CoordinatesWithBackupKeyPresigned. # noqa: E501 :rtype: dict(str, object) to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this S3CoordinatesWithBackupKeyPresigned. # noqa: E501 :return: The url of this S3CoordinatesWithBackupKeyPresigned. # noqa: E501 :rtype: str storage_summary_dc \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech StorageSummaryDC \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( dc_key = None , name = None , size_bytes_db = None , size_bytes_s3 = None , size_converted_db = None , size_converted_s3 = None , local_vars_configuration = None ) \u00b6 StorageSummaryDC - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint dc_key () property writable \u00b6 Gets the dc_key of this StorageSummaryDC. # noqa: E501 :return: The dc_key of this StorageSummaryDC. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this StorageSummaryDC. # noqa: E501 :return: The name of this StorageSummaryDC. # noqa: E501 :rtype: str size_bytes_db () property writable \u00b6 Gets the size_bytes_db of this StorageSummaryDC. # noqa: E501 :return: The size_bytes_db of this StorageSummaryDC. # noqa: E501 :rtype: float size_bytes_s3 () property writable \u00b6 Gets the size_bytes_s3 of this StorageSummaryDC. # noqa: E501 :return: The size_bytes_s3 of this StorageSummaryDC. # noqa: E501 :rtype: float size_converted_db () property writable \u00b6 Gets the size_converted_db of this StorageSummaryDC. # noqa: E501 :return: The size_converted_db of this StorageSummaryDC. # noqa: E501 :rtype: str size_converted_s3 () property writable \u00b6 Gets the size_converted_s3 of this StorageSummaryDC. # noqa: E501 :return: The size_converted_s3 of this StorageSummaryDC. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model storage_summary_kg \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech StorageSummaryKG \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( bag_key = None , categories_fraction = None , name = None , size_bytes_db = None , size_bytes_s3 = None , size_converted_db = None , size_converted_s3 = None , local_vars_configuration = None ) \u00b6 StorageSummaryKG - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bag_key () property writable \u00b6 Gets the bag_key of this StorageSummaryKG. # noqa: E501 :return: The bag_key of this StorageSummaryKG. # noqa: E501 :rtype: str categories_fraction () property writable \u00b6 Gets the categories_fraction of this StorageSummaryKG. # noqa: E501 :return: The categories_fraction of this StorageSummaryKG. # noqa: E501 :rtype: list[StorageSummaryKGCategoriesFraction] name () property writable \u00b6 Gets the name of this StorageSummaryKG. # noqa: E501 :return: The name of this StorageSummaryKG. # noqa: E501 :rtype: str size_bytes_db () property writable \u00b6 Gets the size_bytes_db of this StorageSummaryKG. # noqa: E501 :return: The size_bytes_db of this StorageSummaryKG. # noqa: E501 :rtype: float size_bytes_s3 () property writable \u00b6 Gets the size_bytes_s3 of this StorageSummaryKG. # noqa: E501 :return: The size_bytes_s3 of this StorageSummaryKG. # noqa: E501 :rtype: float size_converted_db () property writable \u00b6 Gets the size_converted_db of this StorageSummaryKG. # noqa: E501 :return: The size_converted_db of this StorageSummaryKG. # noqa: E501 :rtype: str size_converted_s3 () property writable \u00b6 Gets the size_converted_s3 of this StorageSummaryKG. # noqa: E501 :return: The size_converted_s3 of this StorageSummaryKG. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model storage_summary_kg_categories_fraction \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech StorageSummaryKGCategoriesFraction \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( color = None , name = None , percentage = None , size_bytes_db = None , size_converted_db = None , local_vars_configuration = None ) \u00b6 StorageSummaryKGCategoriesFraction - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint color () property writable \u00b6 Gets the color of this StorageSummaryKGCategoriesFraction. # noqa: E501 :return: The color of this StorageSummaryKGCategoriesFraction. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this StorageSummaryKGCategoriesFraction. # noqa: E501 :return: The name of this StorageSummaryKGCategoriesFraction. # noqa: E501 :rtype: str percentage () property writable \u00b6 Gets the percentage of this StorageSummaryKGCategoriesFraction. # noqa: E501 :return: The percentage of this StorageSummaryKGCategoriesFraction. # noqa: E501 :rtype: float size_bytes_db () property writable \u00b6 Gets the size_bytes_db of this StorageSummaryKGCategoriesFraction. # noqa: E501 :return: The size_bytes_db of this StorageSummaryKGCategoriesFraction. # noqa: E501 :rtype: float size_converted_db () property writable \u00b6 Gets the size_converted_db of this StorageSummaryKGCategoriesFraction. # noqa: E501 :return: The size_converted_db of this StorageSummaryKGCategoriesFraction. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model storage_summary_task \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech StorageSummaryTask \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( dc_key = None , kg_key = None , kind = None , proj_key = None , task_id = None , local_vars_configuration = None ) \u00b6 StorageSummaryTask - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint dc_key () property writable \u00b6 Gets the dc_key of this StorageSummaryTask. # noqa: E501 :return: The dc_key of this StorageSummaryTask. # noqa: E501 :rtype: str kg_key () property writable \u00b6 Gets the kg_key of this StorageSummaryTask. # noqa: E501 :return: The kg_key of this StorageSummaryTask. # noqa: E501 :rtype: str kind () property writable \u00b6 Gets the kind of this StorageSummaryTask. # noqa: E501 :return: The kind of this StorageSummaryTask. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this StorageSummaryTask. # noqa: E501 :return: The proj_key of this StorageSummaryTask. # noqa: E501 :rtype: str task_id () property writable \u00b6 Gets the task_id of this StorageSummaryTask. # noqa: E501 :return: The task_id of this StorageSummaryTask. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model supported_annotator_annotations \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SupportedAnnotatorAnnotations \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( entities = None , relationships = None , supported_object_types = None , local_vars_configuration = None ) \u00b6 SupportedAnnotatorAnnotations - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint entities () property writable \u00b6 Gets the entities of this SupportedAnnotatorAnnotations. # noqa: E501 :return: The entities of this SupportedAnnotatorAnnotations. # noqa: E501 :rtype: list[EntityAnnotationDescriptor] relationships () property writable \u00b6 Gets the relationships of this SupportedAnnotatorAnnotations. # noqa: E501 :return: The relationships of this SupportedAnnotatorAnnotations. # noqa: E501 :rtype: list[RelationshipAnnotationDescriptor] supported_object_types () property writable \u00b6 Gets the supported_object_types of this SupportedAnnotatorAnnotations. # noqa: E501 :return: The supported_object_types of this SupportedAnnotatorAnnotations. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model suspend_knowledge_graph_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SuspendKnowledgeGraphOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( force = None , snapshot = None , local_vars_configuration = None ) \u00b6 SuspendKnowledgeGraphOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint force () property writable \u00b6 Gets the force of this SuspendKnowledgeGraphOptions. # noqa: E501 If true, the KG will be suspended even if it's busy # noqa: E501 :return: The force of this SuspendKnowledgeGraphOptions. # noqa: E501 :rtype: bool snapshot () property writable \u00b6 Gets the snapshot of this SuspendKnowledgeGraphOptions. # noqa: E501 :return: The snapshot of this SuspendKnowledgeGraphOptions. # noqa: E501 :rtype: ProjectProjKeyBagsBagKeyTasksSuspendSnapshot to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model system_celery_tasks_failure_failures \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemCeleryTasksFailureFailures \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( logs = None , meta = None , task_id = None , worker_name = None , local_vars_configuration = None ) \u00b6 SystemCeleryTasksFailureFailures - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint logs () property writable \u00b6 Gets the logs of this SystemCeleryTasksFailureFailures. # noqa: E501 :return: The logs of this SystemCeleryTasksFailureFailures. # noqa: E501 :rtype: dict(str, object) meta () property writable \u00b6 Gets the meta of this SystemCeleryTasksFailureFailures. # noqa: E501 :return: The meta of this SystemCeleryTasksFailureFailures. # noqa: E501 :rtype: dict(str, object) task_id () property writable \u00b6 Gets the task_id of this SystemCeleryTasksFailureFailures. # noqa: E501 :return: The task_id of this SystemCeleryTasksFailureFailures. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model worker_name () property writable \u00b6 Gets the worker_name of this SystemCeleryTasksFailureFailures. # noqa: E501 :return: The worker_name of this SystemCeleryTasksFailureFailures. # noqa: E501 :rtype: str system_info \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemInfo \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( allow_non_admins_to_make_resources_public = None , api = None , deployment = None , local_vars_configuration = None ) \u00b6 SystemInfo - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint allow_non_admins_to_make_resources_public () property writable \u00b6 Gets the allow_non_admins_to_make_resources_public of this SystemInfo. # noqa: E501 :return: The allow_non_admins_to_make_resources_public of this SystemInfo. # noqa: E501 :rtype: bool api () property writable \u00b6 Gets the api of this SystemInfo. # noqa: E501 :return: The api of this SystemInfo. # noqa: E501 :rtype: SystemInfoApi deployment () property writable \u00b6 Gets the deployment of this SystemInfo. # noqa: E501 :return: The deployment of this SystemInfo. # noqa: E501 :rtype: SystemInfoDeployment to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model system_info_api \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemInfoApi \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( build_date = None , commit_hash = None , version = None , local_vars_configuration = None ) \u00b6 SystemInfoApi - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint build_date () property writable \u00b6 Gets the build_date of this SystemInfoApi. # noqa: E501 :return: The build_date of this SystemInfoApi. # noqa: E501 :rtype: int commit_hash () property writable \u00b6 Gets the commit_hash of this SystemInfoApi. # noqa: E501 :return: The commit_hash of this SystemInfoApi. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model version () property writable \u00b6 Gets the version of this SystemInfoApi. # noqa: E501 :return: The version of this SystemInfoApi. # noqa: E501 :rtype: str system_info_deployment \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemInfoDeployment \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( disable_kg_actions = None , disclaimer = None , linked_ccs_api = None , name = None , should_show_warning = None , local_vars_configuration = None ) \u00b6 SystemInfoDeployment - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint disable_kg_actions () property writable \u00b6 Gets the disable_kg_actions of this SystemInfoDeployment. # noqa: E501 :return: The disable_kg_actions of this SystemInfoDeployment. # noqa: E501 :rtype: bool disclaimer () property writable \u00b6 Gets the disclaimer of this SystemInfoDeployment. # noqa: E501 :return: The disclaimer of this SystemInfoDeployment. # noqa: E501 :rtype: str linked_ccs_api () property writable \u00b6 Gets the linked_ccs_api of this SystemInfoDeployment. # noqa: E501 :return: The linked_ccs_api of this SystemInfoDeployment. # noqa: E501 :rtype: SystemInfoDeploymentLinkedCcsApi name () property writable \u00b6 Gets the name of this SystemInfoDeployment. # noqa: E501 :return: The name of this SystemInfoDeployment. # noqa: E501 :rtype: str should_show_warning () property writable \u00b6 Gets the should_show_warning of this SystemInfoDeployment. # noqa: E501 :return: The should_show_warning of this SystemInfoDeployment. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model system_info_deployment_linked_ccs_api \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemInfoDeploymentLinkedCcsApi \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( project_sync = None , uri = None , local_vars_configuration = None ) \u00b6 SystemInfoDeploymentLinkedCcsApi - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint project_sync () property writable \u00b6 Gets the project_sync of this SystemInfoDeploymentLinkedCcsApi. # noqa: E501 :return: The project_sync of this SystemInfoDeploymentLinkedCcsApi. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model uri () property writable \u00b6 Gets the uri of this SystemInfoDeploymentLinkedCcsApi. # noqa: E501 :return: The uri of this SystemInfoDeploymentLinkedCcsApi. # noqa: E501 :rtype: str system_kgs_backend \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemKgsBackend \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( deployment = None , flavour = None , local_vars_configuration = None ) \u00b6 SystemKgsBackend - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint deployment () property writable \u00b6 Gets the deployment of this SystemKgsBackend. # noqa: E501 :return: The deployment of this SystemKgsBackend. # noqa: E501 :rtype: SystemKgsDeployment flavour () property writable \u00b6 Gets the flavour of this SystemKgsBackend. # noqa: E501 :return: The flavour of this SystemKgsBackend. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model system_kgs_deployment \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemKgsDeployment \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( chart = None , flavour = None , name = None , resources = None , local_vars_configuration = None ) \u00b6 SystemKgsDeployment - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint chart () property writable \u00b6 Gets the chart of this SystemKgsDeployment. # noqa: E501 :return: The chart of this SystemKgsDeployment. # noqa: E501 :rtype: str flavour () property writable \u00b6 Gets the flavour of this SystemKgsDeployment. # noqa: E501 :return: The flavour of this SystemKgsDeployment. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this SystemKgsDeployment. # noqa: E501 :return: The name of this SystemKgsDeployment. # noqa: E501 :rtype: str resources () property writable \u00b6 Gets the resources of this SystemKgsDeployment. # noqa: E501 :return: The resources of this SystemKgsDeployment. # noqa: E501 :rtype: dict(str, SystemKgsDeploymentResources) to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model system_kgs_deployment_resources \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemKgsDeploymentResources \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( limits = None , requests = None , local_vars_configuration = None ) \u00b6 SystemKgsDeploymentResources - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint limits () property writable \u00b6 Gets the limits of this SystemKgsDeploymentResources. # noqa: E501 :return: The limits of this SystemKgsDeploymentResources. # noqa: E501 :rtype: object requests () property writable \u00b6 Gets the requests of this SystemKgsDeploymentResources. # noqa: E501 :return: The requests of this SystemKgsDeploymentResources. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model system_modules_configuration \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemModulesConfiguration \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( df_template_variables = None , linked_ccs_instances = None , linked_elastic_instances = None , local_vars_configuration = None ) \u00b6 SystemModulesConfiguration - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint df_template_variables () property writable \u00b6 Gets the df_template_variables of this SystemModulesConfiguration. # noqa: E501 :return: The df_template_variables of this SystemModulesConfiguration. # noqa: E501 :rtype: list[WellKnownDfTemplateVariable] linked_ccs_instances () property writable \u00b6 Gets the linked_ccs_instances of this SystemModulesConfiguration. # noqa: E501 :return: The linked_ccs_instances of this SystemModulesConfiguration. # noqa: E501 :rtype: list[LinkedCcsInstances] linked_elastic_instances () property writable \u00b6 Gets the linked_elastic_instances of this SystemModulesConfiguration. # noqa: E501 :return: The linked_elastic_instances of this SystemModulesConfiguration. # noqa: E501 :rtype: list[LinkedCcsInstances] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model system_modules_tasks \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemModulesTasks \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( tasks = None , local_vars_configuration = None ) \u00b6 SystemModulesTasks - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint tasks () property writable \u00b6 Gets the tasks of this SystemModulesTasks. # noqa: E501 :return: The tasks of this SystemModulesTasks. # noqa: E501 :rtype: dict(str, SystemModulesTasksTasks) to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model system_modules_tasks_tasks \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemModulesTasksTasks \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( schema = None , local_vars_configuration = None ) \u00b6 SystemModulesTasksTasks - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint schema () property writable \u00b6 Gets the schema of this SystemModulesTasksTasks. # noqa: E501 :return: The schema of this SystemModulesTasksTasks. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model take_snapshot_settings \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TakeSnapshotSettings \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( flavour = None , load_into_kg_after_created = False , name = None , local_vars_configuration = None ) \u00b6 TakeSnapshotSettings - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint flavour () property writable \u00b6 Gets the flavour of this TakeSnapshotSettings. # noqa: E501 :return: The flavour of this TakeSnapshotSettings. # noqa: E501 :rtype: str load_into_kg_after_created () property writable \u00b6 Gets the load_into_kg_after_created of this TakeSnapshotSettings. # noqa: E501 :return: The load_into_kg_after_created of this TakeSnapshotSettings. # noqa: E501 :rtype: bool name () property writable \u00b6 Gets the name of this TakeSnapshotSettings. # noqa: E501 :return: The name of this TakeSnapshotSettings. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model take_snapshot_settings_backend_aware \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TakeSnapshotSettingsBackendAware \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( backend_flavours = None , load_into_kg_after_created = False , name = None , local_vars_configuration = None ) \u00b6 TakeSnapshotSettingsBackendAware - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint backend_flavours () property writable \u00b6 Gets the backend_flavours of this TakeSnapshotSettingsBackendAware. # noqa: E501 :return: The backend_flavours of this TakeSnapshotSettingsBackendAware. # noqa: E501 :rtype: BackendFlavour load_into_kg_after_created () property writable \u00b6 Gets the load_into_kg_after_created of this TakeSnapshotSettingsBackendAware. # noqa: E501 :return: The load_into_kg_after_created of this TakeSnapshotSettingsBackendAware. # noqa: E501 :rtype: bool name () property writable \u00b6 Gets the name of this TakeSnapshotSettingsBackendAware. # noqa: E501 :return: The name of this TakeSnapshotSettingsBackendAware. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model task \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech Task \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( error_reason = None , kind = None , proj_key = None , related_tasks = None , task_id = None , task_status = None , task_type = None , local_vars_configuration = None ) \u00b6 Task - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint error_reason () property writable \u00b6 Gets the error_reason of this Task. # noqa: E501 :return: The error_reason of this Task. # noqa: E501 :rtype: str kind () property writable \u00b6 Gets the kind of this Task. # noqa: E501 :return: The kind of this Task. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this Task. # noqa: E501 :return: The proj_key of this Task. # noqa: E501 :rtype: str related_tasks () property writable \u00b6 Gets the related_tasks of this Task. # noqa: E501 :return: The related_tasks of this Task. # noqa: E501 :rtype: list[RelatedTask] task_id () property writable \u00b6 Gets the task_id of this Task. # noqa: E501 :return: The task_id of this Task. # noqa: E501 :rtype: str task_status () property writable \u00b6 Gets the task_status of this Task. # noqa: E501 :return: The task_status of this Task. # noqa: E501 :rtype: str task_type () property writable \u00b6 Gets the task_type of this Task. # noqa: E501 :return: The task_type of this Task. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model temporary_upload_file_result \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TemporaryUploadFileResult \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( download = None , download_private = None , id = None , metadata = None , metadata_private = None , upload = None , upload_private = None , local_vars_configuration = None ) \u00b6 TemporaryUploadFileResult - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint download () property writable \u00b6 Gets the download of this TemporaryUploadFileResult. # noqa: E501 :return: The download of this TemporaryUploadFileResult. # noqa: E501 :rtype: TemporaryUploadFileResultDownload download_private () property writable \u00b6 Gets the download_private of this TemporaryUploadFileResult. # noqa: E501 :return: The download_private of this TemporaryUploadFileResult. # noqa: E501 :rtype: TemporaryUploadFileResultDownloadPrivate id () property writable \u00b6 Gets the id of this TemporaryUploadFileResult. # noqa: E501 ID of the temporary file. # noqa: E501 :return: The id of this TemporaryUploadFileResult. # noqa: E501 :rtype: str metadata () property writable \u00b6 Gets the metadata of this TemporaryUploadFileResult. # noqa: E501 :return: The metadata of this TemporaryUploadFileResult. # noqa: E501 :rtype: TemporaryUploadFileResultMetadata metadata_private () property writable \u00b6 Gets the metadata_private of this TemporaryUploadFileResult. # noqa: E501 :return: The metadata_private of this TemporaryUploadFileResult. # noqa: E501 :rtype: TemporaryUploadFileResultMetadataPrivate to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model upload () property writable \u00b6 Gets the upload of this TemporaryUploadFileResult. # noqa: E501 :return: The upload of this TemporaryUploadFileResult. # noqa: E501 :rtype: TemporaryUploadFileResultUpload upload_private () property writable \u00b6 Gets the upload_private of this TemporaryUploadFileResult. # noqa: E501 :return: The upload_private of this TemporaryUploadFileResult. # noqa: E501 :rtype: TemporaryUploadFileResultUploadPrivate temporary_upload_file_result_download \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TemporaryUploadFileResultDownload \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( url = None , local_vars_configuration = None ) \u00b6 TemporaryUploadFileResultDownload - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this TemporaryUploadFileResultDownload. # noqa: E501 :return: The url of this TemporaryUploadFileResultDownload. # noqa: E501 :rtype: str temporary_upload_file_result_download_private \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TemporaryUploadFileResultDownloadPrivate \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( url = None , local_vars_configuration = None ) \u00b6 TemporaryUploadFileResultDownloadPrivate - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this TemporaryUploadFileResultDownloadPrivate. # noqa: E501 :return: The url of this TemporaryUploadFileResultDownloadPrivate. # noqa: E501 :rtype: str temporary_upload_file_result_metadata \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TemporaryUploadFileResultMetadata \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( url = None , local_vars_configuration = None ) \u00b6 TemporaryUploadFileResultMetadata - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this TemporaryUploadFileResultMetadata. # noqa: E501 :return: The url of this TemporaryUploadFileResultMetadata. # noqa: E501 :rtype: str temporary_upload_file_result_metadata_private \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TemporaryUploadFileResultMetadataPrivate \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( url = None , local_vars_configuration = None ) \u00b6 TemporaryUploadFileResultMetadataPrivate - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this TemporaryUploadFileResultMetadataPrivate. # noqa: E501 :return: The url of this TemporaryUploadFileResultMetadataPrivate. # noqa: E501 :rtype: str temporary_upload_file_result_upload \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TemporaryUploadFileResultUpload \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( fields = None , url = None , local_vars_configuration = None ) \u00b6 TemporaryUploadFileResultUpload - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint fields () property writable \u00b6 Gets the fields of this TemporaryUploadFileResultUpload. # noqa: E501 :return: The fields of this TemporaryUploadFileResultUpload. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this TemporaryUploadFileResultUpload. # noqa: E501 :return: The url of this TemporaryUploadFileResultUpload. # noqa: E501 :rtype: str temporary_upload_file_result_upload_private \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TemporaryUploadFileResultUploadPrivate \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( fields = None , url = None , local_vars_configuration = None ) \u00b6 TemporaryUploadFileResultUploadPrivate - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint fields () property writable \u00b6 Gets the fields of this TemporaryUploadFileResultUploadPrivate. # noqa: E501 :return: The fields of this TemporaryUploadFileResultUploadPrivate. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this TemporaryUploadFileResultUploadPrivate. # noqa: E501 :return: The url of this TemporaryUploadFileResultUploadPrivate. # noqa: E501 :rtype: str token_response \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TokenResponse \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( token = None , local_vars_configuration = None ) \u00b6 TokenResponse - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model token () property writable \u00b6 Gets the token of this TokenResponse. # noqa: E501 :return: The token of this TokenResponse. # noqa: E501 :rtype: str topology \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech Topology \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( categories = None , edges = None , local_vars_configuration = None ) \u00b6 Topology - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint categories () property writable \u00b6 Gets the categories of this Topology. # noqa: E501 :return: The categories of this Topology. # noqa: E501 :rtype: list[TopologyNode] edges () property writable \u00b6 Gets the edges of this Topology. # noqa: E501 :return: The edges of this Topology. # noqa: E501 :rtype: list[TopologyEdge] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model topology_edge \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TopologyEdge \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , source = None , target = None , local_vars_configuration = None ) \u00b6 TopologyEdge - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this TopologyEdge. # noqa: E501 :return: The name of this TopologyEdge. # noqa: E501 :rtype: str source () property writable \u00b6 Gets the source of this TopologyEdge. # noqa: E501 :return: The source of this TopologyEdge. # noqa: E501 :rtype: list[str] target () property writable \u00b6 Gets the target of this TopologyEdge. # noqa: E501 :return: The target of this TopologyEdge. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model topology_node \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TopologyNode \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , local_vars_configuration = None ) \u00b6 TopologyNode - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this TopologyNode. # noqa: E501 :return: The name of this TopologyNode. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model update_data_flow_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech UpdateDataFlowOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , name = None , public = None , template = None , variables = None , local_vars_configuration = None ) \u00b6 UpdateDataFlowOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this UpdateDataFlowOptions. # noqa: E501 :return: The description of this UpdateDataFlowOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this UpdateDataFlowOptions. # noqa: E501 :return: The name of this UpdateDataFlowOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this UpdateDataFlowOptions. # noqa: E501 :return: The public of this UpdateDataFlowOptions. # noqa: E501 :rtype: bool template () property writable \u00b6 Gets the template of this UpdateDataFlowOptions. # noqa: E501 :return: The template of this UpdateDataFlowOptions. # noqa: E501 :rtype: DataFlowTemplate to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this UpdateDataFlowOptions. # noqa: E501 :return: The variables of this UpdateDataFlowOptions. # noqa: E501 :rtype: dict(str, ProjectProjKeyKgcDataflowTemplatesVariables) update_project_model_config_options \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech UpdateProjectModelConfigOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( configurations = None , description = None , name = None , public = None , local_vars_configuration = None ) \u00b6 UpdateProjectModelConfigOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint configurations () property writable \u00b6 Gets the configurations of this UpdateProjectModelConfigOptions. # noqa: E501 :return: The configurations of this UpdateProjectModelConfigOptions. # noqa: E501 :rtype: ProjectProjKeyModelConfigsConfigurations description () property writable \u00b6 Gets the description of this UpdateProjectModelConfigOptions. # noqa: E501 :return: The description of this UpdateProjectModelConfigOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this UpdateProjectModelConfigOptions. # noqa: E501 :return: The name of this UpdateProjectModelConfigOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this UpdateProjectModelConfigOptions. # noqa: E501 :return: The public of this UpdateProjectModelConfigOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model uploaded_file \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech UploadedFile \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( filename = None , id = None , proj_key = None , timestamp = None , user_key = None , local_vars_configuration = None ) \u00b6 UploadedFile - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint filename () property writable \u00b6 Gets the filename of this UploadedFile. # noqa: E501 :return: The filename of this UploadedFile. # noqa: E501 :rtype: str id () property writable \u00b6 Gets the id of this UploadedFile. # noqa: E501 ID of the temporary file. # noqa: E501 :return: The id of this UploadedFile. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this UploadedFile. # noqa: E501 :return: The proj_key of this UploadedFile. # noqa: E501 :rtype: str timestamp () property writable \u00b6 Gets the timestamp of this UploadedFile. # noqa: E501 :return: The timestamp of this UploadedFile. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model user_key () property writable \u00b6 Gets the user_key of this UploadedFile. # noqa: E501 :return: The user_key of this UploadedFile. # noqa: E501 :rtype: str uploaded_file_result \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech UploadedFileResult \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( id = None , url = None , local_vars_configuration = None ) \u00b6 UploadedFileResult - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint id () property writable \u00b6 Gets the id of this UploadedFileResult. # noqa: E501 ID of the temporary file. # noqa: E501 :return: The id of this UploadedFileResult. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this UploadedFileResult. # noqa: E501 URL to get the temporary file form. # noqa: E501 :return: The url of this UploadedFileResult. # noqa: E501 :rtype: str usage_stats \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech UsageStats \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( bag_key = None , last_command = None , proj_key = None , local_vars_configuration = None ) \u00b6 UsageStats - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bag_key () property writable \u00b6 Gets the bag_key of this UsageStats. # noqa: E501 :return: The bag_key of this UsageStats. # noqa: E501 :rtype: str last_command () property writable \u00b6 Gets the last_command of this UsageStats. # noqa: E501 :return: The last_command of this UsageStats. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this UsageStats. # noqa: E501 :return: The proj_key of this UsageStats. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model well_known_df_template_variable \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech WellKnownDfTemplateVariable \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , id = None , type = None , local_vars_configuration = None ) \u00b6 WellKnownDfTemplateVariable - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this WellKnownDfTemplateVariable. # noqa: E501 :return: The description of this WellKnownDfTemplateVariable. # noqa: E501 :rtype: str id () property writable \u00b6 Gets the id of this WellKnownDfTemplateVariable. # noqa: E501 :return: The id of this WellKnownDfTemplateVariable. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this WellKnownDfTemplateVariable. # noqa: E501 :return: The type of this WellKnownDfTemplateVariable. # noqa: E501 :rtype: DataFlowTemplateVariable rest \u00b6 Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech RESTClientObject \u00b6 Bases: object request ( method , url , query_params = None , headers = None , body = None , post_params = None , _preload_content = True , _request_timeout = None ) \u00b6 Perform requests. :param method: http request method :param url: http request url :param query_params: query parameters in the url :param headers: http request headers :param body: request json body, for application/json :param post_params: request post parameters, application/x-www-form-urlencoded and multipart/form-data :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. RESTResponse \u00b6 Bases: io . IOBase getheader ( name , default = None ) \u00b6 Returns a given response header. getheaders () \u00b6 Returns a dictionary of the response headers. user \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech api \u00b6 admin_api \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech AdminApi \u00b6 Bases: object Do not edit the class manually. confirm_user ( user_key , ** kwargs ) \u00b6 confirm_user # noqa: E501 Confirm a pending user. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.confirm_user(user_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str user_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. confirm_user_with_http_info ( user_key , ** kwargs ) \u00b6 confirm_user # noqa: E501 Confirm a pending user. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.confirm_user_with_http_info(user_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str user_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. list_all_projects ( ** kwargs ) \u00b6 list_all_projects # noqa: E501 List all projects # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_all_projects(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[Project] If the method is called asynchronously, returns the request thread. list_all_projects_with_http_info ( ** kwargs ) \u00b6 list_all_projects # noqa: E501 List all projects # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_all_projects_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[Project], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_audits ( ** kwargs ) \u00b6 list_audits # noqa: E501 List audits globally # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_audits(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str user_key: :param str type_: :param str search_term: :param str before: :param str after: :param int limit: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: InlineResponse200 If the method is called asynchronously, returns the request thread. list_audits_with_http_info ( ** kwargs ) \u00b6 list_audits # noqa: E501 List audits globally # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_audits_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str user_key: :param str type_: :param str search_term: :param str before: :param str after: :param int limit: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(InlineResponse200, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_pending_users ( ** kwargs ) \u00b6 list_pending_users # noqa: E501 List pending user requests. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_pending_users(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str term: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[UserDetails] If the method is called asynchronously, returns the request thread. list_pending_users_with_http_info ( ** kwargs ) \u00b6 list_pending_users # noqa: E501 List pending user requests. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_pending_users_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str term: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[UserDetails], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. oidc_api \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech OidcApi \u00b6 Bases: object Do not edit the class manually. authenticate ( ** kwargs ) \u00b6 authenticate # noqa: E501 Redirect to the OIDC authenticate endpoint. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.authenticate(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. authenticate_with_http_info ( ** kwargs ) \u00b6 authenticate # noqa: E501 Redirect to the OIDC authenticate endpoint. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.authenticate_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. create_tokens ( ** kwargs ) \u00b6 create_tokens # noqa: E501 Retrieve the user access and identity tokens using either the code or the refresh_token. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_tokens(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param CreateTokensRequestBody body: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: OidcTokenResponse If the method is called asynchronously, returns the request thread. create_tokens_with_http_info ( ** kwargs ) \u00b6 create_tokens # noqa: E501 Retrieve the user access and identity tokens using either the code or the refresh_token. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_tokens_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param CreateTokensRequestBody body: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(OidcTokenResponse, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. register_user ( data , ** kwargs ) \u00b6 register_user # noqa: E501 Register a new user, provided a valid access_token and id_token from the oidc provider. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.register_user(data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param RegisterUserRequestBody data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: UserDetails If the method is called asynchronously, returns the request thread. register_user_with_http_info ( data , ** kwargs ) \u00b6 register_user # noqa: E501 Register a new user, provided a valid access_token and id_token from the oidc provider. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.register_user_with_http_info(data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param RegisterUserRequestBody data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(UserDetails, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. token ( ** kwargs ) \u00b6 token # noqa: E501 Retrieve the user access and identity tokens using either the code or the refresh_token. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.token(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str code: The oidc code response :param str refresh_token: The oidc code response :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: OidcTokenResponse If the method is called asynchronously, returns the request thread. token_with_http_info ( ** kwargs ) \u00b6 token # noqa: E501 Retrieve the user access and identity tokens using either the code or the refresh_token. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.token_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str code: The oidc code response :param str refresh_token: The oidc code response :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(OidcTokenResponse, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. projects_api \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech ProjectsApi \u00b6 Bases: object Do not edit the class manually. add_user ( proj_key , data , ** kwargs ) \u00b6 add_user # noqa: E501 Assign a new user to a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.add_user(proj_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param ProjectUserAssignment data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: SuccessMessage If the method is called asynchronously, returns the request thread. add_user_with_http_info ( proj_key , data , ** kwargs ) \u00b6 add_user # noqa: E501 Assign a new user to a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.add_user_with_http_info(proj_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param ProjectUserAssignment data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(SuccessMessage, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create ( data , ** kwargs ) \u00b6 create # noqa: E501 Create a new project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create(data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param CreateProjectRequestBody data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Project If the method is called asynchronously, returns the request thread. create_with_http_info ( data , ** kwargs ) \u00b6 create # noqa: E501 Create a new project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_with_http_info(data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param CreateProjectRequestBody data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Project, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. delete ( proj_key , confirmation_token , ** kwargs ) \u00b6 delete # noqa: E501 Delete a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete(proj_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param str confirmation_token: The delete confirmation token (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_with_http_info ( proj_key , confirmation_token , ** kwargs ) \u00b6 delete # noqa: E501 Delete a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_with_http_info(proj_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param str confirmation_token: The delete confirmation token (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. details ( proj_key , ** kwargs ) \u00b6 details # noqa: E501 Returns the details of the project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.details(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Project If the method is called asynchronously, returns the request thread. details_with_http_info ( proj_key , ** kwargs ) \u00b6 details # noqa: E501 Returns the details of the project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.details_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Project, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. edit_user ( proj_key , data , ** kwargs ) \u00b6 edit_user # noqa: E501 Assign a new user to a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.edit_user(proj_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param ProjectUserAssignment data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: SuccessMessage If the method is called asynchronously, returns the request thread. edit_user_with_http_info ( proj_key , data , ** kwargs ) \u00b6 edit_user # noqa: E501 Assign a new user to a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.edit_user_with_http_info(proj_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param ProjectUserAssignment data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(SuccessMessage, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_delete_confirmation_token ( proj_key , ** kwargs ) \u00b6 get_delete_confirmation_token # noqa: E501 Get a delete confirmation token for the provided project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_delete_confirmation_token(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: TokenResponse If the method is called asynchronously, returns the request thread. get_delete_confirmation_token_with_http_info ( proj_key , ** kwargs ) \u00b6 get_delete_confirmation_token # noqa: E501 Get a delete confirmation token for the provided project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_delete_confirmation_token_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(TokenResponse, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_token ( proj_key , ** kwargs ) \u00b6 get_project_token # noqa: E501 Request a token granting access to the current project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_token(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: AccessToken If the method is called asynchronously, returns the request thread. get_project_token_with_http_info ( proj_key , ** kwargs ) \u00b6 get_project_token # noqa: E501 Request a token granting access to the current project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_token_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(AccessToken, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. is_authorized ( proj_key , ** kwargs ) \u00b6 is_authorized # noqa: E501 Provide user-key and project-key to coordinates a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.is_authorized(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param str role: The specific role to probe :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: SuccessMessage If the method is called asynchronously, returns the request thread. is_authorized_with_http_info ( proj_key , ** kwargs ) \u00b6 is_authorized # noqa: E501 Provide user-key and project-key to coordinates a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.is_authorized_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param str role: The specific role to probe :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(SuccessMessage, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_audits_in_project ( proj_key , ** kwargs ) \u00b6 list_audits_in_project # noqa: E501 List audits related to the project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_audits_in_project(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param str user_key: :param str type_: :param str search_term: :param str before: :param str after: :param int limit: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: InlineResponse200 If the method is called asynchronously, returns the request thread. list_audits_in_project_with_http_info ( proj_key , ** kwargs ) \u00b6 list_audits_in_project # noqa: E501 List audits related to the project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_audits_in_project_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param str user_key: :param str type_: :param str search_term: :param str before: :param str after: :param int limit: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(InlineResponse200, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_projects ( ** kwargs ) \u00b6 list_projects # noqa: E501 List all projects assigned to a user # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_projects(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str role: filter for the user role :param bool include_collaborators: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[Project] If the method is called asynchronously, returns the request thread. list_projects_with_http_info ( ** kwargs ) \u00b6 list_projects # noqa: E501 List all projects assigned to a user # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_projects_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str role: filter for the user role :param bool include_collaborators: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[Project], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_users ( proj_key , ** kwargs ) \u00b6 list_users # noqa: E501 List all users belonging to a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_users(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: dict(str, list[UserDetails]) If the method is called asynchronously, returns the request thread. list_users_with_http_info ( proj_key , ** kwargs ) \u00b6 list_users # noqa: E501 List all users belonging to a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_users_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(dict(str, list[UserDetails]), status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. remove_user ( proj_key , username , ** kwargs ) \u00b6 remove_user # noqa: E501 Delete an user from a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.remove_user(proj_key, username, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param str username: The username for the user (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. remove_user_with_http_info ( proj_key , username , ** kwargs ) \u00b6 remove_user # noqa: E501 Delete an user from a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.remove_user_with_http_info(proj_key, username, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param str username: The username for the user (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. settings_api \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech SettingsApi \u00b6 Bases: object Do not edit the class manually. global_permissions ( ** kwargs ) \u00b6 global_permissions # noqa: E501 Get the global permissions for users. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.global_permissions(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: dict(str, bool) If the method is called asynchronously, returns the request thread. global_permissions_with_http_info ( ** kwargs ) \u00b6 global_permissions # noqa: E501 Get the global permissions for users. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.global_permissions_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(dict(str, bool), status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. user_api \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech UserApi \u00b6 Bases: object Do not edit the class manually. api_key_create ( ** kwargs ) \u00b6 api_key_create # noqa: E501 Create an API Key for your user # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.api_key_create(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ApiKey If the method is called asynchronously, returns the request thread. api_key_create_with_http_info ( ** kwargs ) \u00b6 api_key_create # noqa: E501 Create an API Key for your user # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.api_key_create_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ApiKey, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. users_api \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech UsersApi \u00b6 Bases: object Do not edit the class manually. api_key_get ( ** kwargs ) \u00b6 api_key_get # noqa: E501 Show the API Key for your user # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.api_key_get(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ApiKey If the method is called asynchronously, returns the request thread. api_key_get_with_http_info ( ** kwargs ) \u00b6 api_key_get # noqa: E501 Show the API Key for your user # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.api_key_get_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ApiKey, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_access_token ( ** kwargs ) \u00b6 get_access_token # noqa: E501 Request a user API token # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_access_token(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param GetAccessTokenRequestBody options: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: AccessToken If the method is called asynchronously, returns the request thread. get_access_token_with_http_info ( ** kwargs ) \u00b6 get_access_token # noqa: E501 Request a user API token # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_access_token_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param GetAccessTokenRequestBody options: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(AccessToken, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_current_user_details ( ** kwargs ) \u00b6 get_current_user_details # noqa: E501 Gets the current user's details. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_current_user_details(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: UserDetails If the method is called asynchronously, returns the request thread. get_current_user_details_with_http_info ( ** kwargs ) \u00b6 get_current_user_details # noqa: E501 Gets the current user's details. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_current_user_details_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(UserDetails, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. impersonate_user_token ( body , ** kwargs ) \u00b6 impersonate_user_token # noqa: E501 Request an impersonate user token. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.impersonate_user_token(body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param ImpersonateUserTokenRequestBody body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: TokenResponse If the method is called asynchronously, returns the request thread. impersonate_user_token_with_http_info ( body , ** kwargs ) \u00b6 impersonate_user_token # noqa: E501 Request an impersonate user token. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.impersonate_user_token_with_http_info(body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param ImpersonateUserTokenRequestBody body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(TokenResponse, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. search ( term , ** kwargs ) \u00b6 search # noqa: E501 Search for users matching the email or name. Depending on the user's permissions, only owners and assignees from their projects may be shown. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.search(term, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str term: Search term (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[UserDetails] If the method is called asynchronously, returns the request thread. search_with_http_info ( term , ** kwargs ) \u00b6 search # noqa: E501 Search for users matching the email or name. Depending on the user's permissions, only owners and assignees from their projects may be shown. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.search_with_http_info(term, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str term: Search term (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[UserDetails], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. service_accounts_create ( ** kwargs ) \u00b6 service_accounts_create # noqa: E501 Create a new service accounts for your user # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.service_accounts_create(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ServiceAccount If the method is called asynchronously, returns the request thread. service_accounts_create_with_http_info ( ** kwargs ) \u00b6 service_accounts_create # noqa: E501 Create a new service accounts for your user # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.service_accounts_create_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ServiceAccount, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. service_accounts_list ( ** kwargs ) \u00b6 service_accounts_list # noqa: E501 List all service accounts of your user # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.service_accounts_list(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[ServiceAccount] If the method is called asynchronously, returns the request thread. service_accounts_list_with_http_info ( ** kwargs ) \u00b6 service_accounts_list # noqa: E501 List all service accounts of your user # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.service_accounts_list_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[ServiceAccount], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. api_client \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech ApiClient \u00b6 Bases: object Generic API client for OpenAPI client library builds. OpenAPI generic API client. This client handles the client- server communication, and is invariant across implementations. Specifics of the methods and models for each application are generated from the OpenAPI templates. NOTE: This class is auto generated by OpenAPI Generator. Ref: https://openapi-generator.tech Do not edit the class manually. :param configuration: .Configuration object for this client :param header_name: a header to pass when making calls to the API. :param header_value: a header value to pass when making calls to the API. :param cookie: a cookie to include in the header when making calls to the API :param pool_threads: The number of threads to use for async requests to the API. More threads means more concurrent API requests. __deserialize ( data , klass ) \u00b6 Deserializes dict, list, str into an object. :param data: dict, list or str. :param klass: class literal, or string of class name. :return: object. __deserialize_date ( string ) \u00b6 Deserializes string to date. :param string: str. :return: date. __deserialize_datetime ( string ) \u00b6 Deserializes string to datetime. The string should be in iso8601 datetime format. :param string: str. :return: datetime. __deserialize_file ( response ) \u00b6 Deserializes body to file Saves response body into a file in a temporary folder, using the filename from the Content-Disposition header if provided. :param response: RESTResponse. :return: file path. __deserialize_model ( data , klass ) \u00b6 Deserializes list or dict to model. :param data: dict, list. :param klass: class literal. :return: model object. __deserialize_object ( value ) \u00b6 Return an original value. :return: object. __deserialize_primitive ( data , klass ) \u00b6 Deserializes string to primitive type. :param data: str. :param klass: class literal. :return: int, long, float, str, bool. call_api ( resource_path , method , path_params = None , query_params = None , header_params = None , body = None , post_params = None , files = None , response_type = None , auth_settings = None , async_req = None , _return_http_data_only = None , collection_formats = None , _preload_content = True , _request_timeout = None , _host = None ) \u00b6 Makes the HTTP request (synchronous) and returns deserialized data. To make an async_req request, set the async_req parameter. :param resource_path: Path to method endpoint. :param method: Method to call. :param path_params: Path parameters in the url. :param query_params: Query parameters in the url. :param header_params: Header parameters to be placed in the request header. :param body: Request body. :param post_params dict: Request post form parameters, for application/x-www-form-urlencoded , multipart/form-data . :param auth_settings list: Auth Settings names for the request. :param response: Response data type. :param files dict: key -> filename, value -> filepath, for multipart/form-data . :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param collection_formats: dict of collection formats for path, query, header, and post parameters. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: If async_req parameter is True, the request will be called asynchronously. The method will return the request thread. If parameter async_req is False or missing, then the method will return the response directly. deserialize ( response , response_type ) \u00b6 Deserializes response into an object. :param response: RESTResponse object to be deserialized. :param response_type: class literal for deserialized object, or string of class name. :return: deserialized object. files_parameters ( files = None ) \u00b6 Builds form parameters. :param files: File parameters. :return: Form parameters with files. parameters_to_tuples ( params , collection_formats ) \u00b6 Get parameters as list of tuples, formatting collections. :param params: Parameters as dict or list of two-tuples :param dict collection_formats: Parameter collection formats :return: Parameters as list of tuples, collections formatted pool () property \u00b6 Create thread pool on first request avoids instantiating unused threadpool for blocking clients. request ( method , url , query_params = None , headers = None , post_params = None , body = None , _preload_content = True , _request_timeout = None ) \u00b6 Makes the HTTP request using RESTClient. sanitize_for_serialization ( obj ) \u00b6 Builds a JSON POST object. If obj is None, return None. If obj is str, int, long, float, bool, return directly. If obj is datetime.datetime, datetime.date convert to string in iso8601 format. If obj is list, sanitize each element in the list. If obj is dict, return the dict. If obj is OpenAPI model, return the properties dict. :param obj: The data to serialize. :return: The serialized form of data. select_header_accept ( accepts ) \u00b6 Returns Accept based on an array of accepts provided. :param accepts: List of headers. :return: Accept (e.g. application/json). select_header_content_type ( content_types ) \u00b6 Returns Content-Type based on an array of content_types provided. :param content_types: List of content-types. :return: Content-Type (e.g. application/json). update_params_for_auth ( headers , querys , auth_settings ) \u00b6 Updates header and query params based on authentication setting. :param headers: Header parameters dict to be updated. :param querys: Query parameters tuple list to be updated. :param auth_settings: Authentication setting identifiers list. user_agent () property writable \u00b6 User agent for this API client configuration \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech Configuration \u00b6 Bases: object This class is auto generated by OpenAPI Generator Do not edit the class manually. :param host: Base url :param api_key: Dict to store API key(s). Each entry in the dict specifies an API key. The dict key is the name of the security scheme in the OAS specification. The dict value is the API key secret. :param api_key_prefix: Dict to store API prefix (e.g. Bearer) The dict key is the name of the security scheme in the OAS specification. The dict value is an API key prefix when generating the auth data. :param username: Username for HTTP basic authentication :param password: Password for HTTP basic authentication :param discard_unknown_keys: Boolean value indicating whether to discard unknown properties. A server may send a response that includes additional properties that are not known by the client in the following scenarios: 1. The OpenAPI document is incomplete, i.e. it does not match the server implementation. 2. The client was generated using an older version of the OpenAPI document and the server has been upgraded since then. If a schema in the OpenAPI document defines the additionalProperties attribute, then all undeclared properties received by the server are injected into the additional properties map. In that case, there are undeclared properties, and nothing to discard. :Example: API Key Authentication Example. Given the following security scheme in the OpenAPI specification: components: securitySchemes: cookieAuth: # name for the security scheme type: apiKey in: cookie name: JSESSIONID # cookie name You can programmatically set the cookie: conf = deepsearch.cps.apis.user.Configuration( api_key={'cookieAuth': 'abc123'} api_key_prefix={'cookieAuth': 'JSESSIONID'} ) The following cookie will be added to the HTTP request: Cookie: JSESSIONID abc123 HTTP Basic Authentication Example. Given the following security scheme in the OpenAPI specification: components: securitySchemes: http_basic_auth: type: http scheme: basic Configure API client with HTTP basic authentication: conf = deepsearch.cps.apis.user.Configuration( username='the-user', password='the-password', ) assert_hostname = None instance-attribute \u00b6 Set this to True/False to enable/disable SSL hostname verification. cert_file = None instance-attribute \u00b6 client certificate file connection_pool_maxsize = multiprocessing . cpu_count () * 5 instance-attribute \u00b6 urllib3 connection pool's maximum number of connections saved per pool. urllib3 uses 1 connection as default value, but this is not the best value when you are making a lot of possibly parallel requests to the same host, which is often the case here. cpu_count * 5 is used as default value to increase performance. host = host instance-attribute \u00b6 Default Base url key_file = None instance-attribute \u00b6 client key file logger = {} instance-attribute \u00b6 Logging Settings logger_file_handler = None instance-attribute \u00b6 Log file handler logger_stream_handler = None instance-attribute \u00b6 Log stream handler password = password instance-attribute \u00b6 Password for HTTP basic authentication proxy = None instance-attribute \u00b6 Proxy URL proxy_headers = None instance-attribute \u00b6 Proxy headers refresh_api_key_hook = None instance-attribute \u00b6 function hook to refresh API key if expired retries = None instance-attribute \u00b6 Adding retries to override urllib3 default value 3 safe_chars_for_path_param = '' instance-attribute \u00b6 Safe chars for path_param ssl_ca_cert = None instance-attribute \u00b6 Set this to customize the certificate file to verify the peer. temp_folder_path = None instance-attribute \u00b6 Temp file folder for downloading files username = username instance-attribute \u00b6 Username for HTTP basic authentication verify_ssl = True instance-attribute \u00b6 SSL/TLS verification Set this to false to skip verifying SSL certificate when calling API from https server. __init__ ( host = 'http://localhost/api/cps/user/v1' , api_key = None , api_key_prefix = None , username = None , password = None , discard_unknown_keys = False ) \u00b6 Constructor auth_settings () \u00b6 Gets Auth Settings dict for api client. :return: The Auth Settings information dict. debug () property writable \u00b6 Debug status :param value: The debug status, True or False. :type: bool get_api_key_with_prefix ( identifier ) \u00b6 Gets API key (with prefix if set). :param identifier: The identifier of apiKey. :return: The token for api key authentication. get_basic_auth_token () \u00b6 Gets HTTP basic authentication header (string). :return: The token for basic HTTP authentication. get_default_copy () classmethod \u00b6 Return new instance of configuration. This method returns newly created, based on default constructor, object of Configuration class or returns a copy of default configuration passed by the set_default method. :return: The configuration object. get_host_from_settings ( index , variables = None ) \u00b6 Gets host URL based on the index and variables :param index: array index of the host settings :param variables: hash of variable and the corresponding value :return: URL based on host settings get_host_settings () \u00b6 Gets an array of host settings :return: An array of host settings logger_file () property writable \u00b6 The logger file. If the logger_file is None, then add stream handler and remove file handler. Otherwise, add file handler and remove stream handler. :param value: The logger_file path. :type: str logger_format () property writable \u00b6 The logger format. The logger_formatter will be updated when sets logger_format. :param value: The format string. :type: str set_default ( default ) classmethod \u00b6 Set default instance of configuration. It stores default configuration, which can be returned by get_default_copy method. :param default: object of Configuration to_debug_report () \u00b6 Gets the essential information for debugging. :return: The report for debugging. exceptions \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech ApiException \u00b6 Bases: OpenApiException __str__ () \u00b6 Custom error messages for exception ApiKeyError \u00b6 Bases: OpenApiException , KeyError __init__ ( msg , path_to_item = None ) \u00b6 Parameters: Name Type Description Default msg str the exception message required ApiTypeError \u00b6 Bases: OpenApiException , TypeError __init__ ( msg , path_to_item = None , valid_classes = None , key_type = None ) \u00b6 Raises an exception for TypeErrors Parameters: Name Type Description Default msg str the exception message required Other Parameters: Name Type Description path_to_item list a list of keys an indices to get to the current_item None if unset valid_classes tuple the primitive classes that current item should be an instance of None if unset key_type bool False if our value is a value in a dict True if it is a key in a dict False if our item is an item in a list None if unset ApiValueError \u00b6 Bases: OpenApiException , ValueError __init__ ( msg , path_to_item = None ) \u00b6 Parameters: Name Type Description Default msg str the exception message required OpenApiException \u00b6 Bases: Exception The base exception class for all OpenAPIExceptions render_path ( path_to_item ) \u00b6 Returns a string representation of a path models \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech access_token \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech AccessToken \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( access_token = None , local_vars_configuration = None ) \u00b6 AccessToken - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint access_token () property writable \u00b6 Gets the access_token of this AccessToken. # noqa: E501 :return: The access_token of this AccessToken. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model api_key \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech ApiKey \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( api_key = None , email = None , local_vars_configuration = None ) \u00b6 ApiKey - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint api_key () property writable \u00b6 Gets the api_key of this ApiKey. # noqa: E501 :return: The api_key of this ApiKey. # noqa: E501 :rtype: str email () property writable \u00b6 Gets the email of this ApiKey. # noqa: E501 :return: The email of this ApiKey. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model audit_record \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech AuditRecord \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( details = None , id = None , message = None , proj_key = None , timestamp = None , type = None , user_key = None , local_vars_configuration = None ) \u00b6 AuditRecord - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint details () property writable \u00b6 Gets the details of this AuditRecord. # noqa: E501 :return: The details of this AuditRecord. # noqa: E501 :rtype: object id () property writable \u00b6 Gets the id of this AuditRecord. # noqa: E501 :return: The id of this AuditRecord. # noqa: E501 :rtype: str message () property writable \u00b6 Gets the message of this AuditRecord. # noqa: E501 :return: The message of this AuditRecord. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this AuditRecord. # noqa: E501 :return: The proj_key of this AuditRecord. # noqa: E501 :rtype: str timestamp () property writable \u00b6 Gets the timestamp of this AuditRecord. # noqa: E501 :return: The timestamp of this AuditRecord. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this AuditRecord. # noqa: E501 :return: The type of this AuditRecord. # noqa: E501 :rtype: str user_key () property writable \u00b6 Gets the user_key of this AuditRecord. # noqa: E501 :return: The user_key of this AuditRecord. # noqa: E501 :rtype: str create_project_request_body \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech CreateProjectRequestBody \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , proj_key = None , local_vars_configuration = None ) \u00b6 CreateProjectRequestBody - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this CreateProjectRequestBody. # noqa: E501 Name of the project # noqa: E501 :return: The name of this CreateProjectRequestBody. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this CreateProjectRequestBody. # noqa: E501 Internal project key to use. (use only if you really know what you are doing) # noqa: E501 :return: The proj_key of this CreateProjectRequestBody. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model create_tokens_request_body \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech CreateTokensRequestBody \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( code = None , refresh_token = None , local_vars_configuration = None ) \u00b6 CreateTokensRequestBody - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint code () property writable \u00b6 Gets the code of this CreateTokensRequestBody. # noqa: E501 The oidc code response # noqa: E501 :return: The code of this CreateTokensRequestBody. # noqa: E501 :rtype: str refresh_token () property writable \u00b6 Gets the refresh_token of this CreateTokensRequestBody. # noqa: E501 The refresh token # noqa: E501 :return: The refresh_token of this CreateTokensRequestBody. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model error_response \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech ErrorResponse \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( error = None , local_vars_configuration = None ) \u00b6 ErrorResponse - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint error () property writable \u00b6 Gets the error of this ErrorResponse. # noqa: E501 Description of the error. # noqa: E501 :return: The error of this ErrorResponse. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model get_access_token_request_body \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech GetAccessTokenRequestBody \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( admin = False , local_vars_configuration = None ) \u00b6 GetAccessTokenRequestBody - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint admin () property writable \u00b6 Gets the admin of this GetAccessTokenRequestBody. # noqa: E501 :return: The admin of this GetAccessTokenRequestBody. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model impersonate_user_token_request_body \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech ImpersonateUserTokenRequestBody \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( impersonate_secret = None , target_user_key = None , local_vars_configuration = None ) \u00b6 ImpersonateUserTokenRequestBody - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint impersonate_secret () property writable \u00b6 Gets the impersonate_secret of this ImpersonateUserTokenRequestBody. # noqa: E501 :return: The impersonate_secret of this ImpersonateUserTokenRequestBody. # noqa: E501 :rtype: str target_user_key () property writable \u00b6 Gets the target_user_key of this ImpersonateUserTokenRequestBody. # noqa: E501 :return: The target_user_key of this ImpersonateUserTokenRequestBody. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model inline_response200 \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech InlineResponse200 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( audits = None , local_vars_configuration = None ) \u00b6 InlineResponse200 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint audits () property writable \u00b6 Gets the audits of this InlineResponse200. # noqa: E501 :return: The audits of this InlineResponse200. # noqa: E501 :rtype: list[AuditRecord] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model oidc_token_response \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech OidcTokenResponse \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( access_token = None , id_token = None , refresh_token = None , local_vars_configuration = None ) \u00b6 OidcTokenResponse - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint access_token () property writable \u00b6 Gets the access_token of this OidcTokenResponse. # noqa: E501 :return: The access_token of this OidcTokenResponse. # noqa: E501 :rtype: str id_token () property writable \u00b6 Gets the id_token of this OidcTokenResponse. # noqa: E501 :return: The id_token of this OidcTokenResponse. # noqa: E501 :rtype: str refresh_token () property writable \u00b6 Gets the refresh_token of this OidcTokenResponse. # noqa: E501 :return: The refresh_token of this OidcTokenResponse. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech Project \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( date = None , name = None , proj_key = None , role = None , local_vars_configuration = None ) \u00b6 Project - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint date () property writable \u00b6 Gets the date of this Project. # noqa: E501 :return: The date of this Project. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this Project. # noqa: E501 :return: The name of this Project. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this Project. # noqa: E501 :return: The proj_key of this Project. # noqa: E501 :rtype: str role () property writable \u00b6 Gets the role of this Project. # noqa: E501 :return: The role of this Project. # noqa: E501 :rtype: UserType to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model project_user_assignment \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech ProjectUserAssignment \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( role = None , username = None , local_vars_configuration = None ) \u00b6 ProjectUserAssignment - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint role () property writable \u00b6 Gets the role of this ProjectUserAssignment. # noqa: E501 The role to assign to the user # noqa: E501 :return: The role of this ProjectUserAssignment. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model username () property writable \u00b6 Gets the username of this ProjectUserAssignment. # noqa: E501 The username # noqa: E501 :return: The username of this ProjectUserAssignment. # noqa: E501 :rtype: str register_user_request_body \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech RegisterUserRequestBody \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( access_token = None , id_token = None , local_vars_configuration = None ) \u00b6 RegisterUserRequestBody - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint access_token () property writable \u00b6 Gets the access_token of this RegisterUserRequestBody. # noqa: E501 OIDC access_token signed by the provider # noqa: E501 :return: The access_token of this RegisterUserRequestBody. # noqa: E501 :rtype: str id_token () property writable \u00b6 Gets the id_token of this RegisterUserRequestBody. # noqa: E501 OIDC id_token signed by the provider # noqa: E501 :return: The id_token of this RegisterUserRequestBody. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model service_account \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech ServiceAccount \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( credentials = None , name = None , user_key = None , local_vars_configuration = None ) \u00b6 ServiceAccount - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint credentials () property writable \u00b6 Gets the credentials of this ServiceAccount. # noqa: E501 :return: The credentials of this ServiceAccount. # noqa: E501 :rtype: ServiceAccountCredentials name () property writable \u00b6 Gets the name of this ServiceAccount. # noqa: E501 :return: The name of this ServiceAccount. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model user_key () property writable \u00b6 Gets the user_key of this ServiceAccount. # noqa: E501 :return: The user_key of this ServiceAccount. # noqa: E501 :rtype: str service_account_credentials \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech ServiceAccountCredentials \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( password = None , username = None , local_vars_configuration = None ) \u00b6 ServiceAccountCredentials - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint password () property writable \u00b6 Gets the password of this ServiceAccountCredentials. # noqa: E501 :return: The password of this ServiceAccountCredentials. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model username () property writable \u00b6 Gets the username of this ServiceAccountCredentials. # noqa: E501 :return: The username of this ServiceAccountCredentials. # noqa: E501 :rtype: str success_message \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech SuccessMessage \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( success = None , local_vars_configuration = None ) \u00b6 SuccessMessage - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint success () property writable \u00b6 Gets the success of this SuccessMessage. # noqa: E501 Human readable message. # noqa: E501 :return: The success of this SuccessMessage. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model token_response \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech TokenResponse \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( token = None , local_vars_configuration = None ) \u00b6 TokenResponse - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model token () property writable \u00b6 Gets the token of this TokenResponse. # noqa: E501 The delete confirmation token. # noqa: E501 :return: The token of this TokenResponse. # noqa: E501 :rtype: str user_details \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech UserDetails \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( email = None , role = None , username = None , local_vars_configuration = None ) \u00b6 UserDetails - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint email () property writable \u00b6 Gets the email of this UserDetails. # noqa: E501 :return: The email of this UserDetails. # noqa: E501 :rtype: str role () property writable \u00b6 Gets the role of this UserDetails. # noqa: E501 :return: The role of this UserDetails. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model username () property writable \u00b6 Gets the username of this UserDetails. # noqa: E501 :return: The username of this UserDetails. # noqa: E501 :rtype: str user_type \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech UserType \u00b6 Bases: object Do not edit the class manually. allowable_values = [ ASSIGNEE , OWNER ] class-attribute \u00b6 Attributes: Name Type Description openapi_types dict The key is attribute name and the value is attribute type. attribute_map dict The key is attribute name and the value is json key in definition. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( local_vars_configuration = None ) \u00b6 UserType - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model rest \u00b6 User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech RESTClientObject \u00b6 Bases: object request ( method , url , query_params = None , headers = None , body = None , post_params = None , _preload_content = True , _request_timeout = None ) \u00b6 Perform requests. :param method: http request method :param url: http request url :param query_params: query parameters in the url :param headers: http request headers :param body: request json body, for application/json :param post_params: request post parameters, application/x-www-form-urlencoded and multipart/form-data :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. RESTResponse \u00b6 Bases: io . IOBase getheader ( name , default = None ) \u00b6 Returns a given response header. getheaders () \u00b6 Returns a dictionary of the response headers. cli \u00b6 data_indices_typer \u00b6 upload_files ( proj_key = PROJ_KEY , url = URL , local_file = LOCAL_FILE , index_key = INDEX_KEY ) \u00b6 Upload pdfs, zips, or online documents to a data index in a project client \u00b6 CpsApi \u00b6 default_from_env () classmethod \u00b6 Connect to CPS's API using a configured environment file api \u00b6 CpsApi \u00b6 default_from_env () classmethod \u00b6 Connect to CPS's API using a configured environment file builders \u00b6 wf_builder \u00b6 WorkflowTask \u00b6 set_as_output () \u00b6 Set this task to provide an output. components \u00b6 CpsApiDataIndices \u00b6 create ( proj_key , name , desc = '' , type = None , schema_key = None ) \u00b6 Method to create a new index. Input \u00b6 string key of project in which index is created string name of data index string, OPTIONAL description of data index string, OPTIONAL type of data index, default is \"Document\" possible values: \"Document\", \"DB Records\", \"Generic\", \"Experiment\" string, OPTIONAL schema of data index, default is \"deepsearch_doc\" possible values: \"deepsearch-doc\", \"deepsearch-db\", \"generic\" upload_file ( coords , body ) \u00b6 Call api for converting and uploading file to a project's data index. CpsApiKnowledgeGraphs \u00b6 list_flavours ( project ) \u00b6 List Knowledge Graph flavours. CpsApiTasks \u00b6 wait_for ( project , task_id ) \u00b6 Waits for a task and returns its result, or raises an exception in case of failure. data_indices \u00b6 CpsApiDataIndices \u00b6 create ( proj_key , name , desc = '' , type = None , schema_key = None ) \u00b6 Method to create a new index. Input \u00b6 string key of project in which index is created string name of data index string, OPTIONAL description of data index string, OPTIONAL type of data index, default is \"Document\" possible values: \"Document\", \"DB Records\", \"Generic\", \"Experiment\" string, OPTIONAL schema of data index, default is \"deepsearch_doc\" possible values: \"deepsearch-doc\", \"deepsearch-db\", \"generic\" upload_file ( coords , body ) \u00b6 Call api for converting and uploading file to a project's data index. knowledge_graphs \u00b6 CpsApiKg dataclass \u00b6 Bases: ApiConnectedObject save_snapshot_of_data_flow ( flavours , load_after_assembled = False , name = None ) \u00b6 Re-create the snapshot for a KG, using the last-assembled data-flow as a base CpsApiKnowledgeGraphs \u00b6 list_flavours ( project ) \u00b6 List Knowledge Graph flavours. tasks \u00b6 CpsApiTasks \u00b6 wait_for ( project , task_id ) \u00b6 Waits for a task and returns its result, or raises an exception in case of failure. queries \u00b6 Resource \u00b6 Bases: Protocol Models which implement this Protocol can be passed as coordinates to tasks query_tasks \u00b6 ForEach \u00b6 Bases: Task , TaskWithWellKnownOutputs [ ForEachOutputs ] current_element () \u00b6 Create a placeholder that will inject the current element into the template. current_index () \u00b6 Create a placeholder that will inject the current index into the template. for_each \u00b6 ForEach \u00b6 Bases: Task , TaskWithWellKnownOutputs [ ForEachOutputs ] current_element () \u00b6 Create a placeholder that will inject the current element into the template. current_index () \u00b6 Create a placeholder that will inject the current index into the template. task \u00b6 Resource \u00b6 Bases: Protocol Models which implement this Protocol can be passed as coordinates to tasks data_indices \u00b6 utils \u00b6 process_local_file ( coords , local_file ) \u00b6 Individual files are uploaded for conversion and storage in data index. process_url_input ( coords , url ) \u00b6 Individual urls are uploaded for conversion and storage in data index. upload_files ( coords , url = None , local_file = None ) \u00b6 Orchestrate document conversion and upload to an index in a project ipython \u00b6 kg_helpers \u00b6 display_kg_topology ( config , width = 960 , height = 600 ) \u00b6 Visualize the KG topology :param config: Knowledge Graph API Configuration :type config: Configuration :param width: IFrame width :type width: int :param height: IFrame height :type height: int display_workflow ( wf , config , width = 800 , height = 400 ) \u00b6 Visualize the workflow DAG :param config: Knowledge Graph API Configuration :type config: Configuration :param width: IFrame width :type width: int :param height: IFrame height :type height: int kg_widgets \u00b6 KGSelector \u00b6 interactive () \u00b6 Select the KG using the interacting widget components kg \u00b6 workflow \u00b6 wf_functions \u00b6 run ( wf , config ) \u00b6 Run the workflow against the given KG :param workflow: Workflow object :type workflow: Workflow :param config: Knowledge Graph API Configuration :type config: Configuration :returns workflow results validate ( wf , config ) \u00b6 Validate the workflow DAG :param workflow: Workflow object :type workflow: Workflow :param config: Knowledge Graph API Configuration :type config: Configuration workflow \u00b6 Workflow \u00b6 as_output ( limit = None ) \u00b6 Set node type as output :param limit: Response limit :type limit: int combine ( * workflows ) \u00b6 Combine result :param *workflows : Nodes to combine :type *workflows : List['Workflow'] edge_traversal ( edges = [], include = []) \u00b6 Traverse edges :param edges: The edges to traverse :type edges: List[str] :param include: Include nodes in operation :type include: List['Workflow'] filter ( filter_type = 'cut-off' , field_operation = '==' , field_value = '' , include = []) \u00b6 Filter values :param filter_type: Filter type. Possible values \"cut-off\", \"field-value\" :type filter_type: str :param field_operation: The field operation to use if filter type is \"field-value\". Possible values \"<\", \"==\", \">\" :type field_operation: str :param field_value: The field value to filter by :type field_value: str :param include: Include nodes in operation :type include: List['Workflow'] filter_categories ( * categories , include = []) \u00b6 Filter node type by category :param categories: the categories to filter :type categories: List[str] :param include: Include nodes in operation :type include: List['Workflow'] get_operations () \u00b6 Return workflow operations intersect ( * workflows ) \u00b6 Intersect result :param *workflows : Nodes to intersect :type *workflows : List['Workflow'] matrix_function ( matrix_function = 'abs' , include = []) \u00b6 Run result through matrix function :param matrix_function: Scalar function to use. Possible values \"e^A\", \"cosh\", \"sinh\" :type matrix_function: str :param include: Include nodes in operation :type include: List['Workflow'] multiply ( * workflows ) \u00b6 Multiply result :param *workflows : Nodes to multiply :type *workflows : List['Workflow'] negate ( * workflows ) \u00b6 Negate result :param *workflows : Nodes to negate :type *workflows : List['Workflow'] normalize ( normalize_type = 'RENORMALIZE_L2' , include = []) \u00b6 Normalize result :param normalize_type: Normalize type to use. Possible values \"RENORMALIZE_L1\", \"RENORMALIZE_L2\", \"RENORMALIZE_LINF\" :type normalize_type: str :param include: Include nodes in operation :type include: List['Workflow'] pearson_traversal ( edges = [], include = []) \u00b6 Traverse edges using pearson traversal :param edges: The edges to traverse :type edges: List[str] :param include: Include nodes in operation :type include: List['Workflow'] scalar_function ( scalar_function = 'abs' , include = []) \u00b6 Run result through scalar function :param scalar_function: Scalar function to use. Possible values \"uniform\", \"abs\", \"inv\", \"sigmoid\", \"softmax\" :type scalar_function: str :param include: Include nodes in operation :type include: List['Workflow'] search_nodes_by_approximation ( * args , tolerance = 0.8 , include = []) \u00b6 Search nodes where the arguments are approximate :param *args : the search arguments :type *args : List[str] :param tolerance: the tolerance :type tolerance: float :param include: Include nodes in operation :type include: List['Workflow'] search_nodes_by_db_id_pair ( * args , include = []) \u00b6 Search nodes that contain the db\\id pair :param *args : the db\\id pairs in format {\"_db\": \"db value\", \"_id\": \"id value\"} :type *args : List[str] :param include: Include nodes in operation :type include: List['Workflow'] search_nodes_by_index ( indices = [], weights = [], include = []) \u00b6 Search nodes by index :param indices: the indices to search :type indices: str :param weights: the weight to search :type weights: float :param include: Include nodes in operation :type include: List['Workflow'] search_nodes_by_regex ( * args , include = []) \u00b6 Search nodes by regex that match args :param *args : the search arguments :type *args : List[str] :param include: Include nodes in operation :type include: List['Workflow'] search_nodes_containing ( * args , include = []) \u00b6 Search nodes that contain the args :param *args : the search arguments :type *args : List[str] :param include: Include nodes in operation :type include: List['Workflow'] search_nodes_equal ( * args , include = []) \u00b6 Search nodes that equal the args :param *args : the search arguments :type *args : List[str] :param include: Include nodes in operation :type include: List['Workflow'] search_nodes_in_category ( * categories , include = []) \u00b6 Search nodes in categories :param categories: the categories to search :type categories: List[str] :param include: Include nodes in operation :type include: List['Workflow'] set_to_field_value ( field_name = '' , include = []) \u00b6 Set node to field value :param field_name: The field name :type field_name: str :param include: Include nodes in operation :type include: List['Workflow'] split ( times = 1 ) \u00b6 Add children to node :param times: Number of children to add :type times: int :returns node childs sum ( * workflows ) \u00b6 Sum result :param *workflows : Nodes to sum :type *workflows : List['Workflow'] to_json ( indent = 2 ) \u00b6 Return workflow as json string :param indent: result indentation :type indent: int documents \u00b6 cli \u00b6 main \u00b6 convert ( proj_key = PROJ_KEY , url = URL , local_file = LOCAL_FILE ) \u00b6 Document conversion via DeepSearch Technology. Inputs \u00b6 proj_key : string [REQUIRED] Your DeepSearch CPS Project Key. Contact DeepSearch Developers to request one. url : string [OPTIONAL] For converting a document from the web, please provide its url. local_file : string/path [OPTIONAL] For converting local files, please provide absolute path to file or to directory containing multiple files. NOTE: Either url or local_file should be supplied. core \u00b6 convert \u00b6 check_single_task_status ( ccs_proj_key , task_id ) \u00b6 Check status of individual tasks. check_status_running_tasks ( cps_proj_key , task_ids ) \u00b6 Check status of multiple running tasks and display progress with progress bar. download_converted_docs ( cps_proj_key , task_ids , root_dir ) \u00b6 Download all converted documents download_url ( url , save_path , chunk_size = 128 ) \u00b6 Download contents from a url. get_ccs_project_key ( cps_proj_key ) \u00b6 Given a cps project key, returns ccs project key and collection name. get_converted_doc ( ccs_proj_key , task_id ) \u00b6 Download converted document make_payload ( url_document , collection_name = '_default' ) \u00b6 Create payload for requesting conversion send_files_for_conversion ( cps_proj_key , local_file , root_dir ) \u00b6 Send multiple files for conversion. send_urls_for_conversion ( cps_proj_key , urls ) \u00b6 Send multiple online documents for conversion. submit_url_for_conversion ( cps_proj_key = PROJ_KEY , url = URL ) \u00b6 Convert an online pdf using DeepSearch Technology. upload_single_file ( cps_proj_key , file ) \u00b6 Uploads a single file. Return internal download url. create_report \u00b6 report_docs ( root_dir , batched_files , statuses , task_ids , local_file ) \u00b6 Function to create report when DeepSearch is converting local documents. report_urls ( root_dir , urls , statuses , task_ids ) \u00b6 Function to create report when DeepSearch is converting urls. input_process \u00b6 batch_single_files ( local_file , root_dir ) \u00b6 Batch individual pdfs into zip files. cleanup ( root_dir ) \u00b6 Clean temporarily created zip batches. create_root_dir () \u00b6 Creates root directory labelled with timestamp get_urls ( url ) \u00b6 Returns list of url from input file. process_local_input ( cps_proj_key , local_file ) \u00b6 Classify the user provided local input and take appropriate action. process_url_input ( cps_proj_key , url ) \u00b6 Classify user provided url(s) and take appropriate action. main \u00b6 convert_document ( proj_key , url = None , local_file = None ) \u00b6 Document conversion via DeepSearch Technology. Function to orchestrate document conversion. Inputs \u00b6 proj_key : string [REQUIRED] Your DeepSearch CPS Project Key. Contact DeepSearch Developers to request one. url : string [OPTIONAL] For converting a document from the web, please provide its url. local_file : path [OPTIONAL] For converting local files, please provide absolute path to file or to directory containing multiple files. NOTE: Either url or local_file should be supplied. plugins \u00b6 example_toy_cli_plugin \u00b6 A toy example plugin for the DeepSearch CLI.","title":"Toolkit reference"},{"location":"api-reference/#api-reference","text":"DeepSearch Toolkit","title":"API Reference"},{"location":"api-reference/#deepsearch.core","text":"","title":"core"},{"location":"api-reference/#deepsearch.core.cli","text":"","title":"cli"},{"location":"api-reference/#deepsearch.core.cli.plugins","text":"","title":"plugins"},{"location":"api-reference/#deepsearch.core.cli.plugins.DeepsearchCliPlugin","text":"","title":"DeepsearchCliPlugin"},{"location":"api-reference/#deepsearch.core.cli.plugins.DeepsearchCliPlugin.deepsearch_cli_add_group","text":"Add a deepsearch CLI command group. :return: A typer.Typer instance with a name set.","title":"deepsearch_cli_add_group()"},{"location":"api-reference/#deepsearch.core.util","text":"","title":"util"},{"location":"api-reference/#deepsearch.core.util.config_paths","text":"","title":"config_paths"},{"location":"api-reference/#deepsearch.core.util.config_paths.config_dir","text":"Get the path to the configuration directory","title":"config_dir()"},{"location":"api-reference/#deepsearch.core.util.config_paths.config_file_path","text":"Get the actual path to the configuration file. This takes into account the following paths (from most to least relevant): The file pointed to by $DEEPSEARCH_TOOLKIT_CONFIG_FILE The file $PWD/deepsearch_toolkit.json , if it exists The result of default_config_file_path() , which is os-dependent","title":"config_file_path()"},{"location":"api-reference/#deepsearch.core.util.config_paths.default_config_file_path","text":"Get the path to the configuration file","title":"default_config_file_path()"},{"location":"api-reference/#deepsearch.cps","text":"","title":"cps"},{"location":"api-reference/#deepsearch.cps.CpsApi","text":"","title":"CpsApi"},{"location":"api-reference/#deepsearch.cps.client.api.CpsApi.default_from_env","text":"Connect to CPS's API using a configured environment file","title":"default_from_env()"},{"location":"api-reference/#deepsearch.cps.apis","text":"","title":"apis"},{"location":"api-reference/#deepsearch.cps.apis.kg","text":"","title":"kg"},{"location":"api-reference/#deepsearch.cps.apis.kg.create","text":"Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech","title":"create"},{"location":"api-reference/#deepsearch.cps.apis.kg.create.api","text":"edges_api \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech EdgesApi \u00b6 Bases: object Do not edit the class manually. create_edges ( edges , ** kwargs ) \u00b6 create_edges # noqa: E501 Create new edges. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_edges(edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[EdgeModel] edges: The edges is an array of objects. Each of the objects contains the name of the edge, its symmetry and optionally its source and target categories. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. create_edges_with_http_info ( edges , ** kwargs ) \u00b6 create_edges # noqa: E501 Create new edges. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_edges_with_http_info(edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[EdgeModel] edges: The edges is an array of objects. Each of the objects contains the name of the edge, its symmetry and optionally its source and target categories. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_edges ( names , ** kwargs ) \u00b6 delete_edges # noqa: E501 Delete an edge in the graph. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_edges(names, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] names: Name of the edges to be deleted (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_edges_with_http_info ( names , ** kwargs ) \u00b6 delete_edges # noqa: E501 Delete an edge in the graph. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_edges_with_http_info(names, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] names: Name of the edges to be deleted (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_edges_from_hashes ( operation , edges , ** kwargs ) \u00b6 update_edges_from_hashes # noqa: E501 Update the matrix of a(n) edge(s) using the node-hashes. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_edges_from_hashes(operation, edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str operation: The operation-type that is performed when updating the edge. (required) :param list[object] edges: The parameters is an array of objects. Each of the objects contains the name of the edge and the elements (the arrays \"I\", \"J\" and \"W\"). The arrays are encoded according to the encoding type. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_edges_from_hashes_with_http_info ( operation , edges , ** kwargs ) \u00b6 update_edges_from_hashes # noqa: E501 Update the matrix of a(n) edge(s) using the node-hashes. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_edges_from_hashes_with_http_info(operation, edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str operation: The operation-type that is performed when updating the edge. (required) :param list[object] edges: The parameters is an array of objects. Each of the objects contains the name of the edge and the elements (the arrays \"I\", \"J\" and \"W\"). The arrays are encoded according to the encoding type. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_edges_from_indices ( encoding , operation , edges , ** kwargs ) \u00b6 update_edges_from_indices # noqa: E501 Update the matrix of a(n) edge(s) using the node-indices. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_edges_from_indices(encoding, operation, edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str encoding: The encoding of the indices in the sparse matrix. (required) :param str operation: The operation-type that is performed when updating the edge. (required) :param list[EdgeMatrix] edges: The parameters is an array of objects. Each of the objects contains the name of the edge and the elements (the arrays \"I\", \"J\" and \"W\"). The arrays are encoded according to the encoding type. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_edges_from_indices_with_http_info ( encoding , operation , edges , ** kwargs ) \u00b6 update_edges_from_indices # noqa: E501 Update the matrix of a(n) edge(s) using the node-indices. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_edges_from_indices_with_http_info(encoding, operation, edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str encoding: The encoding of the indices in the sparse matrix. (required) :param str operation: The operation-type that is performed when updating the edge. (required) :param list[EdgeMatrix] edges: The parameters is an array of objects. Each of the objects contains the name of the edge and the elements (the arrays \"I\", \"J\" and \"W\"). The arrays are encoded according to the encoding type. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_edges_from_mongo ( edges , ** kwargs ) \u00b6 update_edges_from_mongo # noqa: E501 Update the edges from documents in Mongo-DB's. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_edges_from_mongo(edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[MongoEdge] edges: The edges is an array of objects. Each of the objects contains the name of the edge, the source and target node-categories (which points to ingested MongoDB's used for the node creation) (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_edges_from_mongo_with_http_info ( edges , ** kwargs ) \u00b6 update_edges_from_mongo # noqa: E501 Update the edges from documents in Mongo-DB's. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_edges_from_mongo_with_http_info(edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[MongoEdge] edges: The edges is an array of objects. Each of the objects contains the name of the edge, the source and target node-categories (which points to ingested MongoDB's used for the node creation) (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_edges_from_names ( operation , edges , ** kwargs ) \u00b6 update_edges_from_names # noqa: E501 Update the matrix of a(n) edge(s) using the node-names. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_edges_from_names(operation, edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str operation: The operation-type that is performed when updating the edge. (required) :param list[object] edges: The parameters is an array of objects. Each of the objects contains the name of the edge and the elements (the arrays \"I\", \"J\" and \"W\"). The arrays are encoded according to the encoding type. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_edges_from_names_with_http_info ( operation , edges , ** kwargs ) \u00b6 update_edges_from_names # noqa: E501 Update the matrix of a(n) edge(s) using the node-names. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_edges_from_names_with_http_info(operation, edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str operation: The operation-type that is performed when updating the edge. (required) :param list[object] edges: The parameters is an array of objects. Each of the objects contains the name of the edge and the elements (the arrays \"I\", \"J\" and \"W\"). The arrays are encoded according to the encoding type. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_edges_from_triplets ( operation , edges , ** kwargs ) \u00b6 update_edges_from_triplets # noqa: E501 Update the matrix of a(n) edge(s) using triplets (in which node i & j are referred to by name or hash). # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_edges_from_triplets(operation, edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str operation: The operation-type that is performed when updating the edge. (required) :param list[object] edges: The edges is an array of objects. Each of the objects contains the name of the edge and the elements. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_edges_from_triplets_with_http_info ( operation , edges , ** kwargs ) \u00b6 update_edges_from_triplets # noqa: E501 Update the matrix of a(n) edge(s) using triplets (in which node i & j are referred to by name or hash). # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_edges_from_triplets_with_http_info(operation, edges, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str operation: The operation-type that is performed when updating the edge. (required) :param list[object] edges: The edges is an array of objects. Each of the objects contains the name of the edge and the elements. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. indices_api \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech IndicesApi \u00b6 Bases: object Do not edit the class manually. rebuild_indices ( node_sets , node_tables , ** kwargs ) \u00b6 rebuild_indices # noqa: E501 Rebuild the indices for fast node-lookup and node-search. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.rebuild_indices(node_sets, node_tables, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str node_sets: Rebuild the node sets for the categories and databases. (required) :param str node_tables: Rebuild the node tables for the node-name search. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. rebuild_indices_with_http_info ( node_sets , node_tables , ** kwargs ) \u00b6 rebuild_indices # noqa: E501 Rebuild the indices for fast node-lookup and node-search. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.rebuild_indices_with_http_info(node_sets, node_tables, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str node_sets: Rebuild the node sets for the categories and databases. (required) :param str node_tables: Rebuild the node tables for the node-name search. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. knowledge_graphs_api \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech KnowledgeGraphsApi \u00b6 Bases: object Do not edit the class manually. clear_graph ( ** kwargs ) \u00b6 clear_graph # noqa: E501 Clear the current in-memory graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.clear_graph(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. clear_graph_with_http_info ( ** kwargs ) \u00b6 clear_graph # noqa: E501 Clear the current in-memory graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.clear_graph_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. load_graph_from_disk ( root , name , ** kwargs ) \u00b6 load_graph_from_disk # noqa: E501 Load a graph from disk # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_graph_from_disk(root, name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str root: The root path on disk where we store the KG. (required) :param str name: The name of the current KG. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. load_graph_from_disk_with_http_info ( root , name , ** kwargs ) \u00b6 load_graph_from_disk # noqa: E501 Load a graph from disk # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_graph_from_disk_with_http_info(root, name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str root: The root path on disk where we store the KG. (required) :param str name: The name of the current KG. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. load_graph_from_s3 ( ** kwargs ) \u00b6 load_graph_from_s3 # noqa: E501 Load a graph from object-store using S3-API. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_graph_from_s3(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param InlineObject arguments: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. load_graph_from_s3_with_http_info ( ** kwargs ) \u00b6 load_graph_from_s3 # noqa: E501 Load a graph from object-store using S3-API. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_graph_from_s3_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param InlineObject arguments: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_edges_on_disk ( root , name , ** kwargs ) \u00b6 save_edges_on_disk # noqa: E501 Saves all edges on disk in CSV format. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_edges_on_disk(root, name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str root: The root path on disk where we store the KG. (required) :param str name: The name of the folder where all edges will be stored in csv format. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_edges_on_disk_with_http_info ( root , name , ** kwargs ) \u00b6 save_edges_on_disk # noqa: E501 Saves all edges on disk in CSV format. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_edges_on_disk_with_http_info(root, name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str root: The root path on disk where we store the KG. (required) :param str name: The name of the folder where all edges will be stored in csv format. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_edges_on_s3 ( arguments , ** kwargs ) \u00b6 save_edges_on_s3 # noqa: E501 Saves all edges of the graph in CSV format on object-store using S3-API. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_edges_on_s3(arguments, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param InlineObject1 arguments: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_edges_on_s3_with_http_info ( arguments , ** kwargs ) \u00b6 save_edges_on_s3 # noqa: E501 Saves all edges of the graph in CSV format on object-store using S3-API. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_edges_on_s3_with_http_info(arguments, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param InlineObject1 arguments: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_graph_on_disk ( root , name , ** kwargs ) \u00b6 save_graph_on_disk # noqa: E501 Save a graph on disk # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_graph_on_disk(root, name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str root: The root path on disk where we store the KG. (required) :param str name: The name of the current KG. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_graph_on_disk_with_http_info ( root , name , ** kwargs ) \u00b6 save_graph_on_disk # noqa: E501 Save a graph on disk # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_graph_on_disk_with_http_info(root, name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str root: The root path on disk where we store the KG. (required) :param str name: The name of the current KG. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_graph_on_s3 ( ** kwargs ) \u00b6 save_graph_on_s3 # noqa: E501 Save a graph from object-store using S3-API. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_graph_on_s3(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param InlineObject2 arguments: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_graph_on_s3_with_http_info ( ** kwargs ) \u00b6 save_graph_on_s3 # noqa: E501 Save a graph from object-store using S3-API. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_graph_on_s3_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param InlineObject2 arguments: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. nodes_api \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech NodesApi \u00b6 Bases: object Do not edit the class manually. create_nodes ( categories , size , ** kwargs ) \u00b6 create_nodes # noqa: E501 Creates a set of new nodes in the graph. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_nodes(categories, size, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] categories: Categories to which the newly created nodes belong (required) :param int size: number of nodes to be created (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. create_nodes_with_http_info ( categories , size , ** kwargs ) \u00b6 create_nodes # noqa: E501 Creates a set of new nodes in the graph. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_nodes_with_http_info(categories, size, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] categories: Categories to which the newly created nodes belong (required) :param int size: number of nodes to be created (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. ingest_nodes ( rebuild_indices , nodes , ** kwargs ) \u00b6 ingest_nodes # noqa: E501 Create a set of new nodes in the graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.ingest_nodes(rebuild_indices, nodes, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str rebuild_indices: Rebuild the node lookup-indices after ingestion. (required) :param list[Node] nodes: Array of nodes (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. ingest_nodes_mongo ( rebuild_indices , databases , ** kwargs ) \u00b6 ingest_nodes_mongo # noqa: E501 Create a set of new nodes in the graph from a Mongo-DB # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.ingest_nodes_mongo(rebuild_indices, databases, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str rebuild_indices: Rebuild the node lookup-indices after ingestion. (required) :param list[DatabaseSource] databases: Array of Mongo-databases/collections to ingest. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. ingest_nodes_mongo_with_http_info ( rebuild_indices , databases , ** kwargs ) \u00b6 ingest_nodes_mongo # noqa: E501 Create a set of new nodes in the graph from a Mongo-DB # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.ingest_nodes_mongo_with_http_info(rebuild_indices, databases, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str rebuild_indices: Rebuild the node lookup-indices after ingestion. (required) :param list[DatabaseSource] databases: Array of Mongo-databases/collections to ingest. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. ingest_nodes_with_http_info ( rebuild_indices , nodes , ** kwargs ) \u00b6 ingest_nodes # noqa: E501 Create a set of new nodes in the graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.ingest_nodes_with_http_info(rebuild_indices, nodes, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str rebuild_indices: Rebuild the node lookup-indices after ingestion. (required) :param list[Node] nodes: Array of nodes (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. tasks_api \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech TasksApi \u00b6 Bases: object Do not edit the class manually. async_task_result ( uuid , ** kwargs ) \u00b6 async_task_result # noqa: E501 returns the result of the asynchronous task # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.async_task_result(uuid, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str uuid: The UUID of the task. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. async_task_result_with_http_info ( uuid , ** kwargs ) \u00b6 async_task_result # noqa: E501 returns the result of the asynchronous task # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.async_task_result_with_http_info(uuid, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str uuid: The UUID of the task. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. async_task_status ( uuid , ** kwargs ) \u00b6 async_task_status # noqa: E501 returns the status of the asynchronous task # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.async_task_status(uuid, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str uuid: The UUID of the task. (required) :param bool thorough: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. async_task_status_with_http_info ( uuid , ** kwargs ) \u00b6 async_task_status # noqa: E501 returns the status of the asynchronous task # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.async_task_status_with_http_info(uuid, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str uuid: The UUID of the task. (required) :param bool thorough: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread.","title":"api"},{"location":"api-reference/#deepsearch.cps.apis.kg.create.api_client","text":"Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech ApiClient \u00b6 Bases: object Generic API client for OpenAPI client library builds. OpenAPI generic API client. This client handles the client- server communication, and is invariant across implementations. Specifics of the methods and models for each application are generated from the OpenAPI templates. NOTE: This class is auto generated by OpenAPI Generator. Ref: https://openapi-generator.tech Do not edit the class manually. :param configuration: .Configuration object for this client :param header_name: a header to pass when making calls to the API. :param header_value: a header value to pass when making calls to the API. :param cookie: a cookie to include in the header when making calls to the API :param pool_threads: The number of threads to use for async requests to the API. More threads means more concurrent API requests. __deserialize ( data , klass ) \u00b6 Deserializes dict, list, str into an object. :param data: dict, list or str. :param klass: class literal, or string of class name. :return: object. __deserialize_date ( string ) \u00b6 Deserializes string to date. :param string: str. :return: date. __deserialize_datetime ( string ) \u00b6 Deserializes string to datetime. The string should be in iso8601 datetime format. :param string: str. :return: datetime. __deserialize_file ( response ) \u00b6 Deserializes body to file Saves response body into a file in a temporary folder, using the filename from the Content-Disposition header if provided. :param response: RESTResponse. :return: file path. __deserialize_model ( data , klass ) \u00b6 Deserializes list or dict to model. :param data: dict, list. :param klass: class literal. :return: model object. __deserialize_object ( value ) \u00b6 Return an original value. :return: object. __deserialize_primitive ( data , klass ) \u00b6 Deserializes string to primitive type. :param data: str. :param klass: class literal. :return: int, long, float, str, bool. call_api ( resource_path , method , path_params = None , query_params = None , header_params = None , body = None , post_params = None , files = None , response_type = None , auth_settings = None , async_req = None , _return_http_data_only = None , collection_formats = None , _preload_content = True , _request_timeout = None , _host = None ) \u00b6 Makes the HTTP request (synchronous) and returns deserialized data. To make an async_req request, set the async_req parameter. :param resource_path: Path to method endpoint. :param method: Method to call. :param path_params: Path parameters in the url. :param query_params: Query parameters in the url. :param header_params: Header parameters to be placed in the request header. :param body: Request body. :param post_params dict: Request post form parameters, for application/x-www-form-urlencoded , multipart/form-data . :param auth_settings list: Auth Settings names for the request. :param response: Response data type. :param files dict: key -> filename, value -> filepath, for multipart/form-data . :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param collection_formats: dict of collection formats for path, query, header, and post parameters. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: If async_req parameter is True, the request will be called asynchronously. The method will return the request thread. If parameter async_req is False or missing, then the method will return the response directly. deserialize ( response , response_type ) \u00b6 Deserializes response into an object. :param response: RESTResponse object to be deserialized. :param response_type: class literal for deserialized object, or string of class name. :return: deserialized object. files_parameters ( files = None ) \u00b6 Builds form parameters. :param files: File parameters. :return: Form parameters with files. parameters_to_tuples ( params , collection_formats ) \u00b6 Get parameters as list of tuples, formatting collections. :param params: Parameters as dict or list of two-tuples :param dict collection_formats: Parameter collection formats :return: Parameters as list of tuples, collections formatted pool () property \u00b6 Create thread pool on first request avoids instantiating unused threadpool for blocking clients. request ( method , url , query_params = None , headers = None , post_params = None , body = None , _preload_content = True , _request_timeout = None ) \u00b6 Makes the HTTP request using RESTClient. sanitize_for_serialization ( obj ) \u00b6 Builds a JSON POST object. If obj is None, return None. If obj is str, int, long, float, bool, return directly. If obj is datetime.datetime, datetime.date convert to string in iso8601 format. If obj is list, sanitize each element in the list. If obj is dict, return the dict. If obj is OpenAPI model, return the properties dict. :param obj: The data to serialize. :return: The serialized form of data. select_header_accept ( accepts ) \u00b6 Returns Accept based on an array of accepts provided. :param accepts: List of headers. :return: Accept (e.g. application/json). select_header_content_type ( content_types ) \u00b6 Returns Content-Type based on an array of content_types provided. :param content_types: List of content-types. :return: Content-Type (e.g. application/json). update_params_for_auth ( headers , querys , auth_settings ) \u00b6 Updates header and query params based on authentication setting. :param headers: Header parameters dict to be updated. :param querys: Query parameters tuple list to be updated. :param auth_settings: Authentication setting identifiers list. user_agent () property writable \u00b6 User agent for this API client","title":"api_client"},{"location":"api-reference/#deepsearch.cps.apis.kg.create.configuration","text":"Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech Configuration \u00b6 Bases: object This class is auto generated by OpenAPI Generator Do not edit the class manually. :param host: Base url :param api_key: Dict to store API key(s). Each entry in the dict specifies an API key. The dict key is the name of the security scheme in the OAS specification. The dict value is the API key secret. :param api_key_prefix: Dict to store API prefix (e.g. Bearer) The dict key is the name of the security scheme in the OAS specification. The dict value is an API key prefix when generating the auth data. :param username: Username for HTTP basic authentication :param password: Password for HTTP basic authentication :param discard_unknown_keys: Boolean value indicating whether to discard unknown properties. A server may send a response that includes additional properties that are not known by the client in the following scenarios: 1. The OpenAPI document is incomplete, i.e. it does not match the server implementation. 2. The client was generated using an older version of the OpenAPI document and the server has been upgraded since then. If a schema in the OpenAPI document defines the additionalProperties attribute, then all undeclared properties received by the server are injected into the additional properties map. In that case, there are undeclared properties, and nothing to discard. :Example: API Key Authentication Example. Given the following security scheme in the OpenAPI specification: components: securitySchemes: cookieAuth: # name for the security scheme type: apiKey in: cookie name: JSESSIONID # cookie name You can programmatically set the cookie: conf = cps.apis.kg.create.Configuration( api_key={'cookieAuth': 'abc123'} api_key_prefix={'cookieAuth': 'JSESSIONID'} ) The following cookie will be added to the HTTP request: Cookie: JSESSIONID abc123 assert_hostname = None instance-attribute \u00b6 Set this to True/False to enable/disable SSL hostname verification. cert_file = None instance-attribute \u00b6 client certificate file connection_pool_maxsize = multiprocessing . cpu_count () * 5 instance-attribute \u00b6 urllib3 connection pool's maximum number of connections saved per pool. urllib3 uses 1 connection as default value, but this is not the best value when you are making a lot of possibly parallel requests to the same host, which is often the case here. cpu_count * 5 is used as default value to increase performance. host = host instance-attribute \u00b6 Default Base url key_file = None instance-attribute \u00b6 client key file logger = {} instance-attribute \u00b6 Logging Settings logger_file_handler = None instance-attribute \u00b6 Log file handler logger_stream_handler = None instance-attribute \u00b6 Log stream handler password = password instance-attribute \u00b6 Password for HTTP basic authentication proxy = None instance-attribute \u00b6 Proxy URL proxy_headers = None instance-attribute \u00b6 Proxy headers refresh_api_key_hook = None instance-attribute \u00b6 function hook to refresh API key if expired retries = None instance-attribute \u00b6 Adding retries to override urllib3 default value 3 safe_chars_for_path_param = '' instance-attribute \u00b6 Safe chars for path_param ssl_ca_cert = None instance-attribute \u00b6 Set this to customize the certificate file to verify the peer. temp_folder_path = None instance-attribute \u00b6 Temp file folder for downloading files username = username instance-attribute \u00b6 Username for HTTP basic authentication verify_ssl = True instance-attribute \u00b6 SSL/TLS verification Set this to false to skip verifying SSL certificate when calling API from https server. __init__ ( host = 'http://localhost/api/kg/create/v1' , api_key = None , api_key_prefix = None , username = None , password = None , discard_unknown_keys = False ) \u00b6 Constructor auth_settings () \u00b6 Gets Auth Settings dict for api client. :return: The Auth Settings information dict. debug () property writable \u00b6 Debug status :param value: The debug status, True or False. :type: bool get_api_key_with_prefix ( identifier ) \u00b6 Gets API key (with prefix if set). :param identifier: The identifier of apiKey. :return: The token for api key authentication. get_basic_auth_token () \u00b6 Gets HTTP basic authentication header (string). :return: The token for basic HTTP authentication. get_default_copy () classmethod \u00b6 Return new instance of configuration. This method returns newly created, based on default constructor, object of Configuration class or returns a copy of default configuration passed by the set_default method. :return: The configuration object. get_host_from_settings ( index , variables = None ) \u00b6 Gets host URL based on the index and variables :param index: array index of the host settings :param variables: hash of variable and the corresponding value :return: URL based on host settings get_host_settings () \u00b6 Gets an array of host settings :return: An array of host settings logger_file () property writable \u00b6 The logger file. If the logger_file is None, then add stream handler and remove file handler. Otherwise, add file handler and remove stream handler. :param value: The logger_file path. :type: str logger_format () property writable \u00b6 The logger format. The logger_formatter will be updated when sets logger_format. :param value: The format string. :type: str set_default ( default ) classmethod \u00b6 Set default instance of configuration. It stores default configuration, which can be returned by get_default_copy method. :param default: object of Configuration to_debug_report () \u00b6 Gets the essential information for debugging. :return: The report for debugging.","title":"configuration"},{"location":"api-reference/#deepsearch.cps.apis.kg.create.exceptions","text":"Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech ApiException \u00b6 Bases: OpenApiException __str__ () \u00b6 Custom error messages for exception ApiKeyError \u00b6 Bases: OpenApiException , KeyError __init__ ( msg , path_to_item = None ) \u00b6 Parameters: Name Type Description Default msg str the exception message required ApiTypeError \u00b6 Bases: OpenApiException , TypeError __init__ ( msg , path_to_item = None , valid_classes = None , key_type = None ) \u00b6 Raises an exception for TypeErrors Parameters: Name Type Description Default msg str the exception message required Other Parameters: Name Type Description path_to_item list a list of keys an indices to get to the current_item None if unset valid_classes tuple the primitive classes that current item should be an instance of None if unset key_type bool False if our value is a value in a dict True if it is a key in a dict False if our item is an item in a list None if unset ApiValueError \u00b6 Bases: OpenApiException , ValueError __init__ ( msg , path_to_item = None ) \u00b6 Parameters: Name Type Description Default msg str the exception message required OpenApiException \u00b6 Bases: Exception The base exception class for all OpenAPIExceptions render_path ( path_to_item ) \u00b6 Returns a string representation of a path","title":"exceptions"},{"location":"api-reference/#deepsearch.cps.apis.kg.create.models","text":"Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech database_source \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech DatabaseSource \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( categories = None , collections = None , data_fields = None , mongo = None , s3 = None , local_vars_configuration = None ) \u00b6 DatabaseSource - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint categories () property writable \u00b6 Gets the categories of this DatabaseSource. # noqa: E501 :return: The categories of this DatabaseSource. # noqa: E501 :rtype: list[str] collections () property writable \u00b6 Gets the collections of this DatabaseSource. # noqa: E501 :return: The collections of this DatabaseSource. # noqa: E501 :rtype: list[str] data_fields () property writable \u00b6 Gets the data_fields of this DatabaseSource. # noqa: E501 :return: The data_fields of this DatabaseSource. # noqa: E501 :rtype: list[str] mongo () property writable \u00b6 Gets the mongo of this DatabaseSource. # noqa: E501 :return: The mongo of this DatabaseSource. # noqa: E501 :rtype: DatabaseSourceMongo s3 () property writable \u00b6 Gets the s3 of this DatabaseSource. # noqa: E501 :return: The s3 of this DatabaseSource. # noqa: E501 :rtype: DatabaseSourceS3 to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model database_source_mongo \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech DatabaseSourceMongo \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( database = None , uri = None , local_vars_configuration = None ) \u00b6 DatabaseSourceMongo - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint database () property writable \u00b6 Gets the database of this DatabaseSourceMongo. # noqa: E501 :return: The database of this DatabaseSourceMongo. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model uri () property writable \u00b6 Gets the uri of this DatabaseSourceMongo. # noqa: E501 :return: The uri of this DatabaseSourceMongo. # noqa: E501 :rtype: str database_source_s3 \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech DatabaseSourceS3 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( access_key = None , bucket = None , host = None , is_secure = None , port = None , secret_key = None , local_vars_configuration = None ) \u00b6 DatabaseSourceS3 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint access_key () property writable \u00b6 Gets the access_key of this DatabaseSourceS3. # noqa: E501 :return: The access_key of this DatabaseSourceS3. # noqa: E501 :rtype: str bucket () property writable \u00b6 Gets the bucket of this DatabaseSourceS3. # noqa: E501 :return: The bucket of this DatabaseSourceS3. # noqa: E501 :rtype: str host () property writable \u00b6 Gets the host of this DatabaseSourceS3. # noqa: E501 :return: The host of this DatabaseSourceS3. # noqa: E501 :rtype: str is_secure () property writable \u00b6 Gets the is_secure of this DatabaseSourceS3. # noqa: E501 :return: The is_secure of this DatabaseSourceS3. # noqa: E501 :rtype: bool port () property writable \u00b6 Gets the port of this DatabaseSourceS3. # noqa: E501 :return: The port of this DatabaseSourceS3. # noqa: E501 :rtype: int secret_key () property writable \u00b6 Gets the secret_key of this DatabaseSourceS3. # noqa: E501 :return: The secret_key of this DatabaseSourceS3. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model edge_matrix \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech EdgeMatrix \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( elements = None , name = None , local_vars_configuration = None ) \u00b6 EdgeMatrix - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint elements () property writable \u00b6 Gets the elements of this EdgeMatrix. # noqa: E501 :return: The elements of this EdgeMatrix. # noqa: E501 :rtype: object name () property writable \u00b6 Gets the name of this EdgeMatrix. # noqa: E501 :return: The name of this EdgeMatrix. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model edge_model \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech EdgeModel \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , source_categories = None , symmetric = None , target_categories = None , local_vars_configuration = None ) \u00b6 EdgeModel - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this EdgeModel. # noqa: E501 :return: The name of this EdgeModel. # noqa: E501 :rtype: str source_categories () property writable \u00b6 Gets the source_categories of this EdgeModel. # noqa: E501 :return: The source_categories of this EdgeModel. # noqa: E501 :rtype: list[str] symmetric () property writable \u00b6 Gets the symmetric of this EdgeModel. # noqa: E501 :return: The symmetric of this EdgeModel. # noqa: E501 :rtype: bool target_categories () property writable \u00b6 Gets the target_categories of this EdgeModel. # noqa: E501 :return: The target_categories of this EdgeModel. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model inline_object \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech InlineObject \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( bucket = None , key = None , s3_coordinates = None , local_vars_configuration = None ) \u00b6 InlineObject - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bucket () property writable \u00b6 Gets the bucket of this InlineObject. # noqa: E501 Bucket name to retrieve graph # noqa: E501 :return: The bucket of this InlineObject. # noqa: E501 :rtype: str key () property writable \u00b6 Gets the key of this InlineObject. # noqa: E501 Object key name # noqa: E501 :return: The key of this InlineObject. # noqa: E501 :rtype: str s3_coordinates () property writable \u00b6 Gets the s3_coordinates of this InlineObject. # noqa: E501 :return: The s3_coordinates of this InlineObject. # noqa: E501 :rtype: S3Source to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model inline_object1 \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech InlineObject1 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( bucket = None , key = None , s3_coordinates = None , local_vars_configuration = None ) \u00b6 InlineObject1 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bucket () property writable \u00b6 Gets the bucket of this InlineObject1. # noqa: E501 Bucket name to retrieve graph # noqa: E501 :return: The bucket of this InlineObject1. # noqa: E501 :rtype: str key () property writable \u00b6 Gets the key of this InlineObject1. # noqa: E501 Object key name # noqa: E501 :return: The key of this InlineObject1. # noqa: E501 :rtype: str s3_coordinates () property writable \u00b6 Gets the s3_coordinates of this InlineObject1. # noqa: E501 :return: The s3_coordinates of this InlineObject1. # noqa: E501 :rtype: S3Source to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model inline_object2 \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech InlineObject2 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( bucket = None , key = None , s3_coordinates = None , local_vars_configuration = None ) \u00b6 InlineObject2 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bucket () property writable \u00b6 Gets the bucket of this InlineObject2. # noqa: E501 Bucket name to retrieve graph # noqa: E501 :return: The bucket of this InlineObject2. # noqa: E501 :rtype: str key () property writable \u00b6 Gets the key of this InlineObject2. # noqa: E501 Object key name # noqa: E501 :return: The key of this InlineObject2. # noqa: E501 :rtype: str s3_coordinates () property writable \u00b6 Gets the s3_coordinates of this InlineObject2. # noqa: E501 :return: The s3_coordinates of this InlineObject2. # noqa: E501 :rtype: S3Source to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model mongo_edge \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech MongoEdge \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , source = None , symmetric = True , target = None , local_vars_configuration = None ) \u00b6 MongoEdge - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this MongoEdge. # noqa: E501 :return: The name of this MongoEdge. # noqa: E501 :rtype: str source () property writable \u00b6 Gets the source of this MongoEdge. # noqa: E501 :return: The source of this MongoEdge. # noqa: E501 :rtype: list[MongoEdgeItem] symmetric () property writable \u00b6 Gets the symmetric of this MongoEdge. # noqa: E501 :return: The symmetric of this MongoEdge. # noqa: E501 :rtype: bool target () property writable \u00b6 Gets the target of this MongoEdge. # noqa: E501 :return: The target of this MongoEdge. # noqa: E501 :rtype: list[MongoEdgeItem] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model mongo_edge_item \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech MongoEdgeItem \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( category = None , fields = None , local_vars_configuration = None ) \u00b6 MongoEdgeItem - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint category () property writable \u00b6 Gets the category of this MongoEdgeItem. # noqa: E501 :return: The category of this MongoEdgeItem. # noqa: E501 :rtype: str fields () property writable \u00b6 Gets the fields of this MongoEdgeItem. # noqa: E501 :return: The fields of this MongoEdgeItem. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model node \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech Node \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( categories = None , database = None , hash = None , name = None , synonyms = None , local_vars_configuration = None ) \u00b6 Node - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint categories () property writable \u00b6 Gets the categories of this Node. # noqa: E501 :return: The categories of this Node. # noqa: E501 :rtype: list[str] database () property writable \u00b6 Gets the database of this Node. # noqa: E501 :return: The database of this Node. # noqa: E501 :rtype: object hash () property writable \u00b6 Gets the hash of this Node. # noqa: E501 :return: The hash of this Node. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this Node. # noqa: E501 :return: The name of this Node. # noqa: E501 :rtype: str synonyms () property writable \u00b6 Gets the synonyms of this Node. # noqa: E501 :return: The synonyms of this Node. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model s3_source \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech S3Source \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( access_key = None , host = None , is_secure = False , location = None , port = None , secret_key = None , verify = False , local_vars_configuration = None ) \u00b6 S3Source - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint access_key () property writable \u00b6 Gets the access_key of this S3Source. # noqa: E501 :return: The access_key of this S3Source. # noqa: E501 :rtype: str host () property writable \u00b6 Gets the host of this S3Source. # noqa: E501 :return: The host of this S3Source. # noqa: E501 :rtype: str is_secure () property writable \u00b6 Gets the is_secure of this S3Source. # noqa: E501 :return: The is_secure of this S3Source. # noqa: E501 :rtype: bool location () property writable \u00b6 Gets the location of this S3Source. # noqa: E501 :return: The location of this S3Source. # noqa: E501 :rtype: str port () property writable \u00b6 Gets the port of this S3Source. # noqa: E501 :return: The port of this S3Source. # noqa: E501 :rtype: int secret_key () property writable \u00b6 Gets the secret_key of this S3Source. # noqa: E501 :return: The secret_key of this S3Source. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model verify () property writable \u00b6 Gets the verify of this S3Source. # noqa: E501 :return: The verify of this S3Source. # noqa: E501 :rtype: bool sparse_matrix_with_names_or_hashes \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech SparseMatrixWithNamesOrHashes \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( i = None , j = None , w = None , local_vars_configuration = None ) \u00b6 SparseMatrixWithNamesOrHashes - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint i () property writable \u00b6 Gets the i of this SparseMatrixWithNamesOrHashes. # noqa: E501 :return: The i of this SparseMatrixWithNamesOrHashes. # noqa: E501 :rtype: list[str] j () property writable \u00b6 Gets the j of this SparseMatrixWithNamesOrHashes. # noqa: E501 :return: The j of this SparseMatrixWithNamesOrHashes. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model w () property writable \u00b6 Gets the w of this SparseMatrixWithNamesOrHashes. # noqa: E501 :return: The w of this SparseMatrixWithNamesOrHashes. # noqa: E501 :rtype: list[float] triplet \u00b6 Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech Triplet \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( i = None , j = None , w = None , local_vars_configuration = None ) \u00b6 Triplet - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint i () property writable \u00b6 Gets the i of this Triplet. # noqa: E501 :return: The i of this Triplet. # noqa: E501 :rtype: str j () property writable \u00b6 Gets the j of this Triplet. # noqa: E501 :return: The j of this Triplet. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model w () property writable \u00b6 Gets the w of this Triplet. # noqa: E501 :return: The w of this Triplet. # noqa: E501 :rtype: float","title":"models"},{"location":"api-reference/#deepsearch.cps.apis.kg.create.rest","text":"Knowledge-Graph Create API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech RESTClientObject \u00b6 Bases: object request ( method , url , query_params = None , headers = None , body = None , post_params = None , _preload_content = True , _request_timeout = None ) \u00b6 Perform requests. :param method: http request method :param url: http request url :param query_params: query parameters in the url :param headers: http request headers :param body: request json body, for application/json :param post_params: request post parameters, application/x-www-form-urlencoded and multipart/form-data :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. RESTResponse \u00b6 Bases: io . IOBase getheader ( name , default = None ) \u00b6 Returns a given response header. getheaders () \u00b6 Returns a dictionary of the response headers.","title":"rest"},{"location":"api-reference/#deepsearch.cps.apis.kg.query","text":"Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech","title":"query"},{"location":"api-reference/#deepsearch.cps.apis.kg.query.api","text":"description_api \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech DescriptionApi \u00b6 Bases: object Do not edit the class manually. get_graph_description ( ** kwargs ) \u00b6 get_graph_description # noqa: E501 Get a description of the graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_graph_description(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: GraphDescription If the method is called asynchronously, returns the request thread. get_graph_description_with_http_info ( ** kwargs ) \u00b6 get_graph_description # noqa: E501 Get a description of the graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_graph_description_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(GraphDescription, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_graph_modules ( ** kwargs ) \u00b6 get_graph_modules # noqa: E501 Get graph-modules # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_graph_modules(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ResponseModel If the method is called asynchronously, returns the request thread. get_graph_modules_with_http_info ( ** kwargs ) \u00b6 get_graph_modules # noqa: E501 Get graph-modules # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_graph_modules_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ResponseModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_graph_status ( ** kwargs ) \u00b6 get_graph_status # noqa: E501 Get graph status (health check) # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_graph_status(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ResponseModel If the method is called asynchronously, returns the request thread. get_graph_status_with_http_info ( ** kwargs ) \u00b6 get_graph_status # noqa: E501 Get graph status (health check) # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_graph_status_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ResponseModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_graph_version ( ** kwargs ) \u00b6 get_graph_version # noqa: E501 Get graph-version # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_graph_version(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ResponseModel If the method is called asynchronously, returns the request thread. get_graph_version_with_http_info ( ** kwargs ) \u00b6 get_graph_version # noqa: E501 Get graph-version # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_graph_version_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ResponseModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. inspect_api \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech InspectApi \u00b6 Bases: object Do not edit the class manually. inspect_graph_edges ( ** kwargs ) \u00b6 inspect_graph_edges # noqa: E501 Get an image of the edges # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.inspect_graph_edges(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. inspect_graph_edges_with_http_info ( ** kwargs ) \u00b6 inspect_graph_edges # noqa: E501 Get an image of the edges # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.inspect_graph_edges_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. inspect_graph_topology ( ** kwargs ) \u00b6 inspect_graph_topology # noqa: E501 Get an image of the topology of the graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.inspect_graph_topology(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. inspect_graph_topology_with_http_info ( ** kwargs ) \u00b6 inspect_graph_topology # noqa: E501 Get an image of the topology of the graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.inspect_graph_topology_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. inspect_node_categories ( ** kwargs ) \u00b6 inspect_node_categories # noqa: E501 Get an image of the node-categories # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.inspect_node_categories(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. inspect_node_categories_with_http_info ( ** kwargs ) \u00b6 inspect_node_categories # noqa: E501 Get an image of the node-categories # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.inspect_node_categories_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. node_data_retrieval_api \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech NodeDataRetrievalApi \u00b6 Bases: object Do not edit the class manually. retrieve_many_node_data_json ( data , ** kwargs ) \u00b6 retrieve_many_node_data_json # noqa: E501 Bulk retrieve the data associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_many_node_data_json(data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[InlineObject] data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: dict(str, object) If the method is called asynchronously, returns the request thread. retrieve_many_node_data_json_with_http_info ( data , ** kwargs ) \u00b6 retrieve_many_node_data_json # noqa: E501 Bulk retrieve the data associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_many_node_data_json_with_http_info(data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[InlineObject] data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(dict(str, object), status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. retrieve_node_annotations ( db , id , ** kwargs ) \u00b6 retrieve_node_annotations # noqa: E501 Retrieve the Annotations associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_annotations(db, id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param bool render_markup: If selected the output json will contain the rendered html snippets :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: object If the method is called asynchronously, returns the request thread. retrieve_node_annotations_with_http_info ( db , id , ** kwargs ) \u00b6 retrieve_node_annotations # noqa: E501 Retrieve the Annotations associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_annotations_with_http_info(db, id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param bool render_markup: If selected the output json will contain the rendered html snippets :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(object, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. retrieve_node_data_by_key ( db , id , key , ** kwargs ) \u00b6 retrieve_node_data_by_key # noqa: E501 Retrieve the data associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_data_by_key(db, id, key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param str key: The data key to retrieve (required) :param int index: The index for the data inside this key :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. retrieve_node_data_by_key_with_http_info ( db , id , key , ** kwargs ) \u00b6 retrieve_node_data_by_key # noqa: E501 Retrieve the data associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_data_by_key_with_http_info(db, id, key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param str key: The data key to retrieve (required) :param int index: The index for the data inside this key :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. retrieve_node_data_image ( db , id , ** kwargs ) \u00b6 retrieve_node_data_image # noqa: E501 Retrieve the data associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_data_image(db, id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. retrieve_node_data_image_with_http_info ( db , id , ** kwargs ) \u00b6 retrieve_node_data_image # noqa: E501 Retrieve the data associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_data_image_with_http_info(db, id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. retrieve_node_data_json ( db , id , ** kwargs ) \u00b6 retrieve_node_data_json # noqa: E501 Retrieve the data associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_data_json(db, id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param InlineObject options: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: dict(str, object) If the method is called asynchronously, returns the request thread. retrieve_node_data_json_with_http_info ( db , id , ** kwargs ) \u00b6 retrieve_node_data_json # noqa: E501 Retrieve the data associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_data_json_with_http_info(db, id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param InlineObject options: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(dict(str, object), status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. retrieve_node_data_keys ( db , id , ** kwargs ) \u00b6 retrieve_node_data_keys # noqa: E501 Retrieve the data keys available for the node # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_data_keys(db, id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. retrieve_node_data_keys_with_http_info ( db , id , ** kwargs ) \u00b6 retrieve_node_data_keys # noqa: E501 Retrieve the data keys available for the node # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_data_keys_with_http_info(db, id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. retrieve_node_data_url_by_key ( db , id , key , ** kwargs ) \u00b6 retrieve_node_data_url_by_key # noqa: E501 Retrieve the data associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_data_url_by_key(db, id, key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param str key: The data key to retrieve (required) :param int index: The index for the data inside this key :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. retrieve_node_data_url_by_key_with_http_info ( db , id , key , ** kwargs ) \u00b6 retrieve_node_data_url_by_key # noqa: E501 Retrieve the data associated with the nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_node_data_url_by_key_with_http_info(db, id, key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str db: Hash of the database (found in the _db field of the node) (required) :param str id: Hash of the database-entry (found in the _id field of the node) (required) :param str key: The data key to retrieve (required) :param int index: The index for the data inside this key :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. node_retrieval_api \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech NodeRetrievalApi \u00b6 Bases: object Do not edit the class manually. retrieve_nodes_by_categories ( categories , ** kwargs ) \u00b6 retrieve_nodes_by_categories # noqa: E501 Retrieve nodes by their categories # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_nodes_by_categories(categories, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] categories: Array of node categories (required) :param int limit: Maximum number of returned nodes, use -1 for all. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: NodesResponseModel If the method is called asynchronously, returns the request thread. retrieve_nodes_by_categories_with_http_info ( categories , ** kwargs ) \u00b6 retrieve_nodes_by_categories # noqa: E501 Retrieve nodes by their categories # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_nodes_by_categories_with_http_info(categories, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] categories: Array of node categories (required) :param int limit: Maximum number of returned nodes, use -1 for all. :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(NodesResponseModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. retrieve_nodes_by_databases ( databases , ** kwargs ) \u00b6 retrieve_nodes_by_databases # noqa: E501 Retrieve nodes by their databases # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_nodes_by_databases(databases, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] databases: Array of node databases (required) :param int limit: Maximum number of returned nodes, use -1 for all. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: NodesResponseModel If the method is called asynchronously, returns the request thread. retrieve_nodes_by_databases_with_http_info ( databases , ** kwargs ) \u00b6 retrieve_nodes_by_databases # noqa: E501 Retrieve nodes by their databases # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_nodes_by_databases_with_http_info(databases, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] databases: Array of node databases (required) :param int limit: Maximum number of returned nodes, use -1 for all. :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(NodesResponseModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. retrieve_nodes_by_indices ( indices , ** kwargs ) \u00b6 retrieve_nodes_by_indices # noqa: E501 Retrieve nodes by their graph-index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_nodes_by_indices(indices, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[int] indices: Array of node indices (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: NodesResponseModel If the method is called asynchronously, returns the request thread. retrieve_nodes_by_indices_with_http_info ( indices , ** kwargs ) \u00b6 retrieve_nodes_by_indices # noqa: E501 Retrieve nodes by their graph-index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_nodes_by_indices_with_http_info(indices, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[int] indices: Array of node indices (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(NodesResponseModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. retrieve_nodes_by_names ( names , ** kwargs ) \u00b6 retrieve_nodes_by_names # noqa: E501 Retrieve nodes by their graph-index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_nodes_by_names(names, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] names: Array of node names (required) :param int limit: Maximum number of returned nodes, use -1 for all. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: NodesResponseModel If the method is called asynchronously, returns the request thread. retrieve_nodes_by_names_with_http_info ( names , ** kwargs ) \u00b6 retrieve_nodes_by_names # noqa: E501 Retrieve nodes by their graph-index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.retrieve_nodes_by_names_with_http_info(names, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] names: Array of node names (required) :param int limit: Maximum number of returned nodes, use -1 for all. :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(NodesResponseModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. node_search_api \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech NodeSearchApi \u00b6 Bases: object Do not edit the class manually. search_nodes_approximately ( epsilon , names , ** kwargs ) \u00b6 search_nodes_approximately # noqa: E501 Search for nodes that have an approximate name. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.search_nodes_approximately(epsilon, names, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param float epsilon: similarity (required) :param list[str] names: names contained in node (required) :param int limit: Maximum number of returned nodes, use -1 for all. :param str category: Search only for nodes in this category. By default, we search in all categories. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: NodesResponseModel If the method is called asynchronously, returns the request thread. search_nodes_approximately_with_http_info ( epsilon , names , ** kwargs ) \u00b6 search_nodes_approximately # noqa: E501 Search for nodes that have an approximate name. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.search_nodes_approximately_with_http_info(epsilon, names, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param float epsilon: similarity (required) :param list[str] names: names contained in node (required) :param int limit: Maximum number of returned nodes, use -1 for all. :param str category: Search only for nodes in this category. By default, we search in all categories. :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(NodesResponseModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. search_nodes_regex ( regular_expressions , ** kwargs ) \u00b6 search_nodes_regex # noqa: E501 Search for nodes that have a name that matches the regular expressions. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.search_nodes_regex(regular_expressions, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] regular_expressions: regular expressions for node-names (required) :param int limit: Maximum number of returned nodes, use -1 for all. :param str category: Search only for nodes in this category. By default, we search in all categories. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: NodesResponseModel If the method is called asynchronously, returns the request thread. search_nodes_regex_with_http_info ( regular_expressions , ** kwargs ) \u00b6 search_nodes_regex # noqa: E501 Search for nodes that have a name that matches the regular expressions. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.search_nodes_regex_with_http_info(regular_expressions, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[str] regular_expressions: regular expressions for node-names (required) :param int limit: Maximum number of returned nodes, use -1 for all. :param str category: Search only for nodes in this category. By default, we search in all categories. :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(NodesResponseModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. query_api \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech QueryApi \u00b6 Bases: object Do not edit the class manually. query_auth_config ( ** kwargs ) \u00b6 query_auth_config # noqa: E501 Retrieve the current auth config. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_auth_config(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: AuthConfig If the method is called asynchronously, returns the request thread. query_auth_config_with_http_info ( ** kwargs ) \u00b6 query_auth_config # noqa: E501 Retrieve the current auth config. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_auth_config_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(AuthConfig, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. query_get_correlated_nodes_from_indices ( a , b , normalization , indices , ** kwargs ) \u00b6 query_get_correlated_nodes_from_indices # noqa: E501 Retrieve the correlated nodes for some initial nodes-indices. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_get_correlated_nodes_from_indices(a, b, normalization, indices, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str a: Find neighbours of nodes for this edge only. (required) :param str b: Find neighbours of nodes for this edge only. (required) :param str normalization: Rank the nodes according to L2- or Linf-normalization (required) :param list[int] indices: node-indices (required) :param str filter: Filter the retrieved nodes by this category. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. query_get_correlated_nodes_from_indices_with_http_info ( a , b , normalization , indices , ** kwargs ) \u00b6 query_get_correlated_nodes_from_indices # noqa: E501 Retrieve the correlated nodes for some initial nodes-indices. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_get_correlated_nodes_from_indices_with_http_info(a, b, normalization, indices, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str a: Find neighbours of nodes for this edge only. (required) :param str b: Find neighbours of nodes for this edge only. (required) :param str normalization: Rank the nodes according to L2- or Linf-normalization (required) :param list[int] indices: node-indices (required) :param str filter: Filter the retrieved nodes by this category. :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. query_get_correlated_nodes_from_names ( epsilon , a , b , normalization , names , ** kwargs ) \u00b6 query_get_correlated_nodes_from_names # noqa: E501 Retrieve the correlated nodes for some initial nodes-names. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_get_correlated_nodes_from_names(epsilon, a, b, normalization, names, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param float epsilon: Find all nodes with a name similarity above epsilon. (required) :param str a: Find neighbours of nodes for this edge only. (required) :param str b: Find neighbours of nodes for this edge only. (required) :param str normalization: Rank the nodes according to L2- or Linf-normalization (required) :param list[str] names: Name of the nodes (required) :param str filter: Filter the retrieved nodes by this category :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. query_get_correlated_nodes_from_names_with_http_info ( epsilon , a , b , normalization , names , ** kwargs ) \u00b6 query_get_correlated_nodes_from_names # noqa: E501 Retrieve the correlated nodes for some initial nodes-names. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_get_correlated_nodes_from_names_with_http_info(epsilon, a, b, normalization, names, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param float epsilon: Find all nodes with a name similarity above epsilon. (required) :param str a: Find neighbours of nodes for this edge only. (required) :param str b: Find neighbours of nodes for this edge only. (required) :param str normalization: Rank the nodes according to L2- or Linf-normalization (required) :param list[str] names: Name of the nodes (required) :param str filter: Filter the retrieved nodes by this category :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. query_get_degree ( edge_name , degree_type , indices_type , indices , ** kwargs ) \u00b6 query_get_degree # noqa: E501 Retrieve the in or out degree of nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_get_degree(edge_name, degree_type, indices_type, indices, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str edge_name: name of the edge (required) :param str degree_type: select in or out degree of the nodes (required) :param str indices_type: select if you want to search in a specific set of indices or in a range of indices (required) :param list[int] indices: node-indices (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. query_get_degree_with_http_info ( edge_name , degree_type , indices_type , indices , ** kwargs ) \u00b6 query_get_degree # noqa: E501 Retrieve the in or out degree of nodes # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_get_degree_with_http_info(edge_name, degree_type, indices_type, indices, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str edge_name: name of the edge (required) :param str degree_type: select in or out degree of the nodes (required) :param str indices_type: select if you want to search in a specific set of indices or in a range of indices (required) :param list[int] indices: node-indices (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. query_get_neighbours ( indices , ** kwargs ) \u00b6 query_get_neighbours # noqa: E501 Retrieve the neighbours of nodes. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_get_neighbours(indices, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[int] indices: node-indices (required) :param str edge: Find neighbours of nodes for this edge only. By default, we search the neighbours over all edges. :param int limit: Limit the total number of neighbours returned. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. query_get_neighbours_with_http_info ( indices , ** kwargs ) \u00b6 query_get_neighbours # noqa: E501 Retrieve the neighbours of nodes. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_get_neighbours_with_http_info(indices, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[int] indices: node-indices (required) :param str edge: Find neighbours of nodes for this edge only. By default, we search the neighbours over all edges. :param int limit: Limit the total number of neighbours returned. :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. query_run_parallel_workflow ( pworkflow , ** kwargs ) \u00b6 query_run_parallel_workflow # noqa: E501 Run in parallel Directed Acyclic Graph (DAG) workflows # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_run_parallel_workflow(pworkflow, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param object pworkflow: Input for parallel Directed Acyclic Graph (DAG) workflows (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: WorkflowResponseModel If the method is called asynchronously, returns the request thread. query_run_parallel_workflow_with_http_info ( pworkflow , ** kwargs ) \u00b6 query_run_parallel_workflow # noqa: E501 Run in parallel Directed Acyclic Graph (DAG) workflows # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_run_parallel_workflow_with_http_info(pworkflow, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param object pworkflow: Input for parallel Directed Acyclic Graph (DAG) workflows (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(WorkflowResponseModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. query_run_workflow ( workflow , ** kwargs ) \u00b6 query_run_workflow # noqa: E501 Run a Directed Acyclic Graph (DAG) workflow # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_run_workflow(workflow, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[dict(str, object)] workflow: Input for Directed Acyclic Graph (DAG) workflow (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[WorkflowResponse] If the method is called asynchronously, returns the request thread. query_run_workflow_with_http_info ( workflow , ** kwargs ) \u00b6 query_run_workflow # noqa: E501 Run a Directed Acyclic Graph (DAG) workflow # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_run_workflow_with_http_info(workflow, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[dict(str, object)] workflow: Input for Directed Acyclic Graph (DAG) workflow (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[WorkflowResponse], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. query_suggest_workflow ( search_string , ** kwargs ) \u00b6 query_suggest_workflow # noqa: E501 Suggest a workflow based on a given search string. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_suggest_workflow(search_string, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str search_string: Query string to generate a workflow for. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. query_suggest_workflow_with_http_info ( search_string , ** kwargs ) \u00b6 query_suggest_workflow # noqa: E501 Suggest a workflow based on a given search string. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.query_suggest_workflow_with_http_info(search_string, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str search_string: Query string to generate a workflow for. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread.","title":"api"},{"location":"api-reference/#deepsearch.cps.apis.kg.query.api_client","text":"Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech ApiClient \u00b6 Bases: object Generic API client for OpenAPI client library builds. OpenAPI generic API client. This client handles the client- server communication, and is invariant across implementations. Specifics of the methods and models for each application are generated from the OpenAPI templates. NOTE: This class is auto generated by OpenAPI Generator. Ref: https://openapi-generator.tech Do not edit the class manually. :param configuration: .Configuration object for this client :param header_name: a header to pass when making calls to the API. :param header_value: a header value to pass when making calls to the API. :param cookie: a cookie to include in the header when making calls to the API :param pool_threads: The number of threads to use for async requests to the API. More threads means more concurrent API requests. __deserialize ( data , klass ) \u00b6 Deserializes dict, list, str into an object. :param data: dict, list or str. :param klass: class literal, or string of class name. :return: object. __deserialize_date ( string ) \u00b6 Deserializes string to date. :param string: str. :return: date. __deserialize_datetime ( string ) \u00b6 Deserializes string to datetime. The string should be in iso8601 datetime format. :param string: str. :return: datetime. __deserialize_file ( response ) \u00b6 Deserializes body to file Saves response body into a file in a temporary folder, using the filename from the Content-Disposition header if provided. :param response: RESTResponse. :return: file path. __deserialize_model ( data , klass ) \u00b6 Deserializes list or dict to model. :param data: dict, list. :param klass: class literal. :return: model object. __deserialize_object ( value ) \u00b6 Return an original value. :return: object. __deserialize_primitive ( data , klass ) \u00b6 Deserializes string to primitive type. :param data: str. :param klass: class literal. :return: int, long, float, str, bool. call_api ( resource_path , method , path_params = None , query_params = None , header_params = None , body = None , post_params = None , files = None , response_type = None , auth_settings = None , async_req = None , _return_http_data_only = None , collection_formats = None , _preload_content = True , _request_timeout = None , _host = None ) \u00b6 Makes the HTTP request (synchronous) and returns deserialized data. To make an async_req request, set the async_req parameter. :param resource_path: Path to method endpoint. :param method: Method to call. :param path_params: Path parameters in the url. :param query_params: Query parameters in the url. :param header_params: Header parameters to be placed in the request header. :param body: Request body. :param post_params dict: Request post form parameters, for application/x-www-form-urlencoded , multipart/form-data . :param auth_settings list: Auth Settings names for the request. :param response: Response data type. :param files dict: key -> filename, value -> filepath, for multipart/form-data . :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param collection_formats: dict of collection formats for path, query, header, and post parameters. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: If async_req parameter is True, the request will be called asynchronously. The method will return the request thread. If parameter async_req is False or missing, then the method will return the response directly. deserialize ( response , response_type ) \u00b6 Deserializes response into an object. :param response: RESTResponse object to be deserialized. :param response_type: class literal for deserialized object, or string of class name. :return: deserialized object. files_parameters ( files = None ) \u00b6 Builds form parameters. :param files: File parameters. :return: Form parameters with files. parameters_to_tuples ( params , collection_formats ) \u00b6 Get parameters as list of tuples, formatting collections. :param params: Parameters as dict or list of two-tuples :param dict collection_formats: Parameter collection formats :return: Parameters as list of tuples, collections formatted pool () property \u00b6 Create thread pool on first request avoids instantiating unused threadpool for blocking clients. request ( method , url , query_params = None , headers = None , post_params = None , body = None , _preload_content = True , _request_timeout = None ) \u00b6 Makes the HTTP request using RESTClient. sanitize_for_serialization ( obj ) \u00b6 Builds a JSON POST object. If obj is None, return None. If obj is str, int, long, float, bool, return directly. If obj is datetime.datetime, datetime.date convert to string in iso8601 format. If obj is list, sanitize each element in the list. If obj is dict, return the dict. If obj is OpenAPI model, return the properties dict. :param obj: The data to serialize. :return: The serialized form of data. select_header_accept ( accepts ) \u00b6 Returns Accept based on an array of accepts provided. :param accepts: List of headers. :return: Accept (e.g. application/json). select_header_content_type ( content_types ) \u00b6 Returns Content-Type based on an array of content_types provided. :param content_types: List of content-types. :return: Content-Type (e.g. application/json). update_params_for_auth ( headers , querys , auth_settings ) \u00b6 Updates header and query params based on authentication setting. :param headers: Header parameters dict to be updated. :param querys: Query parameters tuple list to be updated. :param auth_settings: Authentication setting identifiers list. user_agent () property writable \u00b6 User agent for this API client","title":"api_client"},{"location":"api-reference/#deepsearch.cps.apis.kg.query.configuration","text":"Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech Configuration \u00b6 Bases: object This class is auto generated by OpenAPI Generator Do not edit the class manually. :param host: Base url :param api_key: Dict to store API key(s). Each entry in the dict specifies an API key. The dict key is the name of the security scheme in the OAS specification. The dict value is the API key secret. :param api_key_prefix: Dict to store API prefix (e.g. Bearer) The dict key is the name of the security scheme in the OAS specification. The dict value is an API key prefix when generating the auth data. :param username: Username for HTTP basic authentication :param password: Password for HTTP basic authentication :param discard_unknown_keys: Boolean value indicating whether to discard unknown properties. A server may send a response that includes additional properties that are not known by the client in the following scenarios: 1. The OpenAPI document is incomplete, i.e. it does not match the server implementation. 2. The client was generated using an older version of the OpenAPI document and the server has been upgraded since then. If a schema in the OpenAPI document defines the additionalProperties attribute, then all undeclared properties received by the server are injected into the additional properties map. In that case, there are undeclared properties, and nothing to discard. :Example: API Key Authentication Example. Given the following security scheme in the OpenAPI specification: components: securitySchemes: cookieAuth: # name for the security scheme type: apiKey in: cookie name: JSESSIONID # cookie name You can programmatically set the cookie: conf = cps.apis.kg.query.Configuration( api_key={'cookieAuth': 'abc123'} api_key_prefix={'cookieAuth': 'JSESSIONID'} ) The following cookie will be added to the HTTP request: Cookie: JSESSIONID abc123 assert_hostname = None instance-attribute \u00b6 Set this to True/False to enable/disable SSL hostname verification. cert_file = None instance-attribute \u00b6 client certificate file connection_pool_maxsize = multiprocessing . cpu_count () * 5 instance-attribute \u00b6 urllib3 connection pool's maximum number of connections saved per pool. urllib3 uses 1 connection as default value, but this is not the best value when you are making a lot of possibly parallel requests to the same host, which is often the case here. cpu_count * 5 is used as default value to increase performance. host = host instance-attribute \u00b6 Default Base url key_file = None instance-attribute \u00b6 client key file logger = {} instance-attribute \u00b6 Logging Settings logger_file_handler = None instance-attribute \u00b6 Log file handler logger_stream_handler = None instance-attribute \u00b6 Log stream handler password = password instance-attribute \u00b6 Password for HTTP basic authentication proxy = None instance-attribute \u00b6 Proxy URL proxy_headers = None instance-attribute \u00b6 Proxy headers refresh_api_key_hook = None instance-attribute \u00b6 function hook to refresh API key if expired retries = None instance-attribute \u00b6 Adding retries to override urllib3 default value 3 safe_chars_for_path_param = '' instance-attribute \u00b6 Safe chars for path_param ssl_ca_cert = None instance-attribute \u00b6 Set this to customize the certificate file to verify the peer. temp_folder_path = None instance-attribute \u00b6 Temp file folder for downloading files username = username instance-attribute \u00b6 Username for HTTP basic authentication verify_ssl = True instance-attribute \u00b6 SSL/TLS verification Set this to false to skip verifying SSL certificate when calling API from https server. __init__ ( host = 'http://localhost/query/v1' , api_key = None , api_key_prefix = None , username = None , password = None , discard_unknown_keys = False ) \u00b6 Constructor auth_settings () \u00b6 Gets Auth Settings dict for api client. :return: The Auth Settings information dict. debug () property writable \u00b6 Debug status :param value: The debug status, True or False. :type: bool get_api_key_with_prefix ( identifier ) \u00b6 Gets API key (with prefix if set). :param identifier: The identifier of apiKey. :return: The token for api key authentication. get_basic_auth_token () \u00b6 Gets HTTP basic authentication header (string). :return: The token for basic HTTP authentication. get_default_copy () classmethod \u00b6 Return new instance of configuration. This method returns newly created, based on default constructor, object of Configuration class or returns a copy of default configuration passed by the set_default method. :return: The configuration object. get_host_from_settings ( index , variables = None ) \u00b6 Gets host URL based on the index and variables :param index: array index of the host settings :param variables: hash of variable and the corresponding value :return: URL based on host settings get_host_settings () \u00b6 Gets an array of host settings :return: An array of host settings logger_file () property writable \u00b6 The logger file. If the logger_file is None, then add stream handler and remove file handler. Otherwise, add file handler and remove stream handler. :param value: The logger_file path. :type: str logger_format () property writable \u00b6 The logger format. The logger_formatter will be updated when sets logger_format. :param value: The format string. :type: str set_default ( default ) classmethod \u00b6 Set default instance of configuration. It stores default configuration, which can be returned by get_default_copy method. :param default: object of Configuration to_debug_report () \u00b6 Gets the essential information for debugging. :return: The report for debugging.","title":"configuration"},{"location":"api-reference/#deepsearch.cps.apis.kg.query.exceptions","text":"Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech ApiException \u00b6 Bases: OpenApiException __str__ () \u00b6 Custom error messages for exception ApiKeyError \u00b6 Bases: OpenApiException , KeyError __init__ ( msg , path_to_item = None ) \u00b6 Parameters: Name Type Description Default msg str the exception message required ApiTypeError \u00b6 Bases: OpenApiException , TypeError __init__ ( msg , path_to_item = None , valid_classes = None , key_type = None ) \u00b6 Raises an exception for TypeErrors Parameters: Name Type Description Default msg str the exception message required Other Parameters: Name Type Description path_to_item list a list of keys an indices to get to the current_item None if unset valid_classes tuple the primitive classes that current item should be an instance of None if unset key_type bool False if our value is a value in a dict True if it is a key in a dict False if our item is an item in a list None if unset ApiValueError \u00b6 Bases: OpenApiException , ValueError __init__ ( msg , path_to_item = None ) \u00b6 Parameters: Name Type Description Default msg str the exception message required OpenApiException \u00b6 Bases: Exception The base exception class for all OpenAPIExceptions render_path ( path_to_item ) \u00b6 Returns a string representation of a path","title":"exceptions"},{"location":"api-reference/#deepsearch.cps.apis.kg.query.models","text":"Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech auth_config \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech AuthConfig \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( auth_method = None , auth_url = None , local_vars_configuration = None ) \u00b6 AuthConfig - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint auth_method () property writable \u00b6 Gets the auth_method of this AuthConfig. # noqa: E501 :return: The auth_method of this AuthConfig. # noqa: E501 :rtype: str auth_url () property writable \u00b6 Gets the auth_url of this AuthConfig. # noqa: E501 :return: The auth_url of this AuthConfig. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model error_model \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech ErrorModel \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( status = None , title = None , detail = None , type = None , local_vars_configuration = None ) \u00b6 ErrorModel - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint detail () property writable \u00b6 Gets the detail of this ErrorModel. # noqa: E501 :return: The detail of this ErrorModel. # noqa: E501 :rtype: str status () property writable \u00b6 Gets the status of this ErrorModel. # noqa: E501 :return: The status of this ErrorModel. # noqa: E501 :rtype: int title () property writable \u00b6 Gets the title of this ErrorModel. # noqa: E501 :return: The title of this ErrorModel. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this ErrorModel. # noqa: E501 :return: The type of this ErrorModel. # noqa: E501 :rtype: str graph_description \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech GraphDescription \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( edges = None , nodes = None , version = None , local_vars_configuration = None ) \u00b6 GraphDescription - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint edges () property writable \u00b6 Gets the edges of this GraphDescription. # noqa: E501 :return: The edges of this GraphDescription. # noqa: E501 :rtype: list[GraphEdge] nodes () property writable \u00b6 Gets the nodes of this GraphDescription. # noqa: E501 :return: The nodes of this GraphDescription. # noqa: E501 :rtype: GraphNodeDescription to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model version () property writable \u00b6 Gets the version of this GraphDescription. # noqa: E501 :return: The version of this GraphDescription. # noqa: E501 :rtype: str graph_edge \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech GraphEdge \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( source = None , target = None , matrix = None , name = None , symmetric = None , local_vars_configuration = None ) \u00b6 GraphEdge - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint matrix () property writable \u00b6 Gets the matrix of this GraphEdge. # noqa: E501 :return: The matrix of this GraphEdge. # noqa: E501 :rtype: GraphMatrix name () property writable \u00b6 Gets the name of this GraphEdge. # noqa: E501 :return: The name of this GraphEdge. # noqa: E501 :rtype: str source () property writable \u00b6 Gets the source of this GraphEdge. # noqa: E501 :return: The source of this GraphEdge. # noqa: E501 :rtype: list[str] symmetric () property writable \u00b6 Gets the symmetric of this GraphEdge. # noqa: E501 :return: The symmetric of this GraphEdge. # noqa: E501 :rtype: bool target () property writable \u00b6 Gets the target of this GraphEdge. # noqa: E501 :return: The target of this GraphEdge. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model graph_matrix \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech GraphMatrix \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( bd = None , bs = None , m = None , n = None , nnz = None , local_vars_configuration = None ) \u00b6 GraphMatrix - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bd () property writable \u00b6 Gets the bd of this GraphMatrix. # noqa: E501 :return: The bd of this GraphMatrix. # noqa: E501 :rtype: int bs () property writable \u00b6 Gets the bs of this GraphMatrix. # noqa: E501 :return: The bs of this GraphMatrix. # noqa: E501 :rtype: int m () property writable \u00b6 Gets the m of this GraphMatrix. # noqa: E501 :return: The m of this GraphMatrix. # noqa: E501 :rtype: int n () property writable \u00b6 Gets the n of this GraphMatrix. # noqa: E501 :return: The n of this GraphMatrix. # noqa: E501 :rtype: int nnz () property writable \u00b6 Gets the nnz of this GraphMatrix. # noqa: E501 :return: The nnz of this GraphMatrix. # noqa: E501 :rtype: int to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model graph_node_description \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech GraphNodeDescription \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( nodes = None , categories = None , fieldnames = None , local_vars_configuration = None ) \u00b6 GraphNodeDescription - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint categories () property writable \u00b6 Gets the categories of this GraphNodeDescription. # noqa: E501 :return: The categories of this GraphNodeDescription. # noqa: E501 :rtype: list[GraphNodeDescriptionCategories] fieldnames () property writable \u00b6 Gets the fieldnames of this GraphNodeDescription. # noqa: E501 :return: The fieldnames of this GraphNodeDescription. # noqa: E501 :rtype: list[str] nodes () property writable \u00b6 Gets the nodes of this GraphNodeDescription. # noqa: E501 :return: The nodes of this GraphNodeDescription. # noqa: E501 :rtype: int to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model graph_node_description_categories \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech GraphNodeDescriptionCategories \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , databases = None , size = None , local_vars_configuration = None ) \u00b6 GraphNodeDescriptionCategories - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint databases () property writable \u00b6 Gets the databases of this GraphNodeDescriptionCategories. # noqa: E501 :return: The databases of this GraphNodeDescriptionCategories. # noqa: E501 :rtype: list[str] name () property writable \u00b6 Gets the name of this GraphNodeDescriptionCategories. # noqa: E501 :return: The name of this GraphNodeDescriptionCategories. # noqa: E501 :rtype: str size () property writable \u00b6 Gets the size of this GraphNodeDescriptionCategories. # noqa: E501 :return: The size of this GraphNodeDescriptionCategories. # noqa: E501 :rtype: int to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model inline_object \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech InlineObject \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( db = None , ids = None , projection = None , local_vars_configuration = None ) \u00b6 InlineObject - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint db () property writable \u00b6 Gets the db of this InlineObject. # noqa: E501 :return: The db of this InlineObject. # noqa: E501 :rtype: str ids () property writable \u00b6 Gets the ids of this InlineObject. # noqa: E501 :return: The ids of this InlineObject. # noqa: E501 :rtype: list[str] projection () property writable \u00b6 Gets the projection of this InlineObject. # noqa: E501 A dict specifying the fields to include or exclude. Use a dict to exclude fields from the result (e.g. projection={'main-text': false}). # noqa: E501 :return: The projection of this InlineObject. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model node \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech Node \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , hash = None , synonyms = None , categories = None , database = None , local_vars_configuration = None ) \u00b6 Node - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint categories () property writable \u00b6 Gets the categories of this Node. # noqa: E501 :return: The categories of this Node. # noqa: E501 :rtype: list[str] database () property writable \u00b6 Gets the database of this Node. # noqa: E501 :return: The database of this Node. # noqa: E501 :rtype: object hash () property writable \u00b6 Gets the hash of this Node. # noqa: E501 :return: The hash of this Node. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this Node. # noqa: E501 :return: The name of this Node. # noqa: E501 :rtype: str synonyms () property writable \u00b6 Gets the synonyms of this Node. # noqa: E501 :return: The synonyms of this Node. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model nodes_response_model \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech NodesResponseModel \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( local_vars_configuration = None ) \u00b6 NodesResponseModel - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model nodes_response_model_all_of \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech NodesResponseModelAllOf \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( parameters = None , response = None , local_vars_configuration = None ) \u00b6 NodesResponseModelAllOf - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint parameters () property writable \u00b6 Gets the parameters of this NodesResponseModelAllOf. # noqa: E501 :return: The parameters of this NodesResponseModelAllOf. # noqa: E501 :rtype: object response () property writable \u00b6 Gets the response of this NodesResponseModelAllOf. # noqa: E501 :return: The response of this NodesResponseModelAllOf. # noqa: E501 :rtype: NodesResponseModelAllOfResponse to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model nodes_response_model_all_of_response \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech NodesResponseModelAllOfResponse \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( nodes = None , local_vars_configuration = None ) \u00b6 NodesResponseModelAllOfResponse - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint nodes () property writable \u00b6 Gets the nodes of this NodesResponseModelAllOfResponse. # noqa: E501 :return: The nodes of this NodesResponseModelAllOfResponse. # noqa: E501 :rtype: list[Node] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model response_model \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech ResponseModel \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( query = None , status = None , version = None , local_vars_configuration = None ) \u00b6 ResponseModel - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint query () property writable \u00b6 Gets the query of this ResponseModel. # noqa: E501 :return: The query of this ResponseModel. # noqa: E501 :rtype: str status () property writable \u00b6 Gets the status of this ResponseModel. # noqa: E501 :return: The status of this ResponseModel. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model version () property writable \u00b6 Gets the version of this ResponseModel. # noqa: E501 :return: The version of this ResponseModel. # noqa: E501 :rtype: str workflow_response \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech WorkflowResponse \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( response_time = None , found_nodes = None , nodes = None , local_vars_configuration = None ) \u00b6 WorkflowResponse - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint found_nodes () property writable \u00b6 Gets the found_nodes of this WorkflowResponse. # noqa: E501 :return: The found_nodes of this WorkflowResponse. # noqa: E501 :rtype: int nodes () property writable \u00b6 Gets the nodes of this WorkflowResponse. # noqa: E501 :return: The nodes of this WorkflowResponse. # noqa: E501 :rtype: list[WorkflowResponseNode] response_time () property writable \u00b6 Gets the response_time of this WorkflowResponse. # noqa: E501 :return: The response_time of this WorkflowResponse. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model workflow_response_model \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech WorkflowResponseModel \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( local_vars_configuration = None ) \u00b6 WorkflowResponseModel - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model workflow_response_model_all_of \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech WorkflowResponseModelAllOf \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( parameters = None , response = None , local_vars_configuration = None ) \u00b6 WorkflowResponseModelAllOf - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint parameters () property writable \u00b6 Gets the parameters of this WorkflowResponseModelAllOf. # noqa: E501 :return: The parameters of this WorkflowResponseModelAllOf. # noqa: E501 :rtype: list[object] response () property writable \u00b6 Gets the response of this WorkflowResponseModelAllOf. # noqa: E501 :return: The response of this WorkflowResponseModelAllOf. # noqa: E501 :rtype: list[object] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model workflow_response_node \u00b6 Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech WorkflowResponseNode \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( categories = None , db = None , hash = None , synonyms = None , index = None , weight = None , local_vars_configuration = None ) \u00b6 WorkflowResponseNode - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint categories () property writable \u00b6 Gets the categories of this WorkflowResponseNode. # noqa: E501 :return: The categories of this WorkflowResponseNode. # noqa: E501 :rtype: list[str] db () property writable \u00b6 Gets the db of this WorkflowResponseNode. # noqa: E501 :return: The db of this WorkflowResponseNode. # noqa: E501 :rtype: str hash () property writable \u00b6 Gets the hash of this WorkflowResponseNode. # noqa: E501 :return: The hash of this WorkflowResponseNode. # noqa: E501 :rtype: str index () property writable \u00b6 Gets the index of this WorkflowResponseNode. # noqa: E501 :return: The index of this WorkflowResponseNode. # noqa: E501 :rtype: int synonyms () property writable \u00b6 Gets the synonyms of this WorkflowResponseNode. # noqa: E501 :return: The synonyms of this WorkflowResponseNode. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model weight () property writable \u00b6 Gets the weight of this WorkflowResponseNode. # noqa: E501 :return: The weight of this WorkflowResponseNode. # noqa: E501 :rtype: float","title":"models"},{"location":"api-reference/#deepsearch.cps.apis.kg.query.rest","text":"Knowledge-Graph Query API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.0.0 Generated by: https://openapi-generator.tech RESTClientObject \u00b6 Bases: object request ( method , url , query_params = None , headers = None , body = None , post_params = None , _preload_content = True , _request_timeout = None ) \u00b6 Perform requests. :param method: http request method :param url: http request url :param query_params: query parameters in the url :param headers: http request headers :param body: request json body, for application/json :param post_params: request post parameters, application/x-www-form-urlencoded and multipart/form-data :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. RESTResponse \u00b6 Bases: io . IOBase getheader ( name , default = None ) \u00b6 Returns a given response header. getheaders () \u00b6 Returns a dictionary of the response headers.","title":"rest"},{"location":"api-reference/#deepsearch.cps.apis.public","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech","title":"public"},{"location":"api-reference/#deepsearch.cps.apis.public.api","text":"","title":"api"},{"location":"api-reference/#deepsearch.cps.apis.public.api.annotate_api","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotateApi \u00b6 Bases: object Do not edit the class manually. generate_project_object_annotations ( proj_key , options , ** kwargs ) \u00b6 generate_project_object_annotations # noqa: E501 Run an annotator on an object, using resources from the project. DEPRECATED , please use generate_project_object_annotations_async instead. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.generate_project_object_annotations(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param AnnotateObjectOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: AnnotatedObject1 If the method is called asynchronously, returns the request thread. generate_project_object_annotations_async ( proj_key , options , ** kwargs ) \u00b6 generate_project_object_annotations_async # noqa: E501 Run an annotator on an object, using resources from the project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.generate_project_object_annotations_async(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param AnnotateObjectOptions1 options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. generate_project_object_annotations_async_with_http_info ( proj_key , options , ** kwargs ) \u00b6 generate_project_object_annotations_async # noqa: E501 Run an annotator on an object, using resources from the project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.generate_project_object_annotations_async_with_http_info(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param AnnotateObjectOptions1 options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. generate_project_object_annotations_with_http_info ( proj_key , options , ** kwargs ) \u00b6 generate_project_object_annotations # noqa: E501 Run an annotator on an object, using resources from the project. DEPRECATED , please use generate_project_object_annotations_async instead. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.generate_project_object_annotations_with_http_info(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param AnnotateObjectOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(AnnotatedObject1, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_cached_annotator_metadata ( proj_key , options , ** kwargs ) \u00b6 get_cached_annotator_metadata # noqa: E501 Get annotator's metadata # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_cached_annotator_metadata(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param object options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: AnnotatorMetadata If the method is called asynchronously, returns the request thread. get_cached_annotator_metadata_with_http_info ( proj_key , options , ** kwargs ) \u00b6 get_cached_annotator_metadata # noqa: E501 Get annotator's metadata # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_cached_annotator_metadata_with_http_info(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param object options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(AnnotatorMetadata, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_annotator_supported_annotations ( proj_key , options , ** kwargs ) \u00b6 get_project_annotator_supported_annotations # noqa: E501 Get supported annotations for an annotator # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_annotator_supported_annotations(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param object options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: SupportedAnnotatorAnnotations If the method is called asynchronously, returns the request thread. get_project_annotator_supported_annotations_with_http_info ( proj_key , options , ** kwargs ) \u00b6 get_project_annotator_supported_annotations # noqa: E501 Get supported annotations for an annotator # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_annotator_supported_annotations_with_http_info(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param object options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(SupportedAnnotatorAnnotations, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread.","title":"annotate_api"},{"location":"api-reference/#deepsearch.cps.apis.public.api.data_catalogs_api","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogsApi \u00b6 Bases: object Do not edit the class manually. clone_project_data_catalog ( proj_key , dc_key , options , ** kwargs ) \u00b6 clone_project_data_catalog # noqa: E501 Clone an existing data catalogue # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.clone_project_data_catalog(proj_key, dc_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param CloneDataCatalogOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: CloneDataCatalogResult If the method is called asynchronously, returns the request thread. clone_project_data_catalog_with_http_info ( proj_key , dc_key , options , ** kwargs ) \u00b6 clone_project_data_catalog # noqa: E501 Clone an existing data catalogue # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.clone_project_data_catalog_with_http_info(proj_key, dc_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param CloneDataCatalogOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(CloneDataCatalogResult, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. clone_public_data_catalog ( dc_key , options , ** kwargs ) \u00b6 clone_public_data_catalog # noqa: E501 Clone an existing public data catalogue # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.clone_public_data_catalog(dc_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dc_key: (required) :param ClonePublicDataCatalogOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: CloneDataCatalogResult If the method is called asynchronously, returns the request thread. clone_public_data_catalog_with_http_info ( dc_key , options , ** kwargs ) \u00b6 clone_public_data_catalog # noqa: E501 Clone an existing public data catalogue # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.clone_public_data_catalog_with_http_info(dc_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dc_key: (required) :param ClonePublicDataCatalogOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(CloneDataCatalogResult, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_data_catalog ( proj_key , options , ** kwargs ) \u00b6 create_project_data_catalog # noqa: E501 Create an empty data catalog # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_catalog(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateDataCatalogOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataCatalogue If the method is called asynchronously, returns the request thread. create_project_data_catalog_collection ( proj_key , dc_key , body , ** kwargs ) \u00b6 create_project_data_catalog_collection # noqa: E501 Create a collection in a data catalog # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_catalog_collection(proj_key, dc_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param CreateDataCatalogCollectionOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. create_project_data_catalog_collection_with_http_info ( proj_key , dc_key , body , ** kwargs ) \u00b6 create_project_data_catalog_collection # noqa: E501 Create a collection in a data catalog # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_catalog_collection_with_http_info(proj_key, dc_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param CreateDataCatalogCollectionOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. create_project_data_catalog_delete_token ( proj_key , dc_key , ** kwargs ) \u00b6 create_project_data_catalog_delete_token # noqa: E501 Get a token used to confirm the deletion of a data catalog. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_catalog_delete_token(proj_key, dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: TokenResponse If the method is called asynchronously, returns the request thread. create_project_data_catalog_delete_token_with_http_info ( proj_key , dc_key , ** kwargs ) \u00b6 create_project_data_catalog_delete_token # noqa: E501 Get a token used to confirm the deletion of a data catalog. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_catalog_delete_token_with_http_info(proj_key, dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(TokenResponse, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_data_catalog_with_http_info ( proj_key , options , ** kwargs ) \u00b6 create_project_data_catalog # noqa: E501 Create an empty data catalog # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_catalog_with_http_info(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateDataCatalogOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataCatalogue, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. delete_project_data_catalog ( proj_key , dc_key , confirmation_token , ** kwargs ) \u00b6 delete_project_data_catalog # noqa: E501 Delete a single data catalog # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_data_catalog(proj_key, dc_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str confirmation_token: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_data_catalog_collection ( proj_key , dc_key , collection_name , ** kwargs ) \u00b6 delete_project_data_catalog_collection # noqa: E501 Delete a single data catalog's collection # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_data_catalog_collection(proj_key, dc_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_data_catalog_collection_with_http_info ( proj_key , dc_key , collection_name , ** kwargs ) \u00b6 delete_project_data_catalog_collection # noqa: E501 Delete a single data catalog's collection # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_data_catalog_collection_with_http_info(proj_key, dc_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_data_catalog_with_http_info ( proj_key , dc_key , confirmation_token , ** kwargs ) \u00b6 delete_project_data_catalog # noqa: E501 Delete a single data catalog # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_data_catalog_with_http_info(proj_key, dc_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str confirmation_token: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. export_dataset ( proj_key , bag_key , data , ** kwargs ) \u00b6 export_dataset # noqa: E501 Export dataset from a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_dataset(proj_key, bag_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param InlineObject3 data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectTask If the method is called asynchronously, returns the request thread. export_dataset_with_http_info ( proj_key , bag_key , data , ** kwargs ) \u00b6 export_dataset # noqa: E501 Export dataset from a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_dataset_with_http_info(proj_key, bag_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param InlineObject3 data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. export_project_data_catalog_collection_data ( proj_key , dc_key , collection_name , ** kwargs ) \u00b6 export_project_data_catalog_collection_data # noqa: E501 Export the contents of a data catalog's collection # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_project_data_catalog_collection_data(proj_key, dc_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: file If the method is called asynchronously, returns the request thread. export_project_data_catalog_collection_data_with_http_info ( proj_key , dc_key , collection_name , ** kwargs ) \u00b6 export_project_data_catalog_collection_data # noqa: E501 Export the contents of a data catalog's collection # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_project_data_catalog_collection_data_with_http_info(proj_key, dc_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(file, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. export_project_data_catalog_data ( proj_key , dc_key , ** kwargs ) \u00b6 export_project_data_catalog_data # noqa: E501 Export the contents of a data catalog. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_project_data_catalog_data(proj_key, dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: file If the method is called asynchronously, returns the request thread. export_project_data_catalog_data_with_http_info ( proj_key , dc_key , ** kwargs ) \u00b6 export_project_data_catalog_data # noqa: E501 Export the contents of a data catalog. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_project_data_catalog_data_with_http_info(proj_key, dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(file, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_data_catalog_collection_data ( proj_key , dc_key , collection_name , ** kwargs ) \u00b6 get_data_catalog_collection_data # noqa: E501 Get Data Catalog Collection data. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_data_catalog_collection_data(proj_key, dc_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param str after: :param int limit: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. get_data_catalog_collection_data_with_http_info ( proj_key , dc_key , collection_name , ** kwargs ) \u00b6 get_data_catalog_collection_data # noqa: E501 Get Data Catalog Collection data. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_data_catalog_collection_data_with_http_info(proj_key, dc_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param str after: :param int limit: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. get_project_data_catalog ( proj_key , dc_key , ** kwargs ) \u00b6 get_project_data_catalog # noqa: E501 Get a single data catalogue # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_data_catalog(proj_key, dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param bool include_collections: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataCatalogue If the method is called asynchronously, returns the request thread. get_project_data_catalog_with_http_info ( proj_key , dc_key , ** kwargs ) \u00b6 get_project_data_catalog # noqa: E501 Get a single data catalogue # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_data_catalog_with_http_info(proj_key, dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param bool include_collections: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataCatalogue, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_public_data_catalog ( dc_key , ** kwargs ) \u00b6 get_public_data_catalog # noqa: E501 Get a single data catalogue that was made public # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_public_data_catalog(dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dc_key: (required) :param bool include_collections: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataCatalogue If the method is called asynchronously, returns the request thread. get_public_data_catalog_with_http_info ( dc_key , ** kwargs ) \u00b6 get_public_data_catalog # noqa: E501 Get a single data catalogue that was made public # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_public_data_catalog_with_http_info(dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dc_key: (required) :param bool include_collections: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataCatalogue, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. import_project_data_catalog_collection_data ( proj_key , dc_key , collection_name , body , ** kwargs ) \u00b6 import_project_data_catalog_collection_data # noqa: E501 Import data to a data catalog collection. The collection will be created if it doesn't exist. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.import_project_data_catalog_collection_data(proj_key, dc_key, collection_name, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param ImportToDataCatalogCollectionOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. import_project_data_catalog_collection_data_with_http_info ( proj_key , dc_key , collection_name , body , ** kwargs ) \u00b6 import_project_data_catalog_collection_data # noqa: E501 Import data to a data catalog collection. The collection will be created if it doesn't exist. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.import_project_data_catalog_collection_data_with_http_info(proj_key, dc_key, collection_name, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param ImportToDataCatalogCollectionOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. import_project_data_catalog_data ( proj_key , dc_key , body , ** kwargs ) \u00b6 import_project_data_catalog_data # noqa: E501 Import data to a data catalog. The collections will be created if they don't exist. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.import_project_data_catalog_data(proj_key, dc_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param ImportToDataCatalogOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. import_project_data_catalog_data_with_http_info ( proj_key , dc_key , body , ** kwargs ) \u00b6 import_project_data_catalog_data # noqa: E501 Import data to a data catalog. The collections will be created if they don't exist. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.import_project_data_catalog_data_with_http_info(proj_key, dc_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param ImportToDataCatalogOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. import_project_data_catalog_from_mongo ( proj_key , body , ** kwargs ) \u00b6 import_project_data_catalog_from_mongo # noqa: E501 Create a data catalogue from a mongo database # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.import_project_data_catalog_from_mongo(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param DataCatalogImportOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataCatalogImportResult If the method is called asynchronously, returns the request thread. import_project_data_catalog_from_mongo_with_http_info ( proj_key , body , ** kwargs ) \u00b6 import_project_data_catalog_from_mongo # noqa: E501 Create a data catalogue from a mongo database # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.import_project_data_catalog_from_mongo_with_http_info(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param DataCatalogImportOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataCatalogImportResult, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. import_project_data_catalog_from_url ( proj_key , body , ** kwargs ) \u00b6 import_project_data_catalog_from_url # noqa: E501 Create a data catalogue from a URL to a file # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.import_project_data_catalog_from_url(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param DataCatalogUrlImportOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataCatalogImportResult If the method is called asynchronously, returns the request thread. import_project_data_catalog_from_url_with_http_info ( proj_key , body , ** kwargs ) \u00b6 import_project_data_catalog_from_url # noqa: E501 Create a data catalogue from a URL to a file # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.import_project_data_catalog_from_url_with_http_info(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param DataCatalogUrlImportOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataCatalogImportResult, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. infer_project_data_catalog_category_schema ( proj_key , dc_key , collection_name , body , ** kwargs ) \u00b6 infer_project_data_catalog_category_schema # noqa: E501 Infer the schema for a data catalog's collection. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.infer_project_data_catalog_category_schema(proj_key, dc_key, collection_name, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param InferProjectDataCatalogCategorySchema body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. infer_project_data_catalog_category_schema_with_http_info ( proj_key , dc_key , collection_name , body , ** kwargs ) \u00b6 infer_project_data_catalog_category_schema # noqa: E501 Infer the schema for a data catalog's collection. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.infer_project_data_catalog_category_schema_with_http_info(proj_key, dc_key, collection_name, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param InferProjectDataCatalogCategorySchema body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_data_catalogs_and_collections_from_schema ( schema , ** kwargs ) \u00b6 list_data_catalogs_and_collections_from_schema # noqa: E501 List data catalogues with specific schema # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_data_catalogs_and_collections_from_schema(schema, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param dict(str, object) schema: (required) :param str proj_key: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataCatalogue] If the method is called asynchronously, returns the request thread. list_data_catalogs_and_collections_from_schema_with_http_info ( schema , ** kwargs ) \u00b6 list_data_catalogs_and_collections_from_schema # noqa: E501 List data catalogues with specific schema # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_data_catalogs_and_collections_from_schema_with_http_info(schema, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param dict(str, object) schema: (required) :param str proj_key: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataCatalogue], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_known_data_catalog_schemas ( ** kwargs ) \u00b6 list_known_data_catalog_schemas # noqa: E501 List System Known Data Catalog Schemas. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_known_data_catalog_schemas(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataCatalogSchema] If the method is called asynchronously, returns the request thread. list_known_data_catalog_schemas_with_http_info ( ** kwargs ) \u00b6 list_known_data_catalog_schemas # noqa: E501 List System Known Data Catalog Schemas. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_known_data_catalog_schemas_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataCatalogSchema], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_data_catalog_collections ( proj_key , dc_key , ** kwargs ) \u00b6 list_project_data_catalog_collections # noqa: E501 Get the collections of a data catalog. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_data_catalog_collections(proj_key, dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataCatalogCollection] If the method is called asynchronously, returns the request thread. list_project_data_catalog_collections_with_http_info ( proj_key , dc_key , ** kwargs ) \u00b6 list_project_data_catalog_collections # noqa: E501 Get the collections of a data catalog. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_data_catalog_collections_with_http_info(proj_key, dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataCatalogCollection], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_data_catalogs ( proj_key , ** kwargs ) \u00b6 list_project_data_catalogs # noqa: E501 List data catalogues for a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_data_catalogs(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str query: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataCatalogue] If the method is called asynchronously, returns the request thread. list_project_data_catalogs_with_http_info ( proj_key , ** kwargs ) \u00b6 list_project_data_catalogs # noqa: E501 List data catalogues for a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_data_catalogs_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str query: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataCatalogue], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_public_data_catalog_collections ( dc_key , ** kwargs ) \u00b6 list_public_data_catalog_collections # noqa: E501 Get the collections of a data catalog. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_data_catalog_collections(dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dc_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataCatalogCollection] If the method is called asynchronously, returns the request thread. list_public_data_catalog_collections_with_http_info ( dc_key , ** kwargs ) \u00b6 list_public_data_catalog_collections # noqa: E501 Get the collections of a data catalog. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_data_catalog_collections_with_http_info(dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dc_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataCatalogCollection], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_public_data_catalogs ( ** kwargs ) \u00b6 list_public_data_catalogs # noqa: E501 List public data catalogues # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_data_catalogs(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str query: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataCatalogue] If the method is called asynchronously, returns the request thread. list_public_data_catalogs_with_http_info ( ** kwargs ) \u00b6 list_public_data_catalogs # noqa: E501 List public data catalogues # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_data_catalogs_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str query: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataCatalogue], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. patch_project_data_catalog ( proj_key , dc_key , options , ** kwargs ) \u00b6 patch_project_data_catalog # noqa: E501 Update the metadata of a data catalog. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.patch_project_data_catalog(proj_key, dc_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param PatchDataCatalogOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataCatalogue If the method is called asynchronously, returns the request thread. patch_project_data_catalog_with_http_info ( proj_key , dc_key , options , ** kwargs ) \u00b6 patch_project_data_catalog # noqa: E501 Update the metadata of a data catalog. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.patch_project_data_catalog_with_http_info(proj_key, dc_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param PatchDataCatalogOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataCatalogue, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. upload_project_data_catalog_collection_data ( proj_key , dc_key , collection_name , file , ** kwargs ) \u00b6 upload_project_data_catalog_collection_data # noqa: E501 Upload data to a data catalog collection. The collection will be created if it doesn't exist. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_data_catalog_collection_data(proj_key, dc_key, collection_name, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param file file: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. upload_project_data_catalog_collection_data_with_http_info ( proj_key , dc_key , collection_name , file , ** kwargs ) \u00b6 upload_project_data_catalog_collection_data # noqa: E501 Upload data to a data catalog collection. The collection will be created if it doesn't exist. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_data_catalog_collection_data_with_http_info(proj_key, dc_key, collection_name, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param str collection_name: (required) :param file file: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. upload_project_data_catalog_data ( proj_key , dc_key , file , ** kwargs ) \u00b6 upload_project_data_catalog_data # noqa: E501 Upload data to a data catalog. The collection name(s) will be inferred from the file name(s). # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_data_catalog_data(proj_key, dc_key, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param file file: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. upload_project_data_catalog_data_with_http_info ( proj_key , dc_key , file , ** kwargs ) \u00b6 upload_project_data_catalog_data # noqa: E501 Upload data to a data catalog. The collection name(s) will be inferred from the file name(s). # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_data_catalog_data_with_http_info(proj_key, dc_key, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dc_key: (required) :param file file: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread.","title":"data_catalogs_api"},{"location":"api-reference/#deepsearch.cps.apis.public.api.data_flows_api","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowsApi \u00b6 Bases: object Do not edit the class manually. assemble_project_data_flow ( proj_key , dataflow , ** kwargs ) \u00b6 assemble_project_data_flow # noqa: E501 Run a dataflow # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.assemble_project_data_flow(proj_key, dataflow, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param KgcDataInput dataflow: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. assemble_project_data_flow_template_into_knowledge_graph ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 assemble_project_data_flow_template_into_knowledge_graph # noqa: E501 Render a single data flow template, replacing the variable placeholders by their actual values and run it. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.assemble_project_data_flow_template_into_knowledge_graph(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param RunDataFlowTemplateOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. assemble_project_data_flow_template_into_knowledge_graph_with_http_info ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 assemble_project_data_flow_template_into_knowledge_graph # noqa: E501 Render a single data flow template, replacing the variable placeholders by their actual values and run it. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.assemble_project_data_flow_template_into_knowledge_graph_with_http_info(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param RunDataFlowTemplateOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. assemble_project_data_flow_with_http_info ( proj_key , dataflow , ** kwargs ) \u00b6 assemble_project_data_flow # noqa: E501 Run a dataflow # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.assemble_project_data_flow_with_http_info(proj_key, dataflow, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param KgcDataInput dataflow: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. assemble_project_raw_data_flow_template_into_knowledge_graph ( proj_key , options , ** kwargs ) \u00b6 assemble_project_raw_data_flow_template_into_knowledge_graph # noqa: E501 Render a single data flow template, replacing the variable placeholders by their actual values and run it. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.assemble_project_raw_data_flow_template_into_knowledge_graph(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param RunDataFlowTemplateOptions1 options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. assemble_project_raw_data_flow_template_into_knowledge_graph_with_http_info ( proj_key , options , ** kwargs ) \u00b6 assemble_project_raw_data_flow_template_into_knowledge_graph # noqa: E501 Render a single data flow template, replacing the variable placeholders by their actual values and run it. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.assemble_project_raw_data_flow_template_into_knowledge_graph_with_http_info(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param RunDataFlowTemplateOptions1 options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_data_flow_template ( proj_key , options , ** kwargs ) \u00b6 create_project_data_flow_template # noqa: E501 Create a data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_flow_template(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateDataFlowTemplateOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataFlow If the method is called asynchronously, returns the request thread. create_project_data_flow_template_delete_token ( proj_key , df_tpl_key , ** kwargs ) \u00b6 create_project_data_flow_template_delete_token # noqa: E501 Get a token used to confirm the deletion of a data flow template. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_flow_template_delete_token(proj_key, df_tpl_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: TokenResponse If the method is called asynchronously, returns the request thread. create_project_data_flow_template_delete_token_with_http_info ( proj_key , df_tpl_key , ** kwargs ) \u00b6 create_project_data_flow_template_delete_token # noqa: E501 Get a token used to confirm the deletion of a data flow template. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_flow_template_delete_token_with_http_info(proj_key, df_tpl_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(TokenResponse, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_data_flow_template_with_http_info ( proj_key , options , ** kwargs ) \u00b6 create_project_data_flow_template # noqa: E501 Create a data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_flow_template_with_http_info(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateDataFlowTemplateOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataFlow, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_assemble_report ( proj_key , task_id , options , ** kwargs ) \u00b6 create_project_knowledge_graph_assemble_report # noqa: E501 Create a report for a data flow task assemble. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_assemble_report(proj_key, task_id, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param DataFlowAssembleReportOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataFlowAssembleReport If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_assemble_report_with_http_info ( proj_key , task_id , options , ** kwargs ) \u00b6 create_project_knowledge_graph_assemble_report # noqa: E501 Create a report for a data flow task assemble. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_assemble_report_with_http_info(proj_key, task_id, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param DataFlowAssembleReportOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataFlowAssembleReport, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. debug_project_data_flow_template ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 debug_project_data_flow_template # noqa: E501 (Debug) get the fully rendered data flow, with all the coordinates set. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.debug_project_data_flow_template(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param FullyRenderedDataFlow options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: object If the method is called asynchronously, returns the request thread. debug_project_data_flow_template_with_http_info ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 debug_project_data_flow_template # noqa: E501 (Debug) get the fully rendered data flow, with all the coordinates set. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.debug_project_data_flow_template_with_http_info(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param FullyRenderedDataFlow options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(object, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. delete_project_data_flow_template ( proj_key , df_tpl_key , confirmation_token , ** kwargs ) \u00b6 delete_project_data_flow_template # noqa: E501 Delete a single data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_data_flow_template(proj_key, df_tpl_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param str confirmation_token: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_data_flow_template_with_http_info ( proj_key , df_tpl_key , confirmation_token , ** kwargs ) \u00b6 delete_project_data_flow_template # noqa: E501 Delete a single data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_data_flow_template_with_http_info(proj_key, df_tpl_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param str confirmation_token: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. export_project_data_flow_template ( proj_key , df_tpl_key , ** kwargs ) \u00b6 export_project_data_flow_template # noqa: E501 Export a single data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_project_data_flow_template(proj_key, df_tpl_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: file If the method is called asynchronously, returns the request thread. export_project_data_flow_template_with_http_info ( proj_key , df_tpl_key , ** kwargs ) \u00b6 export_project_data_flow_template # noqa: E501 Export a single data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_project_data_flow_template_with_http_info(proj_key, df_tpl_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(file, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. export_public_data_flow_template ( df_tpl_key , ** kwargs ) \u00b6 export_public_data_flow_template # noqa: E501 Export a single public data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_public_data_flow_template(df_tpl_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str df_tpl_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: file If the method is called asynchronously, returns the request thread. export_public_data_flow_template_with_http_info ( df_tpl_key , ** kwargs ) \u00b6 export_public_data_flow_template # noqa: E501 Export a single public data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_public_data_flow_template_with_http_info(df_tpl_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str df_tpl_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(file, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_data_flow ( proj_key , df_tpl_key , ** kwargs ) \u00b6 get_project_data_flow # noqa: E501 Get a single data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_data_flow(proj_key, df_tpl_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataFlow If the method is called asynchronously, returns the request thread. get_project_data_flow_template_topology ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 get_project_data_flow_template_topology # noqa: E501 Render a single data flow template, replacing the variable placeholders by their actual values and get the resulting Knowledge Graph topology from it. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_data_flow_template_topology(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param DataFlowTopologyOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Topology If the method is called asynchronously, returns the request thread. get_project_data_flow_template_topology_with_http_info ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 get_project_data_flow_template_topology # noqa: E501 Render a single data flow template, replacing the variable placeholders by their actual values and get the resulting Knowledge Graph topology from it. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_data_flow_template_topology_with_http_info(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param DataFlowTopologyOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Topology, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_data_flow_with_http_info ( proj_key , df_tpl_key , ** kwargs ) \u00b6 get_project_data_flow # noqa: E501 Get a single data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_data_flow_with_http_info(proj_key, df_tpl_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataFlow, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_public_data_flow_template ( df_tpl_key , ** kwargs ) \u00b6 get_public_data_flow_template # noqa: E501 Get a single data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_public_data_flow_template(df_tpl_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str df_tpl_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataFlow If the method is called asynchronously, returns the request thread. get_public_data_flow_template_with_http_info ( df_tpl_key , ** kwargs ) \u00b6 get_public_data_flow_template # noqa: E501 Get a single data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_public_data_flow_template_with_http_info(df_tpl_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str df_tpl_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataFlow, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_data_flow_templates ( proj_key , ** kwargs ) \u00b6 list_project_data_flow_templates # noqa: E501 List a data flow templates # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_data_flow_templates(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str query: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataFlowTemplateListItem] If the method is called asynchronously, returns the request thread. list_project_data_flow_templates_with_http_info ( proj_key , ** kwargs ) \u00b6 list_project_data_flow_templates # noqa: E501 List a data flow templates # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_data_flow_templates_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str query: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataFlowTemplateListItem], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_public_data_flow_templates ( ** kwargs ) \u00b6 list_public_data_flow_templates # noqa: E501 List public data flow templates # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_data_flow_templates(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str query: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataFlowTemplateListItem] If the method is called asynchronously, returns the request thread. list_public_data_flow_templates_with_http_info ( ** kwargs ) \u00b6 list_public_data_flow_templates # noqa: E501 List public data flow templates # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_data_flow_templates_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str query: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataFlowTemplateListItem], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. load_project_data_flow ( proj_key , options , ** kwargs ) \u00b6 load_project_data_flow # noqa: E501 Load a dataflow into a KG # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_project_data_flow(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param LoadKgcDataInput options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. load_project_data_flow_template_into_knowledge_graph ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 load_project_data_flow_template_into_knowledge_graph # noqa: E501 Render a single data flow template, replacing the variable placeholders by their actual values and load it into a Knowledge Graph. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_project_data_flow_template_into_knowledge_graph(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param LoadDataFlowIntoKnowledgeGraphOptions1 options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. load_project_data_flow_template_into_knowledge_graph_with_http_info ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 load_project_data_flow_template_into_knowledge_graph # noqa: E501 Render a single data flow template, replacing the variable placeholders by their actual values and load it into a Knowledge Graph. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_project_data_flow_template_into_knowledge_graph_with_http_info(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param LoadDataFlowIntoKnowledgeGraphOptions1 options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. load_project_data_flow_with_http_info ( proj_key , options , ** kwargs ) \u00b6 load_project_data_flow # noqa: E501 Load a dataflow into a KG # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_project_data_flow_with_http_info(proj_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param LoadKgcDataInput options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. render_project_data_flow_template ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 render_project_data_flow_template # noqa: E501 Render a single data flow template, replacing the variable placeholders by their actual values. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.render_project_data_flow_template(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param RenderDataFlowTemplateOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: object If the method is called asynchronously, returns the request thread. render_project_data_flow_template_with_http_info ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 render_project_data_flow_template # noqa: E501 Render a single data flow template, replacing the variable placeholders by their actual values. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.render_project_data_flow_template_with_http_info(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param RenderDataFlowTemplateOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(object, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. update_project_data_flow_template ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 update_project_data_flow_template # noqa: E501 Update a data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_data_flow_template(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param UpdateDataFlowOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataFlow If the method is called asynchronously, returns the request thread. update_project_data_flow_template_with_http_info ( proj_key , df_tpl_key , options , ** kwargs ) \u00b6 update_project_data_flow_template # noqa: E501 Update a data flow template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_data_flow_template_with_http_info(proj_key, df_tpl_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str df_tpl_key: (required) :param UpdateDataFlowOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataFlow, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. upload_project_data_flow_template ( proj_key , contents , ** kwargs ) \u00b6 upload_project_data_flow_template # noqa: E501 Create a data flow template from a JSON file. DEPRECATED : use create_project_data_flow_template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_data_flow_template(proj_key, contents, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param file contents: (required) :param str name: :param str description: :param bool public: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DataFlow If the method is called asynchronously, returns the request thread. upload_project_data_flow_template_with_http_info ( proj_key , contents , ** kwargs ) \u00b6 upload_project_data_flow_template # noqa: E501 Create a data flow template from a JSON file. DEPRECATED : use create_project_data_flow_template # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_data_flow_template_with_http_info(proj_key, contents, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param file contents: (required) :param str name: :param str description: :param bool public: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DataFlow, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. validate_project_data_flow ( proj_key , dataflow , ** kwargs ) \u00b6 validate_project_data_flow # noqa: E501 Validate a dataflow # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.validate_project_data_flow(proj_key, dataflow, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param KgcDataInput dataflow: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. validate_project_data_flow_with_http_info ( proj_key , dataflow , ** kwargs ) \u00b6 validate_project_data_flow # noqa: E501 Validate a dataflow # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.validate_project_data_flow_with_http_info(proj_key, dataflow, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param KgcDataInput dataflow: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread.","title":"data_flows_api"},{"location":"api-reference/#deepsearch.cps.apis.public.api.data_indices_api","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataIndicesApi \u00b6 Bases: object Do not edit the class manually. ccs_convert_upload_file_project_data_index ( proj_key , index_key , body , ** kwargs ) \u00b6 ccs_convert_upload_file_project_data_index # noqa: E501 Convert files via CCS and upload to a project data index (only for indices with 'deepsearch-doc' schema) # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.ccs_convert_upload_file_project_data_index(proj_key, index_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param DataIndexUploadFileSource body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: CcsTask If the method is called asynchronously, returns the request thread. ccs_convert_upload_file_project_data_index_with_http_info ( proj_key , index_key , body , ** kwargs ) \u00b6 ccs_convert_upload_file_project_data_index # noqa: E501 Convert files via CCS and upload to a project data index (only for indices with 'deepsearch-doc' schema) # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.ccs_convert_upload_file_project_data_index_with_http_info(proj_key, index_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param DataIndexUploadFileSource body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(CcsTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_data_index ( proj_key , data , ** kwargs ) \u00b6 create_project_data_index # noqa: E501 Create a project data index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_index(proj_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param object data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectDataIndexWithStatus If the method is called asynchronously, returns the request thread. create_project_data_index_delete_token ( proj_key , index_key , ** kwargs ) \u00b6 create_project_data_index_delete_token # noqa: E501 Get a token used to confirm the deletion of a project data index. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_index_delete_token(proj_key, index_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: TokenResponse If the method is called asynchronously, returns the request thread. create_project_data_index_delete_token_with_http_info ( proj_key , index_key , ** kwargs ) \u00b6 create_project_data_index_delete_token # noqa: E501 Get a token used to confirm the deletion of a project data index. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_index_delete_token_with_http_info(proj_key, index_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(TokenResponse, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_data_index_with_http_info ( proj_key , data , ** kwargs ) \u00b6 create_project_data_index # noqa: E501 Create a project data index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_data_index_with_http_info(proj_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param object data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectDataIndexWithStatus, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. delete_project_data_index ( proj_key , index_key , confirmation_token , ** kwargs ) \u00b6 delete_project_data_index # noqa: E501 Delete a project index data # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_data_index(proj_key, index_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param str confirmation_token: The delete confirmation token (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_data_index_with_http_info ( proj_key , index_key , confirmation_token , ** kwargs ) \u00b6 delete_project_data_index # noqa: E501 Delete a project index data # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_data_index_with_http_info(proj_key, index_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param str confirmation_token: The delete confirmation token (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. get_project_data_index ( proj_key , index_key , ** kwargs ) \u00b6 get_project_data_index # noqa: E501 Get project data index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_data_index(proj_key, index_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectDataIndexWithStatus If the method is called asynchronously, returns the request thread. get_project_data_index_with_http_info ( proj_key , index_key , ** kwargs ) \u00b6 get_project_data_index # noqa: E501 Get project data index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_data_index_with_http_info(proj_key, index_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectDataIndexWithStatus, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_data_indices ( proj_key , ** kwargs ) \u00b6 get_project_data_indices # noqa: E501 Get project data indices # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_data_indices(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[ProjectDataIndexWithStatus] If the method is called asynchronously, returns the request thread. get_project_data_indices_with_http_info ( proj_key , ** kwargs ) \u00b6 get_project_data_indices # noqa: E501 Get project data indices # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_data_indices_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[ProjectDataIndexWithStatus], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. search_project_data_index ( proj_key , index_key , parameters , ** kwargs ) \u00b6 search_project_data_index # noqa: E501 Search a project data index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.search_project_data_index(proj_key, index_key, parameters, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param dict(str, object) parameters: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ElasticIndexSearchResults If the method is called asynchronously, returns the request thread. search_project_data_index_with_http_info ( proj_key , index_key , parameters , ** kwargs ) \u00b6 search_project_data_index # noqa: E501 Search a project data index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.search_project_data_index_with_http_info(proj_key, index_key, parameters, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param dict(str, object) parameters: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ElasticIndexSearchResults, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. update_project_data_index ( proj_key , index_key , data , ** kwargs ) \u00b6 update_project_data_index # noqa: E501 Update a project data index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_data_index(proj_key, index_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param object data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectDataIndexWithStatus If the method is called asynchronously, returns the request thread. update_project_data_index_with_http_info ( proj_key , index_key , data , ** kwargs ) \u00b6 update_project_data_index # noqa: E501 Update a project data index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_data_index_with_http_info(proj_key, index_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param object data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectDataIndexWithStatus, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. upload_project_data_index_file ( proj_key , index_key , file , ** kwargs ) \u00b6 upload_project_data_index_file # noqa: E501 Upload a file to a project data index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_data_index_file(proj_key, index_key, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param file file: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. upload_project_data_index_file_with_http_info ( proj_key , index_key , file , ** kwargs ) \u00b6 upload_project_data_index_file # noqa: E501 Upload a file to a project data index # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_data_index_file_with_http_info(proj_key, index_key, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str index_key: (required) :param file file: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread.","title":"data_indices_api"},{"location":"api-reference/#deepsearch.cps.apis.public.api.dictionaries_api","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DictionariesApi \u00b6 Bases: object Do not edit the class manually. clone_project_dictionary ( proj_key , dict_key , body , ** kwargs ) \u00b6 clone_project_dictionary # noqa: E501 Clone an existing dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.clone_project_dictionary(proj_key, dict_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param CloneDictionaryOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DictionaryCloneResult If the method is called asynchronously, returns the request thread. clone_project_dictionary_with_http_info ( proj_key , dict_key , body , ** kwargs ) \u00b6 clone_project_dictionary # noqa: E501 Clone an existing dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.clone_project_dictionary_with_http_info(proj_key, dict_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param CloneDictionaryOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DictionaryCloneResult, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. clone_public_dictionary ( dict_key , body , ** kwargs ) \u00b6 clone_public_dictionary # noqa: E501 Clone an existing public dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.clone_public_dictionary(dict_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dict_key: (required) :param ClonePublicDictionaryOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DictionaryCloneResult If the method is called asynchronously, returns the request thread. clone_public_dictionary_with_http_info ( dict_key , body , ** kwargs ) \u00b6 clone_public_dictionary # noqa: E501 Clone an existing public dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.clone_public_dictionary_with_http_info(dict_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dict_key: (required) :param ClonePublicDictionaryOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DictionaryCloneResult, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_dictionary ( proj_key , body , ** kwargs ) \u00b6 create_project_dictionary # noqa: E501 Create an empty dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_dictionary(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateDictionaryOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Dictionary If the method is called asynchronously, returns the request thread. create_project_dictionary_collection ( proj_key , dict_key , body , ** kwargs ) \u00b6 create_project_dictionary_collection # noqa: E501 Create a collection in a dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_dictionary_collection(proj_key, dict_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param CreateCollectionInDictionaryOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. create_project_dictionary_collection_with_http_info ( proj_key , dict_key , body , ** kwargs ) \u00b6 create_project_dictionary_collection # noqa: E501 Create a collection in a dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_dictionary_collection_with_http_info(proj_key, dict_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param CreateCollectionInDictionaryOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. create_project_dictionary_delete_token ( proj_key , dict_key , ** kwargs ) \u00b6 create_project_dictionary_delete_token # noqa: E501 Get a token used to confirm the deletion of a dictionary. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_dictionary_delete_token(proj_key, dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: TokenResponse If the method is called asynchronously, returns the request thread. create_project_dictionary_delete_token_with_http_info ( proj_key , dict_key , ** kwargs ) \u00b6 create_project_dictionary_delete_token # noqa: E501 Get a token used to confirm the deletion of a dictionary. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_dictionary_delete_token_with_http_info(proj_key, dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(TokenResponse, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_dictionary_with_http_info ( proj_key , body , ** kwargs ) \u00b6 create_project_dictionary # noqa: E501 Create an empty dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_dictionary_with_http_info(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateDictionaryOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Dictionary, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. delete_project_dictionary ( proj_key , dict_key , confirmation_token , ** kwargs ) \u00b6 delete_project_dictionary # noqa: E501 Delete a single dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_dictionary(proj_key, dict_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str confirmation_token: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_dictionary_collection ( proj_key , dict_key , collection_name , ** kwargs ) \u00b6 delete_project_dictionary_collection # noqa: E501 Delete a single dictionary's collection # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_dictionary_collection(proj_key, dict_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str collection_name: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_dictionary_collection_with_http_info ( proj_key , dict_key , collection_name , ** kwargs ) \u00b6 delete_project_dictionary_collection # noqa: E501 Delete a single dictionary's collection # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_dictionary_collection_with_http_info(proj_key, dict_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str collection_name: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_dictionary_with_http_info ( proj_key , dict_key , confirmation_token , ** kwargs ) \u00b6 delete_project_dictionary # noqa: E501 Delete a single dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_dictionary_with_http_info(proj_key, dict_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str confirmation_token: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. export_project_dictionary_collection_data ( proj_key , dict_key , collection_name , ** kwargs ) \u00b6 export_project_dictionary_collection_data # noqa: E501 Export the contents of a dictionary's collection # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_project_dictionary_collection_data(proj_key, dict_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str collection_name: (required) :param str file_format: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: file If the method is called asynchronously, returns the request thread. export_project_dictionary_collection_data_with_http_info ( proj_key , dict_key , collection_name , ** kwargs ) \u00b6 export_project_dictionary_collection_data # noqa: E501 Export the contents of a dictionary's collection # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_project_dictionary_collection_data_with_http_info(proj_key, dict_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str collection_name: (required) :param str file_format: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(file, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. export_project_dictionary_data ( proj_key , dict_key , ** kwargs ) \u00b6 export_project_dictionary_data # noqa: E501 Export the contents of a dictionary. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_project_dictionary_data(proj_key, dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: file If the method is called asynchronously, returns the request thread. export_project_dictionary_data_with_http_info ( proj_key , dict_key , ** kwargs ) \u00b6 export_project_dictionary_data # noqa: E501 Export the contents of a dictionary. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.export_project_dictionary_data_with_http_info(proj_key, dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(file, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_dictionary ( proj_key , dict_key , ** kwargs ) \u00b6 get_project_dictionary # noqa: E501 Get a single dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_dictionary(proj_key, dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param bool include_collections: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Dictionary If the method is called asynchronously, returns the request thread. get_project_dictionary_collection_data ( proj_key , dict_key , collection_name , ** kwargs ) \u00b6 get_project_dictionary_collection_data # noqa: E501 Get a preview of the data in a dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_dictionary_collection_data(proj_key, dict_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str collection_name: (required) :param str after: :param int limit: :param str response_format: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: object If the method is called asynchronously, returns the request thread. get_project_dictionary_collection_data_with_http_info ( proj_key , dict_key , collection_name , ** kwargs ) \u00b6 get_project_dictionary_collection_data # noqa: E501 Get a preview of the data in a dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_dictionary_collection_data_with_http_info(proj_key, dict_key, collection_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str collection_name: (required) :param str after: :param int limit: :param str response_format: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(object, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_dictionary_with_http_info ( proj_key , dict_key , ** kwargs ) \u00b6 get_project_dictionary # noqa: E501 Get a single dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_dictionary_with_http_info(proj_key, dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param bool include_collections: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Dictionary, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_public_dictionary ( dict_key , ** kwargs ) \u00b6 get_public_dictionary # noqa: E501 Get a single dictionary that was made public # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_public_dictionary(dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dict_key: (required) :param bool include_collections: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Dictionary If the method is called asynchronously, returns the request thread. get_public_dictionary_with_http_info ( dict_key , ** kwargs ) \u00b6 get_public_dictionary # noqa: E501 Get a single dictionary that was made public # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_public_dictionary_with_http_info(dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dict_key: (required) :param bool include_collections: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Dictionary, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. import_project_dictionary_from_mongo ( proj_key , body , ** kwargs ) \u00b6 import_project_dictionary_from_mongo # noqa: E501 Create a dictionary from a mongo database # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.import_project_dictionary_from_mongo(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param DictionaryImportOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: DictionaryImportResult If the method is called asynchronously, returns the request thread. import_project_dictionary_from_mongo_with_http_info ( proj_key , body , ** kwargs ) \u00b6 import_project_dictionary_from_mongo # noqa: E501 Create a dictionary from a mongo database # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.import_project_dictionary_from_mongo_with_http_info(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param DictionaryImportOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(DictionaryImportResult, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_dictionaries ( proj_key , ** kwargs ) \u00b6 list_project_dictionaries # noqa: E501 List dictionaries for a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_dictionaries(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str query: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[Dictionary] If the method is called asynchronously, returns the request thread. list_project_dictionaries_with_http_info ( proj_key , ** kwargs ) \u00b6 list_project_dictionaries # noqa: E501 List dictionaries for a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_dictionaries_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str query: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[Dictionary], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_dictionary_collections ( proj_key , dict_key , ** kwargs ) \u00b6 list_project_dictionary_collections # noqa: E501 Get the collections of a dictionary. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_dictionary_collections(proj_key, dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DictionaryCollection] If the method is called asynchronously, returns the request thread. list_project_dictionary_collections_with_http_info ( proj_key , dict_key , ** kwargs ) \u00b6 list_project_dictionary_collections # noqa: E501 Get the collections of a dictionary. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_dictionary_collections_with_http_info(proj_key, dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DictionaryCollection], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_public_dictionaries ( ** kwargs ) \u00b6 list_public_dictionaries # noqa: E501 List public dictionaries # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_dictionaries(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str query: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[Dictionary] If the method is called asynchronously, returns the request thread. list_public_dictionaries_with_http_info ( ** kwargs ) \u00b6 list_public_dictionaries # noqa: E501 List public dictionaries # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_dictionaries_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str query: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[Dictionary], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_public_dictionary_collections ( dict_key , ** kwargs ) \u00b6 list_public_dictionary_collections # noqa: E501 Get the collections of a dictionary. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_dictionary_collections(dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dict_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DictionaryCollection] If the method is called asynchronously, returns the request thread. list_public_dictionary_collections_with_http_info ( dict_key , ** kwargs ) \u00b6 list_public_dictionary_collections # noqa: E501 Get the collections of a dictionary. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_dictionary_collections_with_http_info(dict_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dict_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DictionaryCollection], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. update_project_dictionary ( proj_key , dict_key , options , ** kwargs ) \u00b6 update_project_dictionary # noqa: E501 Update the metadata of a dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_dictionary(proj_key, dict_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param PatchDictionaryOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Dictionary If the method is called asynchronously, returns the request thread. update_project_dictionary_collection_data ( proj_key , dict_key , collection_name , body , ** kwargs ) \u00b6 update_project_dictionary_collection_data # noqa: E501 Update the data in a dictionary's collection # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_dictionary_collection_data(proj_key, dict_key, collection_name, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str collection_name: (required) :param list[DictionaryCollectionPatch] body: A subset of JSON Patch operation list. Only add , replace , and remove is supported. See http://jsonpatch.com/ for more details. (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_project_dictionary_collection_data_with_http_info ( proj_key , dict_key , collection_name , body , ** kwargs ) \u00b6 update_project_dictionary_collection_data # noqa: E501 Update the data in a dictionary's collection # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_dictionary_collection_data_with_http_info(proj_key, dict_key, collection_name, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str collection_name: (required) :param list[DictionaryCollectionPatch] body: A subset of JSON Patch operation list. Only add , replace , and remove is supported. See http://jsonpatch.com/ for more details. (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_project_dictionary_with_http_info ( proj_key , dict_key , options , ** kwargs ) \u00b6 update_project_dictionary # noqa: E501 Update the metadata of a dictionary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_dictionary_with_http_info(proj_key, dict_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param PatchDictionaryOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Dictionary, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. upload_project_dictionary_collection_data ( proj_key , dict_key , collection_name , file , ** kwargs ) \u00b6 upload_project_dictionary_collection_data # noqa: E501 Upload data to a dictionary collection. The collection will be created if it doesn't exist. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_dictionary_collection_data(proj_key, dict_key, collection_name, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str collection_name: (required) :param file file: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. upload_project_dictionary_collection_data_with_http_info ( proj_key , dict_key , collection_name , file , ** kwargs ) \u00b6 upload_project_dictionary_collection_data # noqa: E501 Upload data to a dictionary collection. The collection will be created if it doesn't exist. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_dictionary_collection_data_with_http_info(proj_key, dict_key, collection_name, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param str collection_name: (required) :param file file: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. upload_project_dictionary_data ( proj_key , dict_key , file , ** kwargs ) \u00b6 upload_project_dictionary_data # noqa: E501 Upload data to a dictionary. The collection name(s) will be inferred from the file name(s). # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_dictionary_data(proj_key, dict_key, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param file file: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. upload_project_dictionary_data_with_http_info ( proj_key , dict_key , file , ** kwargs ) \u00b6 upload_project_dictionary_data # noqa: E501 Upload data to a dictionary. The collection name(s) will be inferred from the file name(s). # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_dictionary_data_with_http_info(proj_key, dict_key, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str dict_key: (required) :param file file: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread.","title":"dictionaries_api"},{"location":"api-reference/#deepsearch.cps.apis.public.api.document_annotation_api","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DocumentAnnotationApi \u00b6 Bases: object Do not edit the class manually. annotate_document ( proj_key , body , ** kwargs ) \u00b6 annotate_document # noqa: E501 Run an annotator on a document # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.annotate_document(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param AnnotateDocumentRequest body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. annotate_document_with_http_info ( proj_key , body , ** kwargs ) \u00b6 annotate_document # noqa: E501 Run an annotator on a document # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.annotate_document_with_http_info(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param AnnotateDocumentRequest body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. delete_document_annotation_result ( proj_key , document_hash , ** kwargs ) \u00b6 delete_document_annotation_result # noqa: E501 Delete annotation results for a document # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_document_annotation_result(proj_key, document_hash, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str document_hash: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_document_annotation_result_with_http_info ( proj_key , document_hash , ** kwargs ) \u00b6 delete_document_annotation_result # noqa: E501 Delete annotation results for a document # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_document_annotation_result_with_http_info(proj_key, document_hash, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str document_hash: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. get_annotate_document_result ( proj_key , task_id , ** kwargs ) \u00b6 get_annotate_document_result # noqa: E501 Get the result of a previous document annotation # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_annotate_document_result(proj_key, task_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param float wait: Allow the response to be delayed for a few seconds to wait for the result, instead of doing client-side polling. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: InlineResponse2002 If the method is called asynchronously, returns the request thread. get_annotate_document_result_with_http_info ( proj_key , task_id , ** kwargs ) \u00b6 get_annotate_document_result # noqa: E501 Get the result of a previous document annotation # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_annotate_document_result_with_http_info(proj_key, task_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param float wait: Allow the response to be delayed for a few seconds to wait for the result, instead of doing client-side polling. :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(InlineResponse2002, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. report_inspected_document ( proj_key , body , ** kwargs ) \u00b6 report_inspected_document # noqa: E501 Submit a report on an inspected document # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.report_inspected_document(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param AnnotatedDocumentReport body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. report_inspected_document_with_http_info ( proj_key , body , ** kwargs ) \u00b6 report_inspected_document # noqa: E501 Submit a report on an inspected document # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.report_inspected_document_with_http_info(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param AnnotatedDocumentReport body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread.","title":"document_annotation_api"},{"location":"api-reference/#deepsearch.cps.apis.public.api.elastic_api","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ElasticApi \u00b6 Bases: object Do not edit the class manually. get_elastic_domains ( ** kwargs ) \u00b6 get_elastic_domains # noqa: E501 List system elastic domains. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_elastic_domains(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[str] If the method is called asynchronously, returns the request thread. get_elastic_domains_with_http_info ( ** kwargs ) \u00b6 get_elastic_domains # noqa: E501 List system elastic domains. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_elastic_domains_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[str], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_elastic_query_max_size ( ** kwargs ) \u00b6 get_elastic_query_max_size # noqa: E501 Get the system maximum workable elastic query size. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_elastic_query_max_size(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: InlineResponse200 If the method is called asynchronously, returns the request thread. get_elastic_query_max_size_with_http_info ( ** kwargs ) \u00b6 get_elastic_query_max_size # noqa: E501 Get the system maximum workable elastic query size. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_elastic_query_max_size_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(InlineResponse200, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_index_search_results ( elastic_instance , elastic_index , parameters , ** kwargs ) \u00b6 get_index_search_results # noqa: E501 List elastic index search results. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_index_search_results(elastic_instance, elastic_index, parameters, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str elastic_instance: (required) :param str elastic_index: (required) :param dict(str, object) parameters: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ElasticIndexSearchResults If the method is called asynchronously, returns the request thread. get_index_search_results_with_http_info ( elastic_instance , elastic_index , parameters , ** kwargs ) \u00b6 get_index_search_results # noqa: E501 List elastic index search results. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_index_search_results_with_http_info(elastic_instance, elastic_index, parameters, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str elastic_instance: (required) :param str elastic_index: (required) :param dict(str, object) parameters: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ElasticIndexSearchResults, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_kibana_saved_queries ( elastic_instance , elastic_index , ** kwargs ) \u00b6 get_kibana_saved_queries # noqa: E501 List Kibana saved queries. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_kibana_saved_queries(elastic_instance, elastic_index, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str elastic_instance: (required) :param str elastic_index: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[KibanaSavedQueriesResult] If the method is called asynchronously, returns the request thread. get_kibana_saved_queries_with_http_info ( elastic_instance , elastic_index , ** kwargs ) \u00b6 get_kibana_saved_queries # noqa: E501 List Kibana saved queries. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_kibana_saved_queries_with_http_info(elastic_instance, elastic_index, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str elastic_instance: (required) :param str elastic_index: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[KibanaSavedQueriesResult], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_indices_from_elastic_instance ( index_type , index_domain , ** kwargs ) \u00b6 list_indices_from_elastic_instance # noqa: E501 List of indices for elastic instance. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_indices_from_elastic_instance(index_type, index_domain, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str index_type: (required) :param str index_domain: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataCollection] If the method is called asynchronously, returns the request thread. list_indices_from_elastic_instance_with_http_info ( index_type , index_domain , ** kwargs ) \u00b6 list_indices_from_elastic_instance # noqa: E501 List of indices for elastic instance. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_indices_from_elastic_instance_with_http_info(index_type, index_domain, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str index_type: (required) :param str index_domain: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataCollection], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread.","title":"elastic_api"},{"location":"api-reference/#deepsearch.cps.apis.public.api.knowledge_graphs_api","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech KnowledgeGraphsApi \u00b6 Bases: object Do not edit the class manually. assemble_project_knowledge_graph_data_flow ( proj_key , bag_key , options , ** kwargs ) \u00b6 assemble_project_knowledge_graph_data_flow # noqa: E501 Assemble a data flow on a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.assemble_project_knowledge_graph_data_flow(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param AssembleDataFlowIntoKnowledgeGraphOptions1 options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectTask If the method is called asynchronously, returns the request thread. assemble_project_knowledge_graph_data_flow_with_http_info ( proj_key , bag_key , options , ** kwargs ) \u00b6 assemble_project_knowledge_graph_data_flow # noqa: E501 Assemble a data flow on a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.assemble_project_knowledge_graph_data_flow_with_http_info(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param AssembleDataFlowIntoKnowledgeGraphOptions1 options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. backend_assemble_project_kg_data_flow ( proj_key , bag_key , options , ** kwargs ) \u00b6 backend_assemble_project_kg_data_flow # noqa: E501 Assemble a data flow on a Knowledge Graph, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_assemble_project_kg_data_flow(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param AssembleDataFlowIntoKnowledgeGraphOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectTask If the method is called asynchronously, returns the request thread. backend_assemble_project_kg_data_flow_with_http_info ( proj_key , bag_key , options , ** kwargs ) \u00b6 backend_assemble_project_kg_data_flow # noqa: E501 Assemble a data flow on a Knowledge Graph, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_assemble_project_kg_data_flow_with_http_info(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param AssembleDataFlowIntoKnowledgeGraphOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. backend_create_project_kg ( proj_key , data , ** kwargs ) \u00b6 backend_create_project_kg # noqa: E501 Create new BAG, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_create_project_kg(proj_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateKnowledgeGraphOptions data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: BagBackendAware If the method is called asynchronously, returns the request thread. backend_create_project_kg_snapshot_from_data_flow_assembly ( proj_key , bag_key , body , ** kwargs ) \u00b6 backend_create_project_kg_snapshot_from_data_flow_assembly # noqa: E501 Create a snapshot of a Knowledge Graph from the last data flow assembly task, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_create_project_kg_snapshot_from_data_flow_assembly(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param InlineObject body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectTask If the method is called asynchronously, returns the request thread. backend_create_project_kg_snapshot_from_data_flow_assembly_with_http_info ( proj_key , bag_key , body , ** kwargs ) \u00b6 backend_create_project_kg_snapshot_from_data_flow_assembly # noqa: E501 Create a snapshot of a Knowledge Graph from the last data flow assembly task, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_create_project_kg_snapshot_from_data_flow_assembly_with_http_info(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param InlineObject body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. backend_create_project_kg_with_http_info ( proj_key , data , ** kwargs ) \u00b6 backend_create_project_kg # noqa: E501 Create new BAG, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_create_project_kg_with_http_info(proj_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateKnowledgeGraphOptions data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(BagBackendAware, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. backend_get_project_kg_status ( proj_key , bag_key , ** kwargs ) \u00b6 backend_get_project_kg_status # noqa: E501 Get the status of a Knowledge Graph, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_get_project_kg_status(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param bool details: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: BagStatusBackendAware If the method is called asynchronously, returns the request thread. backend_get_project_kg_status_with_http_info ( proj_key , bag_key , ** kwargs ) \u00b6 backend_get_project_kg_status # noqa: E501 Get the status of a Knowledge Graph, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_get_project_kg_status_with_http_info(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param bool details: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(BagStatusBackendAware, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. backend_list_project_kgs ( proj_key , ** kwargs ) \u00b6 backend_list_project_kgs # noqa: E501 List all bags in the project, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_list_project_kgs(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str term: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[BagBackendAware] If the method is called asynchronously, returns the request thread. backend_list_project_kgs_with_http_info ( proj_key , ** kwargs ) \u00b6 backend_list_project_kgs # noqa: E501 List all bags in the project, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_list_project_kgs_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str term: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[BagBackendAware], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. backend_update_project_kg_metadata ( proj_key , bag_key , data , ** kwargs ) \u00b6 backend_update_project_kg_metadata # noqa: E501 Update the metadata of a Knowledge graph, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_update_project_kg_metadata(proj_key, bag_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param PatchKnowledgeGraphOptions data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: BagBackendAware If the method is called asynchronously, returns the request thread. backend_update_project_kg_metadata_with_http_info ( proj_key , bag_key , data , ** kwargs ) \u00b6 backend_update_project_kg_metadata # noqa: E501 Update the metadata of a Knowledge graph, backend-aware # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.backend_update_project_kg_metadata_with_http_info(proj_key, bag_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param PatchKnowledgeGraphOptions data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(BagBackendAware, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_knowledge_graph ( proj_key , data , ** kwargs ) \u00b6 create_project_knowledge_graph # noqa: E501 Create new BAG # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph(proj_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateKnowledgeGraphOptions1 data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Bag If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_authentication_token ( proj_key , bag_key , ** kwargs ) \u00b6 create_project_knowledge_graph_authentication_token # noqa: E501 Get a token used to authenticate in the Erlenmeyer / KG APIs of a BAG. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_authentication_token(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: TokenResponse If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_authentication_token_with_http_info ( proj_key , bag_key , ** kwargs ) \u00b6 create_project_knowledge_graph_authentication_token # noqa: E501 Get a token used to authenticate in the Erlenmeyer / KG APIs of a BAG. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_authentication_token_with_http_info(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(TokenResponse, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_backup ( proj_key , bag_key , options , ** kwargs ) \u00b6 create_project_knowledge_graph_backup # noqa: E501 Back up a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_backup(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param BackupKnowledgeGraphOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_backup_with_http_info ( proj_key , bag_key , options , ** kwargs ) \u00b6 create_project_knowledge_graph_backup # noqa: E501 Back up a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_backup_with_http_info(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param BackupKnowledgeGraphOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_delete_token ( proj_key , bag_key , ** kwargs ) \u00b6 create_project_knowledge_graph_delete_token # noqa: E501 Get a token used to confirm the deletion of a BAG. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_delete_token(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: TokenResponse If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_delete_token_with_http_info ( proj_key , bag_key , ** kwargs ) \u00b6 create_project_knowledge_graph_delete_token # noqa: E501 Get a token used to confirm the deletion of a BAG. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_delete_token_with_http_info(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(TokenResponse, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_snapshot ( proj_key , bag_key , body , ** kwargs ) \u00b6 create_project_knowledge_graph_snapshot # noqa: E501 Create a snapshot of a Knowledge Graph, with its current state. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_snapshot(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param KnowledgeGraphSnapshotOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectTask If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_snapshot_from_data_flow_assembly ( proj_key , bag_key , body , ** kwargs ) \u00b6 create_project_knowledge_graph_snapshot_from_data_flow_assembly # noqa: E501 Create a snapshot of a Knowledge Graph from the last data flow assembly task. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_snapshot_from_data_flow_assembly(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param InlineObject2 body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectTask If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_snapshot_from_data_flow_assembly_with_http_info ( proj_key , bag_key , body , ** kwargs ) \u00b6 create_project_knowledge_graph_snapshot_from_data_flow_assembly # noqa: E501 Create a snapshot of a Knowledge Graph from the last data flow assembly task. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_snapshot_from_data_flow_assembly_with_http_info(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param InlineObject2 body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_snapshot_with_http_info ( proj_key , bag_key , body , ** kwargs ) \u00b6 create_project_knowledge_graph_snapshot # noqa: E501 Create a snapshot of a Knowledge Graph, with its current state. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_snapshot_with_http_info(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param KnowledgeGraphSnapshotOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create_project_knowledge_graph_with_http_info ( proj_key , data , ** kwargs ) \u00b6 create_project_knowledge_graph # noqa: E501 Create new BAG # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_knowledge_graph_with_http_info(proj_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateKnowledgeGraphOptions1 data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Bag, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. delete_project_knowledge_graph ( proj_key , bag_key , confirmation_token , ** kwargs ) \u00b6 delete_project_knowledge_graph # noqa: E501 Delete a BAG # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_knowledge_graph(proj_key, bag_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param str confirmation_token: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_knowledge_graph_snapshot ( proj_key , bag_key , execution_id , ** kwargs ) \u00b6 delete_project_knowledge_graph_snapshot # noqa: E501 Delete a snapshot resulting from an assembled data flow. The execution log itself is not deleted. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_knowledge_graph_snapshot(proj_key, bag_key, execution_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param str execution_id: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_knowledge_graph_snapshot_with_http_info ( proj_key , bag_key , execution_id , ** kwargs ) \u00b6 delete_project_knowledge_graph_snapshot # noqa: E501 Delete a snapshot resulting from an assembled data flow. The execution log itself is not deleted. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_knowledge_graph_snapshot_with_http_info(proj_key, bag_key, execution_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param str execution_id: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_knowledge_graph_with_http_info ( proj_key , bag_key , confirmation_token , ** kwargs ) \u00b6 delete_project_knowledge_graph # noqa: E501 Delete a BAG # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_knowledge_graph_with_http_info(proj_key, bag_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param str confirmation_token: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. get_project_knowledge_graph_authentication_callback ( proj_key , bag_key , bag_token , ** kwargs ) \u00b6 get_project_knowledge_graph_authentication_callback # noqa: E501 Final step of redirection for authentication on a BAG. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_knowledge_graph_authentication_callback(proj_key, bag_key, bag_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param str bag_token: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: KnowledgeGraphAuthenticationCallback If the method is called asynchronously, returns the request thread. get_project_knowledge_graph_authentication_callback_with_http_info ( proj_key , bag_key , bag_token , ** kwargs ) \u00b6 get_project_knowledge_graph_authentication_callback # noqa: E501 Final step of redirection for authentication on a BAG. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_knowledge_graph_authentication_callback_with_http_info(proj_key, bag_key, bag_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param str bag_token: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(KnowledgeGraphAuthenticationCallback, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_knowledge_graph_status ( proj_key , bag_key , ** kwargs ) \u00b6 get_project_knowledge_graph_status # noqa: E501 Get the status of a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_knowledge_graph_status(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param bool details: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: BagStatus If the method is called asynchronously, returns the request thread. get_project_knowledge_graph_status_with_http_info ( proj_key , bag_key , ** kwargs ) \u00b6 get_project_knowledge_graph_status # noqa: E501 Get the status of a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_knowledge_graph_status_with_http_info(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param bool details: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(BagStatus, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_knowledge_graph_usage_stats ( proj_key , bag_key , ** kwargs ) \u00b6 get_project_knowledge_graph_usage_stats # noqa: E501 Get the usage stats of a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_knowledge_graph_usage_stats(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: UsageStats If the method is called asynchronously, returns the request thread. get_project_knowledge_graph_usage_stats_with_http_info ( proj_key , bag_key , ** kwargs ) \u00b6 get_project_knowledge_graph_usage_stats # noqa: E501 Get the usage stats of a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_knowledge_graph_usage_stats_with_http_info(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(UsageStats, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_knowledge_graph_assemble_tasks ( proj_key , bag_key , ** kwargs ) \u00b6 list_project_knowledge_graph_assemble_tasks # noqa: E501 List assemble tasks for a Knowledge Graph. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_knowledge_graph_assemble_tasks(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param int limit: :param int skip: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataFlowAssembleIntoKnowledgeGraphTask] If the method is called asynchronously, returns the request thread. list_project_knowledge_graph_assemble_tasks_with_http_info ( proj_key , bag_key , ** kwargs ) \u00b6 list_project_knowledge_graph_assemble_tasks # noqa: E501 List assemble tasks for a Knowledge Graph. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_knowledge_graph_assemble_tasks_with_http_info(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param int limit: :param int skip: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataFlowAssembleIntoKnowledgeGraphTask], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_knowledge_graph_load_tasks ( proj_key , bag_key , ** kwargs ) \u00b6 list_project_knowledge_graph_load_tasks # noqa: E501 List load tasks for a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_knowledge_graph_load_tasks(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param int limit: :param int skip: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[DataFlowLoadIntoKnowledgeGraphTask] If the method is called asynchronously, returns the request thread. list_project_knowledge_graph_load_tasks_with_http_info ( proj_key , bag_key , ** kwargs ) \u00b6 list_project_knowledge_graph_load_tasks # noqa: E501 List load tasks for a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_knowledge_graph_load_tasks_with_http_info(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param int limit: :param int skip: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[DataFlowLoadIntoKnowledgeGraphTask], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_knowledge_graph_snapshots ( proj_key , bag_key , ** kwargs ) \u00b6 list_project_knowledge_graph_snapshots # noqa: E501 List snapshots for a knowledge graph from assembled data flows. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_knowledge_graph_snapshots(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[KgSnapshot] If the method is called asynchronously, returns the request thread. list_project_knowledge_graph_snapshots_with_http_info ( proj_key , bag_key , ** kwargs ) \u00b6 list_project_knowledge_graph_snapshots # noqa: E501 List snapshots for a knowledge graph from assembled data flows. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_knowledge_graph_snapshots_with_http_info(proj_key, bag_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[KgSnapshot], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_knowledge_graphs ( proj_key , ** kwargs ) \u00b6 list_project_knowledge_graphs # noqa: E501 List all bags in the project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_knowledge_graphs(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str term: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[Bag] If the method is called asynchronously, returns the request thread. list_project_knowledge_graphs_with_http_info ( proj_key , ** kwargs ) \u00b6 list_project_knowledge_graphs # noqa: E501 List all bags in the project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_knowledge_graphs_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str term: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[Bag], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_public_knowledge_graphs ( ** kwargs ) \u00b6 list_public_knowledge_graphs # noqa: E501 List all public BAGs # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_knowledge_graphs(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str term: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[Bag] If the method is called asynchronously, returns the request thread. list_public_knowledge_graphs_with_http_info ( ** kwargs ) \u00b6 list_public_knowledge_graphs # noqa: E501 List all public BAGs # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_knowledge_graphs_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str term: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[Bag], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. load_project_knowledge_graph_data_flow ( proj_key , bag_key , options , ** kwargs ) \u00b6 load_project_knowledge_graph_data_flow # noqa: E501 Load a data flow onto a Knowledge Graph. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_project_knowledge_graph_data_flow(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param LoadDataFlowIntoKnowledgeGraphOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectTask If the method is called asynchronously, returns the request thread. load_project_knowledge_graph_data_flow_with_http_info ( proj_key , bag_key , options , ** kwargs ) \u00b6 load_project_knowledge_graph_data_flow # noqa: E501 Load a data flow onto a Knowledge Graph. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_project_knowledge_graph_data_flow_with_http_info(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param LoadDataFlowIntoKnowledgeGraphOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. load_project_knowledge_graph_snapshot ( proj_key , bag_key , execution_id , ** kwargs ) \u00b6 load_project_knowledge_graph_snapshot # noqa: E501 Load a snapshot resulting from an assembled data flow # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_project_knowledge_graph_snapshot(proj_key, bag_key, execution_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param str execution_id: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. load_project_knowledge_graph_snapshot_with_http_info ( proj_key , bag_key , execution_id , ** kwargs ) \u00b6 load_project_knowledge_graph_snapshot # noqa: E501 Load a snapshot resulting from an assembled data flow # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.load_project_knowledge_graph_snapshot_with_http_info(proj_key, bag_key, execution_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param str execution_id: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. recreate_project_knowledge_graph_deployment ( proj_key , bag_key , body , ** kwargs ) \u00b6 recreate_project_knowledge_graph_deployment # noqa: E501 (Re)create the deployment for a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.recreate_project_knowledge_graph_deployment(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param KnowledgeGraphDeploymentRecreationOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. recreate_project_knowledge_graph_deployment_with_http_info ( proj_key , bag_key , body , ** kwargs ) \u00b6 recreate_project_knowledge_graph_deployment # noqa: E501 (Re)create the deployment for a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.recreate_project_knowledge_graph_deployment_with_http_info(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param KnowledgeGraphDeploymentRecreationOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. restore_project_knowledge_graph_backup ( proj_key , bag_key , options , ** kwargs ) \u00b6 restore_project_knowledge_graph_backup # noqa: E501 Restore a back up of a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.restore_project_knowledge_graph_backup(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param RestoreKnowledgeGraphBackupOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. restore_project_knowledge_graph_backup_with_http_info ( proj_key , bag_key , options , ** kwargs ) \u00b6 restore_project_knowledge_graph_backup # noqa: E501 Restore a back up of a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.restore_project_knowledge_graph_backup_with_http_info(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param RestoreKnowledgeGraphBackupOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. resume_project_knowledge_graph ( proj_key , bag_key , body , ** kwargs ) \u00b6 resume_project_knowledge_graph # noqa: E501 Resume a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.resume_project_knowledge_graph(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param ResumeKnowledgeGraphOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectTask If the method is called asynchronously, returns the request thread. resume_project_knowledge_graph_with_http_info ( proj_key , bag_key , body , ** kwargs ) \u00b6 resume_project_knowledge_graph # noqa: E501 Resume a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.resume_project_knowledge_graph_with_http_info(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param ResumeKnowledgeGraphOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. suspend_project_knowledge_graph ( proj_key , bag_key , options , ** kwargs ) \u00b6 suspend_project_knowledge_graph # noqa: E501 Suspend a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.suspend_project_knowledge_graph(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param SuspendKnowledgeGraphOptions options: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectTask If the method is called asynchronously, returns the request thread. suspend_project_knowledge_graph_with_http_info ( proj_key , bag_key , options , ** kwargs ) \u00b6 suspend_project_knowledge_graph # noqa: E501 Suspend a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.suspend_project_knowledge_graph_with_http_info(proj_key, bag_key, options, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param SuspendKnowledgeGraphOptions options: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. update_project_knowledge_graph_metadata ( proj_key , bag_key , data , ** kwargs ) \u00b6 update_project_knowledge_graph_metadata # noqa: E501 Update the metadata of a Knowledge graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_knowledge_graph_metadata(proj_key, bag_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param PatchKnowledgeGraphOptions1 data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Bag If the method is called asynchronously, returns the request thread. update_project_knowledge_graph_metadata_with_http_info ( proj_key , bag_key , data , ** kwargs ) \u00b6 update_project_knowledge_graph_metadata # noqa: E501 Update the metadata of a Knowledge graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_knowledge_graph_metadata_with_http_info(proj_key, bag_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param PatchKnowledgeGraphOptions1 data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Bag, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. upgrade_project_knowledge_graph_deployment ( proj_key , bag_key , body , ** kwargs ) \u00b6 upgrade_project_knowledge_graph_deployment # noqa: E501 Upgrade the deployment chart of a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upgrade_project_knowledge_graph_deployment(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param KnowledgeGraphChartUpgradeOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. upgrade_project_knowledge_graph_deployment_with_http_info ( proj_key , bag_key , body , ** kwargs ) \u00b6 upgrade_project_knowledge_graph_deployment # noqa: E501 Upgrade the deployment chart of a Knowledge Graph # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upgrade_project_knowledge_graph_deployment_with_http_info(proj_key, bag_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str bag_key: (required) :param KnowledgeGraphChartUpgradeOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread.","title":"knowledge_graphs_api"},{"location":"api-reference/#deepsearch.cps.apis.public.api.model_configurations_api","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ModelConfigurationsApi \u00b6 Bases: object Do not edit the class manually. create_project_model_config ( proj_key , body , ** kwargs ) \u00b6 create_project_model_config # noqa: E501 Create a Model Configuration # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_model_config(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateProjectModelConfigOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ModelConfiguration If the method is called asynchronously, returns the request thread. create_project_model_config_with_http_info ( proj_key , body , ** kwargs ) \u00b6 create_project_model_config # noqa: E501 Create a Model Configuration # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_model_config_with_http_info(proj_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param CreateProjectModelConfigOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ModelConfiguration, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. delete_project_model_config ( proj_key , model_config_key , ** kwargs ) \u00b6 delete_project_model_config # noqa: E501 Delete a single Model Configuration # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_model_config(proj_key, model_config_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str model_config_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_project_model_config_with_http_info ( proj_key , model_config_key , ** kwargs ) \u00b6 delete_project_model_config # noqa: E501 Delete a single Model Configuration # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_project_model_config_with_http_info(proj_key, model_config_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str model_config_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. get_project_models_with_supported_annotations ( proj_key , ** kwargs ) \u00b6 get_project_models_with_supported_annotations # noqa: E501 List models with the supported annotations for a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_models_with_supported_annotations(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[ModelConfiguration] If the method is called asynchronously, returns the request thread. get_project_models_with_supported_annotations_with_http_info ( proj_key , ** kwargs ) \u00b6 get_project_models_with_supported_annotations # noqa: E501 List models with the supported annotations for a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_models_with_supported_annotations_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[ModelConfiguration], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_model_configs ( proj_key , ** kwargs ) \u00b6 list_project_model_configs # noqa: E501 List Model Configurations for a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_model_configs(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[ModelConfiguration] If the method is called asynchronously, returns the request thread. list_project_model_configs_with_http_info ( proj_key , ** kwargs ) \u00b6 list_project_model_configs # noqa: E501 List Model Configurations for a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_model_configs_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[ModelConfiguration], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_public_model_configs ( ** kwargs ) \u00b6 list_public_model_configs # noqa: E501 List public Model Configurations # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_model_configs(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[ModelConfiguration] If the method is called asynchronously, returns the request thread. list_public_model_configs_with_http_info ( ** kwargs ) \u00b6 list_public_model_configs # noqa: E501 List public Model Configurations # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_public_model_configs_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[ModelConfiguration], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. read_project_model_config ( proj_key , model_config_key , ** kwargs ) \u00b6 read_project_model_config # noqa: E501 Get a single Model Configuration # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.read_project_model_config(proj_key, model_config_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str model_config_key: (required) :param bool include_collections: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ModelConfiguration If the method is called asynchronously, returns the request thread. read_project_model_config_with_http_info ( proj_key , model_config_key , ** kwargs ) \u00b6 read_project_model_config # noqa: E501 Get a single Model Configuration # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.read_project_model_config_with_http_info(proj_key, model_config_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str model_config_key: (required) :param bool include_collections: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ModelConfiguration, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. read_public_model_config ( model_config_key , ** kwargs ) \u00b6 read_public_model_config # noqa: E501 Get a single Model Configuration that was made public # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.read_public_model_config(model_config_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str model_config_key: (required) :param bool include_collections: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ModelConfiguration If the method is called asynchronously, returns the request thread. read_public_model_config_with_http_info ( model_config_key , ** kwargs ) \u00b6 read_public_model_config # noqa: E501 Get a single Model Configuration that was made public # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.read_public_model_config_with_http_info(model_config_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str model_config_key: (required) :param bool include_collections: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ModelConfiguration, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. update_project_model_config ( proj_key , model_config_key , body , ** kwargs ) \u00b6 update_project_model_config # noqa: E501 Update a single Model Configuration # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_model_config(proj_key, model_config_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str model_config_key: (required) :param UpdateProjectModelConfigOptions body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_project_model_config_with_http_info ( proj_key , model_config_key , body , ** kwargs ) \u00b6 update_project_model_config # noqa: E501 Update a single Model Configuration # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_model_config_with_http_info(proj_key, model_config_key, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str model_config_key: (required) :param UpdateProjectModelConfigOptions body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread.","title":"model_configurations_api"},{"location":"api-reference/#deepsearch.cps.apis.public.api.processing_model_api","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProcessingModelApi \u00b6 Bases: object Do not edit the class manually. create_data_flow_from_df_wizard ( body , ** kwargs ) \u00b6 create_data_flow_from_df_wizard # noqa: E501 Create a Data Flow from a list of CCS Collections and CPS Models. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_data_flow_from_df_wizard(body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param InlineObject1 body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProcessingModel If the method is called asynchronously, returns the request thread. create_data_flow_from_df_wizard_with_http_info ( body , ** kwargs ) \u00b6 create_data_flow_from_df_wizard # noqa: E501 Create a Data Flow from a list of CCS Collections and CPS Models. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_data_flow_from_df_wizard_with_http_info(body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param InlineObject1 body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProcessingModel, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_processing_models ( ** kwargs ) \u00b6 get_processing_models # noqa: E501 List the available processing models. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_processing_models(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: InlineResponse2001 If the method is called asynchronously, returns the request thread. get_processing_models_with_http_info ( ** kwargs ) \u00b6 get_processing_models # noqa: E501 List the available processing models. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_processing_models_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(InlineResponse2001, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread.","title":"processing_model_api"},{"location":"api-reference/#deepsearch.cps.apis.public.api.project_api","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectApi \u00b6 Bases: object Do not edit the class manually. get_project_default_values ( proj_key , ** kwargs ) \u00b6 get_project_default_values # noqa: E501 List project's default values # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_default_values(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectDefaultValues If the method is called asynchronously, returns the request thread. get_project_default_values_with_http_info ( proj_key , ** kwargs ) \u00b6 get_project_default_values # noqa: E501 List project's default values # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_default_values_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectDefaultValues, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. provision_project_packages ( proj_key , ** kwargs ) \u00b6 provision_project_packages # noqa: E501 Install packages on a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.provision_project_packages(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param ProjectPackageInstalationManifest body: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Task If the method is called asynchronously, returns the request thread. provision_project_packages_with_http_info ( proj_key , ** kwargs ) \u00b6 provision_project_packages # noqa: E501 Install packages on a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.provision_project_packages_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param ProjectPackageInstalationManifest body: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Task, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. update_project_default_values ( proj_key , default_values , ** kwargs ) \u00b6 update_project_default_values # noqa: E501 List project's default values # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_default_values(proj_key, default_values, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param ProjectDefaultValues default_values: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. update_project_default_values_with_http_info ( proj_key , default_values , ** kwargs ) \u00b6 update_project_default_values # noqa: E501 List project's default values # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.update_project_default_values_with_http_info(proj_key, default_values, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param ProjectDefaultValues default_values: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread.","title":"project_api"},{"location":"api-reference/#deepsearch.cps.apis.public.api.system_api","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemApi \u00b6 Bases: object Do not edit the class manually. delete_flavour ( flavour_name , ** kwargs ) \u00b6 delete_flavour # noqa: E501 Delete flavour from db # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_flavour(flavour_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str flavour_name: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_flavour_with_http_info ( flavour_name , ** kwargs ) \u00b6 delete_flavour # noqa: E501 Delete flavour from db # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_flavour_with_http_info(flavour_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str flavour_name: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. get_flavour ( flavour_name , ** kwargs ) \u00b6 get_flavour # noqa: E501 Get flavour from db # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_flavour(flavour_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str flavour_name: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: BagFlavourFullData If the method is called asynchronously, returns the request thread. get_flavour_with_http_info ( flavour_name , ** kwargs ) \u00b6 get_flavour # noqa: E501 Get flavour from db # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_flavour_with_http_info(flavour_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str flavour_name: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(BagFlavourFullData, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_flavours_default_quotas ( ** kwargs ) \u00b6 get_flavours_default_quotas # noqa: E501 Get flavours default values # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_flavours_default_quotas(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[BagFlavourDefaultQuota] If the method is called asynchronously, returns the request thread. get_flavours_default_quotas_with_http_info ( ** kwargs ) \u00b6 get_flavours_default_quotas # noqa: E501 Get flavours default values # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_flavours_default_quotas_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[BagFlavourDefaultQuota], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_flavour_total_kgs ( proj_key , flavour_name , ** kwargs ) \u00b6 get_project_flavour_total_kgs # noqa: E501 Gets kg total number by proj_key and flavour_key # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_flavour_total_kgs(proj_key, flavour_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str flavour_name: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectFlavourTotalKgs If the method is called asynchronously, returns the request thread. get_project_flavour_total_kgs_with_http_info ( proj_key , flavour_name , ** kwargs ) \u00b6 get_project_flavour_total_kgs # noqa: E501 Gets kg total number by proj_key and flavour_key # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_flavour_total_kgs_with_http_info(proj_key, flavour_name, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str flavour_name: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectFlavourTotalKgs, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_flavours_quota ( proj_key , ** kwargs ) \u00b6 get_project_flavours_quota # noqa: E501 Get project flavours quota # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_flavours_quota(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[FlavoursQuota] If the method is called asynchronously, returns the request thread. get_project_flavours_quota_with_http_info ( proj_key , ** kwargs ) \u00b6 get_project_flavours_quota # noqa: E501 Get project flavours quota # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_flavours_quota_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[FlavoursQuota], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_projects_flavours_quota ( ** kwargs ) \u00b6 get_projects_flavours_quota # noqa: E501 Get projects flavours quotas # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_projects_flavours_quota(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[ProjectsFlavoursQuota] If the method is called asynchronously, returns the request thread. get_projects_flavours_quota_with_http_info ( ** kwargs ) \u00b6 get_projects_flavours_quota # noqa: E501 Get projects flavours quotas # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_projects_flavours_quota_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[ProjectsFlavoursQuota], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_system_information ( ** kwargs ) \u00b6 get_system_information # noqa: E501 Get system info # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_system_information(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: SystemInfo If the method is called asynchronously, returns the request thread. get_system_information_with_http_info ( ** kwargs ) \u00b6 get_system_information # noqa: E501 Get system info # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_system_information_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(SystemInfo, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_system_modules_configuration ( ** kwargs ) \u00b6 get_system_modules_configuration # noqa: E501 Get modules configuration # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_system_modules_configuration(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: SystemModulesConfiguration If the method is called asynchronously, returns the request thread. get_system_modules_configuration_with_http_info ( ** kwargs ) \u00b6 get_system_modules_configuration # noqa: E501 Get modules configuration # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_system_modules_configuration_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(SystemModulesConfiguration, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_system_modules_tasks ( ** kwargs ) \u00b6 get_system_modules_tasks # noqa: E501 Get modules tasks # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_system_modules_tasks(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: SystemModulesTasks If the method is called asynchronously, returns the request thread. get_system_modules_tasks_with_http_info ( ** kwargs ) \u00b6 get_system_modules_tasks # noqa: E501 Get modules tasks # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_system_modules_tasks_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(SystemModulesTasks, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_version_report ( ** kwargs ) \u00b6 get_version_report # noqa: E501 Get deployment version report # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_version_report(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. get_version_report_with_http_info ( ** kwargs ) \u00b6 get_version_report # noqa: E501 Get deployment version report # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_version_report_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. list_all_flavours ( ** kwargs ) \u00b6 list_all_flavours # noqa: E501 Get all KG flavours storage on db # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_all_flavours(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[BagFlavourFullData] If the method is called asynchronously, returns the request thread. list_all_flavours_with_http_info ( ** kwargs ) \u00b6 list_all_flavours # noqa: E501 Get all KG flavours storage on db # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_all_flavours_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[BagFlavourFullData], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_flavours_by_project ( proj_key , ** kwargs ) \u00b6 list_flavours_by_project # noqa: E501 Get project assignment flavours # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_flavours_by_project(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectFlavours If the method is called asynchronously, returns the request thread. list_flavours_by_project_with_http_info ( proj_key , ** kwargs ) \u00b6 list_flavours_by_project # noqa: E501 Get project assignment flavours # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_flavours_by_project_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectFlavours, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_packages ( ** kwargs ) \u00b6 list_packages # noqa: E501 Get packages available in this CPS installation for installing in a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_packages(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[CpsPackage] If the method is called asynchronously, returns the request thread. list_packages_with_http_info ( ** kwargs ) \u00b6 list_packages # noqa: E501 Get packages available in this CPS installation for installing in a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_packages_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[CpsPackage], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_projects_flavours ( ** kwargs ) \u00b6 list_projects_flavours # noqa: E501 Get all projects and their flavours # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_projects_flavours(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[ProjectsFlavours] If the method is called asynchronously, returns the request thread. list_projects_flavours_with_http_info ( ** kwargs ) \u00b6 list_projects_flavours # noqa: E501 Get all projects and their flavours # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_projects_flavours_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[ProjectsFlavours], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_system_knowledge_graphs ( ** kwargs ) \u00b6 list_system_knowledge_graphs # noqa: E501 List all Knowledge Graphs in the system # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_system_knowledge_graphs(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: :param str term: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[KnowledgeGraphSystemInformation] If the method is called asynchronously, returns the request thread. list_system_knowledge_graphs_with_http_info ( ** kwargs ) \u00b6 list_system_knowledge_graphs # noqa: E501 List all Knowledge Graphs in the system # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_system_knowledge_graphs_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: :param str term: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[KnowledgeGraphSystemInformation], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. save_flavour ( new_flavour , body , ** kwargs ) \u00b6 save_flavour # noqa: E501 Save flavour on db # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_flavour(new_flavour, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param bool new_flavour: (required) :param BagFlavourFullData body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_flavour_with_http_info ( new_flavour , body , ** kwargs ) \u00b6 save_flavour # noqa: E501 Save flavour on db # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_flavour_with_http_info(new_flavour, body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param bool new_flavour: (required) :param BagFlavourFullData body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_flavours_default_quotas ( flavours , ** kwargs ) \u00b6 save_flavours_default_quotas # noqa: E501 Save flavours default quota # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_flavours_default_quotas(flavours, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[BagFlavourDefaultQuota] flavours: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[BagFlavourDefaultQuota] If the method is called asynchronously, returns the request thread. save_flavours_default_quotas_with_http_info ( flavours , ** kwargs ) \u00b6 save_flavours_default_quotas # noqa: E501 Save flavours default quota # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_flavours_default_quotas_with_http_info(flavours, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param list[BagFlavourDefaultQuota] flavours: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[BagFlavourDefaultQuota], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. save_project_flavours ( body , ** kwargs ) \u00b6 save_project_flavours # noqa: E501 Save project flavours assignment on db # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_project_flavours(body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param ProjectsFlavours body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_project_flavours_quota ( projects_flavours_quotas , ** kwargs ) \u00b6 save_project_flavours_quota # noqa: E501 Save project flavours quota # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_project_flavours_quota(projects_flavours_quotas, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param ProjectsFlavoursQuota projects_flavours_quotas: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_project_flavours_quota_with_http_info ( projects_flavours_quotas , ** kwargs ) \u00b6 save_project_flavours_quota # noqa: E501 Save project flavours quota # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_project_flavours_quota_with_http_info(projects_flavours_quotas, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param ProjectsFlavoursQuota projects_flavours_quotas: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. save_project_flavours_with_http_info ( body , ** kwargs ) \u00b6 save_project_flavours # noqa: E501 Save project flavours assignment on db # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.save_project_flavours_with_http_info(body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param ProjectsFlavours body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. system_get_all_dcs_admin ( ** kwargs ) \u00b6 system_get_all_dcs_admin # noqa: E501 Get all data catalogs (only dc_key) for admin use # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.system_get_all_dcs_admin(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[str] If the method is called asynchronously, returns the request thread. system_get_all_dcs_admin_with_http_info ( ** kwargs ) \u00b6 system_get_all_dcs_admin # noqa: E501 Get all data catalogs (only dc_key) for admin use # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.system_get_all_dcs_admin_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[str], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. system_get_all_kgs_admin ( ** kwargs ) \u00b6 system_get_all_kgs_admin # noqa: E501 Get all kgs (only bag_key) for admin use # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.system_get_all_kgs_admin(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[str] If the method is called asynchronously, returns the request thread. system_get_all_kgs_admin_with_http_info ( ** kwargs ) \u00b6 system_get_all_kgs_admin # noqa: E501 Get all kgs (only bag_key) for admin use # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.system_get_all_kgs_admin_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[str], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. system_get_cps_summary ( ** kwargs ) \u00b6 system_get_cps_summary # noqa: E501 Get cps summary data. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.system_get_cps_summary(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[InlineResponse2003] If the method is called asynchronously, returns the request thread. system_get_cps_summary_with_http_info ( ** kwargs ) \u00b6 system_get_cps_summary # noqa: E501 Get cps summary data. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.system_get_cps_summary_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[InlineResponse2003], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. system_get_dc_storage_summary_async ( dc_key , ** kwargs ) \u00b6 system_get_dc_storage_summary_async # noqa: E501 Get dc storage summary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.system_get_dc_storage_summary_async(dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dc_key: Data catalog key (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: StorageSummaryTask If the method is called asynchronously, returns the request thread. system_get_dc_storage_summary_async_with_http_info ( dc_key , ** kwargs ) \u00b6 system_get_dc_storage_summary_async # noqa: E501 Get dc storage summary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.system_get_dc_storage_summary_async_with_http_info(dc_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str dc_key: Data catalog key (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(StorageSummaryTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. system_get_kg_storage_summary_async ( kg_key , ** kwargs ) \u00b6 system_get_kg_storage_summary_async # noqa: E501 Get kg storage summary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.system_get_kg_storage_summary_async(kg_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str kg_key: Knowledge graph key (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: StorageSummaryTask If the method is called asynchronously, returns the request thread. system_get_kg_storage_summary_async_with_http_info ( kg_key , ** kwargs ) \u00b6 system_get_kg_storage_summary_async # noqa: E501 Get kg storage summary # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.system_get_kg_storage_summary_async_with_http_info(kg_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str kg_key: Knowledge graph key (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(StorageSummaryTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread.","title":"system_api"},{"location":"api-reference/#deepsearch.cps.apis.public.api.tasks_api","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TasksApi \u00b6 Bases: object Do not edit the class manually. abort_project_task ( proj_key , task_id , ** kwargs ) \u00b6 abort_project_task # noqa: E501 Abort a task. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.abort_project_task(proj_key, task_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. abort_project_task_with_http_info ( proj_key , task_id , ** kwargs ) \u00b6 abort_project_task # noqa: E501 Abort a task. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.abort_project_task_with_http_info(proj_key, task_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. get_project_celery_task ( proj_key , task_id , ** kwargs ) \u00b6 get_project_celery_task # noqa: E501 Get a celery task for a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_celery_task(proj_key, task_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: CeleryTaskPromise If the method is called asynchronously, returns the request thread. get_project_celery_task_with_http_info ( proj_key , task_id , ** kwargs ) \u00b6 get_project_celery_task # noqa: E501 Get a celery task for a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_celery_task_with_http_info(proj_key, task_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(CeleryTaskPromise, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_task ( proj_key , task_id , ** kwargs ) \u00b6 get_project_task # noqa: E501 Get a task for a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_task(proj_key, task_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ProjectTask If the method is called asynchronously, returns the request thread. get_project_task_with_http_info ( proj_key , task_id , ** kwargs ) \u00b6 get_project_task # noqa: E501 Get a task for a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_task_with_http_info(proj_key, task_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ProjectTask, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_failure_celery_tasks ( proj_key , task_id , ** kwargs ) \u00b6 list_failure_celery_tasks # noqa: E501 Get celery tasks that failed. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_failure_celery_tasks(proj_key, task_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[CeleryTask] If the method is called asynchronously, returns the request thread. list_failure_celery_tasks_with_http_info ( proj_key , task_id , ** kwargs ) \u00b6 list_failure_celery_tasks # noqa: E501 Get celery tasks that failed. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_failure_celery_tasks_with_http_info(proj_key, task_id, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_id: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[CeleryTask], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_tasks ( proj_key , ** kwargs ) \u00b6 list_project_tasks # noqa: E501 List tasks for a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_tasks(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_type: :param int limit: :param int skip: :param str sort_by: :param str sort_order: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[ProjectTask] If the method is called asynchronously, returns the request thread. list_project_tasks_with_http_info ( proj_key , ** kwargs ) \u00b6 list_project_tasks # noqa: E501 List tasks for a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_tasks_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str task_type: :param int limit: :param int skip: :param str sort_by: :param str sort_order: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[ProjectTask], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_system_celery_tasks ( ** kwargs ) \u00b6 list_system_celery_tasks # noqa: E501 Get the status of Celery tasks. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_system_celery_tasks(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: :param str project_task_id: :param float started_since: If set, return the tasks created at or after this timestamp. Otherwise, return the tasks created up to 60 minutes of the system's date, if project_task_id is not set. :param float task_status: :param int limit: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[CeleryTask1] If the method is called asynchronously, returns the request thread. list_system_celery_tasks_with_http_info ( ** kwargs ) \u00b6 list_system_celery_tasks # noqa: E501 Get the status of Celery tasks. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_system_celery_tasks_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: :param str project_task_id: :param float started_since: If set, return the tasks created at or after this timestamp. Otherwise, return the tasks created up to 60 minutes of the system's date, if project_task_id is not set. :param float task_status: :param int limit: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[CeleryTask1], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread.","title":"tasks_api"},{"location":"api-reference/#deepsearch.cps.apis.public.api.uploads_api","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech UploadsApi \u00b6 Bases: object Do not edit the class manually. create_project_scratch_file ( proj_key , filename , ** kwargs ) \u00b6 create_project_scratch_file # noqa: E501 Create file pointers for temporary storage # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_scratch_file(proj_key, filename, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str filename: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: TemporaryUploadFileResult If the method is called asynchronously, returns the request thread. create_project_scratch_file_with_http_info ( proj_key , filename , ** kwargs ) \u00b6 create_project_scratch_file # noqa: E501 Create file pointers for temporary storage # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_project_scratch_file_with_http_info(proj_key, filename, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str filename: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(TemporaryUploadFileResult, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_project_scratch_files ( proj_key , ** kwargs ) \u00b6 list_project_scratch_files # noqa: E501 Get temporary files uploaded to a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_scratch_files(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str scratch_ids: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[UploadedFile] If the method is called asynchronously, returns the request thread. list_project_scratch_files_with_http_info ( proj_key , ** kwargs ) \u00b6 list_project_scratch_files # noqa: E501 Get temporary files uploaded to a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_project_scratch_files_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param str scratch_ids: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[UploadedFile], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. upload_project_scratch_file ( proj_key , file , ** kwargs ) \u00b6 upload_project_scratch_file # noqa: E501 Upload a file to temporary storage # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_scratch_file(proj_key, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param file file: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: UploadedFileResult If the method is called asynchronously, returns the request thread. upload_project_scratch_file_with_http_info ( proj_key , file , ** kwargs ) \u00b6 upload_project_scratch_file # noqa: E501 Upload a file to temporary storage # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.upload_project_scratch_file_with_http_info(proj_key, file, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: (required) :param file file: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(UploadedFileResult, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread.","title":"uploads_api"},{"location":"api-reference/#deepsearch.cps.apis.public.api_client","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech","title":"api_client"},{"location":"api-reference/#deepsearch.cps.apis.public.api_client.ApiClient","text":"Bases: object Generic API client for OpenAPI client library builds. OpenAPI generic API client. This client handles the client- server communication, and is invariant across implementations. Specifics of the methods and models for each application are generated from the OpenAPI templates. NOTE: This class is auto generated by OpenAPI Generator. Ref: https://openapi-generator.tech Do not edit the class manually. :param configuration: .Configuration object for this client :param header_name: a header to pass when making calls to the API. :param header_value: a header value to pass when making calls to the API. :param cookie: a cookie to include in the header when making calls to the API :param pool_threads: The number of threads to use for async requests to the API. More threads means more concurrent API requests. __deserialize ( data , klass ) \u00b6 Deserializes dict, list, str into an object. :param data: dict, list or str. :param klass: class literal, or string of class name. :return: object. __deserialize_date ( string ) \u00b6 Deserializes string to date. :param string: str. :return: date. __deserialize_datetime ( string ) \u00b6 Deserializes string to datetime. The string should be in iso8601 datetime format. :param string: str. :return: datetime. __deserialize_file ( response ) \u00b6 Deserializes body to file Saves response body into a file in a temporary folder, using the filename from the Content-Disposition header if provided. :param response: RESTResponse. :return: file path. __deserialize_model ( data , klass ) \u00b6 Deserializes list or dict to model. :param data: dict, list. :param klass: class literal. :return: model object. __deserialize_object ( value ) \u00b6 Return an original value. :return: object. __deserialize_primitive ( data , klass ) \u00b6 Deserializes string to primitive type. :param data: str. :param klass: class literal. :return: int, long, float, str, bool. call_api ( resource_path , method , path_params = None , query_params = None , header_params = None , body = None , post_params = None , files = None , response_type = None , auth_settings = None , async_req = None , _return_http_data_only = None , collection_formats = None , _preload_content = True , _request_timeout = None , _host = None ) \u00b6 Makes the HTTP request (synchronous) and returns deserialized data. To make an async_req request, set the async_req parameter. :param resource_path: Path to method endpoint. :param method: Method to call. :param path_params: Path parameters in the url. :param query_params: Query parameters in the url. :param header_params: Header parameters to be placed in the request header. :param body: Request body. :param post_params dict: Request post form parameters, for application/x-www-form-urlencoded , multipart/form-data . :param auth_settings list: Auth Settings names for the request. :param response: Response data type. :param files dict: key -> filename, value -> filepath, for multipart/form-data . :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param collection_formats: dict of collection formats for path, query, header, and post parameters. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: If async_req parameter is True, the request will be called asynchronously. The method will return the request thread. If parameter async_req is False or missing, then the method will return the response directly. deserialize ( response , response_type ) \u00b6 Deserializes response into an object. :param response: RESTResponse object to be deserialized. :param response_type: class literal for deserialized object, or string of class name. :return: deserialized object. files_parameters ( files = None ) \u00b6 Builds form parameters. :param files: File parameters. :return: Form parameters with files. parameters_to_tuples ( params , collection_formats ) \u00b6 Get parameters as list of tuples, formatting collections. :param params: Parameters as dict or list of two-tuples :param dict collection_formats: Parameter collection formats :return: Parameters as list of tuples, collections formatted pool () property \u00b6 Create thread pool on first request avoids instantiating unused threadpool for blocking clients. request ( method , url , query_params = None , headers = None , post_params = None , body = None , _preload_content = True , _request_timeout = None ) \u00b6 Makes the HTTP request using RESTClient. sanitize_for_serialization ( obj ) \u00b6 Builds a JSON POST object. If obj is None, return None. If obj is str, int, long, float, bool, return directly. If obj is datetime.datetime, datetime.date convert to string in iso8601 format. If obj is list, sanitize each element in the list. If obj is dict, return the dict. If obj is OpenAPI model, return the properties dict. :param obj: The data to serialize. :return: The serialized form of data. select_header_accept ( accepts ) \u00b6 Returns Accept based on an array of accepts provided. :param accepts: List of headers. :return: Accept (e.g. application/json). select_header_content_type ( content_types ) \u00b6 Returns Content-Type based on an array of content_types provided. :param content_types: List of content-types. :return: Content-Type (e.g. application/json). update_params_for_auth ( headers , querys , auth_settings ) \u00b6 Updates header and query params based on authentication setting. :param headers: Header parameters dict to be updated. :param querys: Query parameters tuple list to be updated. :param auth_settings: Authentication setting identifiers list. user_agent () property writable \u00b6 User agent for this API client","title":"ApiClient"},{"location":"api-reference/#deepsearch.cps.apis.public.configuration","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech","title":"configuration"},{"location":"api-reference/#deepsearch.cps.apis.public.configuration.Configuration","text":"Bases: object This class is auto generated by OpenAPI Generator Do not edit the class manually. :param host: Base url :param api_key: Dict to store API key(s). Each entry in the dict specifies an API key. The dict key is the name of the security scheme in the OAS specification. The dict value is the API key secret. :param api_key_prefix: Dict to store API prefix (e.g. Bearer) The dict key is the name of the security scheme in the OAS specification. The dict value is an API key prefix when generating the auth data. :param username: Username for HTTP basic authentication :param password: Password for HTTP basic authentication :param discard_unknown_keys: Boolean value indicating whether to discard unknown properties. A server may send a response that includes additional properties that are not known by the client in the following scenarios: 1. The OpenAPI document is incomplete, i.e. it does not match the server implementation. 2. The client was generated using an older version of the OpenAPI document and the server has been upgraded since then. If a schema in the OpenAPI document defines the additionalProperties attribute, then all undeclared properties received by the server are injected into the additional properties map. In that case, there are undeclared properties, and nothing to discard. :Example: API Key Authentication Example. Given the following security scheme in the OpenAPI specification: components: securitySchemes: cookieAuth: # name for the security scheme type: apiKey in: cookie name: JSESSIONID # cookie name You can programmatically set the cookie: conf = deepsearch.cps.apis.public.Configuration( api_key={'cookieAuth': 'abc123'} api_key_prefix={'cookieAuth': 'JSESSIONID'} ) The following cookie will be added to the HTTP request: Cookie: JSESSIONID abc123 assert_hostname = None instance-attribute \u00b6 Set this to True/False to enable/disable SSL hostname verification. cert_file = None instance-attribute \u00b6 client certificate file connection_pool_maxsize = multiprocessing . cpu_count () * 5 instance-attribute \u00b6 urllib3 connection pool's maximum number of connections saved per pool. urllib3 uses 1 connection as default value, but this is not the best value when you are making a lot of possibly parallel requests to the same host, which is often the case here. cpu_count * 5 is used as default value to increase performance. host = host instance-attribute \u00b6 Default Base url key_file = None instance-attribute \u00b6 client key file logger = {} instance-attribute \u00b6 Logging Settings logger_file_handler = None instance-attribute \u00b6 Log file handler logger_stream_handler = None instance-attribute \u00b6 Log stream handler password = password instance-attribute \u00b6 Password for HTTP basic authentication proxy = None instance-attribute \u00b6 Proxy URL proxy_headers = None instance-attribute \u00b6 Proxy headers refresh_api_key_hook = None instance-attribute \u00b6 function hook to refresh API key if expired retries = None instance-attribute \u00b6 Adding retries to override urllib3 default value 3 safe_chars_for_path_param = '' instance-attribute \u00b6 Safe chars for path_param ssl_ca_cert = None instance-attribute \u00b6 Set this to customize the certificate file to verify the peer. temp_folder_path = None instance-attribute \u00b6 Temp file folder for downloading files username = username instance-attribute \u00b6 Username for HTTP basic authentication verify_ssl = True instance-attribute \u00b6 SSL/TLS verification Set this to false to skip verifying SSL certificate when calling API from https server. __init__ ( host = 'http://localhost/api/cps/public/v1' , api_key = None , api_key_prefix = None , username = None , password = None , discard_unknown_keys = False ) \u00b6 Constructor auth_settings () \u00b6 Gets Auth Settings dict for api client. :return: The Auth Settings information dict. debug () property writable \u00b6 Debug status :param value: The debug status, True or False. :type: bool get_api_key_with_prefix ( identifier ) \u00b6 Gets API key (with prefix if set). :param identifier: The identifier of apiKey. :return: The token for api key authentication. get_basic_auth_token () \u00b6 Gets HTTP basic authentication header (string). :return: The token for basic HTTP authentication. get_default_copy () classmethod \u00b6 Return new instance of configuration. This method returns newly created, based on default constructor, object of Configuration class or returns a copy of default configuration passed by the set_default method. :return: The configuration object. get_host_from_settings ( index , variables = None ) \u00b6 Gets host URL based on the index and variables :param index: array index of the host settings :param variables: hash of variable and the corresponding value :return: URL based on host settings get_host_settings () \u00b6 Gets an array of host settings :return: An array of host settings logger_file () property writable \u00b6 The logger file. If the logger_file is None, then add stream handler and remove file handler. Otherwise, add file handler and remove stream handler. :param value: The logger_file path. :type: str logger_format () property writable \u00b6 The logger format. The logger_formatter will be updated when sets logger_format. :param value: The format string. :type: str set_default ( default ) classmethod \u00b6 Set default instance of configuration. It stores default configuration, which can be returned by get_default_copy method. :param default: object of Configuration to_debug_report () \u00b6 Gets the essential information for debugging. :return: The report for debugging.","title":"Configuration"},{"location":"api-reference/#deepsearch.cps.apis.public.exceptions","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech","title":"exceptions"},{"location":"api-reference/#deepsearch.cps.apis.public.exceptions.ApiException","text":"Bases: OpenApiException __str__ () \u00b6 Custom error messages for exception","title":"ApiException"},{"location":"api-reference/#deepsearch.cps.apis.public.exceptions.ApiKeyError","text":"Bases: OpenApiException , KeyError __init__ ( msg , path_to_item = None ) \u00b6 Parameters: Name Type Description Default msg str the exception message required","title":"ApiKeyError"},{"location":"api-reference/#deepsearch.cps.apis.public.exceptions.ApiTypeError","text":"Bases: OpenApiException , TypeError __init__ ( msg , path_to_item = None , valid_classes = None , key_type = None ) \u00b6 Raises an exception for TypeErrors Parameters: Name Type Description Default msg str the exception message required Other Parameters: Name Type Description path_to_item list a list of keys an indices to get to the current_item None if unset valid_classes tuple the primitive classes that current item should be an instance of None if unset key_type bool False if our value is a value in a dict True if it is a key in a dict False if our item is an item in a list None if unset","title":"ApiTypeError"},{"location":"api-reference/#deepsearch.cps.apis.public.exceptions.ApiValueError","text":"Bases: OpenApiException , ValueError __init__ ( msg , path_to_item = None ) \u00b6 Parameters: Name Type Description Default msg str the exception message required","title":"ApiValueError"},{"location":"api-reference/#deepsearch.cps.apis.public.exceptions.OpenApiException","text":"Bases: Exception The base exception class for all OpenAPIExceptions","title":"OpenApiException"},{"location":"api-reference/#deepsearch.cps.apis.public.exceptions.render_path","text":"Returns a string representation of a path","title":"render_path()"},{"location":"api-reference/#deepsearch.cps.apis.public.models","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech","title":"models"},{"location":"api-reference/#deepsearch.cps.apis.public.models.annotate_document_request","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotateDocumentRequest \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( document = None , image_annotators = None , table_annotators = None , text_annotators = None , use_cache = True , local_vars_configuration = None ) \u00b6 AnnotateDocumentRequest - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint document () property writable \u00b6 Gets the document of this AnnotateDocumentRequest. # noqa: E501 :return: The document of this AnnotateDocumentRequest. # noqa: E501 :rtype: object image_annotators () property writable \u00b6 Gets the image_annotators of this AnnotateDocumentRequest. # noqa: E501 :return: The image_annotators of this AnnotateDocumentRequest. # noqa: E501 :rtype: list[AnnotatorParametersOrRef] table_annotators () property writable \u00b6 Gets the table_annotators of this AnnotateDocumentRequest. # noqa: E501 :return: The table_annotators of this AnnotateDocumentRequest. # noqa: E501 :rtype: list[AnnotatorParametersOrRef] text_annotators () property writable \u00b6 Gets the text_annotators of this AnnotateDocumentRequest. # noqa: E501 :return: The text_annotators of this AnnotateDocumentRequest. # noqa: E501 :rtype: list[AnnotatorParametersOrRef] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model use_cache () property writable \u00b6 Gets the use_cache of this AnnotateDocumentRequest. # noqa: E501 :return: The use_cache of this AnnotateDocumentRequest. # noqa: E501 :rtype: bool","title":"annotate_document_request"},{"location":"api-reference/#deepsearch.cps.apis.public.models.annotate_object_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotateObjectOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( input = None , parameters = None , local_vars_configuration = None ) \u00b6 AnnotateObjectOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint input () property writable \u00b6 Gets the input of this AnnotateObjectOptions. # noqa: E501 :return: The input of this AnnotateObjectOptions. # noqa: E501 :rtype: AnnotatorInput parameters () property writable \u00b6 Gets the parameters of this AnnotateObjectOptions. # noqa: E501 :return: The parameters of this AnnotateObjectOptions. # noqa: E501 :rtype: dict(str, object) to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"annotate_object_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.annotate_object_options1","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotateObjectOptions1 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( input = None , model_config_key = None , parameters = None , proj_key = None , public = None , local_vars_configuration = None ) \u00b6 AnnotateObjectOptions1 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint input () property writable \u00b6 Gets the input of this AnnotateObjectOptions1. # noqa: E501 :return: The input of this AnnotateObjectOptions1. # noqa: E501 :rtype: AnnotatorInput model_config_key () property writable \u00b6 Gets the model_config_key of this AnnotateObjectOptions1. # noqa: E501 :return: The model_config_key of this AnnotateObjectOptions1. # noqa: E501 :rtype: str parameters () property writable \u00b6 Gets the parameters of this AnnotateObjectOptions1. # noqa: E501 :return: The parameters of this AnnotateObjectOptions1. # noqa: E501 :rtype: dict(str, object) proj_key () property writable \u00b6 Gets the proj_key of this AnnotateObjectOptions1. # noqa: E501 :return: The proj_key of this AnnotateObjectOptions1. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this AnnotateObjectOptions1. # noqa: E501 :return: The public of this AnnotateObjectOptions1. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"annotate_object_options1"},{"location":"api-reference/#deepsearch.cps.apis.public.models.annotated_document_report","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatedDocumentReport \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( document = None , document_annotation_parameters = None , document_conversion_parameters = None , report = None , local_vars_configuration = None ) \u00b6 AnnotatedDocumentReport - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint document () property writable \u00b6 Gets the document of this AnnotatedDocumentReport. # noqa: E501 :return: The document of this AnnotatedDocumentReport. # noqa: E501 :rtype: ProjectProjKeyAnnotateDocumentReportDocument document_annotation_parameters () property writable \u00b6 Gets the document_annotation_parameters of this AnnotatedDocumentReport. # noqa: E501 :return: The document_annotation_parameters of this AnnotatedDocumentReport. # noqa: E501 :rtype: object document_conversion_parameters () property writable \u00b6 Gets the document_conversion_parameters of this AnnotatedDocumentReport. # noqa: E501 :return: The document_conversion_parameters of this AnnotatedDocumentReport. # noqa: E501 :rtype: object report () property writable \u00b6 Gets the report of this AnnotatedDocumentReport. # noqa: E501 :return: The report of this AnnotatedDocumentReport. # noqa: E501 :rtype: ProjectProjKeyAnnotateDocumentReportReport to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"annotated_document_report"},{"location":"api-reference/#deepsearch.cps.apis.public.models.annotated_image","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatedImage \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( entities = None , properties = None , relationships = None , text = None , local_vars_configuration = None ) \u00b6 AnnotatedImage - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint entities () property writable \u00b6 Gets the entities of this AnnotatedImage. # noqa: E501 :return: The entities of this AnnotatedImage. # noqa: E501 :rtype: dict(str, list[EntityAnnotation]) properties () property writable \u00b6 Gets the properties of this AnnotatedImage. # noqa: E501 :return: The properties of this AnnotatedImage. # noqa: E501 :rtype: object relationships () property writable \u00b6 Gets the relationships of this AnnotatedImage. # noqa: E501 :return: The relationships of this AnnotatedImage. # noqa: E501 :rtype: dict(str, list[object]) text () property writable \u00b6 Gets the text of this AnnotatedImage. # noqa: E501 :return: The text of this AnnotatedImage. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"annotated_image"},{"location":"api-reference/#deepsearch.cps.apis.public.models.annotated_object","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatedObject \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( image = None , table = None , text = None , local_vars_configuration = None ) \u00b6 AnnotatedObject - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint image () property writable \u00b6 Gets the image of this AnnotatedObject. # noqa: E501 :return: The image of this AnnotatedObject. # noqa: E501 :rtype: AnnotatedImage table () property writable \u00b6 Gets the table of this AnnotatedObject. # noqa: E501 :return: The table of this AnnotatedObject. # noqa: E501 :rtype: AnnotatedTable text () property writable \u00b6 Gets the text of this AnnotatedObject. # noqa: E501 :return: The text of this AnnotatedObject. # noqa: E501 :rtype: AnnotatedTextLines to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"annotated_object"},{"location":"api-reference/#deepsearch.cps.apis.public.models.annotated_object1","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatedObject1 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( image = None , table = None , text = None , local_vars_configuration = None ) \u00b6 AnnotatedObject1 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint image () property writable \u00b6 Gets the image of this AnnotatedObject1. # noqa: E501 :return: The image of this AnnotatedObject1. # noqa: E501 :rtype: AnnotatedImage table () property writable \u00b6 Gets the table of this AnnotatedObject1. # noqa: E501 :return: The table of this AnnotatedObject1. # noqa: E501 :rtype: AnnotatedTable text () property writable \u00b6 Gets the text of this AnnotatedObject1. # noqa: E501 :return: The text of this AnnotatedObject1. # noqa: E501 :rtype: AnnotatedTextLines to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"annotated_object1"},{"location":"api-reference/#deepsearch.cps.apis.public.models.annotated_table","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatedTable \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( entities = None , properties = None , relationships = None , text = None , local_vars_configuration = None ) \u00b6 AnnotatedTable - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint entities () property writable \u00b6 Gets the entities of this AnnotatedTable. # noqa: E501 :return: The entities of this AnnotatedTable. # noqa: E501 :rtype: dict(str, list[EntityAnnotation]) properties () property writable \u00b6 Gets the properties of this AnnotatedTable. # noqa: E501 :return: The properties of this AnnotatedTable. # noqa: E501 :rtype: object relationships () property writable \u00b6 Gets the relationships of this AnnotatedTable. # noqa: E501 :return: The relationships of this AnnotatedTable. # noqa: E501 :rtype: dict(str, list[object]) text () property writable \u00b6 Gets the text of this AnnotatedTable. # noqa: E501 :return: The text of this AnnotatedTable. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"annotated_table"},{"location":"api-reference/#deepsearch.cps.apis.public.models.annotated_text","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatedText \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( entities = None , properties = None , relationships = None , text = None , local_vars_configuration = None ) \u00b6 AnnotatedText - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint entities () property writable \u00b6 Gets the entities of this AnnotatedText. # noqa: E501 :return: The entities of this AnnotatedText. # noqa: E501 :rtype: dict(str, list[EntityAnnotation]) properties () property writable \u00b6 Gets the properties of this AnnotatedText. # noqa: E501 :return: The properties of this AnnotatedText. # noqa: E501 :rtype: object relationships () property writable \u00b6 Gets the relationships of this AnnotatedText. # noqa: E501 :return: The relationships of this AnnotatedText. # noqa: E501 :rtype: dict(str, list[object]) text () property writable \u00b6 Gets the text of this AnnotatedText. # noqa: E501 :return: The text of this AnnotatedText. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"annotated_text"},{"location":"api-reference/#deepsearch.cps.apis.public.models.annotated_text_lines","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatedTextLines \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( entities = None , properties = None , relationships = None , text = None , local_vars_configuration = None ) \u00b6 AnnotatedTextLines - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint entities () property writable \u00b6 Gets the entities of this AnnotatedTextLines. # noqa: E501 One item per line on the original text. # noqa: E501 :return: The entities of this AnnotatedTextLines. # noqa: E501 :rtype: list[dict(str, list[EntityAnnotation])] properties () property writable \u00b6 Gets the properties of this AnnotatedTextLines. # noqa: E501 One item per line on the original text. # noqa: E501 :return: The properties of this AnnotatedTextLines. # noqa: E501 :rtype: list[object] relationships () property writable \u00b6 Gets the relationships of this AnnotatedTextLines. # noqa: E501 One item per line on the original text. # noqa: E501 :return: The relationships of this AnnotatedTextLines. # noqa: E501 :rtype: list[dict(str, list[object])] text () property writable \u00b6 Gets the text of this AnnotatedTextLines. # noqa: E501 Input text after clean up. The annotation indexes will be based on this text and not the input text. # noqa: E501 :return: The text of this AnnotatedTextLines. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"annotated_text_lines"},{"location":"api-reference/#deepsearch.cps.apis.public.models.annotator_image_input","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatorImageInput \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( metadata = None , source = None , local_vars_configuration = None ) \u00b6 AnnotatorImageInput - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint metadata () property writable \u00b6 Gets the metadata of this AnnotatorImageInput. # noqa: E501 :return: The metadata of this AnnotatorImageInput. # noqa: E501 :rtype: ImageMetadata source () property writable \u00b6 Gets the source of this AnnotatorImageInput. # noqa: E501 :return: The source of this AnnotatorImageInput. # noqa: E501 :rtype: ImageSource to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"annotator_image_input"},{"location":"api-reference/#deepsearch.cps.apis.public.models.annotator_input","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatorInput \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( image = None , table = None , text = None , local_vars_configuration = None ) \u00b6 AnnotatorInput - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint image () property writable \u00b6 Gets the image of this AnnotatorInput. # noqa: E501 :return: The image of this AnnotatorInput. # noqa: E501 :rtype: AnnotatorImageInput table () property writable \u00b6 Gets the table of this AnnotatorInput. # noqa: E501 A table, specified as an array of arrays. Each outer array represents a row, and each item in the inner array represents the column. # noqa: E501 :return: The table of this AnnotatorInput. # noqa: E501 :rtype: list[list[object]] text () property writable \u00b6 Gets the text of this AnnotatorInput. # noqa: E501 :return: The text of this AnnotatorInput. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"annotator_input"},{"location":"api-reference/#deepsearch.cps.apis.public.models.annotator_metadata","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatorMetadata \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( author = None , description = None , name = None , url = None , version = None , local_vars_configuration = None ) \u00b6 AnnotatorMetadata - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint author () property writable \u00b6 Gets the author of this AnnotatorMetadata. # noqa: E501 :return: The author of this AnnotatorMetadata. # noqa: E501 :rtype: str description () property writable \u00b6 Gets the description of this AnnotatorMetadata. # noqa: E501 :return: The description of this AnnotatorMetadata. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this AnnotatorMetadata. # noqa: E501 :return: The name of this AnnotatorMetadata. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this AnnotatorMetadata. # noqa: E501 :return: The url of this AnnotatorMetadata. # noqa: E501 :rtype: str version () property writable \u00b6 Gets the version of this AnnotatorMetadata. # noqa: E501 :return: The version of this AnnotatorMetadata. # noqa: E501 :rtype: str","title":"annotator_metadata"},{"location":"api-reference/#deepsearch.cps.apis.public.models.annotator_parameters_or_ref","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatorParametersOrRef \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( model_config_key = None , proj_key = None , public = None , type = None , local_vars_configuration = None ) \u00b6 AnnotatorParametersOrRef - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint model_config_key () property writable \u00b6 Gets the model_config_key of this AnnotatorParametersOrRef. # noqa: E501 :return: The model_config_key of this AnnotatorParametersOrRef. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this AnnotatorParametersOrRef. # noqa: E501 :return: The proj_key of this AnnotatorParametersOrRef. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this AnnotatorParametersOrRef. # noqa: E501 :return: The public of this AnnotatorParametersOrRef. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this AnnotatorParametersOrRef. # noqa: E501 :return: The type of this AnnotatorParametersOrRef. # noqa: E501 :rtype: str","title":"annotator_parameters_or_ref"},{"location":"api-reference/#deepsearch.cps.apis.public.models.annotator_supported_annotations_parameters","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AnnotatorSupportedAnnotationsParameters \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( annotator = None , annotator_settings = None , local_vars_configuration = None ) \u00b6 AnnotatorSupportedAnnotationsParameters - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint annotator () property writable \u00b6 Gets the annotator of this AnnotatorSupportedAnnotationsParameters. # noqa: E501 :return: The annotator of this AnnotatorSupportedAnnotationsParameters. # noqa: E501 :rtype: str annotator_settings () property writable \u00b6 Gets the annotator_settings of this AnnotatorSupportedAnnotationsParameters. # noqa: E501 :return: The annotator_settings of this AnnotatorSupportedAnnotationsParameters. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"annotator_supported_annotations_parameters"},{"location":"api-reference/#deepsearch.cps.apis.public.models.assemble_data_flow_into_knowledge_graph_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AssembleDataFlowIntoKnowledgeGraphOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_flow = None , render = None , snapshot = None , local_vars_configuration = None ) \u00b6 AssembleDataFlowIntoKnowledgeGraphOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_flow () property writable \u00b6 Gets the data_flow of this AssembleDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :return: The data_flow of this AssembleDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :rtype: BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow render () property writable \u00b6 Gets the render of this AssembleDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :return: The render of this AssembleDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :rtype: BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender snapshot () property writable \u00b6 Gets the snapshot of this AssembleDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :return: The snapshot of this AssembleDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :rtype: TakeSnapshotSettingsBackendAware to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"assemble_data_flow_into_knowledge_graph_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.assemble_data_flow_into_knowledge_graph_options1","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech AssembleDataFlowIntoKnowledgeGraphOptions1 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_flow = None , render = None , snapshot = None , local_vars_configuration = None ) \u00b6 AssembleDataFlowIntoKnowledgeGraphOptions1 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_flow () property writable \u00b6 Gets the data_flow of this AssembleDataFlowIntoKnowledgeGraphOptions1. # noqa: E501 :return: The data_flow of this AssembleDataFlowIntoKnowledgeGraphOptions1. # noqa: E501 :rtype: BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow render () property writable \u00b6 Gets the render of this AssembleDataFlowIntoKnowledgeGraphOptions1. # noqa: E501 :return: The render of this AssembleDataFlowIntoKnowledgeGraphOptions1. # noqa: E501 :rtype: BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender snapshot () property writable \u00b6 Gets the snapshot of this AssembleDataFlowIntoKnowledgeGraphOptions1. # noqa: E501 :return: The snapshot of this AssembleDataFlowIntoKnowledgeGraphOptions1. # noqa: E501 :rtype: TakeSnapshotSettings to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"assemble_data_flow_into_knowledge_graph_options1"},{"location":"api-reference/#deepsearch.cps.apis.public.models.backend_flavour","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BackendFlavour \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( kg_amqp = None , kg_legacy_api = None , local_vars_configuration = None ) \u00b6 BackendFlavour - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint kg_amqp () property writable \u00b6 Gets the kg_amqp of this BackendFlavour. # noqa: E501 :return: The kg_amqp of this BackendFlavour. # noqa: E501 :rtype: str kg_legacy_api () property writable \u00b6 Gets the kg_legacy_api of this BackendFlavour. # noqa: E501 :return: The kg_legacy_api of this BackendFlavour. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"backend_flavour"},{"location":"api-reference/#deepsearch.cps.apis.public.models.backend_project_proj_key_bags_bag_key_tasks_assemble_dataflow_data_flow","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( df_tpl_key = None , proj_key = None , public = None , raw_data_flow = None , local_vars_configuration = None ) \u00b6 BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint df_tpl_key () property writable \u00b6 Gets the df_tpl_key of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 If set, the data flow with this key will be used. # noqa: E501 :return: The df_tpl_key of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 If set, allows for cross-project data flows to be used. # noqa: E501 :return: The proj_key of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 Must be set if the data flow template is public # noqa: E501 :return: The public of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :rtype: bool raw_data_flow () property writable \u00b6 Gets the raw_data_flow of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :return: The raw_data_flow of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :rtype: BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"backend_project_proj_key_bags_bag_key_tasks_assemble_dataflow_data_flow"},{"location":"api-reference/#deepsearch.cps.apis.public.models.backend_project_proj_key_bags_bag_key_tasks_assemble_dataflow_data_flow_raw_data_flow","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( template = None , variables = None , local_vars_configuration = None ) \u00b6 BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint template () property writable \u00b6 Gets the template of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow. # noqa: E501 Must be valid JSON # noqa: E501 :return: The template of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow. # noqa: E501 :return: The variables of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow. # noqa: E501 :rtype: object","title":"backend_project_proj_key_bags_bag_key_tasks_assemble_dataflow_data_flow_raw_data_flow"},{"location":"api-reference/#deepsearch.cps.apis.public.models.backend_project_proj_key_bags_bag_key_tasks_assemble_dataflow_render","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( variables = None , local_vars_configuration = None ) \u00b6 BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender. # noqa: E501 :return: The variables of this BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender. # noqa: E501 :rtype: dict(str, object)","title":"backend_project_proj_key_bags_bag_key_tasks_assemble_dataflow_render"},{"location":"api-reference/#deepsearch.cps.apis.public.models.backup_knowledge_graph_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BackupKnowledgeGraphOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( backup_s3 = True , coordinates = None , local_vars_configuration = None ) \u00b6 BackupKnowledgeGraphOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint backup_s3 () property writable \u00b6 Gets the backup_s3 of this BackupKnowledgeGraphOptions. # noqa: E501 :return: The backup_s3 of this BackupKnowledgeGraphOptions. # noqa: E501 :rtype: bool coordinates () property writable \u00b6 Gets the coordinates of this BackupKnowledgeGraphOptions. # noqa: E501 :return: The coordinates of this BackupKnowledgeGraphOptions. # noqa: E501 :rtype: S3CoordinatesWithBackupKey to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"backup_knowledge_graph_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.bag","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech Bag \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( svc_endpoint = None , bag_domain = None , bag_key = None , bag_url = None , flavour = None , name = None , proj_key = None , public = None , slug = None , timestamp = None , token = None , local_vars_configuration = None ) \u00b6 Bag - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bag_domain () property writable \u00b6 Gets the bag_domain of this Bag. # noqa: E501 :return: The bag_domain of this Bag. # noqa: E501 :rtype: str bag_key () property writable \u00b6 Gets the bag_key of this Bag. # noqa: E501 :return: The bag_key of this Bag. # noqa: E501 :rtype: str bag_url () property writable \u00b6 Gets the bag_url of this Bag. # noqa: E501 :return: The bag_url of this Bag. # noqa: E501 :rtype: str flavour () property writable \u00b6 Gets the flavour of this Bag. # noqa: E501 :return: The flavour of this Bag. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this Bag. # noqa: E501 :return: The name of this Bag. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this Bag. # noqa: E501 :return: The proj_key of this Bag. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this Bag. # noqa: E501 :return: The public of this Bag. # noqa: E501 :rtype: bool slug () property writable \u00b6 Gets the slug of this Bag. # noqa: E501 :return: The slug of this Bag. # noqa: E501 :rtype: str svc_endpoint () property writable \u00b6 Gets the svc_endpoint of this Bag. # noqa: E501 :return: The svc_endpoint of this Bag. # noqa: E501 :rtype: str timestamp () property writable \u00b6 Gets the timestamp of this Bag. # noqa: E501 :return: The timestamp of this Bag. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model token () property writable \u00b6 Gets the token of this Bag. # noqa: E501 :return: The token of this Bag. # noqa: E501 :rtype: str","title":"bag"},{"location":"api-reference/#deepsearch.cps.apis.public.models.bag_amqp_backend","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagAmqpBackend \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( flavour = None , local_vars_configuration = None ) \u00b6 BagAmqpBackend - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint flavour () property writable \u00b6 Gets the flavour of this BagAmqpBackend. # noqa: E501 :return: The flavour of this BagAmqpBackend. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"bag_amqp_backend"},{"location":"api-reference/#deepsearch.cps.apis.public.models.bag_backend_aware","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagBackendAware \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( backend = None , bag_key = None , description = None , last_coords_resolution = None , name = None , proj_key = None , public = None , slug = None , timestamp = None , local_vars_configuration = None ) \u00b6 BagBackendAware - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint backend () property writable \u00b6 Gets the backend of this BagBackendAware. # noqa: E501 :return: The backend of this BagBackendAware. # noqa: E501 :rtype: BagBackends bag_key () property writable \u00b6 Gets the bag_key of this BagBackendAware. # noqa: E501 :return: The bag_key of this BagBackendAware. # noqa: E501 :rtype: str description () property writable \u00b6 Gets the description of this BagBackendAware. # noqa: E501 :return: The description of this BagBackendAware. # noqa: E501 :rtype: str last_coords_resolution () property writable \u00b6 Gets the last_coords_resolution of this BagBackendAware. # noqa: E501 :return: The last_coords_resolution of this BagBackendAware. # noqa: E501 :rtype: float name () property writable \u00b6 Gets the name of this BagBackendAware. # noqa: E501 :return: The name of this BagBackendAware. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this BagBackendAware. # noqa: E501 :return: The proj_key of this BagBackendAware. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this BagBackendAware. # noqa: E501 :return: The public of this BagBackendAware. # noqa: E501 :rtype: bool slug () property writable \u00b6 Gets the slug of this BagBackendAware. # noqa: E501 :return: The slug of this BagBackendAware. # noqa: E501 :rtype: str timestamp () property writable \u00b6 Gets the timestamp of this BagBackendAware. # noqa: E501 :return: The timestamp of this BagBackendAware. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"bag_backend_aware"},{"location":"api-reference/#deepsearch.cps.apis.public.models.bag_backends","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagBackends \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( kg_amqp = None , kg_legacy_api = None , local_vars_configuration = None ) \u00b6 BagBackends - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint kg_amqp () property writable \u00b6 Gets the kg_amqp of this BagBackends. # noqa: E501 :return: The kg_amqp of this BagBackends. # noqa: E501 :rtype: BagAmqpBackend kg_legacy_api () property writable \u00b6 Gets the kg_legacy_api of this BagBackends. # noqa: E501 :return: The kg_legacy_api of this BagBackends. # noqa: E501 :rtype: BagKgLegacyApiBackend to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"bag_backends"},{"location":"api-reference/#deepsearch.cps.apis.public.models.bag_callback","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagCallback \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( callback_url = None , local_vars_configuration = None ) \u00b6 BagCallback - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint callback_url () property writable \u00b6 Gets the callback_url of this BagCallback. # noqa: E501 :return: The callback_url of this BagCallback. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"bag_callback"},{"location":"api-reference/#deepsearch.cps.apis.public.models.bag_component_status","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagComponentStatus \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( start_time = None , status = None , local_vars_configuration = None ) \u00b6 BagComponentStatus - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint start_time () property writable \u00b6 Gets the start_time of this BagComponentStatus. # noqa: E501 :return: The start_time of this BagComponentStatus. # noqa: E501 :rtype: float status () property writable \u00b6 Gets the status of this BagComponentStatus. # noqa: E501 :return: The status of this BagComponentStatus. # noqa: E501 :rtype: BagComponentStatusEnum to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"bag_component_status"},{"location":"api-reference/#deepsearch.cps.apis.public.models.bag_component_status_enum","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagComponentStatusEnum \u00b6 Bases: object Do not edit the class manually. allowable_values = [ LAUNCHING , READY , BUSY , SUSPENDED , SUSPENDING , ERROR , PROVISIONING , PROVISIONING_FAILED , UNKNOWN , CHECKING , PENDING_RESOURCES , IDLE ] class-attribute \u00b6 Attributes: Name Type Description openapi_types dict The key is attribute name and the value is attribute type. attribute_map dict The key is attribute name and the value is json key in definition. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( local_vars_configuration = None ) \u00b6 BagComponentStatusEnum - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"bag_component_status_enum"},{"location":"api-reference/#deepsearch.cps.apis.public.models.bag_flavour","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagFlavour \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , display_name = None , name = None , local_vars_configuration = None ) \u00b6 BagFlavour - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this BagFlavour. # noqa: E501 :return: The description of this BagFlavour. # noqa: E501 :rtype: str display_name () property writable \u00b6 Gets the display_name of this BagFlavour. # noqa: E501 :return: The display_name of this BagFlavour. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this BagFlavour. # noqa: E501 :return: The name of this BagFlavour. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"bag_flavour"},{"location":"api-reference/#deepsearch.cps.apis.public.models.bag_flavour_default_quota","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagFlavourDefaultQuota \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( default_quota = None , display_name = None , name = None , local_vars_configuration = None ) \u00b6 BagFlavourDefaultQuota - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint default_quota () property writable \u00b6 Gets the default_quota of this BagFlavourDefaultQuota. # noqa: E501 :return: The default_quota of this BagFlavourDefaultQuota. # noqa: E501 :rtype: float display_name () property writable \u00b6 Gets the display_name of this BagFlavourDefaultQuota. # noqa: E501 :return: The display_name of this BagFlavourDefaultQuota. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this BagFlavourDefaultQuota. # noqa: E501 :return: The name of this BagFlavourDefaultQuota. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"bag_flavour_default_quota"},{"location":"api-reference/#deepsearch.cps.apis.public.models.bag_flavour_full_data","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagFlavourFullData \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( backend = None , config = None , default_quota = None , description = None , display_name = None , is_from_deployment = None , name = None , order = None , project_specific = None , local_vars_configuration = None ) \u00b6 BagFlavourFullData - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint backend () property writable \u00b6 Gets the backend of this BagFlavourFullData. # noqa: E501 :return: The backend of this BagFlavourFullData. # noqa: E501 :rtype: str config () property writable \u00b6 Gets the config of this BagFlavourFullData. # noqa: E501 :return: The config of this BagFlavourFullData. # noqa: E501 :rtype: object default_quota () property writable \u00b6 Gets the default_quota of this BagFlavourFullData. # noqa: E501 :return: The default_quota of this BagFlavourFullData. # noqa: E501 :rtype: int description () property writable \u00b6 Gets the description of this BagFlavourFullData. # noqa: E501 :return: The description of this BagFlavourFullData. # noqa: E501 :rtype: str display_name () property writable \u00b6 Gets the display_name of this BagFlavourFullData. # noqa: E501 :return: The display_name of this BagFlavourFullData. # noqa: E501 :rtype: str is_from_deployment () property writable \u00b6 Gets the is_from_deployment of this BagFlavourFullData. # noqa: E501 :return: The is_from_deployment of this BagFlavourFullData. # noqa: E501 :rtype: bool name () property writable \u00b6 Gets the name of this BagFlavourFullData. # noqa: E501 :return: The name of this BagFlavourFullData. # noqa: E501 :rtype: str order () property writable \u00b6 Gets the order of this BagFlavourFullData. # noqa: E501 :return: The order of this BagFlavourFullData. # noqa: E501 :rtype: float project_specific () property writable \u00b6 Gets the project_specific of this BagFlavourFullData. # noqa: E501 :return: The project_specific of this BagFlavourFullData. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"bag_flavour_full_data"},{"location":"api-reference/#deepsearch.cps.apis.public.models.bag_kg_legacy_api_backend","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagKgLegacyApiBackend \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( svc_endpoint = None , bag_domain = None , bag_url = None , flavour = None , token = None , local_vars_configuration = None ) \u00b6 BagKgLegacyApiBackend - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bag_domain () property writable \u00b6 Gets the bag_domain of this BagKgLegacyApiBackend. # noqa: E501 :return: The bag_domain of this BagKgLegacyApiBackend. # noqa: E501 :rtype: str bag_url () property writable \u00b6 Gets the bag_url of this BagKgLegacyApiBackend. # noqa: E501 :return: The bag_url of this BagKgLegacyApiBackend. # noqa: E501 :rtype: str flavour () property writable \u00b6 Gets the flavour of this BagKgLegacyApiBackend. # noqa: E501 :return: The flavour of this BagKgLegacyApiBackend. # noqa: E501 :rtype: str svc_endpoint () property writable \u00b6 Gets the svc_endpoint of this BagKgLegacyApiBackend. # noqa: E501 :return: The svc_endpoint of this BagKgLegacyApiBackend. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model token () property writable \u00b6 Gets the token of this BagKgLegacyApiBackend. # noqa: E501 :return: The token of this BagKgLegacyApiBackend. # noqa: E501 :rtype: str","title":"bag_kg_legacy_api_backend"},{"location":"api-reference/#deepsearch.cps.apis.public.models.bag_status","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagStatus \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( components = None , status = None , local_vars_configuration = None ) \u00b6 BagStatus - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint components () property writable \u00b6 Gets the components of this BagStatus. # noqa: E501 :return: The components of this BagStatus. # noqa: E501 :rtype: BagStatusComponents status () property writable \u00b6 Gets the status of this BagStatus. # noqa: E501 :return: The status of this BagStatus. # noqa: E501 :rtype: BagComponentStatusEnum to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"bag_status"},{"location":"api-reference/#deepsearch.cps.apis.public.models.bag_status_backend_aware","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagStatusBackendAware \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( kg_amqp = None , kg_legacy_api = None , overall_status = None , local_vars_configuration = None ) \u00b6 BagStatusBackendAware - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint kg_amqp () property writable \u00b6 Gets the kg_amqp of this BagStatusBackendAware. # noqa: E501 :return: The kg_amqp of this BagStatusBackendAware. # noqa: E501 :rtype: BagStatusBackendAwareKgAmqp kg_legacy_api () property writable \u00b6 Gets the kg_legacy_api of this BagStatusBackendAware. # noqa: E501 :return: The kg_legacy_api of this BagStatusBackendAware. # noqa: E501 :rtype: BagStatus overall_status () property writable \u00b6 Gets the overall_status of this BagStatusBackendAware. # noqa: E501 :return: The overall_status of this BagStatusBackendAware. # noqa: E501 :rtype: BagComponentStatusEnum to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"bag_status_backend_aware"},{"location":"api-reference/#deepsearch.cps.apis.public.models.bag_status_backend_aware_kg_amqp","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagStatusBackendAwareKgAmqp \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( status = None , local_vars_configuration = None ) \u00b6 BagStatusBackendAwareKgAmqp - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint status () property writable \u00b6 Gets the status of this BagStatusBackendAwareKgAmqp. # noqa: E501 :return: The status of this BagStatusBackendAwareKgAmqp. # noqa: E501 :rtype: BagComponentStatusEnum to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"bag_status_backend_aware_kg_amqp"},{"location":"api-reference/#deepsearch.cps.apis.public.models.bag_status_components","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech BagStatusComponents \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( erlenmeyer_api = None , erlenmeyer_ui = None , kg = None , local_vars_configuration = None ) \u00b6 BagStatusComponents - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint erlenmeyer_api () property writable \u00b6 Gets the erlenmeyer_api of this BagStatusComponents. # noqa: E501 Status of the Erlenmeyer API for this Graph # noqa: E501 :return: The erlenmeyer_api of this BagStatusComponents. # noqa: E501 :rtype: BagComponentStatus erlenmeyer_ui () property writable \u00b6 Gets the erlenmeyer_ui of this BagStatusComponents. # noqa: E501 Status of the Erlenmeyer UI for this Graph # noqa: E501 :return: The erlenmeyer_ui of this BagStatusComponents. # noqa: E501 :rtype: BagComponentStatus kg () property writable \u00b6 Gets the kg of this BagStatusComponents. # noqa: E501 Status of the Knowledge Graph and its API # noqa: E501 :return: The kg of this BagStatusComponents. # noqa: E501 :rtype: BagComponentStatus to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"bag_status_components"},{"location":"api-reference/#deepsearch.cps.apis.public.models.catalog_reference","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CatalogReference \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collection_name = None , dc_key = None , proj_key = None , local_vars_configuration = None ) \u00b6 CatalogReference - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collection_name () property writable \u00b6 Gets the collection_name of this CatalogReference. # noqa: E501 :return: The collection_name of this CatalogReference. # noqa: E501 :rtype: str dc_key () property writable \u00b6 Gets the dc_key of this CatalogReference. # noqa: E501 :return: The dc_key of this CatalogReference. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this CatalogReference. # noqa: E501 :return: The proj_key of this CatalogReference. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"catalog_reference"},{"location":"api-reference/#deepsearch.cps.apis.public.models.ccs_collection_reference","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CcsCollectionReference \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collection_name = None , language = None , proj_key = None , local_vars_configuration = None ) \u00b6 CcsCollectionReference - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collection_name () property writable \u00b6 Gets the collection_name of this CcsCollectionReference. # noqa: E501 :return: The collection_name of this CcsCollectionReference. # noqa: E501 :rtype: str language () property writable \u00b6 Gets the language of this CcsCollectionReference. # noqa: E501 :return: The language of this CcsCollectionReference. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this CcsCollectionReference. # noqa: E501 :return: The proj_key of this CcsCollectionReference. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"ccs_collection_reference"},{"location":"api-reference/#deepsearch.cps.apis.public.models.ccs_task","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CcsTask \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( ccs_collection_name = None , ccs_project_key = None , task_id = None , local_vars_configuration = None ) \u00b6 CcsTask - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint ccs_collection_name () property writable \u00b6 Gets the ccs_collection_name of this CcsTask. # noqa: E501 :return: The ccs_collection_name of this CcsTask. # noqa: E501 :rtype: str ccs_project_key () property writable \u00b6 Gets the ccs_project_key of this CcsTask. # noqa: E501 :return: The ccs_project_key of this CcsTask. # noqa: E501 :rtype: str task_id () property writable \u00b6 Gets the task_id of this CcsTask. # noqa: E501 :return: The task_id of this CcsTask. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"ccs_task"},{"location":"api-reference/#deepsearch.cps.apis.public.models.celery_task","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CeleryTask \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( failures = None , proj_key = None , task_id = None , local_vars_configuration = None ) \u00b6 CeleryTask - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint failures () property writable \u00b6 Gets the failures of this CeleryTask. # noqa: E501 :return: The failures of this CeleryTask. # noqa: E501 :rtype: list[SystemCeleryTasksFailureFailures] proj_key () property writable \u00b6 Gets the proj_key of this CeleryTask. # noqa: E501 :return: The proj_key of this CeleryTask. # noqa: E501 :rtype: str task_id () property writable \u00b6 Gets the task_id of this CeleryTask. # noqa: E501 :return: The task_id of this CeleryTask. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"celery_task"},{"location":"api-reference/#deepsearch.cps.apis.public.models.celery_task1","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CeleryTask1 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( completed_at = None , created_at = None , meta = None , metrics = None , proj_key = None , project_task_id = None , project_task_type = None , started_at = None , task_id = None , task_status = None , task_type = None , worker_name = None , local_vars_configuration = None ) \u00b6 CeleryTask1 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint completed_at () property writable \u00b6 Gets the completed_at of this CeleryTask1. # noqa: E501 :return: The completed_at of this CeleryTask1. # noqa: E501 :rtype: float created_at () property writable \u00b6 Gets the created_at of this CeleryTask1. # noqa: E501 :return: The created_at of this CeleryTask1. # noqa: E501 :rtype: float meta () property writable \u00b6 Gets the meta of this CeleryTask1. # noqa: E501 :return: The meta of this CeleryTask1. # noqa: E501 :rtype: dict(str, object) metrics () property writable \u00b6 Gets the metrics of this CeleryTask1. # noqa: E501 :return: The metrics of this CeleryTask1. # noqa: E501 :rtype: object proj_key () property writable \u00b6 Gets the proj_key of this CeleryTask1. # noqa: E501 :return: The proj_key of this CeleryTask1. # noqa: E501 :rtype: str project_task_id () property writable \u00b6 Gets the project_task_id of this CeleryTask1. # noqa: E501 :return: The project_task_id of this CeleryTask1. # noqa: E501 :rtype: str project_task_type () property writable \u00b6 Gets the project_task_type of this CeleryTask1. # noqa: E501 :return: The project_task_type of this CeleryTask1. # noqa: E501 :rtype: str started_at () property writable \u00b6 Gets the started_at of this CeleryTask1. # noqa: E501 :return: The started_at of this CeleryTask1. # noqa: E501 :rtype: float task_id () property writable \u00b6 Gets the task_id of this CeleryTask1. # noqa: E501 :return: The task_id of this CeleryTask1. # noqa: E501 :rtype: str task_status () property writable \u00b6 Gets the task_status of this CeleryTask1. # noqa: E501 :return: The task_status of this CeleryTask1. # noqa: E501 :rtype: str task_type () property writable \u00b6 Gets the task_type of this CeleryTask1. # noqa: E501 :return: The task_type of this CeleryTask1. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model worker_name () property writable \u00b6 Gets the worker_name of this CeleryTask1. # noqa: E501 :return: The worker_name of this CeleryTask1. # noqa: E501 :rtype: str","title":"celery_task1"},{"location":"api-reference/#deepsearch.cps.apis.public.models.celery_task_promise","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CeleryTaskPromise \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( result = None , task_id = None , task_status = None , local_vars_configuration = None ) \u00b6 CeleryTaskPromise - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint result () property writable \u00b6 Gets the result of this CeleryTaskPromise. # noqa: E501 :return: The result of this CeleryTaskPromise. # noqa: E501 :rtype: object task_id () property writable \u00b6 Gets the task_id of this CeleryTaskPromise. # noqa: E501 :return: The task_id of this CeleryTaskPromise. # noqa: E501 :rtype: str task_status () property writable \u00b6 Gets the task_status of this CeleryTaskPromise. # noqa: E501 :return: The task_status of this CeleryTaskPromise. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"celery_task_promise"},{"location":"api-reference/#deepsearch.cps.apis.public.models.clone_data_catalog_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CloneDataCatalogOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collections = None , copy_s3 = True , description = None , name = None , public = None , local_vars_configuration = None ) \u00b6 CloneDataCatalogOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collections () property writable \u00b6 Gets the collections of this CloneDataCatalogOptions. # noqa: E501 :return: The collections of this CloneDataCatalogOptions. # noqa: E501 :rtype: list[str] copy_s3 () property writable \u00b6 Gets the copy_s3 of this CloneDataCatalogOptions. # noqa: E501 Should the catalog's S3 data also be copied? # noqa: E501 :return: The copy_s3 of this CloneDataCatalogOptions. # noqa: E501 :rtype: bool description () property writable \u00b6 Gets the description of this CloneDataCatalogOptions. # noqa: E501 :return: The description of this CloneDataCatalogOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this CloneDataCatalogOptions. # noqa: E501 :return: The name of this CloneDataCatalogOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this CloneDataCatalogOptions. # noqa: E501 :return: The public of this CloneDataCatalogOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"clone_data_catalog_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.clone_data_catalog_result","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CloneDataCatalogResult \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( clone_task = None , data_catalogue = None , local_vars_configuration = None ) \u00b6 CloneDataCatalogResult - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint clone_task () property writable \u00b6 Gets the clone_task of this CloneDataCatalogResult. # noqa: E501 :return: The clone_task of this CloneDataCatalogResult. # noqa: E501 :rtype: Task data_catalogue () property writable \u00b6 Gets the data_catalogue of this CloneDataCatalogResult. # noqa: E501 :return: The data_catalogue of this CloneDataCatalogResult. # noqa: E501 :rtype: DataCatalogue to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"clone_data_catalog_result"},{"location":"api-reference/#deepsearch.cps.apis.public.models.clone_dictionary_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CloneDictionaryOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collections = None , copy_s3 = True , description = None , name = None , public = None , local_vars_configuration = None ) \u00b6 CloneDictionaryOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collections () property writable \u00b6 Gets the collections of this CloneDictionaryOptions. # noqa: E501 :return: The collections of this CloneDictionaryOptions. # noqa: E501 :rtype: list[str] copy_s3 () property writable \u00b6 Gets the copy_s3 of this CloneDictionaryOptions. # noqa: E501 Should the dictionary's S3 data also be copied? # noqa: E501 :return: The copy_s3 of this CloneDictionaryOptions. # noqa: E501 :rtype: bool description () property writable \u00b6 Gets the description of this CloneDictionaryOptions. # noqa: E501 :return: The description of this CloneDictionaryOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this CloneDictionaryOptions. # noqa: E501 :return: The name of this CloneDictionaryOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this CloneDictionaryOptions. # noqa: E501 :return: The public of this CloneDictionaryOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"clone_dictionary_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.clone_public_data_catalog_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ClonePublicDataCatalogOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collections = None , copy_s3 = True , description = None , name = None , proj_key = None , public = None , local_vars_configuration = None ) \u00b6 ClonePublicDataCatalogOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collections () property writable \u00b6 Gets the collections of this ClonePublicDataCatalogOptions. # noqa: E501 :return: The collections of this ClonePublicDataCatalogOptions. # noqa: E501 :rtype: list[str] copy_s3 () property writable \u00b6 Gets the copy_s3 of this ClonePublicDataCatalogOptions. # noqa: E501 Should the catalog's S3 data also be copied? # noqa: E501 :return: The copy_s3 of this ClonePublicDataCatalogOptions. # noqa: E501 :rtype: bool description () property writable \u00b6 Gets the description of this ClonePublicDataCatalogOptions. # noqa: E501 :return: The description of this ClonePublicDataCatalogOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ClonePublicDataCatalogOptions. # noqa: E501 :return: The name of this ClonePublicDataCatalogOptions. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ClonePublicDataCatalogOptions. # noqa: E501 The project key of the project to store the resulting data catalogue # noqa: E501 :return: The proj_key of this ClonePublicDataCatalogOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this ClonePublicDataCatalogOptions. # noqa: E501 :return: The public of this ClonePublicDataCatalogOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"clone_public_data_catalog_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.clone_public_dictionary_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ClonePublicDictionaryOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collections = None , copy_s3 = True , description = None , name = None , proj_key = None , public = None , local_vars_configuration = None ) \u00b6 ClonePublicDictionaryOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collections () property writable \u00b6 Gets the collections of this ClonePublicDictionaryOptions. # noqa: E501 :return: The collections of this ClonePublicDictionaryOptions. # noqa: E501 :rtype: list[str] copy_s3 () property writable \u00b6 Gets the copy_s3 of this ClonePublicDictionaryOptions. # noqa: E501 Should the dictionary's S3 data also be copied? # noqa: E501 :return: The copy_s3 of this ClonePublicDictionaryOptions. # noqa: E501 :rtype: bool description () property writable \u00b6 Gets the description of this ClonePublicDictionaryOptions. # noqa: E501 :return: The description of this ClonePublicDictionaryOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ClonePublicDictionaryOptions. # noqa: E501 :return: The name of this ClonePublicDictionaryOptions. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ClonePublicDictionaryOptions. # noqa: E501 The project key of the project to store the resulting dictionary # noqa: E501 :return: The proj_key of this ClonePublicDictionaryOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this ClonePublicDictionaryOptions. # noqa: E501 :return: The public of this ClonePublicDictionaryOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"clone_public_dictionary_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.collection_list_coordinates","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CollectionListCoordinates \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collections = None , local_vars_configuration = None ) \u00b6 CollectionListCoordinates - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collections () property writable \u00b6 Gets the collections of this CollectionListCoordinates. # noqa: E501 :return: The collections of this CollectionListCoordinates. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"collection_list_coordinates"},{"location":"api-reference/#deepsearch.cps.apis.public.models.cps_model_reference","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CpsModelReference \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( model_config_key = None , proj_key = None , local_vars_configuration = None ) \u00b6 CpsModelReference - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint model_config_key () property writable \u00b6 Gets the model_config_key of this CpsModelReference. # noqa: E501 :return: The model_config_key of this CpsModelReference. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this CpsModelReference. # noqa: E501 :return: The proj_key of this CpsModelReference. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"cps_model_reference"},{"location":"api-reference/#deepsearch.cps.apis.public.models.cps_package","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CpsPackage \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( dependencies = None , description = None , name = None , package_id = None , type = None , local_vars_configuration = None ) \u00b6 CpsPackage - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint dependencies () property writable \u00b6 Gets the dependencies of this CpsPackage. # noqa: E501 :return: The dependencies of this CpsPackage. # noqa: E501 :rtype: list[str] description () property writable \u00b6 Gets the description of this CpsPackage. # noqa: E501 :return: The description of this CpsPackage. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this CpsPackage. # noqa: E501 :return: The name of this CpsPackage. # noqa: E501 :rtype: str package_id () property writable \u00b6 Gets the package_id of this CpsPackage. # noqa: E501 :return: The package_id of this CpsPackage. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this CpsPackage. # noqa: E501 :return: The type of this CpsPackage. # noqa: E501 :rtype: str","title":"cps_package"},{"location":"api-reference/#deepsearch.cps.apis.public.models.create_collection_in_dictionary_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CreateCollectionInDictionaryOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collection_name = None , local_vars_configuration = None ) \u00b6 CreateCollectionInDictionaryOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collection_name () property writable \u00b6 Gets the collection_name of this CreateCollectionInDictionaryOptions. # noqa: E501 :return: The collection_name of this CreateCollectionInDictionaryOptions. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"create_collection_in_dictionary_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.create_data_catalog_collection_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CreateDataCatalogCollectionOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collection_name = None , local_vars_configuration = None ) \u00b6 CreateDataCatalogCollectionOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collection_name () property writable \u00b6 Gets the collection_name of this CreateDataCatalogCollectionOptions. # noqa: E501 :return: The collection_name of this CreateDataCatalogCollectionOptions. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"create_data_catalog_collection_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.create_data_catalog_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CreateDataCatalogOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( category_schemas = None , collections_data_flows = None , description = None , name = None , public = None , topologydata_flows = None , local_vars_configuration = None ) \u00b6 CreateDataCatalogOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint category_schemas () property writable \u00b6 Gets the category_schemas of this CreateDataCatalogOptions. # noqa: E501 :return: The category_schemas of this CreateDataCatalogOptions. # noqa: E501 :rtype: list[DataCatalogCategorySchema] collections_data_flows () property writable \u00b6 Gets the collections_data_flows of this CreateDataCatalogOptions. # noqa: E501 :return: The collections_data_flows of this CreateDataCatalogOptions. # noqa: E501 :rtype: list[DataCatalogDataFlow] description () property writable \u00b6 Gets the description of this CreateDataCatalogOptions. # noqa: E501 :return: The description of this CreateDataCatalogOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this CreateDataCatalogOptions. # noqa: E501 :return: The name of this CreateDataCatalogOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this CreateDataCatalogOptions. # noqa: E501 :return: The public of this CreateDataCatalogOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model topologydata_flows () property writable \u00b6 Gets the topologydata_flows of this CreateDataCatalogOptions. # noqa: E501 :return: The topologydata_flows of this CreateDataCatalogOptions. # noqa: E501 :rtype: list[DataCatalogTopology]","title":"create_data_catalog_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.create_data_flow_template_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CreateDataFlowTemplateOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , name = None , public = None , template = None , variables = None , local_vars_configuration = None ) \u00b6 CreateDataFlowTemplateOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this CreateDataFlowTemplateOptions. # noqa: E501 :return: The description of this CreateDataFlowTemplateOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this CreateDataFlowTemplateOptions. # noqa: E501 :return: The name of this CreateDataFlowTemplateOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this CreateDataFlowTemplateOptions. # noqa: E501 :return: The public of this CreateDataFlowTemplateOptions. # noqa: E501 :rtype: bool template () property writable \u00b6 Gets the template of this CreateDataFlowTemplateOptions. # noqa: E501 :return: The template of this CreateDataFlowTemplateOptions. # noqa: E501 :rtype: DataFlowTemplate to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this CreateDataFlowTemplateOptions. # noqa: E501 :return: The variables of this CreateDataFlowTemplateOptions. # noqa: E501 :rtype: dict(str, ProjectProjKeyKgcDataflowTemplatesVariables)","title":"create_data_flow_template_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.create_dictionary_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CreateDictionaryOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , name = None , public = None , local_vars_configuration = None ) \u00b6 CreateDictionaryOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this CreateDictionaryOptions. # noqa: E501 :return: The description of this CreateDictionaryOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this CreateDictionaryOptions. # noqa: E501 :return: The name of this CreateDictionaryOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this CreateDictionaryOptions. # noqa: E501 :return: The public of this CreateDictionaryOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"create_dictionary_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.create_knowledge_graph_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CreateKnowledgeGraphOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , flavours = None , name = None , public = None , local_vars_configuration = None ) \u00b6 CreateKnowledgeGraphOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this CreateKnowledgeGraphOptions. # noqa: E501 Description of the BAG # noqa: E501 :return: The description of this CreateKnowledgeGraphOptions. # noqa: E501 :rtype: str flavours () property writable \u00b6 Gets the flavours of this CreateKnowledgeGraphOptions. # noqa: E501 Flavours names of the bag. Determines its available resources # noqa: E501 :return: The flavours of this CreateKnowledgeGraphOptions. # noqa: E501 :rtype: list[str] name () property writable \u00b6 Gets the name of this CreateKnowledgeGraphOptions. # noqa: E501 Name of the BAG # noqa: E501 :return: The name of this CreateKnowledgeGraphOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this CreateKnowledgeGraphOptions. # noqa: E501 If true, the BAG will be publicly available # noqa: E501 :return: The public of this CreateKnowledgeGraphOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"create_knowledge_graph_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.create_knowledge_graph_options1","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CreateKnowledgeGraphOptions1 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , flavour = None , name = None , public = None , local_vars_configuration = None ) \u00b6 CreateKnowledgeGraphOptions1 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this CreateKnowledgeGraphOptions1. # noqa: E501 Description of the BAG # noqa: E501 :return: The description of this CreateKnowledgeGraphOptions1. # noqa: E501 :rtype: str flavour () property writable \u00b6 Gets the flavour of this CreateKnowledgeGraphOptions1. # noqa: E501 \"Flavour\" of the BAG, determines its available resources. # noqa: E501 :return: The flavour of this CreateKnowledgeGraphOptions1. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this CreateKnowledgeGraphOptions1. # noqa: E501 Name of the BAG # noqa: E501 :return: The name of this CreateKnowledgeGraphOptions1. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this CreateKnowledgeGraphOptions1. # noqa: E501 If true, the BAG will be publicly available # noqa: E501 :return: The public of this CreateKnowledgeGraphOptions1. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"create_knowledge_graph_options1"},{"location":"api-reference/#deepsearch.cps.apis.public.models.create_project_model_config_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech CreateProjectModelConfigOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( configurations = None , description = None , model_config_key = None , name = None , public = None , local_vars_configuration = None ) \u00b6 CreateProjectModelConfigOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint configurations () property writable \u00b6 Gets the configurations of this CreateProjectModelConfigOptions. # noqa: E501 :return: The configurations of this CreateProjectModelConfigOptions. # noqa: E501 :rtype: ProjectProjKeyModelConfigsConfigurations description () property writable \u00b6 Gets the description of this CreateProjectModelConfigOptions. # noqa: E501 :return: The description of this CreateProjectModelConfigOptions. # noqa: E501 :rtype: str model_config_key () property writable \u00b6 Gets the model_config_key of this CreateProjectModelConfigOptions. # noqa: E501 :return: The model_config_key of this CreateProjectModelConfigOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this CreateProjectModelConfigOptions. # noqa: E501 :return: The name of this CreateProjectModelConfigOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this CreateProjectModelConfigOptions. # noqa: E501 :return: The public of this CreateProjectModelConfigOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"create_project_model_config_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_catalog_category_schema","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogCategorySchema \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( key = None , schema = None , local_vars_configuration = None ) \u00b6 DataCatalogCategorySchema - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint key () property writable \u00b6 Gets the key of this DataCatalogCategorySchema. # noqa: E501 :return: The key of this DataCatalogCategorySchema. # noqa: E501 :rtype: str schema () property writable \u00b6 Gets the schema of this DataCatalogCategorySchema. # noqa: E501 :return: The schema of this DataCatalogCategorySchema. # noqa: E501 :rtype: dict(str, object) to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"data_catalog_category_schema"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_catalog_collection","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogCollection \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( item_count = None , name = None , local_vars_configuration = None ) \u00b6 DataCatalogCollection - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint item_count () property writable \u00b6 Gets the item_count of this DataCatalogCollection. # noqa: E501 :return: The item_count of this DataCatalogCollection. # noqa: E501 :rtype: int name () property writable \u00b6 Gets the name of this DataCatalogCollection. # noqa: E501 :return: The name of this DataCatalogCollection. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"data_catalog_collection"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_catalog_data_flow","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogDataFlow \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_flows = None , key = None , local_vars_configuration = None ) \u00b6 DataCatalogDataFlow - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_flows () property writable \u00b6 Gets the data_flows of this DataCatalogDataFlow. # noqa: E501 :return: The data_flows of this DataCatalogDataFlow. # noqa: E501 :rtype: list[object] key () property writable \u00b6 Gets the key of this DataCatalogDataFlow. # noqa: E501 :return: The key of this DataCatalogDataFlow. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"data_catalog_data_flow"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_catalog_import_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogImportOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( options = None , target = None , local_vars_configuration = None ) \u00b6 DataCatalogImportOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint options () property writable \u00b6 Gets the options of this DataCatalogImportOptions. # noqa: E501 :return: The options of this DataCatalogImportOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesFromMongoOptions target () property writable \u00b6 Gets the target of this DataCatalogImportOptions. # noqa: E501 :return: The target of this DataCatalogImportOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesFromMongoTarget to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"data_catalog_import_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_catalog_import_result","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogImportResult \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_catalogue = None , import_task = None , local_vars_configuration = None ) \u00b6 DataCatalogImportResult - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_catalogue () property writable \u00b6 Gets the data_catalogue of this DataCatalogImportResult. # noqa: E501 :return: The data_catalogue of this DataCatalogImportResult. # noqa: E501 :rtype: DataCatalogue import_task () property writable \u00b6 Gets the import_task of this DataCatalogImportResult. # noqa: E501 :return: The import_task of this DataCatalogImportResult. # noqa: E501 :rtype: Task to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"data_catalog_import_result"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_catalog_provenance_log","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogProvenanceLog \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collection_name = None , source = None , timestamp = None , user = None , local_vars_configuration = None ) \u00b6 DataCatalogProvenanceLog - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collection_name () property writable \u00b6 Gets the collection_name of this DataCatalogProvenanceLog. # noqa: E501 :return: The collection_name of this DataCatalogProvenanceLog. # noqa: E501 :rtype: str source () property writable \u00b6 Gets the source of this DataCatalogProvenanceLog. # noqa: E501 :return: The source of this DataCatalogProvenanceLog. # noqa: E501 :rtype: DataCatalogProvenanceLogSource timestamp () property writable \u00b6 Gets the timestamp of this DataCatalogProvenanceLog. # noqa: E501 :return: The timestamp of this DataCatalogProvenanceLog. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model user () property writable \u00b6 Gets the user of this DataCatalogProvenanceLog. # noqa: E501 :return: The user of this DataCatalogProvenanceLog. # noqa: E501 :rtype: DataCatalogProvenanceLogUser","title":"data_catalog_provenance_log"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_catalog_provenance_log_source","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogProvenanceLogSource \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( ccs = None , clone = None , elastic = None , file = None , mongo_s3 = None , url = None , local_vars_configuration = None ) \u00b6 DataCatalogProvenanceLogSource - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint ccs () property writable \u00b6 Gets the ccs of this DataCatalogProvenanceLogSource. # noqa: E501 :return: The ccs of this DataCatalogProvenanceLogSource. # noqa: E501 :rtype: object clone () property writable \u00b6 Gets the clone of this DataCatalogProvenanceLogSource. # noqa: E501 :return: The clone of this DataCatalogProvenanceLogSource. # noqa: E501 :rtype: object elastic () property writable \u00b6 Gets the elastic of this DataCatalogProvenanceLogSource. # noqa: E501 :return: The elastic of this DataCatalogProvenanceLogSource. # noqa: E501 :rtype: object file () property writable \u00b6 Gets the file of this DataCatalogProvenanceLogSource. # noqa: E501 :return: The file of this DataCatalogProvenanceLogSource. # noqa: E501 :rtype: object mongo_s3 () property writable \u00b6 Gets the mongo_s3 of this DataCatalogProvenanceLogSource. # noqa: E501 :return: The mongo_s3 of this DataCatalogProvenanceLogSource. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this DataCatalogProvenanceLogSource. # noqa: E501 :return: The url of this DataCatalogProvenanceLogSource. # noqa: E501 :rtype: object","title":"data_catalog_provenance_log_source"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_catalog_provenance_log_user","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogProvenanceLogUser \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( email = None , name = None , user_key = None , local_vars_configuration = None ) \u00b6 DataCatalogProvenanceLogUser - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint email () property writable \u00b6 Gets the email of this DataCatalogProvenanceLogUser. # noqa: E501 :return: The email of this DataCatalogProvenanceLogUser. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this DataCatalogProvenanceLogUser. # noqa: E501 :return: The name of this DataCatalogProvenanceLogUser. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model user_key () property writable \u00b6 Gets the user_key of this DataCatalogProvenanceLogUser. # noqa: E501 :return: The user_key of this DataCatalogProvenanceLogUser. # noqa: E501 :rtype: str","title":"data_catalog_provenance_log_user"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_catalog_schema","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogSchema \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , schema = None , local_vars_configuration = None ) \u00b6 DataCatalogSchema - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this DataCatalogSchema. # noqa: E501 :return: The name of this DataCatalogSchema. # noqa: E501 :rtype: str schema () property writable \u00b6 Gets the schema of this DataCatalogSchema. # noqa: E501 :return: The schema of this DataCatalogSchema. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"data_catalog_schema"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_catalog_topology","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogTopology \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( categories = None , edges = None , local_vars_configuration = None ) \u00b6 DataCatalogTopology - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint categories () property writable \u00b6 Gets the categories of this DataCatalogTopology. # noqa: E501 :return: The categories of this DataCatalogTopology. # noqa: E501 :rtype: list[DataCatalogTopologyNode] edges () property writable \u00b6 Gets the edges of this DataCatalogTopology. # noqa: E501 :return: The edges of this DataCatalogTopology. # noqa: E501 :rtype: list[DataCatalogTopologyEdge] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"data_catalog_topology"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_catalog_topology_edge","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogTopologyEdge \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , source = None , source_field = None , target = None , target_field = None , local_vars_configuration = None ) \u00b6 DataCatalogTopologyEdge - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this DataCatalogTopologyEdge. # noqa: E501 :return: The name of this DataCatalogTopologyEdge. # noqa: E501 :rtype: str source () property writable \u00b6 Gets the source of this DataCatalogTopologyEdge. # noqa: E501 :return: The source of this DataCatalogTopologyEdge. # noqa: E501 :rtype: list[str] source_field () property writable \u00b6 Gets the source_field of this DataCatalogTopologyEdge. # noqa: E501 :return: The source_field of this DataCatalogTopologyEdge. # noqa: E501 :rtype: str target () property writable \u00b6 Gets the target of this DataCatalogTopologyEdge. # noqa: E501 :return: The target of this DataCatalogTopologyEdge. # noqa: E501 :rtype: list[str] target_field () property writable \u00b6 Gets the target_field of this DataCatalogTopologyEdge. # noqa: E501 :return: The target_field of this DataCatalogTopologyEdge. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"data_catalog_topology_edge"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_catalog_topology_node","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogTopologyNode \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_fields = None , name = None , local_vars_configuration = None ) \u00b6 DataCatalogTopologyNode - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_fields () property writable \u00b6 Gets the data_fields of this DataCatalogTopologyNode. # noqa: E501 :return: The data_fields of this DataCatalogTopologyNode. # noqa: E501 :rtype: list[str] name () property writable \u00b6 Gets the name of this DataCatalogTopologyNode. # noqa: E501 :return: The name of this DataCatalogTopologyNode. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"data_catalog_topology_node"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_catalog_url_import_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogUrlImportOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( options = None , target = None , local_vars_configuration = None ) \u00b6 DataCatalogUrlImportOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint options () property writable \u00b6 Gets the options of this DataCatalogUrlImportOptions. # noqa: E501 :return: The options of this DataCatalogUrlImportOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesFromUrlOptions target () property writable \u00b6 Gets the target of this DataCatalogUrlImportOptions. # noqa: E501 :return: The target of this DataCatalogUrlImportOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesFromMongoTarget to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"data_catalog_url_import_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_catalogue","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCatalogue \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( category_schemas = None , collections = None , collections_data_flows = None , copy_of = None , created_at = None , created_by = None , dc_key = None , description = None , name = None , proj_key = None , provenance_logs = None , public = None , topology = None , local_vars_configuration = None ) \u00b6 DataCatalogue - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint category_schemas () property writable \u00b6 Gets the category_schemas of this DataCatalogue. # noqa: E501 :return: The category_schemas of this DataCatalogue. # noqa: E501 :rtype: list[DataCatalogCategorySchema] collections () property writable \u00b6 Gets the collections of this DataCatalogue. # noqa: E501 :return: The collections of this DataCatalogue. # noqa: E501 :rtype: list[DataCatalogCollection] collections_data_flows () property writable \u00b6 Gets the collections_data_flows of this DataCatalogue. # noqa: E501 :return: The collections_data_flows of this DataCatalogue. # noqa: E501 :rtype: list[DataCatalogDataFlow] copy_of () property writable \u00b6 Gets the copy_of of this DataCatalogue. # noqa: E501 :return: The copy_of of this DataCatalogue. # noqa: E501 :rtype: str created_at () property writable \u00b6 Gets the created_at of this DataCatalogue. # noqa: E501 :return: The created_at of this DataCatalogue. # noqa: E501 :rtype: float created_by () property writable \u00b6 Gets the created_by of this DataCatalogue. # noqa: E501 :return: The created_by of this DataCatalogue. # noqa: E501 :rtype: str dc_key () property writable \u00b6 Gets the dc_key of this DataCatalogue. # noqa: E501 :return: The dc_key of this DataCatalogue. # noqa: E501 :rtype: str description () property writable \u00b6 Gets the description of this DataCatalogue. # noqa: E501 :return: The description of this DataCatalogue. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this DataCatalogue. # noqa: E501 :return: The name of this DataCatalogue. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this DataCatalogue. # noqa: E501 :return: The proj_key of this DataCatalogue. # noqa: E501 :rtype: str provenance_logs () property writable \u00b6 Gets the provenance_logs of this DataCatalogue. # noqa: E501 :return: The provenance_logs of this DataCatalogue. # noqa: E501 :rtype: list[DataCatalogProvenanceLog] public () property writable \u00b6 Gets the public of this DataCatalogue. # noqa: E501 :return: The public of this DataCatalogue. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model topology () property writable \u00b6 Gets the topology of this DataCatalogue. # noqa: E501 :return: The topology of this DataCatalogue. # noqa: E501 :rtype: DataCatalogTopology","title":"data_catalogue"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_collection","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCollection \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( documents = None , health = None , metadata = None , name = None , source = None , status = None , local_vars_configuration = None ) \u00b6 DataCollection - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint documents () property writable \u00b6 Gets the documents of this DataCollection. # noqa: E501 :return: The documents of this DataCollection. # noqa: E501 :rtype: float health () property writable \u00b6 Gets the health of this DataCollection. # noqa: E501 :return: The health of this DataCollection. # noqa: E501 :rtype: str metadata () property writable \u00b6 Gets the metadata of this DataCollection. # noqa: E501 :return: The metadata of this DataCollection. # noqa: E501 :rtype: DataCollectionMetadata name () property writable \u00b6 Gets the name of this DataCollection. # noqa: E501 :return: The name of this DataCollection. # noqa: E501 :rtype: str source () property writable \u00b6 Gets the source of this DataCollection. # noqa: E501 :return: The source of this DataCollection. # noqa: E501 :rtype: DataCollectionSource status () property writable \u00b6 Gets the status of this DataCollection. # noqa: E501 :return: The status of this DataCollection. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"data_collection"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_collection_metadata","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCollectionMetadata \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( aliases = None , created = None , description = None , domain = None , source = None , storage = None , type = None , version = None , local_vars_configuration = None ) \u00b6 DataCollectionMetadata - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint aliases () property writable \u00b6 Gets the aliases of this DataCollectionMetadata. # noqa: E501 :return: The aliases of this DataCollectionMetadata. # noqa: E501 :rtype: list[str] created () property writable \u00b6 Gets the created of this DataCollectionMetadata. # noqa: E501 :return: The created of this DataCollectionMetadata. # noqa: E501 :rtype: str description () property writable \u00b6 Gets the description of this DataCollectionMetadata. # noqa: E501 :return: The description of this DataCollectionMetadata. # noqa: E501 :rtype: str domain () property writable \u00b6 Gets the domain of this DataCollectionMetadata. # noqa: E501 :return: The domain of this DataCollectionMetadata. # noqa: E501 :rtype: list[str] source () property writable \u00b6 Gets the source of this DataCollectionMetadata. # noqa: E501 :return: The source of this DataCollectionMetadata. # noqa: E501 :rtype: str storage () property writable \u00b6 Gets the storage of this DataCollectionMetadata. # noqa: E501 :return: The storage of this DataCollectionMetadata. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this DataCollectionMetadata. # noqa: E501 :return: The type of this DataCollectionMetadata. # noqa: E501 :rtype: str version () property writable \u00b6 Gets the version of this DataCollectionMetadata. # noqa: E501 :return: The version of this DataCollectionMetadata. # noqa: E501 :rtype: str","title":"data_collection_metadata"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_collection_source","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataCollectionSource \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( elastic_id = None , index_key = None , proj_key = None , local_vars_configuration = None ) \u00b6 DataCollectionSource - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint elastic_id () property writable \u00b6 Gets the elastic_id of this DataCollectionSource. # noqa: E501 :return: The elastic_id of this DataCollectionSource. # noqa: E501 :rtype: str index_key () property writable \u00b6 Gets the index_key of this DataCollectionSource. # noqa: E501 :return: The index_key of this DataCollectionSource. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this DataCollectionSource. # noqa: E501 :return: The proj_key of this DataCollectionSource. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"data_collection_source"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_flow","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlow \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( created_at = None , description = None , df_tpl_key = None , name = None , proj_key = None , public = None , template = None , updated_at = None , variables = None , local_vars_configuration = None ) \u00b6 DataFlow - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint created_at () property writable \u00b6 Gets the created_at of this DataFlow. # noqa: E501 :return: The created_at of this DataFlow. # noqa: E501 :rtype: float description () property writable \u00b6 Gets the description of this DataFlow. # noqa: E501 :return: The description of this DataFlow. # noqa: E501 :rtype: str df_tpl_key () property writable \u00b6 Gets the df_tpl_key of this DataFlow. # noqa: E501 :return: The df_tpl_key of this DataFlow. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this DataFlow. # noqa: E501 :return: The name of this DataFlow. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this DataFlow. # noqa: E501 :return: The proj_key of this DataFlow. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this DataFlow. # noqa: E501 :return: The public of this DataFlow. # noqa: E501 :rtype: bool template () property writable \u00b6 Gets the template of this DataFlow. # noqa: E501 :return: The template of this DataFlow. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model updated_at () property writable \u00b6 Gets the updated_at of this DataFlow. # noqa: E501 :return: The updated_at of this DataFlow. # noqa: E501 :rtype: float variables () property writable \u00b6 Gets the variables of this DataFlow. # noqa: E501 :return: The variables of this DataFlow. # noqa: E501 :rtype: dict(str, object)","title":"data_flow"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_flow_assemble_into_knowledge_graph_task","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowAssembleIntoKnowledgeGraphTask \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_flow = None , timestamp = None , local_vars_configuration = None ) \u00b6 DataFlowAssembleIntoKnowledgeGraphTask - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_flow () property writable \u00b6 Gets the data_flow of this DataFlowAssembleIntoKnowledgeGraphTask. # noqa: E501 :return: The data_flow of this DataFlowAssembleIntoKnowledgeGraphTask. # noqa: E501 :rtype: ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow timestamp () property writable \u00b6 Gets the timestamp of this DataFlowAssembleIntoKnowledgeGraphTask. # noqa: E501 :return: The timestamp of this DataFlowAssembleIntoKnowledgeGraphTask. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"data_flow_assemble_into_knowledge_graph_task"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_flow_assemble_report","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowAssembleReport \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( dataflow_tasks = None , task_id = None , local_vars_configuration = None ) \u00b6 DataFlowAssembleReport - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint dataflow_tasks () property writable \u00b6 Gets the dataflow_tasks of this DataFlowAssembleReport. # noqa: E501 :return: The dataflow_tasks of this DataFlowAssembleReport. # noqa: E501 :rtype: dict(str, DataFlowAssembleReportSingleTask) task_id () property writable \u00b6 Gets the task_id of this DataFlowAssembleReport. # noqa: E501 :return: The task_id of this DataFlowAssembleReport. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"data_flow_assemble_report"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_flow_assemble_report_cause","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowAssembleReportCause \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( type = None , value = None , local_vars_configuration = None ) \u00b6 DataFlowAssembleReportCause - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this DataFlowAssembleReportCause. # noqa: E501 :return: The type of this DataFlowAssembleReportCause. # noqa: E501 :rtype: str value () property writable \u00b6 Gets the value of this DataFlowAssembleReportCause. # noqa: E501 :return: The value of this DataFlowAssembleReportCause. # noqa: E501 :rtype: object","title":"data_flow_assemble_report_cause"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_flow_assemble_report_chunks","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowAssembleReportChunks \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( completed = None , failure = None , spawned = None , success = None , total = None , local_vars_configuration = None ) \u00b6 DataFlowAssembleReportChunks - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint completed () property writable \u00b6 Gets the completed of this DataFlowAssembleReportChunks. # noqa: E501 :return: The completed of this DataFlowAssembleReportChunks. # noqa: E501 :rtype: int failure () property writable \u00b6 Gets the failure of this DataFlowAssembleReportChunks. # noqa: E501 :return: The failure of this DataFlowAssembleReportChunks. # noqa: E501 :rtype: int spawned () property writable \u00b6 Gets the spawned of this DataFlowAssembleReportChunks. # noqa: E501 :return: The spawned of this DataFlowAssembleReportChunks. # noqa: E501 :rtype: int success () property writable \u00b6 Gets the success of this DataFlowAssembleReportChunks. # noqa: E501 :return: The success of this DataFlowAssembleReportChunks. # noqa: E501 :rtype: int to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model total () property writable \u00b6 Gets the total of this DataFlowAssembleReportChunks. # noqa: E501 :return: The total of this DataFlowAssembleReportChunks. # noqa: E501 :rtype: int","title":"data_flow_assemble_report_chunks"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_flow_assemble_report_errors","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowAssembleReportErrors \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( cause = None , timestamp = None , local_vars_configuration = None ) \u00b6 DataFlowAssembleReportErrors - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint cause () property writable \u00b6 Gets the cause of this DataFlowAssembleReportErrors. # noqa: E501 :return: The cause of this DataFlowAssembleReportErrors. # noqa: E501 :rtype: DataFlowAssembleReportCause timestamp () property writable \u00b6 Gets the timestamp of this DataFlowAssembleReportErrors. # noqa: E501 :return: The timestamp of this DataFlowAssembleReportErrors. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"data_flow_assemble_report_errors"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_flow_assemble_report_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowAssembleReportOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( event_log_level = 'error' , max_errors = None , local_vars_configuration = None ) \u00b6 DataFlowAssembleReportOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint event_log_level () property writable \u00b6 Gets the event_log_level of this DataFlowAssembleReportOptions. # noqa: E501 :return: The event_log_level of this DataFlowAssembleReportOptions. # noqa: E501 :rtype: str max_errors () property writable \u00b6 Gets the max_errors of this DataFlowAssembleReportOptions. # noqa: E501 :return: The max_errors of this DataFlowAssembleReportOptions. # noqa: E501 :rtype: int to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"data_flow_assemble_report_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_flow_assemble_report_single_task","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowAssembleReportSingleTask \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( chunks = None , errors = None , progress = None , status = None , task_type = None , local_vars_configuration = None ) \u00b6 DataFlowAssembleReportSingleTask - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint chunks () property writable \u00b6 Gets the chunks of this DataFlowAssembleReportSingleTask. # noqa: E501 :return: The chunks of this DataFlowAssembleReportSingleTask. # noqa: E501 :rtype: DataFlowAssembleReportChunks errors () property writable \u00b6 Gets the errors of this DataFlowAssembleReportSingleTask. # noqa: E501 :return: The errors of this DataFlowAssembleReportSingleTask. # noqa: E501 :rtype: list[DataFlowAssembleReportErrors] progress () property writable \u00b6 Gets the progress of this DataFlowAssembleReportSingleTask. # noqa: E501 :return: The progress of this DataFlowAssembleReportSingleTask. # noqa: E501 :rtype: float status () property writable \u00b6 Gets the status of this DataFlowAssembleReportSingleTask. # noqa: E501 :return: The status of this DataFlowAssembleReportSingleTask. # noqa: E501 :rtype: str task_type () property writable \u00b6 Gets the task_type of this DataFlowAssembleReportSingleTask. # noqa: E501 :return: The task_type of this DataFlowAssembleReportSingleTask. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"data_flow_assemble_report_single_task"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_flow_load_into_knowledge_graph_task","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowLoadIntoKnowledgeGraphTask \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_flow = None , save = None , timestamp = None , local_vars_configuration = None ) \u00b6 DataFlowLoadIntoKnowledgeGraphTask - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_flow () property writable \u00b6 Gets the data_flow of this DataFlowLoadIntoKnowledgeGraphTask. # noqa: E501 :return: The data_flow of this DataFlowLoadIntoKnowledgeGraphTask. # noqa: E501 :rtype: ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow save () property writable \u00b6 Gets the save of this DataFlowLoadIntoKnowledgeGraphTask. # noqa: E501 :return: The save of this DataFlowLoadIntoKnowledgeGraphTask. # noqa: E501 :rtype: object timestamp () property writable \u00b6 Gets the timestamp of this DataFlowLoadIntoKnowledgeGraphTask. # noqa: E501 :return: The timestamp of this DataFlowLoadIntoKnowledgeGraphTask. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"data_flow_load_into_knowledge_graph_task"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_flow_template","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowTemplate \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( config = None , data_flow = None , local_vars_configuration = None ) \u00b6 DataFlowTemplate - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint config () property writable \u00b6 Gets the config of this DataFlowTemplate. # noqa: E501 :return: The config of this DataFlowTemplate. # noqa: E501 :rtype: object data_flow () property writable \u00b6 Gets the data_flow of this DataFlowTemplate. # noqa: E501 :return: The data_flow of this DataFlowTemplate. # noqa: E501 :rtype: list[object] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"data_flow_template"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_flow_template_list_item","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowTemplateListItem \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( created_at = None , description = None , df_tpl_key = None , name = None , proj_key = None , public = None , updated_at = None , local_vars_configuration = None ) \u00b6 DataFlowTemplateListItem - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint created_at () property writable \u00b6 Gets the created_at of this DataFlowTemplateListItem. # noqa: E501 :return: The created_at of this DataFlowTemplateListItem. # noqa: E501 :rtype: float description () property writable \u00b6 Gets the description of this DataFlowTemplateListItem. # noqa: E501 :return: The description of this DataFlowTemplateListItem. # noqa: E501 :rtype: str df_tpl_key () property writable \u00b6 Gets the df_tpl_key of this DataFlowTemplateListItem. # noqa: E501 :return: The df_tpl_key of this DataFlowTemplateListItem. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this DataFlowTemplateListItem. # noqa: E501 :return: The name of this DataFlowTemplateListItem. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this DataFlowTemplateListItem. # noqa: E501 :return: The proj_key of this DataFlowTemplateListItem. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this DataFlowTemplateListItem. # noqa: E501 :return: The public of this DataFlowTemplateListItem. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model updated_at () property writable \u00b6 Gets the updated_at of this DataFlowTemplateListItem. # noqa: E501 :return: The updated_at of this DataFlowTemplateListItem. # noqa: E501 :rtype: float","title":"data_flow_template_list_item"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_flow_template_variable","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowTemplateVariable \u00b6 Bases: object Do not edit the class manually. allowable_values = [ STRING , BOOLEAN , NUMBER , INTEGER , DATACATALOGID , DICTIONARYID , KNOWLEDGEGRAPHID , MODELCONFIGURATIONID , FILE , SECRETSTRING , ELASTICID , DATACATALOGCOLLECTION , DICTIONARYCOLLECTION , KNOWLEDGEGRAPHCOLLECTION , CCSCOLLECTION , DOCUMENTSOURCES ] class-attribute \u00b6 Attributes: Name Type Description openapi_types dict The key is attribute name and the value is attribute type. attribute_map dict The key is attribute name and the value is json key in definition. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( local_vars_configuration = None ) \u00b6 DataFlowTemplateVariable - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"data_flow_template_variable"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_flow_topology_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataFlowTopologyOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( variables = None , local_vars_configuration = None ) \u00b6 DataFlowTopologyOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this DataFlowTopologyOptions. # noqa: E501 :return: The variables of this DataFlowTopologyOptions. # noqa: E501 :rtype: dict(str, object)","title":"data_flow_topology_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.data_index_upload_file_source","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DataIndexUploadFileSource \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( file_url = None , scratch_files_id = None , local_vars_configuration = None ) \u00b6 DataIndexUploadFileSource - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint file_url () property writable \u00b6 Gets the file_url of this DataIndexUploadFileSource. # noqa: E501 File URL to be converted and uploaded to the data index # noqa: E501 :return: The file_url of this DataIndexUploadFileSource. # noqa: E501 :rtype: str scratch_files_id () property writable \u00b6 Gets the scratch_files_id of this DataIndexUploadFileSource. # noqa: E501 List of CCS's scratch files id to be converted and uploaded to the data index # noqa: E501 :return: The scratch_files_id of this DataIndexUploadFileSource. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"data_index_upload_file_source"},{"location":"api-reference/#deepsearch.cps.apis.public.models.dictionary","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech Dictionary \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collections = None , copy_of = None , created_at = None , created_by = None , description = None , dict_key = None , name = None , proj_key = None , public = None , local_vars_configuration = None ) \u00b6 Dictionary - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collections () property writable \u00b6 Gets the collections of this Dictionary. # noqa: E501 :return: The collections of this Dictionary. # noqa: E501 :rtype: list[DictionaryCollection] copy_of () property writable \u00b6 Gets the copy_of of this Dictionary. # noqa: E501 :return: The copy_of of this Dictionary. # noqa: E501 :rtype: str created_at () property writable \u00b6 Gets the created_at of this Dictionary. # noqa: E501 :return: The created_at of this Dictionary. # noqa: E501 :rtype: float created_by () property writable \u00b6 Gets the created_by of this Dictionary. # noqa: E501 :return: The created_by of this Dictionary. # noqa: E501 :rtype: str description () property writable \u00b6 Gets the description of this Dictionary. # noqa: E501 :return: The description of this Dictionary. # noqa: E501 :rtype: str dict_key () property writable \u00b6 Gets the dict_key of this Dictionary. # noqa: E501 :return: The dict_key of this Dictionary. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this Dictionary. # noqa: E501 :return: The name of this Dictionary. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this Dictionary. # noqa: E501 :return: The proj_key of this Dictionary. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this Dictionary. # noqa: E501 :return: The public of this Dictionary. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"dictionary"},{"location":"api-reference/#deepsearch.cps.apis.public.models.dictionary_clone_result","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DictionaryCloneResult \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( clone_task = None , dictionary = None , local_vars_configuration = None ) \u00b6 DictionaryCloneResult - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint clone_task () property writable \u00b6 Gets the clone_task of this DictionaryCloneResult. # noqa: E501 :return: The clone_task of this DictionaryCloneResult. # noqa: E501 :rtype: Task dictionary () property writable \u00b6 Gets the dictionary of this DictionaryCloneResult. # noqa: E501 :return: The dictionary of this DictionaryCloneResult. # noqa: E501 :rtype: Dictionary to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"dictionary_clone_result"},{"location":"api-reference/#deepsearch.cps.apis.public.models.dictionary_collection","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DictionaryCollection \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( item_count = None , name = None , local_vars_configuration = None ) \u00b6 DictionaryCollection - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint item_count () property writable \u00b6 Gets the item_count of this DictionaryCollection. # noqa: E501 :return: The item_count of this DictionaryCollection. # noqa: E501 :rtype: int name () property writable \u00b6 Gets the name of this DictionaryCollection. # noqa: E501 :return: The name of this DictionaryCollection. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"dictionary_collection"},{"location":"api-reference/#deepsearch.cps.apis.public.models.dictionary_collection_csv_data","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DictionaryCollectionCsvData \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( body = None , header = None , local_vars_configuration = None ) \u00b6 DictionaryCollectionCsvData - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint body () property writable \u00b6 Gets the body of this DictionaryCollectionCsvData. # noqa: E501 :return: The body of this DictionaryCollectionCsvData. # noqa: E501 :rtype: str header () property writable \u00b6 Gets the header of this DictionaryCollectionCsvData. # noqa: E501 :return: The header of this DictionaryCollectionCsvData. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"dictionary_collection_csv_data"},{"location":"api-reference/#deepsearch.cps.apis.public.models.dictionary_collection_patch","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DictionaryCollectionPatch \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( op = None , path = None , value = None , local_vars_configuration = None ) \u00b6 DictionaryCollectionPatch - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint op () property writable \u00b6 Gets the op of this DictionaryCollectionPatch. # noqa: E501 :return: The op of this DictionaryCollectionPatch. # noqa: E501 :rtype: str path () property writable \u00b6 Gets the path of this DictionaryCollectionPatch. # noqa: E501 A path (see JSON patch specification) in the format /{objectid} for existing objects, or /- for new objects ( add operations). # noqa: E501 :return: The path of this DictionaryCollectionPatch. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model value () property writable \u00b6 Gets the value of this DictionaryCollectionPatch. # noqa: E501 :return: The value of this DictionaryCollectionPatch. # noqa: E501 :rtype: DictionaryEntry","title":"dictionary_collection_patch"},{"location":"api-reference/#deepsearch.cps.apis.public.models.dictionary_entry","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DictionaryEntry \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , synonyms = None , local_vars_configuration = None ) \u00b6 DictionaryEntry - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this DictionaryEntry. # noqa: E501 :return: The name of this DictionaryEntry. # noqa: E501 :rtype: str synonyms () property writable \u00b6 Gets the synonyms of this DictionaryEntry. # noqa: E501 :return: The synonyms of this DictionaryEntry. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"dictionary_entry"},{"location":"api-reference/#deepsearch.cps.apis.public.models.dictionary_import_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DictionaryImportOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( options = None , target = None , local_vars_configuration = None ) \u00b6 DictionaryImportOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint options () property writable \u00b6 Gets the options of this DictionaryImportOptions. # noqa: E501 :return: The options of this DictionaryImportOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesFromMongoOptions target () property writable \u00b6 Gets the target of this DictionaryImportOptions. # noqa: E501 :return: The target of this DictionaryImportOptions. # noqa: E501 :rtype: ProjectProjKeyDictionariesFromMongoTarget to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"dictionary_import_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.dictionary_import_result","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech DictionaryImportResult \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( dictionary = None , import_task = None , local_vars_configuration = None ) \u00b6 DictionaryImportResult - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint dictionary () property writable \u00b6 Gets the dictionary of this DictionaryImportResult. # noqa: E501 :return: The dictionary of this DictionaryImportResult. # noqa: E501 :rtype: Dictionary import_task () property writable \u00b6 Gets the import_task of this DictionaryImportResult. # noqa: E501 :return: The import_task of this DictionaryImportResult. # noqa: E501 :rtype: Task to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"dictionary_import_result"},{"location":"api-reference/#deepsearch.cps.apis.public.models.elastic_coordinates","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ElasticCoordinates \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( ca_certificate_base64 = None , dangerously_disable_ssl_validation = None , hosts = None , local_vars_configuration = None ) \u00b6 ElasticCoordinates - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint ca_certificate_base64 () property writable \u00b6 Gets the ca_certificate_base64 of this ElasticCoordinates. # noqa: E501 :return: The ca_certificate_base64 of this ElasticCoordinates. # noqa: E501 :rtype: str dangerously_disable_ssl_validation () property writable \u00b6 Gets the dangerously_disable_ssl_validation of this ElasticCoordinates. # noqa: E501 :return: The dangerously_disable_ssl_validation of this ElasticCoordinates. # noqa: E501 :rtype: bool hosts () property writable \u00b6 Gets the hosts of this ElasticCoordinates. # noqa: E501 :return: The hosts of this ElasticCoordinates. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"elastic_coordinates"},{"location":"api-reference/#deepsearch.cps.apis.public.models.elastic_index_search_query_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ElasticIndexSearchQueryOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( source = None , aggs = None , _from = None , query = None , size = None , sort = None , local_vars_configuration = None ) \u00b6 ElasticIndexSearchQueryOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint _from () property writable \u00b6 Gets the _from of this ElasticIndexSearchQueryOptions. # noqa: E501 :return: The _from of this ElasticIndexSearchQueryOptions. # noqa: E501 :rtype: float aggs () property writable \u00b6 Gets the aggs of this ElasticIndexSearchQueryOptions. # noqa: E501 :return: The aggs of this ElasticIndexSearchQueryOptions. # noqa: E501 :rtype: object query () property writable \u00b6 Gets the query of this ElasticIndexSearchQueryOptions. # noqa: E501 :return: The query of this ElasticIndexSearchQueryOptions. # noqa: E501 :rtype: dict(str, object) size () property writable \u00b6 Gets the size of this ElasticIndexSearchQueryOptions. # noqa: E501 :return: The size of this ElasticIndexSearchQueryOptions. # noqa: E501 :rtype: float sort () property writable \u00b6 Gets the sort of this ElasticIndexSearchQueryOptions. # noqa: E501 :return: The sort of this ElasticIndexSearchQueryOptions. # noqa: E501 :rtype: list[object] source () property writable \u00b6 Gets the source of this ElasticIndexSearchQueryOptions. # noqa: E501 :return: The source of this ElasticIndexSearchQueryOptions. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"elastic_index_search_query_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.elastic_index_search_results","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ElasticIndexSearchResults \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( aggregations = None , items = None , total = None , local_vars_configuration = None ) \u00b6 ElasticIndexSearchResults - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint aggregations () property writable \u00b6 Gets the aggregations of this ElasticIndexSearchResults. # noqa: E501 :return: The aggregations of this ElasticIndexSearchResults. # noqa: E501 :rtype: object items () property writable \u00b6 Gets the items of this ElasticIndexSearchResults. # noqa: E501 :return: The items of this ElasticIndexSearchResults. # noqa: E501 :rtype: list[object] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model total () property writable \u00b6 Gets the total of this ElasticIndexSearchResults. # noqa: E501 :return: The total of this ElasticIndexSearchResults. # noqa: E501 :rtype: float","title":"elastic_index_search_results"},{"location":"api-reference/#deepsearch.cps.apis.public.models.entity_annotation","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech EntityAnnotation \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( match = None , range = None , subtype = None , type = None , local_vars_configuration = None ) \u00b6 EntityAnnotation - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint match () property writable \u00b6 Gets the match of this EntityAnnotation. # noqa: E501 :return: The match of this EntityAnnotation. # noqa: E501 :rtype: str range () property writable \u00b6 Gets the range of this EntityAnnotation. # noqa: E501 2-Tuple representing the low and high indexes of the matching substring # noqa: E501 :return: The range of this EntityAnnotation. # noqa: E501 :rtype: list[int] subtype () property writable \u00b6 Gets the subtype of this EntityAnnotation. # noqa: E501 :return: The subtype of this EntityAnnotation. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this EntityAnnotation. # noqa: E501 :return: The type of this EntityAnnotation. # noqa: E501 :rtype: str","title":"entity_annotation"},{"location":"api-reference/#deepsearch.cps.apis.public.models.entity_annotation_descriptor","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech EntityAnnotationDescriptor \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_fields = None , description = None , key = None , local_vars_configuration = None ) \u00b6 EntityAnnotationDescriptor - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_fields () property writable \u00b6 Gets the data_fields of this EntityAnnotationDescriptor. # noqa: E501 :return: The data_fields of this EntityAnnotationDescriptor. # noqa: E501 :rtype: list[str] description () property writable \u00b6 Gets the description of this EntityAnnotationDescriptor. # noqa: E501 :return: The description of this EntityAnnotationDescriptor. # noqa: E501 :rtype: str key () property writable \u00b6 Gets the key of this EntityAnnotationDescriptor. # noqa: E501 :return: The key of this EntityAnnotationDescriptor. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"entity_annotation_descriptor"},{"location":"api-reference/#deepsearch.cps.apis.public.models.error_response","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ErrorResponse \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( error_code = None , error_message = None , local_vars_configuration = None ) \u00b6 ErrorResponse - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint error_code () property writable \u00b6 Gets the error_code of this ErrorResponse. # noqa: E501 :return: The error_code of this ErrorResponse. # noqa: E501 :rtype: str error_message () property writable \u00b6 Gets the error_message of this ErrorResponse. # noqa: E501 :return: The error_message of this ErrorResponse. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"error_response"},{"location":"api-reference/#deepsearch.cps.apis.public.models.flavours_quota","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech FlavoursQuota \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( display_name = None , name = None , quota = None , local_vars_configuration = None ) \u00b6 FlavoursQuota - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint display_name () property writable \u00b6 Gets the display_name of this FlavoursQuota. # noqa: E501 :return: The display_name of this FlavoursQuota. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this FlavoursQuota. # noqa: E501 :return: The name of this FlavoursQuota. # noqa: E501 :rtype: str quota () property writable \u00b6 Gets the quota of this FlavoursQuota. # noqa: E501 :return: The quota of this FlavoursQuota. # noqa: E501 :rtype: int to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"flavours_quota"},{"location":"api-reference/#deepsearch.cps.apis.public.models.fully_rendered_data_flow","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech FullyRenderedDataFlow \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( target_bag = None , variables = None , local_vars_configuration = None ) \u00b6 FullyRenderedDataFlow - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint target_bag () property writable \u00b6 Gets the target_bag of this FullyRenderedDataFlow. # noqa: E501 :return: The target_bag of this FullyRenderedDataFlow. # noqa: E501 :rtype: ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this FullyRenderedDataFlow. # noqa: E501 :return: The variables of this FullyRenderedDataFlow. # noqa: E501 :rtype: dict(str, object)","title":"fully_rendered_data_flow"},{"location":"api-reference/#deepsearch.cps.apis.public.models.image_cells","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ImageCells \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data = None , local_vars_configuration = None ) \u00b6 ImageCells - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data () property writable \u00b6 Gets the data of this ImageCells. # noqa: E501 A 6-tuple consisting of x1, y1, x2, y2, font, coordinates # noqa: E501 :return: The data of this ImageCells. # noqa: E501 :rtype: list[object] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"image_cells"},{"location":"api-reference/#deepsearch.cps.apis.public.models.image_info","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ImageInfo \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( height = None , width = None , local_vars_configuration = None ) \u00b6 ImageInfo - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint height () property writable \u00b6 Gets the height of this ImageInfo. # noqa: E501 :return: The height of this ImageInfo. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model width () property writable \u00b6 Gets the width of this ImageInfo. # noqa: E501 :return: The width of this ImageInfo. # noqa: E501 :rtype: float","title":"image_info"},{"location":"api-reference/#deepsearch.cps.apis.public.models.image_metadata","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ImageMetadata \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( cells = None , info = None , local_vars_configuration = None ) \u00b6 ImageMetadata - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint cells () property writable \u00b6 Gets the cells of this ImageMetadata. # noqa: E501 :return: The cells of this ImageMetadata. # noqa: E501 :rtype: ImageCells info () property writable \u00b6 Gets the info of this ImageMetadata. # noqa: E501 :return: The info of this ImageMetadata. # noqa: E501 :rtype: ImageInfo to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"image_metadata"},{"location":"api-reference/#deepsearch.cps.apis.public.models.image_source","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ImageSource \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( proj_key = None , scratch_id = None , url = None , local_vars_configuration = None ) \u00b6 ImageSource - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint proj_key () property writable \u00b6 Gets the proj_key of this ImageSource. # noqa: E501 :return: The proj_key of this ImageSource. # noqa: E501 :rtype: str scratch_id () property writable \u00b6 Gets the scratch_id of this ImageSource. # noqa: E501 :return: The scratch_id of this ImageSource. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this ImageSource. # noqa: E501 :return: The url of this ImageSource. # noqa: E501 :rtype: str","title":"image_source"},{"location":"api-reference/#deepsearch.cps.apis.public.models.import_from_elastic_to_data_catalog_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ImportFromElasticToDataCatalogOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( coordinates = None , elastic_id = None , parameters = None , local_vars_configuration = None ) \u00b6 ImportFromElasticToDataCatalogOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint coordinates () property writable \u00b6 Gets the coordinates of this ImportFromElasticToDataCatalogOptions. # noqa: E501 :return: The coordinates of this ImportFromElasticToDataCatalogOptions. # noqa: E501 :rtype: ElasticCoordinates elastic_id () property writable \u00b6 Gets the elastic_id of this ImportFromElasticToDataCatalogOptions. # noqa: E501 :return: The elastic_id of this ImportFromElasticToDataCatalogOptions. # noqa: E501 :rtype: str parameters () property writable \u00b6 Gets the parameters of this ImportFromElasticToDataCatalogOptions. # noqa: E501 :return: The parameters of this ImportFromElasticToDataCatalogOptions. # noqa: E501 :rtype: ImportFromElasticToDataCatalogOptionsParameters to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"import_from_elastic_to_data_catalog_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.import_from_elastic_to_data_catalog_options_parameters","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ImportFromElasticToDataCatalogOptionsParameters \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( import_s3_data = None , index = None , page_size = None , query_options = None , s3 = None , local_vars_configuration = None ) \u00b6 ImportFromElasticToDataCatalogOptionsParameters - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint import_s3_data () property writable \u00b6 Gets the import_s3_data of this ImportFromElasticToDataCatalogOptionsParameters. # noqa: E501 :return: The import_s3_data of this ImportFromElasticToDataCatalogOptionsParameters. # noqa: E501 :rtype: bool index () property writable \u00b6 Gets the index of this ImportFromElasticToDataCatalogOptionsParameters. # noqa: E501 :return: The index of this ImportFromElasticToDataCatalogOptionsParameters. # noqa: E501 :rtype: str page_size () property writable \u00b6 Gets the page_size of this ImportFromElasticToDataCatalogOptionsParameters. # noqa: E501 :return: The page_size of this ImportFromElasticToDataCatalogOptionsParameters. # noqa: E501 :rtype: float query_options () property writable \u00b6 Gets the query_options of this ImportFromElasticToDataCatalogOptionsParameters. # noqa: E501 :return: The query_options of this ImportFromElasticToDataCatalogOptionsParameters. # noqa: E501 :rtype: ImportFromElasticToDataCatalogOptionsParametersQueryOptions s3 () property writable \u00b6 Gets the s3 of this ImportFromElasticToDataCatalogOptionsParameters. # noqa: E501 :return: The s3 of this ImportFromElasticToDataCatalogOptionsParameters. # noqa: E501 :rtype: ImportFromElasticToDataCatalogS3Coords to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"import_from_elastic_to_data_catalog_options_parameters"},{"location":"api-reference/#deepsearch.cps.apis.public.models.import_from_elastic_to_data_catalog_options_parameters_query_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ImportFromElasticToDataCatalogOptionsParametersQueryOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( source = None , query = None , size = None , local_vars_configuration = None ) \u00b6 ImportFromElasticToDataCatalogOptionsParametersQueryOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint query () property writable \u00b6 Gets the query of this ImportFromElasticToDataCatalogOptionsParametersQueryOptions. # noqa: E501 :return: The query of this ImportFromElasticToDataCatalogOptionsParametersQueryOptions. # noqa: E501 :rtype: dict(str, object) size () property writable \u00b6 Gets the size of this ImportFromElasticToDataCatalogOptionsParametersQueryOptions. # noqa: E501 :return: The size of this ImportFromElasticToDataCatalogOptionsParametersQueryOptions. # noqa: E501 :rtype: float source () property writable \u00b6 Gets the source of this ImportFromElasticToDataCatalogOptionsParametersQueryOptions. # noqa: E501 :return: The source of this ImportFromElasticToDataCatalogOptionsParametersQueryOptions. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"import_from_elastic_to_data_catalog_options_parameters_query_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.import_from_elastic_to_data_catalog_s3_coords","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ImportFromElasticToDataCatalogS3Coords \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( access_key = None , bucket = None , host = None , key_prefix = None , location = None , port = None , secret_key = None , ssl = None , verify_ssl = None , local_vars_configuration = None ) \u00b6 ImportFromElasticToDataCatalogS3Coords - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint access_key () property writable \u00b6 Gets the access_key of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :return: The access_key of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :rtype: str bucket () property writable \u00b6 Gets the bucket of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :return: The bucket of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :rtype: str host () property writable \u00b6 Gets the host of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :return: The host of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :rtype: str key_prefix () property writable \u00b6 Gets the key_prefix of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :return: The key_prefix of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :rtype: str location () property writable \u00b6 Gets the location of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :return: The location of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :rtype: str port () property writable \u00b6 Gets the port of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :return: The port of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :rtype: int secret_key () property writable \u00b6 Gets the secret_key of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :return: The secret_key of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :rtype: str ssl () property writable \u00b6 Gets the ssl of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :return: The ssl of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model verify_ssl () property writable \u00b6 Gets the verify_ssl of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :return: The verify_ssl of this ImportFromElasticToDataCatalogS3Coords. # noqa: E501 :rtype: bool","title":"import_from_elastic_to_data_catalog_s3_coords"},{"location":"api-reference/#deepsearch.cps.apis.public.models.import_to_data_catalog_collection_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ImportToDataCatalogCollectionOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( ccs = None , elastic = None , url = None , local_vars_configuration = None ) \u00b6 ImportToDataCatalogCollectionOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint ccs () property writable \u00b6 Gets the ccs of this ImportToDataCatalogCollectionOptions. # noqa: E501 :return: The ccs of this ImportToDataCatalogCollectionOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs elastic () property writable \u00b6 Gets the elastic of this ImportToDataCatalogCollectionOptions. # noqa: E501 :return: The elastic of this ImportToDataCatalogCollectionOptions. # noqa: E501 :rtype: ImportFromElasticToDataCatalogOptions to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this ImportToDataCatalogCollectionOptions. # noqa: E501 :return: The url of this ImportToDataCatalogCollectionOptions. # noqa: E501 :rtype: str","title":"import_to_data_catalog_collection_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.import_to_data_catalog_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ImportToDataCatalogOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( coordinates = None , url = None , local_vars_configuration = None ) \u00b6 ImportToDataCatalogOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint coordinates () property writable \u00b6 Gets the coordinates of this ImportToDataCatalogOptions. # noqa: E501 :return: The coordinates of this ImportToDataCatalogOptions. # noqa: E501 :rtype: MongoS3CoordinatesWithCollectionList to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this ImportToDataCatalogOptions. # noqa: E501 :return: The url of this ImportToDataCatalogOptions. # noqa: E501 :rtype: str","title":"import_to_data_catalog_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.infer_project_data_catalog_category_schema","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech InferProjectDataCatalogCategorySchema \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( sample_size = None , local_vars_configuration = None ) \u00b6 InferProjectDataCatalogCategorySchema - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint sample_size () property writable \u00b6 Gets the sample_size of this InferProjectDataCatalogCategorySchema. # noqa: E501 :return: The sample_size of this InferProjectDataCatalogCategorySchema. # noqa: E501 :rtype: int to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"infer_project_data_catalog_category_schema"},{"location":"api-reference/#deepsearch.cps.apis.public.models.inline_object","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech InlineObject \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( snapshot = None , local_vars_configuration = None ) \u00b6 InlineObject - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint snapshot () property writable \u00b6 Gets the snapshot of this InlineObject. # noqa: E501 :return: The snapshot of this InlineObject. # noqa: E501 :rtype: TakeSnapshotSettingsBackendAware to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"inline_object"},{"location":"api-reference/#deepsearch.cps.apis.public.models.inline_object1","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech InlineObject1 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( access_token = None , catalog_document_collections = None , ccs_document_collections = None , data_catalogs = None , entity_mappings = None , models = None , local_vars_configuration = None ) \u00b6 InlineObject1 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint access_token () property writable \u00b6 Gets the access_token of this InlineObject1. # noqa: E501 :return: The access_token of this InlineObject1. # noqa: E501 :rtype: str catalog_document_collections () property writable \u00b6 Gets the catalog_document_collections of this InlineObject1. # noqa: E501 :return: The catalog_document_collections of this InlineObject1. # noqa: E501 :rtype: list[CatalogReference] ccs_document_collections () property writable \u00b6 Gets the ccs_document_collections of this InlineObject1. # noqa: E501 :return: The ccs_document_collections of this InlineObject1. # noqa: E501 :rtype: list[CcsCollectionReference] data_catalogs () property writable \u00b6 Gets the data_catalogs of this InlineObject1. # noqa: E501 :return: The data_catalogs of this InlineObject1. # noqa: E501 :rtype: list[CatalogReference] entity_mappings () property writable \u00b6 Gets the entity_mappings of this InlineObject1. # noqa: E501 :return: The entity_mappings of this InlineObject1. # noqa: E501 :rtype: dict(str, str) models () property writable \u00b6 Gets the models of this InlineObject1. # noqa: E501 :return: The models of this InlineObject1. # noqa: E501 :rtype: list[CpsModelReference] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"inline_object1"},{"location":"api-reference/#deepsearch.cps.apis.public.models.inline_object2","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech InlineObject2 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( snapshot = None , local_vars_configuration = None ) \u00b6 InlineObject2 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint snapshot () property writable \u00b6 Gets the snapshot of this InlineObject2. # noqa: E501 :return: The snapshot of this InlineObject2. # noqa: E501 :rtype: TakeSnapshotSettings to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"inline_object2"},{"location":"api-reference/#deepsearch.cps.apis.public.models.inline_object3","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech InlineObject3 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( info = None , local_vars_configuration = None ) \u00b6 InlineObject3 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint info () property writable \u00b6 Gets the info of this InlineObject3. # noqa: E501 :return: The info of this InlineObject3. # noqa: E501 :rtype: ProjectProjKeyBagsBagKeyTasksExportDatasetInfo to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"inline_object3"},{"location":"api-reference/#deepsearch.cps.apis.public.models.inline_response200","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech InlineResponse200 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( elastic_query_max_size = None , local_vars_configuration = None ) \u00b6 InlineResponse200 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint elastic_query_max_size () property writable \u00b6 Gets the elastic_query_max_size of this InlineResponse200. # noqa: E501 :return: The elastic_query_max_size of this InlineResponse200. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"inline_response200"},{"location":"api-reference/#deepsearch.cps.apis.public.models.inline_response2001","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech InlineResponse2001 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( processing_models = None , local_vars_configuration = None ) \u00b6 InlineResponse2001 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint processing_models () property writable \u00b6 Gets the processing_models of this InlineResponse2001. # noqa: E501 :return: The processing_models of this InlineResponse2001. # noqa: E501 :rtype: list[ProcessingModelDescription] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"inline_response2001"},{"location":"api-reference/#deepsearch.cps.apis.public.models.inline_response2002","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech InlineResponse2002 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( done = None , result = None , task_id = None , task_status = None , local_vars_configuration = None ) \u00b6 InlineResponse2002 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint done () property writable \u00b6 Gets the done of this InlineResponse2002. # noqa: E501 :return: The done of this InlineResponse2002. # noqa: E501 :rtype: bool result () property writable \u00b6 Gets the result of this InlineResponse2002. # noqa: E501 :return: The result of this InlineResponse2002. # noqa: E501 :rtype: object task_id () property writable \u00b6 Gets the task_id of this InlineResponse2002. # noqa: E501 :return: The task_id of this InlineResponse2002. # noqa: E501 :rtype: str task_status () property writable \u00b6 Gets the task_status of this InlineResponse2002. # noqa: E501 :return: The task_status of this InlineResponse2002. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"inline_response2002"},{"location":"api-reference/#deepsearch.cps.apis.public.models.inline_response2003","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech InlineResponse2003 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( avail_cpu_slots = None , avail_mem_slots = None , avail_slots = None , name = None , num_nodes = None , number_kgs = None , running_kgs = None , workers_pool = None , local_vars_configuration = None ) \u00b6 InlineResponse2003 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint avail_cpu_slots () property writable \u00b6 Gets the avail_cpu_slots of this InlineResponse2003. # noqa: E501 :return: The avail_cpu_slots of this InlineResponse2003. # noqa: E501 :rtype: int avail_mem_slots () property writable \u00b6 Gets the avail_mem_slots of this InlineResponse2003. # noqa: E501 :return: The avail_mem_slots of this InlineResponse2003. # noqa: E501 :rtype: int avail_slots () property writable \u00b6 Gets the avail_slots of this InlineResponse2003. # noqa: E501 :return: The avail_slots of this InlineResponse2003. # noqa: E501 :rtype: int name () property writable \u00b6 Gets the name of this InlineResponse2003. # noqa: E501 :return: The name of this InlineResponse2003. # noqa: E501 :rtype: str num_nodes () property writable \u00b6 Gets the num_nodes of this InlineResponse2003. # noqa: E501 :return: The num_nodes of this InlineResponse2003. # noqa: E501 :rtype: int number_kgs () property writable \u00b6 Gets the number_kgs of this InlineResponse2003. # noqa: E501 :return: The number_kgs of this InlineResponse2003. # noqa: E501 :rtype: int running_kgs () property writable \u00b6 Gets the running_kgs of this InlineResponse2003. # noqa: E501 :return: The running_kgs of this InlineResponse2003. # noqa: E501 :rtype: int to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model workers_pool () property writable \u00b6 Gets the workers_pool of this InlineResponse2003. # noqa: E501 :return: The workers_pool of this InlineResponse2003. # noqa: E501 :rtype: str","title":"inline_response2003"},{"location":"api-reference/#deepsearch.cps.apis.public.models.kg_snapshot","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech KgSnapshot \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_flow = None , is_current = None , name = None , project_task_id = None , task_type = None , timestamp = None , local_vars_configuration = None ) \u00b6 KgSnapshot - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_flow () property writable \u00b6 Gets the data_flow of this KgSnapshot. # noqa: E501 :return: The data_flow of this KgSnapshot. # noqa: E501 :rtype: object is_current () property writable \u00b6 Gets the is_current of this KgSnapshot. # noqa: E501 :return: The is_current of this KgSnapshot. # noqa: E501 :rtype: bool name () property writable \u00b6 Gets the name of this KgSnapshot. # noqa: E501 :return: The name of this KgSnapshot. # noqa: E501 :rtype: str project_task_id () property writable \u00b6 Gets the project_task_id of this KgSnapshot. # noqa: E501 :return: The project_task_id of this KgSnapshot. # noqa: E501 :rtype: str task_type () property writable \u00b6 Gets the task_type of this KgSnapshot. # noqa: E501 :return: The task_type of this KgSnapshot. # noqa: E501 :rtype: str timestamp () property writable \u00b6 Gets the timestamp of this KgSnapshot. # noqa: E501 :return: The timestamp of this KgSnapshot. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"kg_snapshot"},{"location":"api-reference/#deepsearch.cps.apis.public.models.kgc_data_input","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech KgcDataInput \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( config = None , data_flow = None , local_vars_configuration = None ) \u00b6 KgcDataInput - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint config () property writable \u00b6 Gets the config of this KgcDataInput. # noqa: E501 :return: The config of this KgcDataInput. # noqa: E501 :rtype: object data_flow () property writable \u00b6 Gets the data_flow of this KgcDataInput. # noqa: E501 :return: The data_flow of this KgcDataInput. # noqa: E501 :rtype: list[dict(str, object)] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"kgc_data_input"},{"location":"api-reference/#deepsearch.cps.apis.public.models.kibana_saved_queries_result","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech KibanaSavedQueriesResult \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , fields = None , query = None , title = None , local_vars_configuration = None ) \u00b6 KibanaSavedQueriesResult - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this KibanaSavedQueriesResult. # noqa: E501 :return: The description of this KibanaSavedQueriesResult. # noqa: E501 :rtype: str fields () property writable \u00b6 Gets the fields of this KibanaSavedQueriesResult. # noqa: E501 :return: The fields of this KibanaSavedQueriesResult. # noqa: E501 :rtype: list[str] query () property writable \u00b6 Gets the query of this KibanaSavedQueriesResult. # noqa: E501 :return: The query of this KibanaSavedQueriesResult. # noqa: E501 :rtype: str title () property writable \u00b6 Gets the title of this KibanaSavedQueriesResult. # noqa: E501 :return: The title of this KibanaSavedQueriesResult. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"kibana_saved_queries_result"},{"location":"api-reference/#deepsearch.cps.apis.public.models.knowledge_graph_authentication_callback","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech KnowledgeGraphAuthenticationCallback \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( callback_url = None , local_vars_configuration = None ) \u00b6 KnowledgeGraphAuthenticationCallback - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint callback_url () property writable \u00b6 Gets the callback_url of this KnowledgeGraphAuthenticationCallback. # noqa: E501 :return: The callback_url of this KnowledgeGraphAuthenticationCallback. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"knowledge_graph_authentication_callback"},{"location":"api-reference/#deepsearch.cps.apis.public.models.knowledge_graph_chart_upgrade_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech KnowledgeGraphChartUpgradeOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( chart = None , local_vars_configuration = None ) \u00b6 KnowledgeGraphChartUpgradeOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint chart () property writable \u00b6 Gets the chart of this KnowledgeGraphChartUpgradeOptions. # noqa: E501 :return: The chart of this KnowledgeGraphChartUpgradeOptions. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"knowledge_graph_chart_upgrade_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.knowledge_graph_deployment_recreation_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech KnowledgeGraphDeploymentRecreationOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( force = None , local_vars_configuration = None ) \u00b6 KnowledgeGraphDeploymentRecreationOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint force () property writable \u00b6 Gets the force of this KnowledgeGraphDeploymentRecreationOptions. # noqa: E501 :return: The force of this KnowledgeGraphDeploymentRecreationOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"knowledge_graph_deployment_recreation_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.knowledge_graph_snapshot_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech KnowledgeGraphSnapshotOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , local_vars_configuration = None ) \u00b6 KnowledgeGraphSnapshotOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this KnowledgeGraphSnapshotOptions. # noqa: E501 :return: The name of this KnowledgeGraphSnapshotOptions. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"knowledge_graph_snapshot_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.knowledge_graph_system_information","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech KnowledgeGraphSystemInformation \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( backend = None , bag_domain = None , bag_key = None , bag_url = None , name = None , proj_key = None , project_name = None , public = None , slug = None , timestamp = None , local_vars_configuration = None ) \u00b6 KnowledgeGraphSystemInformation - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint backend () property writable \u00b6 Gets the backend of this KnowledgeGraphSystemInformation. # noqa: E501 :return: The backend of this KnowledgeGraphSystemInformation. # noqa: E501 :rtype: dict(str, SystemKgsBackend) bag_domain () property writable \u00b6 Gets the bag_domain of this KnowledgeGraphSystemInformation. # noqa: E501 :return: The bag_domain of this KnowledgeGraphSystemInformation. # noqa: E501 :rtype: str bag_key () property writable \u00b6 Gets the bag_key of this KnowledgeGraphSystemInformation. # noqa: E501 :return: The bag_key of this KnowledgeGraphSystemInformation. # noqa: E501 :rtype: str bag_url () property writable \u00b6 Gets the bag_url of this KnowledgeGraphSystemInformation. # noqa: E501 :return: The bag_url of this KnowledgeGraphSystemInformation. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this KnowledgeGraphSystemInformation. # noqa: E501 :return: The name of this KnowledgeGraphSystemInformation. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this KnowledgeGraphSystemInformation. # noqa: E501 :return: The proj_key of this KnowledgeGraphSystemInformation. # noqa: E501 :rtype: str project_name () property writable \u00b6 Gets the project_name of this KnowledgeGraphSystemInformation. # noqa: E501 :return: The project_name of this KnowledgeGraphSystemInformation. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this KnowledgeGraphSystemInformation. # noqa: E501 :return: The public of this KnowledgeGraphSystemInformation. # noqa: E501 :rtype: bool slug () property writable \u00b6 Gets the slug of this KnowledgeGraphSystemInformation. # noqa: E501 :return: The slug of this KnowledgeGraphSystemInformation. # noqa: E501 :rtype: str timestamp () property writable \u00b6 Gets the timestamp of this KnowledgeGraphSystemInformation. # noqa: E501 :return: The timestamp of this KnowledgeGraphSystemInformation. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"knowledge_graph_system_information"},{"location":"api-reference/#deepsearch.cps.apis.public.models.linked_ccs_instances","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech LinkedCcsInstances \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , id = None , local_vars_configuration = None ) \u00b6 LinkedCcsInstances - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this LinkedCcsInstances. # noqa: E501 :return: The description of this LinkedCcsInstances. # noqa: E501 :rtype: str id () property writable \u00b6 Gets the id of this LinkedCcsInstances. # noqa: E501 :return: The id of this LinkedCcsInstances. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"linked_ccs_instances"},{"location":"api-reference/#deepsearch.cps.apis.public.models.load_data_flow_into_knowledge_graph_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech LoadDataFlowIntoKnowledgeGraphOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_flow = None , render = None , save = None , local_vars_configuration = None ) \u00b6 LoadDataFlowIntoKnowledgeGraphOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_flow () property writable \u00b6 Gets the data_flow of this LoadDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :return: The data_flow of this LoadDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :rtype: BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow render () property writable \u00b6 Gets the render of this LoadDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :return: The render of this LoadDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :rtype: BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender save () property writable \u00b6 Gets the save of this LoadDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :return: The save of this LoadDataFlowIntoKnowledgeGraphOptions. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"load_data_flow_into_knowledge_graph_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.load_data_flow_into_knowledge_graph_options1","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech LoadDataFlowIntoKnowledgeGraphOptions1 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( render = None , target = None , local_vars_configuration = None ) \u00b6 LoadDataFlowIntoKnowledgeGraphOptions1 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint render () property writable \u00b6 Gets the render of this LoadDataFlowIntoKnowledgeGraphOptions1. # noqa: E501 :return: The render of this LoadDataFlowIntoKnowledgeGraphOptions1. # noqa: E501 :rtype: ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender target () property writable \u00b6 Gets the target of this LoadDataFlowIntoKnowledgeGraphOptions1. # noqa: E501 :return: The target of this LoadDataFlowIntoKnowledgeGraphOptions1. # noqa: E501 :rtype: ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadTarget to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"load_data_flow_into_knowledge_graph_options1"},{"location":"api-reference/#deepsearch.cps.apis.public.models.load_kgc_data_input","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech LoadKgcDataInput \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( dataflow = None , target = None , local_vars_configuration = None ) \u00b6 LoadKgcDataInput - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint dataflow () property writable \u00b6 Gets the dataflow of this LoadKgcDataInput. # noqa: E501 :return: The dataflow of this LoadKgcDataInput. # noqa: E501 :rtype: LoadKgcDataInputDataflow target () property writable \u00b6 Gets the target of this LoadKgcDataInput. # noqa: E501 :return: The target of this LoadKgcDataInput. # noqa: E501 :rtype: LoadKgcDataInputTarget to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"load_kgc_data_input"},{"location":"api-reference/#deepsearch.cps.apis.public.models.load_kgc_data_input_dataflow","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech LoadKgcDataInputDataflow \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( config = None , data_flow = None , local_vars_configuration = None ) \u00b6 LoadKgcDataInputDataflow - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint config () property writable \u00b6 Gets the config of this LoadKgcDataInputDataflow. # noqa: E501 :return: The config of this LoadKgcDataInputDataflow. # noqa: E501 :rtype: object data_flow () property writable \u00b6 Gets the data_flow of this LoadKgcDataInputDataflow. # noqa: E501 :return: The data_flow of this LoadKgcDataInputDataflow. # noqa: E501 :rtype: list[object] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"load_kgc_data_input_dataflow"},{"location":"api-reference/#deepsearch.cps.apis.public.models.load_kgc_data_input_target","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech LoadKgcDataInputTarget \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( bag_key = None , save = None , local_vars_configuration = None ) \u00b6 LoadKgcDataInputTarget - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bag_key () property writable \u00b6 Gets the bag_key of this LoadKgcDataInputTarget. # noqa: E501 :return: The bag_key of this LoadKgcDataInputTarget. # noqa: E501 :rtype: str save () property writable \u00b6 Gets the save of this LoadKgcDataInputTarget. # noqa: E501 :return: The save of this LoadKgcDataInputTarget. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"load_kgc_data_input_target"},{"location":"api-reference/#deepsearch.cps.apis.public.models.model_configuration","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ModelConfiguration \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( configurations = None , created_at = None , created_by = None , description = None , model_config_key = None , name = None , proj_key = None , public = None , supported_annotations = None , local_vars_configuration = None ) \u00b6 ModelConfiguration - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint configurations () property writable \u00b6 Gets the configurations of this ModelConfiguration. # noqa: E501 :return: The configurations of this ModelConfiguration. # noqa: E501 :rtype: dict(str, object) created_at () property writable \u00b6 Gets the created_at of this ModelConfiguration. # noqa: E501 :return: The created_at of this ModelConfiguration. # noqa: E501 :rtype: float created_by () property writable \u00b6 Gets the created_by of this ModelConfiguration. # noqa: E501 :return: The created_by of this ModelConfiguration. # noqa: E501 :rtype: str description () property writable \u00b6 Gets the description of this ModelConfiguration. # noqa: E501 :return: The description of this ModelConfiguration. # noqa: E501 :rtype: str model_config_key () property writable \u00b6 Gets the model_config_key of this ModelConfiguration. # noqa: E501 :return: The model_config_key of this ModelConfiguration. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ModelConfiguration. # noqa: E501 :return: The name of this ModelConfiguration. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ModelConfiguration. # noqa: E501 :return: The proj_key of this ModelConfiguration. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this ModelConfiguration. # noqa: E501 :return: The public of this ModelConfiguration. # noqa: E501 :rtype: bool supported_annotations () property writable \u00b6 Gets the supported_annotations of this ModelConfiguration. # noqa: E501 :return: The supported_annotations of this ModelConfiguration. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"model_configuration"},{"location":"api-reference/#deepsearch.cps.apis.public.models.model_supported_annotations_parameters","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ModelSupportedAnnotationsParameters \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( model_config_key = None , proj_key = None , public = None , local_vars_configuration = None ) \u00b6 ModelSupportedAnnotationsParameters - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint model_config_key () property writable \u00b6 Gets the model_config_key of this ModelSupportedAnnotationsParameters. # noqa: E501 :return: The model_config_key of this ModelSupportedAnnotationsParameters. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ModelSupportedAnnotationsParameters. # noqa: E501 :return: The proj_key of this ModelSupportedAnnotationsParameters. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this ModelSupportedAnnotationsParameters. # noqa: E501 :return: The public of this ModelSupportedAnnotationsParameters. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"model_supported_annotations_parameters"},{"location":"api-reference/#deepsearch.cps.apis.public.models.mongo_coordinates","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech MongoCoordinates \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( database = None , uri = None , local_vars_configuration = None ) \u00b6 MongoCoordinates - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint database () property writable \u00b6 Gets the database of this MongoCoordinates. # noqa: E501 :return: The database of this MongoCoordinates. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model uri () property writable \u00b6 Gets the uri of this MongoCoordinates. # noqa: E501 :return: The uri of this MongoCoordinates. # noqa: E501 :rtype: str","title":"mongo_coordinates"},{"location":"api-reference/#deepsearch.cps.apis.public.models.mongo_s3_coordinates","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech MongoS3Coordinates \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( mongo = None , s3 = None , local_vars_configuration = None ) \u00b6 MongoS3Coordinates - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint mongo () property writable \u00b6 Gets the mongo of this MongoS3Coordinates. # noqa: E501 :return: The mongo of this MongoS3Coordinates. # noqa: E501 :rtype: MongoCoordinates s3 () property writable \u00b6 Gets the s3 of this MongoS3Coordinates. # noqa: E501 :return: The s3 of this MongoS3Coordinates. # noqa: E501 :rtype: S3Coordinates to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"mongo_s3_coordinates"},{"location":"api-reference/#deepsearch.cps.apis.public.models.mongo_s3_coordinates_with_collection_list","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech MongoS3CoordinatesWithCollectionList \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( mongo = None , s3 = None , collections = None , local_vars_configuration = None ) \u00b6 MongoS3CoordinatesWithCollectionList - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collections () property writable \u00b6 Gets the collections of this MongoS3CoordinatesWithCollectionList. # noqa: E501 :return: The collections of this MongoS3CoordinatesWithCollectionList. # noqa: E501 :rtype: list[str] mongo () property writable \u00b6 Gets the mongo of this MongoS3CoordinatesWithCollectionList. # noqa: E501 :return: The mongo of this MongoS3CoordinatesWithCollectionList. # noqa: E501 :rtype: MongoCoordinates s3 () property writable \u00b6 Gets the s3 of this MongoS3CoordinatesWithCollectionList. # noqa: E501 :return: The s3 of this MongoS3CoordinatesWithCollectionList. # noqa: E501 :rtype: S3Coordinates to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"mongo_s3_coordinates_with_collection_list"},{"location":"api-reference/#deepsearch.cps.apis.public.models.patch_data_catalog_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech PatchDataCatalogOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( category_schemas = None , collections_data_flows = None , description = None , name = None , public = None , topology = None , local_vars_configuration = None ) \u00b6 PatchDataCatalogOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint category_schemas () property writable \u00b6 Gets the category_schemas of this PatchDataCatalogOptions. # noqa: E501 :return: The category_schemas of this PatchDataCatalogOptions. # noqa: E501 :rtype: list[DataCatalogCategorySchema] collections_data_flows () property writable \u00b6 Gets the collections_data_flows of this PatchDataCatalogOptions. # noqa: E501 :return: The collections_data_flows of this PatchDataCatalogOptions. # noqa: E501 :rtype: list[DataCatalogDataFlow] description () property writable \u00b6 Gets the description of this PatchDataCatalogOptions. # noqa: E501 :return: The description of this PatchDataCatalogOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this PatchDataCatalogOptions. # noqa: E501 :return: The name of this PatchDataCatalogOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this PatchDataCatalogOptions. # noqa: E501 :return: The public of this PatchDataCatalogOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model topology () property writable \u00b6 Gets the topology of this PatchDataCatalogOptions. # noqa: E501 :return: The topology of this PatchDataCatalogOptions. # noqa: E501 :rtype: DataCatalogTopology","title":"patch_data_catalog_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.patch_dictionary_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech PatchDictionaryOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , name = None , public = None , local_vars_configuration = None ) \u00b6 PatchDictionaryOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this PatchDictionaryOptions. # noqa: E501 :return: The description of this PatchDictionaryOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this PatchDictionaryOptions. # noqa: E501 :return: The name of this PatchDictionaryOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this PatchDictionaryOptions. # noqa: E501 :return: The public of this PatchDictionaryOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"patch_dictionary_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.patch_knowledge_graph_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech PatchKnowledgeGraphOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , name = None , public = None , local_vars_configuration = None ) \u00b6 PatchKnowledgeGraphOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this PatchKnowledgeGraphOptions. # noqa: E501 :return: The description of this PatchKnowledgeGraphOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this PatchKnowledgeGraphOptions. # noqa: E501 :return: The name of this PatchKnowledgeGraphOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this PatchKnowledgeGraphOptions. # noqa: E501 :return: The public of this PatchKnowledgeGraphOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"patch_knowledge_graph_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.patch_knowledge_graph_options1","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech PatchKnowledgeGraphOptions1 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , name = None , public = None , local_vars_configuration = None ) \u00b6 PatchKnowledgeGraphOptions1 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this PatchKnowledgeGraphOptions1. # noqa: E501 :return: The description of this PatchKnowledgeGraphOptions1. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this PatchKnowledgeGraphOptions1. # noqa: E501 :return: The name of this PatchKnowledgeGraphOptions1. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this PatchKnowledgeGraphOptions1. # noqa: E501 :return: The public of this PatchKnowledgeGraphOptions1. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"patch_knowledge_graph_options1"},{"location":"api-reference/#deepsearch.cps.apis.public.models.problem","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech Problem \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( detail = None , status = None , title = None , type = None , local_vars_configuration = None ) \u00b6 Problem - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint detail () property writable \u00b6 Gets the detail of this Problem. # noqa: E501 :return: The detail of this Problem. # noqa: E501 :rtype: str status () property writable \u00b6 Gets the status of this Problem. # noqa: E501 :return: The status of this Problem. # noqa: E501 :rtype: int title () property writable \u00b6 Gets the title of this Problem. # noqa: E501 :return: The title of this Problem. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this Problem. # noqa: E501 :return: The type of this Problem. # noqa: E501 :rtype: str","title":"problem"},{"location":"api-reference/#deepsearch.cps.apis.public.models.processing_model","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProcessingModel \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( dataflow = None , variables = None , local_vars_configuration = None ) \u00b6 ProcessingModel - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint dataflow () property writable \u00b6 Gets the dataflow of this ProcessingModel. # noqa: E501 :return: The dataflow of this ProcessingModel. # noqa: E501 :rtype: ProcessingModelDataFlow to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this ProcessingModel. # noqa: E501 :return: The variables of this ProcessingModel. # noqa: E501 :rtype: dict(str, ProjectProjKeyModelConfigsConfigurations)","title":"processing_model"},{"location":"api-reference/#deepsearch.cps.apis.public.models.processing_model_data_flow","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProcessingModelDataFlow \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( config = None , data_flow = None , local_vars_configuration = None ) \u00b6 ProcessingModelDataFlow - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint config () property writable \u00b6 Gets the config of this ProcessingModelDataFlow. # noqa: E501 :return: The config of this ProcessingModelDataFlow. # noqa: E501 :rtype: object data_flow () property writable \u00b6 Gets the data_flow of this ProcessingModelDataFlow. # noqa: E501 :return: The data_flow of this ProcessingModelDataFlow. # noqa: E501 :rtype: list[object] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"processing_model_data_flow"},{"location":"api-reference/#deepsearch.cps.apis.public.models.processing_model_description","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProcessingModelDescription \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , display_name = None , name = None , local_vars_configuration = None ) \u00b6 ProcessingModelDescription - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this ProcessingModelDescription. # noqa: E501 :return: The description of this ProcessingModelDescription. # noqa: E501 :rtype: str display_name () property writable \u00b6 Gets the display_name of this ProcessingModelDescription. # noqa: E501 :return: The display_name of this ProcessingModelDescription. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ProcessingModelDescription. # noqa: E501 :return: The name of this ProcessingModelDescription. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"processing_model_description"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_data_index_non_view","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectDataIndexNonView \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , name = None , schema_key = 'generic' , local_vars_configuration = None ) \u00b6 ProjectDataIndexNonView - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this ProjectDataIndexNonView. # noqa: E501 Description of the Index # noqa: E501 :return: The description of this ProjectDataIndexNonView. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ProjectDataIndexNonView. # noqa: E501 Name of the data index # noqa: E501 :return: The name of this ProjectDataIndexNonView. # noqa: E501 :rtype: str schema_key () property writable \u00b6 Gets the schema_key of this ProjectDataIndexNonView. # noqa: E501 Schema key # noqa: E501 :return: The schema_key of this ProjectDataIndexNonView. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_data_index_non_view"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_data_index_source","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectDataIndexSource \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( index_key = None , proj_key = None , local_vars_configuration = None ) \u00b6 ProjectDataIndexSource - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint index_key () property writable \u00b6 Gets the index_key of this ProjectDataIndexSource. # noqa: E501 :return: The index_key of this ProjectDataIndexSource. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ProjectDataIndexSource. # noqa: E501 :return: The proj_key of this ProjectDataIndexSource. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_data_index_source"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_data_index_view","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectDataIndexView \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , name = None , view_of = None , local_vars_configuration = None ) \u00b6 ProjectDataIndexView - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this ProjectDataIndexView. # noqa: E501 Description of the index view # noqa: E501 :return: The description of this ProjectDataIndexView. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ProjectDataIndexView. # noqa: E501 Name of the data index view # noqa: E501 :return: The name of this ProjectDataIndexView. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model view_of () property writable \u00b6 Gets the view_of of this ProjectDataIndexView. # noqa: E501 :return: The view_of of this ProjectDataIndexView. # noqa: E501 :rtype: ProjectDataIndexViewOf","title":"project_data_index_view"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_data_index_view_of","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectDataIndexViewOf \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( index_key = None , instance_id = None , proj_key = None , query_options = None , local_vars_configuration = None ) \u00b6 ProjectDataIndexViewOf - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint index_key () property writable \u00b6 Gets the index_key of this ProjectDataIndexViewOf. # noqa: E501 Data index key # noqa: E501 :return: The index_key of this ProjectDataIndexViewOf. # noqa: E501 :rtype: str instance_id () property writable \u00b6 Gets the instance_id of this ProjectDataIndexViewOf. # noqa: E501 Instance id key, if the source is a data asset # noqa: E501 :return: The instance_id of this ProjectDataIndexViewOf. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ProjectDataIndexViewOf. # noqa: E501 Project id key, if the source is a project data index # noqa: E501 :return: The proj_key of this ProjectDataIndexViewOf. # noqa: E501 :rtype: str query_options () property writable \u00b6 Gets the query_options of this ProjectDataIndexViewOf. # noqa: E501 :return: The query_options of this ProjectDataIndexViewOf. # noqa: E501 :rtype: ElasticIndexSearchQueryOptions to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_data_index_view_of"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_data_index_with_status","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectDataIndexWithStatus \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( creation_date = None , description = None , documents = None , health = None , name = None , schema_key = None , source = None , status = None , type = None , view_of = None , local_vars_configuration = None ) \u00b6 ProjectDataIndexWithStatus - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint creation_date () property writable \u00b6 Gets the creation_date of this ProjectDataIndexWithStatus. # noqa: E501 :return: The creation_date of this ProjectDataIndexWithStatus. # noqa: E501 :rtype: str description () property writable \u00b6 Gets the description of this ProjectDataIndexWithStatus. # noqa: E501 :return: The description of this ProjectDataIndexWithStatus. # noqa: E501 :rtype: str documents () property writable \u00b6 Gets the documents of this ProjectDataIndexWithStatus. # noqa: E501 :return: The documents of this ProjectDataIndexWithStatus. # noqa: E501 :rtype: float health () property writable \u00b6 Gets the health of this ProjectDataIndexWithStatus. # noqa: E501 :return: The health of this ProjectDataIndexWithStatus. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ProjectDataIndexWithStatus. # noqa: E501 :return: The name of this ProjectDataIndexWithStatus. # noqa: E501 :rtype: str schema_key () property writable \u00b6 Gets the schema_key of this ProjectDataIndexWithStatus. # noqa: E501 Index's schema key # noqa: E501 :return: The schema_key of this ProjectDataIndexWithStatus. # noqa: E501 :rtype: str source () property writable \u00b6 Gets the source of this ProjectDataIndexWithStatus. # noqa: E501 :return: The source of this ProjectDataIndexWithStatus. # noqa: E501 :rtype: ProjectDataIndexSource status () property writable \u00b6 Gets the status of this ProjectDataIndexWithStatus. # noqa: E501 :return: The status of this ProjectDataIndexWithStatus. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this ProjectDataIndexWithStatus. # noqa: E501 Index type, user friendly format # noqa: E501 :return: The type of this ProjectDataIndexWithStatus. # noqa: E501 :rtype: str view_of () property writable \u00b6 Gets the view_of of this ProjectDataIndexWithStatus. # noqa: E501 :return: The view_of of this ProjectDataIndexWithStatus. # noqa: E501 :rtype: ProjectDataIndexWithStatusViewOf","title":"project_data_index_with_status"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_data_index_with_status_view_of","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectDataIndexWithStatusViewOf \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( elastic_id = None , index_key = None , proj_key = None , query_options = None , local_vars_configuration = None ) \u00b6 ProjectDataIndexWithStatusViewOf - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint elastic_id () property writable \u00b6 Gets the elastic_id of this ProjectDataIndexWithStatusViewOf. # noqa: E501 :return: The elastic_id of this ProjectDataIndexWithStatusViewOf. # noqa: E501 :rtype: str index_key () property writable \u00b6 Gets the index_key of this ProjectDataIndexWithStatusViewOf. # noqa: E501 :return: The index_key of this ProjectDataIndexWithStatusViewOf. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ProjectDataIndexWithStatusViewOf. # noqa: E501 :return: The proj_key of this ProjectDataIndexWithStatusViewOf. # noqa: E501 :rtype: str query_options () property writable \u00b6 Gets the query_options of this ProjectDataIndexWithStatusViewOf. # noqa: E501 :return: The query_options of this ProjectDataIndexWithStatusViewOf. # noqa: E501 :rtype: ElasticIndexSearchQueryOptions to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_data_index_with_status_view_of"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_default_values","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectDefaultValues \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( ccs_project = None , dataflow = None , local_vars_configuration = None ) \u00b6 ProjectDefaultValues - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint ccs_project () property writable \u00b6 Gets the ccs_project of this ProjectDefaultValues. # noqa: E501 :return: The ccs_project of this ProjectDefaultValues. # noqa: E501 :rtype: ProjectDefaultValuesCcsProject dataflow () property writable \u00b6 Gets the dataflow of this ProjectDefaultValues. # noqa: E501 :return: The dataflow of this ProjectDefaultValues. # noqa: E501 :rtype: ProjectDefaultValuesDataflow to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_default_values"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_default_values_ccs_project","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectDefaultValuesCcsProject \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collection_name = None , name = None , proj_key = None , local_vars_configuration = None ) \u00b6 ProjectDefaultValuesCcsProject - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collection_name () property writable \u00b6 Gets the collection_name of this ProjectDefaultValuesCcsProject. # noqa: E501 :return: The collection_name of this ProjectDefaultValuesCcsProject. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ProjectDefaultValuesCcsProject. # noqa: E501 :return: The name of this ProjectDefaultValuesCcsProject. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ProjectDefaultValuesCcsProject. # noqa: E501 :return: The proj_key of this ProjectDefaultValuesCcsProject. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_default_values_ccs_project"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_default_values_dataflow","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectDefaultValuesDataflow \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( df_tpl_key = None , name = None , local_vars_configuration = None ) \u00b6 ProjectDefaultValuesDataflow - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint df_tpl_key () property writable \u00b6 Gets the df_tpl_key of this ProjectDefaultValuesDataflow. # noqa: E501 :return: The df_tpl_key of this ProjectDefaultValuesDataflow. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ProjectDefaultValuesDataflow. # noqa: E501 :return: The name of this ProjectDefaultValuesDataflow. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_default_values_dataflow"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_flavour_total_kgs","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectFlavourTotalKgs \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( flavour_name = None , proj_key = None , total_kgs = None , local_vars_configuration = None ) \u00b6 ProjectFlavourTotalKgs - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint flavour_name () property writable \u00b6 Gets the flavour_name of this ProjectFlavourTotalKgs. # noqa: E501 :return: The flavour_name of this ProjectFlavourTotalKgs. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ProjectFlavourTotalKgs. # noqa: E501 :return: The proj_key of this ProjectFlavourTotalKgs. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model total_kgs () property writable \u00b6 Gets the total_kgs of this ProjectFlavourTotalKgs. # noqa: E501 :return: The total_kgs of this ProjectFlavourTotalKgs. # noqa: E501 :rtype: int","title":"project_flavour_total_kgs"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_flavours","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectFlavours \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( flavours = None , proj_key = None , local_vars_configuration = None ) \u00b6 ProjectFlavours - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint flavours () property writable \u00b6 Gets the flavours of this ProjectFlavours. # noqa: E501 :return: The flavours of this ProjectFlavours. # noqa: E501 :rtype: list[BagFlavourFullData] proj_key () property writable \u00b6 Gets the proj_key of this ProjectFlavours. # noqa: E501 :return: The proj_key of this ProjectFlavours. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_flavours"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_package_instalation_manifest","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectPackageInstalationManifest \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( packages = None , local_vars_configuration = None ) \u00b6 ProjectPackageInstalationManifest - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint packages () property writable \u00b6 Gets the packages of this ProjectPackageInstalationManifest. # noqa: E501 :return: The packages of this ProjectPackageInstalationManifest. # noqa: E501 :rtype: list[ProjectProjKeyPackagesPackages] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_package_instalation_manifest"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_annotate_document_report_document","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyAnnotateDocumentReportDocument \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( input_scratch_id = None , output_scratch_id = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyAnnotateDocumentReportDocument - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint input_scratch_id () property writable \u00b6 Gets the input_scratch_id of this ProjectProjKeyAnnotateDocumentReportDocument. # noqa: E501 :return: The input_scratch_id of this ProjectProjKeyAnnotateDocumentReportDocument. # noqa: E501 :rtype: str output_scratch_id () property writable \u00b6 Gets the output_scratch_id of this ProjectProjKeyAnnotateDocumentReportDocument. # noqa: E501 :return: The output_scratch_id of this ProjectProjKeyAnnotateDocumentReportDocument. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_proj_key_annotate_document_report_document"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_annotate_document_report_report","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyAnnotateDocumentReportReport \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , review_consent = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyAnnotateDocumentReportReport - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this ProjectProjKeyAnnotateDocumentReportReport. # noqa: E501 :return: The description of this ProjectProjKeyAnnotateDocumentReportReport. # noqa: E501 :rtype: str review_consent () property writable \u00b6 Gets the review_consent of this ProjectProjKeyAnnotateDocumentReportReport. # noqa: E501 :return: The review_consent of this ProjectProjKeyAnnotateDocumentReportReport. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_proj_key_annotate_document_report_report"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_bags_bag_key_tasks_assemble_dataflow_data_flow","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( render_options = None , template = None , variables = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint render_options () property writable \u00b6 Gets the render_options of this ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :return: The render_options of this ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :rtype: ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions template () property writable \u00b6 Gets the template of this ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :return: The template of this ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :return: The variables of this ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow. # noqa: E501 :rtype: object","title":"project_proj_key_bags_bag_key_tasks_assemble_dataflow_data_flow"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_bags_bag_key_tasks_assemble_dataflow_data_flow_render_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( target_bag = None , variables = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint target_bag () property writable \u00b6 Gets the target_bag of this ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions. # noqa: E501 :return: The target_bag of this ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions. # noqa: E501 :return: The variables of this ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions. # noqa: E501 :rtype: object","title":"project_proj_key_bags_bag_key_tasks_assemble_dataflow_data_flow_render_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_bags_bag_key_tasks_export_dataset_info","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyBagsBagKeyTasksExportDatasetInfo \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collection_key = None , coords = None , include_s3_data = False , node_list = None , projection = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyBagsBagKeyTasksExportDatasetInfo - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collection_key () property writable \u00b6 Gets the collection_key of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfo. # noqa: E501 :return: The collection_key of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfo. # noqa: E501 :rtype: str coords () property writable \u00b6 Gets the coords of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfo. # noqa: E501 :return: The coords of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfo. # noqa: E501 :rtype: ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords include_s3_data () property writable \u00b6 Gets the include_s3_data of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfo. # noqa: E501 :return: The include_s3_data of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfo. # noqa: E501 :rtype: bool node_list () property writable \u00b6 Gets the node_list of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfo. # noqa: E501 :return: The node_list of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfo. # noqa: E501 :rtype: list[ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList] projection () property writable \u00b6 Gets the projection of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfo. # noqa: E501 A dict specifying the fields to include or exclude. Use a dict to exclude fields from the result (e.g. projection={'main-text': false}). # noqa: E501 :return: The projection of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfo. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_proj_key_bags_bag_key_tasks_export_dataset_info"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_bags_bag_key_tasks_export_dataset_info_coords","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( databases = None , node_collection = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint databases () property writable \u00b6 Gets the databases of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords. # noqa: E501 :return: The databases of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords. # noqa: E501 :rtype: object node_collection () property writable \u00b6 Gets the node_collection of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords. # noqa: E501 :return: The node_collection of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords. # noqa: E501 :rtype: ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_proj_key_bags_bag_key_tasks_export_dataset_info_coords"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_bags_bag_key_tasks_export_dataset_info_coords_node_collection","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( collection = None , collection_name_prefix = None , database = None , uri = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint collection () property writable \u00b6 Gets the collection of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection. # noqa: E501 :return: The collection of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection. # noqa: E501 :rtype: str collection_name_prefix () property writable \u00b6 Gets the collection_name_prefix of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection. # noqa: E501 :return: The collection_name_prefix of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection. # noqa: E501 :rtype: str database () property writable \u00b6 Gets the database of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection. # noqa: E501 :return: The database of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model uri () property writable \u00b6 Gets the uri of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection. # noqa: E501 :return: The uri of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection. # noqa: E501 :rtype: str","title":"project_proj_key_bags_bag_key_tasks_export_dataset_info_coords_node_collection"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_bags_bag_key_tasks_export_dataset_info_node_list","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( db = None , id = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint db () property writable \u00b6 Gets the db of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList. # noqa: E501 :return: The db of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList. # noqa: E501 :rtype: str id () property writable \u00b6 Gets the id of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList. # noqa: E501 :return: The id of this ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_proj_key_bags_bag_key_tasks_export_dataset_info_node_list"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_bags_bag_key_tasks_suspend_snapshot","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyBagsBagKeyTasksSuspendSnapshot \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyBagsBagKeyTasksSuspendSnapshot - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this ProjectProjKeyBagsBagKeyTasksSuspendSnapshot. # noqa: E501 :return: The name of this ProjectProjKeyBagsBagKeyTasksSuspendSnapshot. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_proj_key_bags_bag_key_tasks_suspend_snapshot"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_data_catalogues_dc_key_collections_collection_name_actions_import_ccs","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( auth_token = None , export_package_mongo_options = None , proj_key = None , source_collection_name = None , url = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint auth_token () property writable \u00b6 Gets the auth_token of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs. # noqa: E501 :return: The auth_token of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs. # noqa: E501 :rtype: str export_package_mongo_options () property writable \u00b6 Gets the export_package_mongo_options of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs. # noqa: E501 :return: The export_package_mongo_options of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions proj_key () property writable \u00b6 Gets the proj_key of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs. # noqa: E501 :return: The proj_key of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs. # noqa: E501 :rtype: str source_collection_name () property writable \u00b6 Gets the source_collection_name of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs. # noqa: E501 :return: The source_collection_name of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs. # noqa: E501 :return: The url of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs. # noqa: E501 :rtype: str","title":"project_proj_key_data_catalogues_dc_key_collections_collection_name_actions_import_ccs"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_data_catalogues_dc_key_collections_collection_name_actions_import_ccs_export_package_mongo_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( assemble_options = None , incremental = None , inputs = None , package_options = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint assemble_options () property writable \u00b6 Gets the assemble_options of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions. # noqa: E501 :return: The assemble_options of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions incremental () property writable \u00b6 Gets the incremental of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions. # noqa: E501 :return: The incremental of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions. # noqa: E501 :rtype: bool inputs () property writable \u00b6 Gets the inputs of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions. # noqa: E501 :return: The inputs of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsInputs package_options () property writable \u00b6 Gets the package_options of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions. # noqa: E501 :return: The package_options of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_proj_key_data_catalogues_dc_key_collections_collection_name_actions_import_ccs_export_package_mongo_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_data_catalogues_dc_key_collections_collection_name_actions_import_ccs_export_package_mongo_options_assemble_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( mode = None , options = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint mode () property writable \u00b6 Gets the mode of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions. # noqa: E501 :return: The mode of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode options () property writable \u00b6 Gets the options of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions. # noqa: E501 :return: The options of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions. # noqa: E501 :rtype: ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsOptions to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_proj_key_data_catalogues_dc_key_collections_collection_name_actions_import_ccs_export_package_mongo_options_assemble_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_data_catalogues_dc_key_collections_collection_name_actions_import_ccs_export_package_mongo_options_assemble_options_mode","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( page_elements = None , tables = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint page_elements () property writable \u00b6 Gets the page_elements of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode. # noqa: E501 Which type of annotations to filter for the page elements: H (human annotations), M (model generated) # noqa: E501 :return: The page_elements of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode. # noqa: E501 :rtype: list[str] tables () property writable \u00b6 Gets the tables of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode. # noqa: E501 Which type of annotations to filter for the tables: H (human annotations), M (model generated) # noqa: E501 :return: The tables of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_proj_key_data_catalogues_dc_key_collections_collection_name_actions_import_ccs_export_package_mongo_options_assemble_options_mode"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_data_catalogues_dc_key_collections_collection_name_actions_import_ccs_export_package_mongo_options_assemble_options_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( include_incomplete_documents = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint include_incomplete_documents () property writable \u00b6 Gets the include_incomplete_documents of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsOptions. # noqa: E501 Include documents with missing pages? (e.g. no annotations for some pages) # noqa: E501 :return: The include_incomplete_documents of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_proj_key_data_catalogues_dc_key_collections_collection_name_actions_import_ccs_export_package_mongo_options_assemble_options_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_data_catalogues_dc_key_collections_collection_name_actions_import_ccs_export_package_mongo_options_inputs","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsInputs \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( document_hashes = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsInputs - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint document_hashes () property writable \u00b6 Gets the document_hashes of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsInputs. # noqa: E501 :return: The document_hashes of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsInputs. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_proj_key_data_catalogues_dc_key_collections_collection_name_actions_import_ccs_export_package_mongo_options_inputs"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_data_catalogues_dc_key_collections_collection_name_actions_import_ccs_export_package_mongo_options_package_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( match_mode = 'document_hash' , redirect_keys_to_s3 = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint match_mode () property writable \u00b6 Gets the match_mode of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions. # noqa: E501 :return: The match_mode of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions. # noqa: E501 :rtype: str redirect_keys_to_s3 () property writable \u00b6 Gets the redirect_keys_to_s3 of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions. # noqa: E501 :return: The redirect_keys_to_s3 of this ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_proj_key_data_catalogues_dc_key_collections_collection_name_actions_import_ccs_export_package_mongo_options_package_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_data_catalogues_from_mongo_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDataCataloguesFromMongoOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( coordinates = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDataCataloguesFromMongoOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint coordinates () property writable \u00b6 Gets the coordinates of this ProjectProjKeyDataCataloguesFromMongoOptions. # noqa: E501 :return: The coordinates of this ProjectProjKeyDataCataloguesFromMongoOptions. # noqa: E501 :rtype: MongoS3CoordinatesWithCollectionList to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_proj_key_data_catalogues_from_mongo_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_data_catalogues_from_mongo_target","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDataCataloguesFromMongoTarget \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , name = None , public = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDataCataloguesFromMongoTarget - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this ProjectProjKeyDataCataloguesFromMongoTarget. # noqa: E501 :return: The description of this ProjectProjKeyDataCataloguesFromMongoTarget. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ProjectProjKeyDataCataloguesFromMongoTarget. # noqa: E501 :return: The name of this ProjectProjKeyDataCataloguesFromMongoTarget. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this ProjectProjKeyDataCataloguesFromMongoTarget. # noqa: E501 :return: The public of this ProjectProjKeyDataCataloguesFromMongoTarget. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_proj_key_data_catalogues_from_mongo_target"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_data_catalogues_from_url_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDataCataloguesFromUrlOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( url = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDataCataloguesFromUrlOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this ProjectProjKeyDataCataloguesFromUrlOptions. # noqa: E501 :return: The url of this ProjectProjKeyDataCataloguesFromUrlOptions. # noqa: E501 :rtype: str","title":"project_proj_key_data_catalogues_from_url_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_dictionaries_from_mongo_target","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyDictionariesFromMongoTarget \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , name = None , public = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyDictionariesFromMongoTarget - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this ProjectProjKeyDictionariesFromMongoTarget. # noqa: E501 :return: The description of this ProjectProjKeyDictionariesFromMongoTarget. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ProjectProjKeyDictionariesFromMongoTarget. # noqa: E501 :return: The name of this ProjectProjKeyDictionariesFromMongoTarget. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this ProjectProjKeyDictionariesFromMongoTarget. # noqa: E501 :return: The public of this ProjectProjKeyDictionariesFromMongoTarget. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_proj_key_dictionaries_from_mongo_target"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_kgc_dataflow_templates_debug_df_tpl_key_target_bag","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( bag_key = None , proj_key = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bag_key () property writable \u00b6 Gets the bag_key of this ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag. # noqa: E501 :return: The bag_key of this ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag. # noqa: E501 :return: The proj_key of this ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_proj_key_kgc_dataflow_templates_debug_df_tpl_key_target_bag"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_kgc_dataflow_templates_df_tpl_key_actions_load_render","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( target_bag = None , variables = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint target_bag () property writable \u00b6 Gets the target_bag of this ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender. # noqa: E501 :return: The target_bag of this ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender. # noqa: E501 :rtype: ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender. # noqa: E501 :return: The variables of this ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender. # noqa: E501 :rtype: dict(str, object)","title":"project_proj_key_kgc_dataflow_templates_df_tpl_key_actions_load_render"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_kgc_dataflow_templates_df_tpl_key_actions_load_render_target_bag","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( bag_key = None , proj_key = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bag_key () property writable \u00b6 Gets the bag_key of this ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag. # noqa: E501 :return: The bag_key of this ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag. # noqa: E501 If set, this will override the 'proj_key' parameter in the path, allowing cross-project KGs to be used. # noqa: E501 :return: The proj_key of this ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_proj_key_kgc_dataflow_templates_df_tpl_key_actions_load_render_target_bag"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_kgc_dataflow_templates_df_tpl_key_actions_load_target","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadTarget \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( save = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadTarget - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint save () property writable \u00b6 Gets the save of this ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadTarget. # noqa: E501 :return: The save of this ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadTarget. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_proj_key_kgc_dataflow_templates_df_tpl_key_actions_load_target"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_kgc_dataflow_templates_variables","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyKgcDataflowTemplatesVariables \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( default_value = None , type = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyKgcDataflowTemplatesVariables - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint default_value () property writable \u00b6 Gets the default_value of this ProjectProjKeyKgcDataflowTemplatesVariables. # noqa: E501 :return: The default_value of this ProjectProjKeyKgcDataflowTemplatesVariables. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this ProjectProjKeyKgcDataflowTemplatesVariables. # noqa: E501 :return: The type of this ProjectProjKeyKgcDataflowTemplatesVariables. # noqa: E501 :rtype: DataFlowTemplateVariable","title":"project_proj_key_kgc_dataflow_templates_variables"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_kgc_raw_dataflow_templates_actions_run_data_flow","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( template = None , variables = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint template () property writable \u00b6 Gets the template of this ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow. # noqa: E501 :return: The template of this ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow. # noqa: E501 :rtype: ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow. # noqa: E501 :return: The variables of this ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow. # noqa: E501 :rtype: dict(str, object)","title":"project_proj_key_kgc_raw_dataflow_templates_actions_run_data_flow"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_kgc_raw_dataflow_templates_actions_run_data_flow_template","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( config = None , data_flow = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint config () property writable \u00b6 Gets the config of this ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate. # noqa: E501 :return: The config of this ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate. # noqa: E501 :rtype: object data_flow () property writable \u00b6 Gets the data_flow of this ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate. # noqa: E501 :return: The data_flow of this ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate. # noqa: E501 :rtype: list[object] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_proj_key_kgc_raw_dataflow_templates_actions_run_data_flow_template"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_model_configs_configurations","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyModelConfigsConfigurations \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( type = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyModelConfigsConfigurations - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this ProjectProjKeyModelConfigsConfigurations. # noqa: E501 :return: The type of this ProjectProjKeyModelConfigsConfigurations. # noqa: E501 :rtype: str","title":"project_proj_key_model_configs_configurations"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_proj_key_packages_packages","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectProjKeyPackagesPackages \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( overrides = None , package_id = None , local_vars_configuration = None ) \u00b6 ProjectProjKeyPackagesPackages - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint overrides () property writable \u00b6 Gets the overrides of this ProjectProjKeyPackagesPackages. # noqa: E501 :return: The overrides of this ProjectProjKeyPackagesPackages. # noqa: E501 :rtype: object package_id () property writable \u00b6 Gets the package_id of this ProjectProjKeyPackagesPackages. # noqa: E501 :return: The package_id of this ProjectProjKeyPackagesPackages. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project_proj_key_packages_packages"},{"location":"api-reference/#deepsearch.cps.apis.public.models.project_task","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectTask \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( completed_at = None , created_at = None , meta = None , progress = None , proj_key = None , started_at = None , task_id = None , task_status = None , task_type = None , user_key = None , local_vars_configuration = None ) \u00b6 ProjectTask - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint completed_at () property writable \u00b6 Gets the completed_at of this ProjectTask. # noqa: E501 :return: The completed_at of this ProjectTask. # noqa: E501 :rtype: float created_at () property writable \u00b6 Gets the created_at of this ProjectTask. # noqa: E501 :return: The created_at of this ProjectTask. # noqa: E501 :rtype: float meta () property writable \u00b6 Gets the meta of this ProjectTask. # noqa: E501 :return: The meta of this ProjectTask. # noqa: E501 :rtype: object progress () property writable \u00b6 Gets the progress of this ProjectTask. # noqa: E501 :return: The progress of this ProjectTask. # noqa: E501 :rtype: float proj_key () property writable \u00b6 Gets the proj_key of this ProjectTask. # noqa: E501 :return: The proj_key of this ProjectTask. # noqa: E501 :rtype: str started_at () property writable \u00b6 Gets the started_at of this ProjectTask. # noqa: E501 :return: The started_at of this ProjectTask. # noqa: E501 :rtype: float task_id () property writable \u00b6 Gets the task_id of this ProjectTask. # noqa: E501 :return: The task_id of this ProjectTask. # noqa: E501 :rtype: str task_status () property writable \u00b6 Gets the task_status of this ProjectTask. # noqa: E501 :return: The task_status of this ProjectTask. # noqa: E501 :rtype: str task_type () property writable \u00b6 Gets the task_type of this ProjectTask. # noqa: E501 :return: The task_type of this ProjectTask. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model user_key () property writable \u00b6 Gets the user_key of this ProjectTask. # noqa: E501 :return: The user_key of this ProjectTask. # noqa: E501 :rtype: str","title":"project_task"},{"location":"api-reference/#deepsearch.cps.apis.public.models.projects_flavours","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectsFlavours \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( flavours = None , name = None , proj_key = None , local_vars_configuration = None ) \u00b6 ProjectsFlavours - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint flavours () property writable \u00b6 Gets the flavours of this ProjectsFlavours. # noqa: E501 :return: The flavours of this ProjectsFlavours. # noqa: E501 :rtype: list[ProjectsFlavoursFlavours] name () property writable \u00b6 Gets the name of this ProjectsFlavours. # noqa: E501 :return: The name of this ProjectsFlavours. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ProjectsFlavours. # noqa: E501 :return: The proj_key of this ProjectsFlavours. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"projects_flavours"},{"location":"api-reference/#deepsearch.cps.apis.public.models.projects_flavours_flavours","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectsFlavoursFlavours \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( display_name = None , name = None , local_vars_configuration = None ) \u00b6 ProjectsFlavoursFlavours - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint display_name () property writable \u00b6 Gets the display_name of this ProjectsFlavoursFlavours. # noqa: E501 :return: The display_name of this ProjectsFlavoursFlavours. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this ProjectsFlavoursFlavours. # noqa: E501 :return: The name of this ProjectsFlavoursFlavours. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"projects_flavours_flavours"},{"location":"api-reference/#deepsearch.cps.apis.public.models.projects_flavours_quota","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ProjectsFlavoursQuota \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , proj_key = None , quotas = None , local_vars_configuration = None ) \u00b6 ProjectsFlavoursQuota - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this ProjectsFlavoursQuota. # noqa: E501 :return: The name of this ProjectsFlavoursQuota. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this ProjectsFlavoursQuota. # noqa: E501 :return: The proj_key of this ProjectsFlavoursQuota. # noqa: E501 :rtype: str quotas () property writable \u00b6 Gets the quotas of this ProjectsFlavoursQuota. # noqa: E501 :return: The quotas of this ProjectsFlavoursQuota. # noqa: E501 :rtype: list[FlavoursQuota] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"projects_flavours_quota"},{"location":"api-reference/#deepsearch.cps.apis.public.models.related_task","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech RelatedTask \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( task_id = None , task_type = None , local_vars_configuration = None ) \u00b6 RelatedTask - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint task_id () property writable \u00b6 Gets the task_id of this RelatedTask. # noqa: E501 :return: The task_id of this RelatedTask. # noqa: E501 :rtype: str task_type () property writable \u00b6 Gets the task_type of this RelatedTask. # noqa: E501 :return: The task_type of this RelatedTask. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"related_task"},{"location":"api-reference/#deepsearch.cps.apis.public.models.relationship_annotation_column","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech RelationshipAnnotationColumn \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( entities = None , key = None , local_vars_configuration = None ) \u00b6 RelationshipAnnotationColumn - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint entities () property writable \u00b6 Gets the entities of this RelationshipAnnotationColumn. # noqa: E501 :return: The entities of this RelationshipAnnotationColumn. # noqa: E501 :rtype: list[str] key () property writable \u00b6 Gets the key of this RelationshipAnnotationColumn. # noqa: E501 :return: The key of this RelationshipAnnotationColumn. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"relationship_annotation_column"},{"location":"api-reference/#deepsearch.cps.apis.public.models.relationship_annotation_descriptor","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech RelationshipAnnotationDescriptor \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( columns = None , description = None , key = None , local_vars_configuration = None ) \u00b6 RelationshipAnnotationDescriptor - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint columns () property writable \u00b6 Gets the columns of this RelationshipAnnotationDescriptor. # noqa: E501 :return: The columns of this RelationshipAnnotationDescriptor. # noqa: E501 :rtype: list[RelationshipAnnotationColumn] description () property writable \u00b6 Gets the description of this RelationshipAnnotationDescriptor. # noqa: E501 :return: The description of this RelationshipAnnotationDescriptor. # noqa: E501 :rtype: str key () property writable \u00b6 Gets the key of this RelationshipAnnotationDescriptor. # noqa: E501 :return: The key of this RelationshipAnnotationDescriptor. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"relationship_annotation_descriptor"},{"location":"api-reference/#deepsearch.cps.apis.public.models.render_data_flow_template_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech RenderDataFlowTemplateOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( target_bag = None , variables = None , local_vars_configuration = None ) \u00b6 RenderDataFlowTemplateOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint target_bag () property writable \u00b6 Gets the target_bag of this RenderDataFlowTemplateOptions. # noqa: E501 :return: The target_bag of this RenderDataFlowTemplateOptions. # noqa: E501 :rtype: ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this RenderDataFlowTemplateOptions. # noqa: E501 :return: The variables of this RenderDataFlowTemplateOptions. # noqa: E501 :rtype: dict(str, object)","title":"render_data_flow_template_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.restore_knowledge_graph_backup_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech RestoreKnowledgeGraphBackupOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( coordinates = None , local_vars_configuration = None ) \u00b6 RestoreKnowledgeGraphBackupOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint coordinates () property writable \u00b6 Gets the coordinates of this RestoreKnowledgeGraphBackupOptions. # noqa: E501 :return: The coordinates of this RestoreKnowledgeGraphBackupOptions. # noqa: E501 :rtype: S3CoordinatesWithBackupKey to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"restore_knowledge_graph_backup_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.resume_knowledge_graph_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech ResumeKnowledgeGraphOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( reset = None , snapshot_to_restore_id = None , local_vars_configuration = None ) \u00b6 ResumeKnowledgeGraphOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint reset () property writable \u00b6 Gets the reset of this ResumeKnowledgeGraphOptions. # noqa: E501 :return: The reset of this ResumeKnowledgeGraphOptions. # noqa: E501 :rtype: bool snapshot_to_restore_id () property writable \u00b6 Gets the snapshot_to_restore_id of this ResumeKnowledgeGraphOptions. # noqa: E501 :return: The snapshot_to_restore_id of this ResumeKnowledgeGraphOptions. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"resume_knowledge_graph_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.run_data_flow_template_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech RunDataFlowTemplateOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( target_bag_key = None , variables = None , local_vars_configuration = None ) \u00b6 RunDataFlowTemplateOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint target_bag_key () property writable \u00b6 Gets the target_bag_key of this RunDataFlowTemplateOptions. # noqa: E501 :return: The target_bag_key of this RunDataFlowTemplateOptions. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this RunDataFlowTemplateOptions. # noqa: E501 :return: The variables of this RunDataFlowTemplateOptions. # noqa: E501 :rtype: dict(str, object)","title":"run_data_flow_template_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.run_data_flow_template_options1","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech RunDataFlowTemplateOptions1 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( data_flow = None , log_task = True , variable_values = None , local_vars_configuration = None ) \u00b6 RunDataFlowTemplateOptions1 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint data_flow () property writable \u00b6 Gets the data_flow of this RunDataFlowTemplateOptions1. # noqa: E501 :return: The data_flow of this RunDataFlowTemplateOptions1. # noqa: E501 :rtype: ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow log_task () property writable \u00b6 Gets the log_task of this RunDataFlowTemplateOptions1. # noqa: E501 :return: The log_task of this RunDataFlowTemplateOptions1. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variable_values () property writable \u00b6 Gets the variable_values of this RunDataFlowTemplateOptions1. # noqa: E501 :return: The variable_values of this RunDataFlowTemplateOptions1. # noqa: E501 :rtype: dict(str, object)","title":"run_data_flow_template_options1"},{"location":"api-reference/#deepsearch.cps.apis.public.models.s3_coordinates","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech S3Coordinates \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( access_key = None , bucket = None , host = None , key_prefix = None , location = None , port = None , secret_key = None , ssl = None , verify_ssl = None , local_vars_configuration = None ) \u00b6 S3Coordinates - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint access_key () property writable \u00b6 Gets the access_key of this S3Coordinates. # noqa: E501 :return: The access_key of this S3Coordinates. # noqa: E501 :rtype: str bucket () property writable \u00b6 Gets the bucket of this S3Coordinates. # noqa: E501 :return: The bucket of this S3Coordinates. # noqa: E501 :rtype: str host () property writable \u00b6 Gets the host of this S3Coordinates. # noqa: E501 :return: The host of this S3Coordinates. # noqa: E501 :rtype: str key_prefix () property writable \u00b6 Gets the key_prefix of this S3Coordinates. # noqa: E501 :return: The key_prefix of this S3Coordinates. # noqa: E501 :rtype: str location () property writable \u00b6 Gets the location of this S3Coordinates. # noqa: E501 :return: The location of this S3Coordinates. # noqa: E501 :rtype: str port () property writable \u00b6 Gets the port of this S3Coordinates. # noqa: E501 :return: The port of this S3Coordinates. # noqa: E501 :rtype: int secret_key () property writable \u00b6 Gets the secret_key of this S3Coordinates. # noqa: E501 :return: The secret_key of this S3Coordinates. # noqa: E501 :rtype: str ssl () property writable \u00b6 Gets the ssl of this S3Coordinates. # noqa: E501 :return: The ssl of this S3Coordinates. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model verify_ssl () property writable \u00b6 Gets the verify_ssl of this S3Coordinates. # noqa: E501 :return: The verify_ssl of this S3Coordinates. # noqa: E501 :rtype: bool","title":"s3_coordinates"},{"location":"api-reference/#deepsearch.cps.apis.public.models.s3_coordinates_with_backup_key","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech S3CoordinatesWithBackupKey \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( access_key = None , backup_key = None , bucket = None , host = None , location = None , port = None , presigned = None , secret_key = None , ssl = None , verify_ssl = None , local_vars_configuration = None ) \u00b6 S3CoordinatesWithBackupKey - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint access_key () property writable \u00b6 Gets the access_key of this S3CoordinatesWithBackupKey. # noqa: E501 :return: The access_key of this S3CoordinatesWithBackupKey. # noqa: E501 :rtype: str backup_key () property writable \u00b6 Gets the backup_key of this S3CoordinatesWithBackupKey. # noqa: E501 :return: The backup_key of this S3CoordinatesWithBackupKey. # noqa: E501 :rtype: str bucket () property writable \u00b6 Gets the bucket of this S3CoordinatesWithBackupKey. # noqa: E501 :return: The bucket of this S3CoordinatesWithBackupKey. # noqa: E501 :rtype: str host () property writable \u00b6 Gets the host of this S3CoordinatesWithBackupKey. # noqa: E501 :return: The host of this S3CoordinatesWithBackupKey. # noqa: E501 :rtype: str location () property writable \u00b6 Gets the location of this S3CoordinatesWithBackupKey. # noqa: E501 :return: The location of this S3CoordinatesWithBackupKey. # noqa: E501 :rtype: str port () property writable \u00b6 Gets the port of this S3CoordinatesWithBackupKey. # noqa: E501 :return: The port of this S3CoordinatesWithBackupKey. # noqa: E501 :rtype: int presigned () property writable \u00b6 Gets the presigned of this S3CoordinatesWithBackupKey. # noqa: E501 :return: The presigned of this S3CoordinatesWithBackupKey. # noqa: E501 :rtype: S3CoordinatesWithBackupKeyPresigned secret_key () property writable \u00b6 Gets the secret_key of this S3CoordinatesWithBackupKey. # noqa: E501 :return: The secret_key of this S3CoordinatesWithBackupKey. # noqa: E501 :rtype: str ssl () property writable \u00b6 Gets the ssl of this S3CoordinatesWithBackupKey. # noqa: E501 :return: The ssl of this S3CoordinatesWithBackupKey. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model verify_ssl () property writable \u00b6 Gets the verify_ssl of this S3CoordinatesWithBackupKey. # noqa: E501 :return: The verify_ssl of this S3CoordinatesWithBackupKey. # noqa: E501 :rtype: bool","title":"s3_coordinates_with_backup_key"},{"location":"api-reference/#deepsearch.cps.apis.public.models.s3_coordinates_with_backup_key_presigned","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech S3CoordinatesWithBackupKeyPresigned \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( fields = None , url = None , local_vars_configuration = None ) \u00b6 S3CoordinatesWithBackupKeyPresigned - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint fields () property writable \u00b6 Gets the fields of this S3CoordinatesWithBackupKeyPresigned. # noqa: E501 :return: The fields of this S3CoordinatesWithBackupKeyPresigned. # noqa: E501 :rtype: dict(str, object) to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this S3CoordinatesWithBackupKeyPresigned. # noqa: E501 :return: The url of this S3CoordinatesWithBackupKeyPresigned. # noqa: E501 :rtype: str","title":"s3_coordinates_with_backup_key_presigned"},{"location":"api-reference/#deepsearch.cps.apis.public.models.storage_summary_dc","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech StorageSummaryDC \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( dc_key = None , name = None , size_bytes_db = None , size_bytes_s3 = None , size_converted_db = None , size_converted_s3 = None , local_vars_configuration = None ) \u00b6 StorageSummaryDC - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint dc_key () property writable \u00b6 Gets the dc_key of this StorageSummaryDC. # noqa: E501 :return: The dc_key of this StorageSummaryDC. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this StorageSummaryDC. # noqa: E501 :return: The name of this StorageSummaryDC. # noqa: E501 :rtype: str size_bytes_db () property writable \u00b6 Gets the size_bytes_db of this StorageSummaryDC. # noqa: E501 :return: The size_bytes_db of this StorageSummaryDC. # noqa: E501 :rtype: float size_bytes_s3 () property writable \u00b6 Gets the size_bytes_s3 of this StorageSummaryDC. # noqa: E501 :return: The size_bytes_s3 of this StorageSummaryDC. # noqa: E501 :rtype: float size_converted_db () property writable \u00b6 Gets the size_converted_db of this StorageSummaryDC. # noqa: E501 :return: The size_converted_db of this StorageSummaryDC. # noqa: E501 :rtype: str size_converted_s3 () property writable \u00b6 Gets the size_converted_s3 of this StorageSummaryDC. # noqa: E501 :return: The size_converted_s3 of this StorageSummaryDC. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"storage_summary_dc"},{"location":"api-reference/#deepsearch.cps.apis.public.models.storage_summary_kg","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech StorageSummaryKG \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( bag_key = None , categories_fraction = None , name = None , size_bytes_db = None , size_bytes_s3 = None , size_converted_db = None , size_converted_s3 = None , local_vars_configuration = None ) \u00b6 StorageSummaryKG - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bag_key () property writable \u00b6 Gets the bag_key of this StorageSummaryKG. # noqa: E501 :return: The bag_key of this StorageSummaryKG. # noqa: E501 :rtype: str categories_fraction () property writable \u00b6 Gets the categories_fraction of this StorageSummaryKG. # noqa: E501 :return: The categories_fraction of this StorageSummaryKG. # noqa: E501 :rtype: list[StorageSummaryKGCategoriesFraction] name () property writable \u00b6 Gets the name of this StorageSummaryKG. # noqa: E501 :return: The name of this StorageSummaryKG. # noqa: E501 :rtype: str size_bytes_db () property writable \u00b6 Gets the size_bytes_db of this StorageSummaryKG. # noqa: E501 :return: The size_bytes_db of this StorageSummaryKG. # noqa: E501 :rtype: float size_bytes_s3 () property writable \u00b6 Gets the size_bytes_s3 of this StorageSummaryKG. # noqa: E501 :return: The size_bytes_s3 of this StorageSummaryKG. # noqa: E501 :rtype: float size_converted_db () property writable \u00b6 Gets the size_converted_db of this StorageSummaryKG. # noqa: E501 :return: The size_converted_db of this StorageSummaryKG. # noqa: E501 :rtype: str size_converted_s3 () property writable \u00b6 Gets the size_converted_s3 of this StorageSummaryKG. # noqa: E501 :return: The size_converted_s3 of this StorageSummaryKG. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"storage_summary_kg"},{"location":"api-reference/#deepsearch.cps.apis.public.models.storage_summary_kg_categories_fraction","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech StorageSummaryKGCategoriesFraction \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( color = None , name = None , percentage = None , size_bytes_db = None , size_converted_db = None , local_vars_configuration = None ) \u00b6 StorageSummaryKGCategoriesFraction - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint color () property writable \u00b6 Gets the color of this StorageSummaryKGCategoriesFraction. # noqa: E501 :return: The color of this StorageSummaryKGCategoriesFraction. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this StorageSummaryKGCategoriesFraction. # noqa: E501 :return: The name of this StorageSummaryKGCategoriesFraction. # noqa: E501 :rtype: str percentage () property writable \u00b6 Gets the percentage of this StorageSummaryKGCategoriesFraction. # noqa: E501 :return: The percentage of this StorageSummaryKGCategoriesFraction. # noqa: E501 :rtype: float size_bytes_db () property writable \u00b6 Gets the size_bytes_db of this StorageSummaryKGCategoriesFraction. # noqa: E501 :return: The size_bytes_db of this StorageSummaryKGCategoriesFraction. # noqa: E501 :rtype: float size_converted_db () property writable \u00b6 Gets the size_converted_db of this StorageSummaryKGCategoriesFraction. # noqa: E501 :return: The size_converted_db of this StorageSummaryKGCategoriesFraction. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"storage_summary_kg_categories_fraction"},{"location":"api-reference/#deepsearch.cps.apis.public.models.storage_summary_task","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech StorageSummaryTask \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( dc_key = None , kg_key = None , kind = None , proj_key = None , task_id = None , local_vars_configuration = None ) \u00b6 StorageSummaryTask - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint dc_key () property writable \u00b6 Gets the dc_key of this StorageSummaryTask. # noqa: E501 :return: The dc_key of this StorageSummaryTask. # noqa: E501 :rtype: str kg_key () property writable \u00b6 Gets the kg_key of this StorageSummaryTask. # noqa: E501 :return: The kg_key of this StorageSummaryTask. # noqa: E501 :rtype: str kind () property writable \u00b6 Gets the kind of this StorageSummaryTask. # noqa: E501 :return: The kind of this StorageSummaryTask. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this StorageSummaryTask. # noqa: E501 :return: The proj_key of this StorageSummaryTask. # noqa: E501 :rtype: str task_id () property writable \u00b6 Gets the task_id of this StorageSummaryTask. # noqa: E501 :return: The task_id of this StorageSummaryTask. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"storage_summary_task"},{"location":"api-reference/#deepsearch.cps.apis.public.models.supported_annotator_annotations","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SupportedAnnotatorAnnotations \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( entities = None , relationships = None , supported_object_types = None , local_vars_configuration = None ) \u00b6 SupportedAnnotatorAnnotations - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint entities () property writable \u00b6 Gets the entities of this SupportedAnnotatorAnnotations. # noqa: E501 :return: The entities of this SupportedAnnotatorAnnotations. # noqa: E501 :rtype: list[EntityAnnotationDescriptor] relationships () property writable \u00b6 Gets the relationships of this SupportedAnnotatorAnnotations. # noqa: E501 :return: The relationships of this SupportedAnnotatorAnnotations. # noqa: E501 :rtype: list[RelationshipAnnotationDescriptor] supported_object_types () property writable \u00b6 Gets the supported_object_types of this SupportedAnnotatorAnnotations. # noqa: E501 :return: The supported_object_types of this SupportedAnnotatorAnnotations. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"supported_annotator_annotations"},{"location":"api-reference/#deepsearch.cps.apis.public.models.suspend_knowledge_graph_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SuspendKnowledgeGraphOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( force = None , snapshot = None , local_vars_configuration = None ) \u00b6 SuspendKnowledgeGraphOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint force () property writable \u00b6 Gets the force of this SuspendKnowledgeGraphOptions. # noqa: E501 If true, the KG will be suspended even if it's busy # noqa: E501 :return: The force of this SuspendKnowledgeGraphOptions. # noqa: E501 :rtype: bool snapshot () property writable \u00b6 Gets the snapshot of this SuspendKnowledgeGraphOptions. # noqa: E501 :return: The snapshot of this SuspendKnowledgeGraphOptions. # noqa: E501 :rtype: ProjectProjKeyBagsBagKeyTasksSuspendSnapshot to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"suspend_knowledge_graph_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.system_celery_tasks_failure_failures","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemCeleryTasksFailureFailures \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( logs = None , meta = None , task_id = None , worker_name = None , local_vars_configuration = None ) \u00b6 SystemCeleryTasksFailureFailures - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint logs () property writable \u00b6 Gets the logs of this SystemCeleryTasksFailureFailures. # noqa: E501 :return: The logs of this SystemCeleryTasksFailureFailures. # noqa: E501 :rtype: dict(str, object) meta () property writable \u00b6 Gets the meta of this SystemCeleryTasksFailureFailures. # noqa: E501 :return: The meta of this SystemCeleryTasksFailureFailures. # noqa: E501 :rtype: dict(str, object) task_id () property writable \u00b6 Gets the task_id of this SystemCeleryTasksFailureFailures. # noqa: E501 :return: The task_id of this SystemCeleryTasksFailureFailures. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model worker_name () property writable \u00b6 Gets the worker_name of this SystemCeleryTasksFailureFailures. # noqa: E501 :return: The worker_name of this SystemCeleryTasksFailureFailures. # noqa: E501 :rtype: str","title":"system_celery_tasks_failure_failures"},{"location":"api-reference/#deepsearch.cps.apis.public.models.system_info","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemInfo \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( allow_non_admins_to_make_resources_public = None , api = None , deployment = None , local_vars_configuration = None ) \u00b6 SystemInfo - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint allow_non_admins_to_make_resources_public () property writable \u00b6 Gets the allow_non_admins_to_make_resources_public of this SystemInfo. # noqa: E501 :return: The allow_non_admins_to_make_resources_public of this SystemInfo. # noqa: E501 :rtype: bool api () property writable \u00b6 Gets the api of this SystemInfo. # noqa: E501 :return: The api of this SystemInfo. # noqa: E501 :rtype: SystemInfoApi deployment () property writable \u00b6 Gets the deployment of this SystemInfo. # noqa: E501 :return: The deployment of this SystemInfo. # noqa: E501 :rtype: SystemInfoDeployment to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"system_info"},{"location":"api-reference/#deepsearch.cps.apis.public.models.system_info_api","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemInfoApi \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( build_date = None , commit_hash = None , version = None , local_vars_configuration = None ) \u00b6 SystemInfoApi - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint build_date () property writable \u00b6 Gets the build_date of this SystemInfoApi. # noqa: E501 :return: The build_date of this SystemInfoApi. # noqa: E501 :rtype: int commit_hash () property writable \u00b6 Gets the commit_hash of this SystemInfoApi. # noqa: E501 :return: The commit_hash of this SystemInfoApi. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model version () property writable \u00b6 Gets the version of this SystemInfoApi. # noqa: E501 :return: The version of this SystemInfoApi. # noqa: E501 :rtype: str","title":"system_info_api"},{"location":"api-reference/#deepsearch.cps.apis.public.models.system_info_deployment","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemInfoDeployment \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( disable_kg_actions = None , disclaimer = None , linked_ccs_api = None , name = None , should_show_warning = None , local_vars_configuration = None ) \u00b6 SystemInfoDeployment - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint disable_kg_actions () property writable \u00b6 Gets the disable_kg_actions of this SystemInfoDeployment. # noqa: E501 :return: The disable_kg_actions of this SystemInfoDeployment. # noqa: E501 :rtype: bool disclaimer () property writable \u00b6 Gets the disclaimer of this SystemInfoDeployment. # noqa: E501 :return: The disclaimer of this SystemInfoDeployment. # noqa: E501 :rtype: str linked_ccs_api () property writable \u00b6 Gets the linked_ccs_api of this SystemInfoDeployment. # noqa: E501 :return: The linked_ccs_api of this SystemInfoDeployment. # noqa: E501 :rtype: SystemInfoDeploymentLinkedCcsApi name () property writable \u00b6 Gets the name of this SystemInfoDeployment. # noqa: E501 :return: The name of this SystemInfoDeployment. # noqa: E501 :rtype: str should_show_warning () property writable \u00b6 Gets the should_show_warning of this SystemInfoDeployment. # noqa: E501 :return: The should_show_warning of this SystemInfoDeployment. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"system_info_deployment"},{"location":"api-reference/#deepsearch.cps.apis.public.models.system_info_deployment_linked_ccs_api","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemInfoDeploymentLinkedCcsApi \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( project_sync = None , uri = None , local_vars_configuration = None ) \u00b6 SystemInfoDeploymentLinkedCcsApi - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint project_sync () property writable \u00b6 Gets the project_sync of this SystemInfoDeploymentLinkedCcsApi. # noqa: E501 :return: The project_sync of this SystemInfoDeploymentLinkedCcsApi. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model uri () property writable \u00b6 Gets the uri of this SystemInfoDeploymentLinkedCcsApi. # noqa: E501 :return: The uri of this SystemInfoDeploymentLinkedCcsApi. # noqa: E501 :rtype: str","title":"system_info_deployment_linked_ccs_api"},{"location":"api-reference/#deepsearch.cps.apis.public.models.system_kgs_backend","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemKgsBackend \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( deployment = None , flavour = None , local_vars_configuration = None ) \u00b6 SystemKgsBackend - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint deployment () property writable \u00b6 Gets the deployment of this SystemKgsBackend. # noqa: E501 :return: The deployment of this SystemKgsBackend. # noqa: E501 :rtype: SystemKgsDeployment flavour () property writable \u00b6 Gets the flavour of this SystemKgsBackend. # noqa: E501 :return: The flavour of this SystemKgsBackend. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"system_kgs_backend"},{"location":"api-reference/#deepsearch.cps.apis.public.models.system_kgs_deployment","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemKgsDeployment \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( chart = None , flavour = None , name = None , resources = None , local_vars_configuration = None ) \u00b6 SystemKgsDeployment - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint chart () property writable \u00b6 Gets the chart of this SystemKgsDeployment. # noqa: E501 :return: The chart of this SystemKgsDeployment. # noqa: E501 :rtype: str flavour () property writable \u00b6 Gets the flavour of this SystemKgsDeployment. # noqa: E501 :return: The flavour of this SystemKgsDeployment. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this SystemKgsDeployment. # noqa: E501 :return: The name of this SystemKgsDeployment. # noqa: E501 :rtype: str resources () property writable \u00b6 Gets the resources of this SystemKgsDeployment. # noqa: E501 :return: The resources of this SystemKgsDeployment. # noqa: E501 :rtype: dict(str, SystemKgsDeploymentResources) to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"system_kgs_deployment"},{"location":"api-reference/#deepsearch.cps.apis.public.models.system_kgs_deployment_resources","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemKgsDeploymentResources \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( limits = None , requests = None , local_vars_configuration = None ) \u00b6 SystemKgsDeploymentResources - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint limits () property writable \u00b6 Gets the limits of this SystemKgsDeploymentResources. # noqa: E501 :return: The limits of this SystemKgsDeploymentResources. # noqa: E501 :rtype: object requests () property writable \u00b6 Gets the requests of this SystemKgsDeploymentResources. # noqa: E501 :return: The requests of this SystemKgsDeploymentResources. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"system_kgs_deployment_resources"},{"location":"api-reference/#deepsearch.cps.apis.public.models.system_modules_configuration","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemModulesConfiguration \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( df_template_variables = None , linked_ccs_instances = None , linked_elastic_instances = None , local_vars_configuration = None ) \u00b6 SystemModulesConfiguration - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint df_template_variables () property writable \u00b6 Gets the df_template_variables of this SystemModulesConfiguration. # noqa: E501 :return: The df_template_variables of this SystemModulesConfiguration. # noqa: E501 :rtype: list[WellKnownDfTemplateVariable] linked_ccs_instances () property writable \u00b6 Gets the linked_ccs_instances of this SystemModulesConfiguration. # noqa: E501 :return: The linked_ccs_instances of this SystemModulesConfiguration. # noqa: E501 :rtype: list[LinkedCcsInstances] linked_elastic_instances () property writable \u00b6 Gets the linked_elastic_instances of this SystemModulesConfiguration. # noqa: E501 :return: The linked_elastic_instances of this SystemModulesConfiguration. # noqa: E501 :rtype: list[LinkedCcsInstances] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"system_modules_configuration"},{"location":"api-reference/#deepsearch.cps.apis.public.models.system_modules_tasks","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemModulesTasks \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( tasks = None , local_vars_configuration = None ) \u00b6 SystemModulesTasks - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint tasks () property writable \u00b6 Gets the tasks of this SystemModulesTasks. # noqa: E501 :return: The tasks of this SystemModulesTasks. # noqa: E501 :rtype: dict(str, SystemModulesTasksTasks) to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"system_modules_tasks"},{"location":"api-reference/#deepsearch.cps.apis.public.models.system_modules_tasks_tasks","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech SystemModulesTasksTasks \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( schema = None , local_vars_configuration = None ) \u00b6 SystemModulesTasksTasks - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint schema () property writable \u00b6 Gets the schema of this SystemModulesTasksTasks. # noqa: E501 :return: The schema of this SystemModulesTasksTasks. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"system_modules_tasks_tasks"},{"location":"api-reference/#deepsearch.cps.apis.public.models.take_snapshot_settings","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TakeSnapshotSettings \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( flavour = None , load_into_kg_after_created = False , name = None , local_vars_configuration = None ) \u00b6 TakeSnapshotSettings - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint flavour () property writable \u00b6 Gets the flavour of this TakeSnapshotSettings. # noqa: E501 :return: The flavour of this TakeSnapshotSettings. # noqa: E501 :rtype: str load_into_kg_after_created () property writable \u00b6 Gets the load_into_kg_after_created of this TakeSnapshotSettings. # noqa: E501 :return: The load_into_kg_after_created of this TakeSnapshotSettings. # noqa: E501 :rtype: bool name () property writable \u00b6 Gets the name of this TakeSnapshotSettings. # noqa: E501 :return: The name of this TakeSnapshotSettings. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"take_snapshot_settings"},{"location":"api-reference/#deepsearch.cps.apis.public.models.take_snapshot_settings_backend_aware","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TakeSnapshotSettingsBackendAware \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( backend_flavours = None , load_into_kg_after_created = False , name = None , local_vars_configuration = None ) \u00b6 TakeSnapshotSettingsBackendAware - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint backend_flavours () property writable \u00b6 Gets the backend_flavours of this TakeSnapshotSettingsBackendAware. # noqa: E501 :return: The backend_flavours of this TakeSnapshotSettingsBackendAware. # noqa: E501 :rtype: BackendFlavour load_into_kg_after_created () property writable \u00b6 Gets the load_into_kg_after_created of this TakeSnapshotSettingsBackendAware. # noqa: E501 :return: The load_into_kg_after_created of this TakeSnapshotSettingsBackendAware. # noqa: E501 :rtype: bool name () property writable \u00b6 Gets the name of this TakeSnapshotSettingsBackendAware. # noqa: E501 :return: The name of this TakeSnapshotSettingsBackendAware. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"take_snapshot_settings_backend_aware"},{"location":"api-reference/#deepsearch.cps.apis.public.models.task","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech Task \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( error_reason = None , kind = None , proj_key = None , related_tasks = None , task_id = None , task_status = None , task_type = None , local_vars_configuration = None ) \u00b6 Task - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint error_reason () property writable \u00b6 Gets the error_reason of this Task. # noqa: E501 :return: The error_reason of this Task. # noqa: E501 :rtype: str kind () property writable \u00b6 Gets the kind of this Task. # noqa: E501 :return: The kind of this Task. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this Task. # noqa: E501 :return: The proj_key of this Task. # noqa: E501 :rtype: str related_tasks () property writable \u00b6 Gets the related_tasks of this Task. # noqa: E501 :return: The related_tasks of this Task. # noqa: E501 :rtype: list[RelatedTask] task_id () property writable \u00b6 Gets the task_id of this Task. # noqa: E501 :return: The task_id of this Task. # noqa: E501 :rtype: str task_status () property writable \u00b6 Gets the task_status of this Task. # noqa: E501 :return: The task_status of this Task. # noqa: E501 :rtype: str task_type () property writable \u00b6 Gets the task_type of this Task. # noqa: E501 :return: The task_type of this Task. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"task"},{"location":"api-reference/#deepsearch.cps.apis.public.models.temporary_upload_file_result","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TemporaryUploadFileResult \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( download = None , download_private = None , id = None , metadata = None , metadata_private = None , upload = None , upload_private = None , local_vars_configuration = None ) \u00b6 TemporaryUploadFileResult - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint download () property writable \u00b6 Gets the download of this TemporaryUploadFileResult. # noqa: E501 :return: The download of this TemporaryUploadFileResult. # noqa: E501 :rtype: TemporaryUploadFileResultDownload download_private () property writable \u00b6 Gets the download_private of this TemporaryUploadFileResult. # noqa: E501 :return: The download_private of this TemporaryUploadFileResult. # noqa: E501 :rtype: TemporaryUploadFileResultDownloadPrivate id () property writable \u00b6 Gets the id of this TemporaryUploadFileResult. # noqa: E501 ID of the temporary file. # noqa: E501 :return: The id of this TemporaryUploadFileResult. # noqa: E501 :rtype: str metadata () property writable \u00b6 Gets the metadata of this TemporaryUploadFileResult. # noqa: E501 :return: The metadata of this TemporaryUploadFileResult. # noqa: E501 :rtype: TemporaryUploadFileResultMetadata metadata_private () property writable \u00b6 Gets the metadata_private of this TemporaryUploadFileResult. # noqa: E501 :return: The metadata_private of this TemporaryUploadFileResult. # noqa: E501 :rtype: TemporaryUploadFileResultMetadataPrivate to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model upload () property writable \u00b6 Gets the upload of this TemporaryUploadFileResult. # noqa: E501 :return: The upload of this TemporaryUploadFileResult. # noqa: E501 :rtype: TemporaryUploadFileResultUpload upload_private () property writable \u00b6 Gets the upload_private of this TemporaryUploadFileResult. # noqa: E501 :return: The upload_private of this TemporaryUploadFileResult. # noqa: E501 :rtype: TemporaryUploadFileResultUploadPrivate","title":"temporary_upload_file_result"},{"location":"api-reference/#deepsearch.cps.apis.public.models.temporary_upload_file_result_download","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TemporaryUploadFileResultDownload \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( url = None , local_vars_configuration = None ) \u00b6 TemporaryUploadFileResultDownload - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this TemporaryUploadFileResultDownload. # noqa: E501 :return: The url of this TemporaryUploadFileResultDownload. # noqa: E501 :rtype: str","title":"temporary_upload_file_result_download"},{"location":"api-reference/#deepsearch.cps.apis.public.models.temporary_upload_file_result_download_private","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TemporaryUploadFileResultDownloadPrivate \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( url = None , local_vars_configuration = None ) \u00b6 TemporaryUploadFileResultDownloadPrivate - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this TemporaryUploadFileResultDownloadPrivate. # noqa: E501 :return: The url of this TemporaryUploadFileResultDownloadPrivate. # noqa: E501 :rtype: str","title":"temporary_upload_file_result_download_private"},{"location":"api-reference/#deepsearch.cps.apis.public.models.temporary_upload_file_result_metadata","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TemporaryUploadFileResultMetadata \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( url = None , local_vars_configuration = None ) \u00b6 TemporaryUploadFileResultMetadata - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this TemporaryUploadFileResultMetadata. # noqa: E501 :return: The url of this TemporaryUploadFileResultMetadata. # noqa: E501 :rtype: str","title":"temporary_upload_file_result_metadata"},{"location":"api-reference/#deepsearch.cps.apis.public.models.temporary_upload_file_result_metadata_private","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TemporaryUploadFileResultMetadataPrivate \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( url = None , local_vars_configuration = None ) \u00b6 TemporaryUploadFileResultMetadataPrivate - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this TemporaryUploadFileResultMetadataPrivate. # noqa: E501 :return: The url of this TemporaryUploadFileResultMetadataPrivate. # noqa: E501 :rtype: str","title":"temporary_upload_file_result_metadata_private"},{"location":"api-reference/#deepsearch.cps.apis.public.models.temporary_upload_file_result_upload","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TemporaryUploadFileResultUpload \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( fields = None , url = None , local_vars_configuration = None ) \u00b6 TemporaryUploadFileResultUpload - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint fields () property writable \u00b6 Gets the fields of this TemporaryUploadFileResultUpload. # noqa: E501 :return: The fields of this TemporaryUploadFileResultUpload. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this TemporaryUploadFileResultUpload. # noqa: E501 :return: The url of this TemporaryUploadFileResultUpload. # noqa: E501 :rtype: str","title":"temporary_upload_file_result_upload"},{"location":"api-reference/#deepsearch.cps.apis.public.models.temporary_upload_file_result_upload_private","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TemporaryUploadFileResultUploadPrivate \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( fields = None , url = None , local_vars_configuration = None ) \u00b6 TemporaryUploadFileResultUploadPrivate - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint fields () property writable \u00b6 Gets the fields of this TemporaryUploadFileResultUploadPrivate. # noqa: E501 :return: The fields of this TemporaryUploadFileResultUploadPrivate. # noqa: E501 :rtype: object to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this TemporaryUploadFileResultUploadPrivate. # noqa: E501 :return: The url of this TemporaryUploadFileResultUploadPrivate. # noqa: E501 :rtype: str","title":"temporary_upload_file_result_upload_private"},{"location":"api-reference/#deepsearch.cps.apis.public.models.token_response","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TokenResponse \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( token = None , local_vars_configuration = None ) \u00b6 TokenResponse - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model token () property writable \u00b6 Gets the token of this TokenResponse. # noqa: E501 :return: The token of this TokenResponse. # noqa: E501 :rtype: str","title":"token_response"},{"location":"api-reference/#deepsearch.cps.apis.public.models.topology","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech Topology \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( categories = None , edges = None , local_vars_configuration = None ) \u00b6 Topology - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint categories () property writable \u00b6 Gets the categories of this Topology. # noqa: E501 :return: The categories of this Topology. # noqa: E501 :rtype: list[TopologyNode] edges () property writable \u00b6 Gets the edges of this Topology. # noqa: E501 :return: The edges of this Topology. # noqa: E501 :rtype: list[TopologyEdge] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"topology"},{"location":"api-reference/#deepsearch.cps.apis.public.models.topology_edge","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TopologyEdge \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , source = None , target = None , local_vars_configuration = None ) \u00b6 TopologyEdge - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this TopologyEdge. # noqa: E501 :return: The name of this TopologyEdge. # noqa: E501 :rtype: str source () property writable \u00b6 Gets the source of this TopologyEdge. # noqa: E501 :return: The source of this TopologyEdge. # noqa: E501 :rtype: list[str] target () property writable \u00b6 Gets the target of this TopologyEdge. # noqa: E501 :return: The target of this TopologyEdge. # noqa: E501 :rtype: list[str] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"topology_edge"},{"location":"api-reference/#deepsearch.cps.apis.public.models.topology_node","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech TopologyNode \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , local_vars_configuration = None ) \u00b6 TopologyNode - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this TopologyNode. # noqa: E501 :return: The name of this TopologyNode. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"topology_node"},{"location":"api-reference/#deepsearch.cps.apis.public.models.update_data_flow_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech UpdateDataFlowOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , name = None , public = None , template = None , variables = None , local_vars_configuration = None ) \u00b6 UpdateDataFlowOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this UpdateDataFlowOptions. # noqa: E501 :return: The description of this UpdateDataFlowOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this UpdateDataFlowOptions. # noqa: E501 :return: The name of this UpdateDataFlowOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this UpdateDataFlowOptions. # noqa: E501 :return: The public of this UpdateDataFlowOptions. # noqa: E501 :rtype: bool template () property writable \u00b6 Gets the template of this UpdateDataFlowOptions. # noqa: E501 :return: The template of this UpdateDataFlowOptions. # noqa: E501 :rtype: DataFlowTemplate to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model variables () property writable \u00b6 Gets the variables of this UpdateDataFlowOptions. # noqa: E501 :return: The variables of this UpdateDataFlowOptions. # noqa: E501 :rtype: dict(str, ProjectProjKeyKgcDataflowTemplatesVariables)","title":"update_data_flow_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.update_project_model_config_options","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech UpdateProjectModelConfigOptions \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( configurations = None , description = None , name = None , public = None , local_vars_configuration = None ) \u00b6 UpdateProjectModelConfigOptions - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint configurations () property writable \u00b6 Gets the configurations of this UpdateProjectModelConfigOptions. # noqa: E501 :return: The configurations of this UpdateProjectModelConfigOptions. # noqa: E501 :rtype: ProjectProjKeyModelConfigsConfigurations description () property writable \u00b6 Gets the description of this UpdateProjectModelConfigOptions. # noqa: E501 :return: The description of this UpdateProjectModelConfigOptions. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this UpdateProjectModelConfigOptions. # noqa: E501 :return: The name of this UpdateProjectModelConfigOptions. # noqa: E501 :rtype: str public () property writable \u00b6 Gets the public of this UpdateProjectModelConfigOptions. # noqa: E501 :return: The public of this UpdateProjectModelConfigOptions. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"update_project_model_config_options"},{"location":"api-reference/#deepsearch.cps.apis.public.models.uploaded_file","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech UploadedFile \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( filename = None , id = None , proj_key = None , timestamp = None , user_key = None , local_vars_configuration = None ) \u00b6 UploadedFile - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint filename () property writable \u00b6 Gets the filename of this UploadedFile. # noqa: E501 :return: The filename of this UploadedFile. # noqa: E501 :rtype: str id () property writable \u00b6 Gets the id of this UploadedFile. # noqa: E501 ID of the temporary file. # noqa: E501 :return: The id of this UploadedFile. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this UploadedFile. # noqa: E501 :return: The proj_key of this UploadedFile. # noqa: E501 :rtype: str timestamp () property writable \u00b6 Gets the timestamp of this UploadedFile. # noqa: E501 :return: The timestamp of this UploadedFile. # noqa: E501 :rtype: float to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model user_key () property writable \u00b6 Gets the user_key of this UploadedFile. # noqa: E501 :return: The user_key of this UploadedFile. # noqa: E501 :rtype: str","title":"uploaded_file"},{"location":"api-reference/#deepsearch.cps.apis.public.models.uploaded_file_result","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech UploadedFileResult \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( id = None , url = None , local_vars_configuration = None ) \u00b6 UploadedFileResult - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint id () property writable \u00b6 Gets the id of this UploadedFileResult. # noqa: E501 ID of the temporary file. # noqa: E501 :return: The id of this UploadedFileResult. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model url () property writable \u00b6 Gets the url of this UploadedFileResult. # noqa: E501 URL to get the temporary file form. # noqa: E501 :return: The url of this UploadedFileResult. # noqa: E501 :rtype: str","title":"uploaded_file_result"},{"location":"api-reference/#deepsearch.cps.apis.public.models.usage_stats","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech UsageStats \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( bag_key = None , last_command = None , proj_key = None , local_vars_configuration = None ) \u00b6 UsageStats - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint bag_key () property writable \u00b6 Gets the bag_key of this UsageStats. # noqa: E501 :return: The bag_key of this UsageStats. # noqa: E501 :rtype: str last_command () property writable \u00b6 Gets the last_command of this UsageStats. # noqa: E501 :return: The last_command of this UsageStats. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this UsageStats. # noqa: E501 :return: The proj_key of this UsageStats. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"usage_stats"},{"location":"api-reference/#deepsearch.cps.apis.public.models.well_known_df_template_variable","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech WellKnownDfTemplateVariable \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( description = None , id = None , type = None , local_vars_configuration = None ) \u00b6 WellKnownDfTemplateVariable - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint description () property writable \u00b6 Gets the description of this WellKnownDfTemplateVariable. # noqa: E501 :return: The description of this WellKnownDfTemplateVariable. # noqa: E501 :rtype: str id () property writable \u00b6 Gets the id of this WellKnownDfTemplateVariable. # noqa: E501 :return: The id of this WellKnownDfTemplateVariable. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this WellKnownDfTemplateVariable. # noqa: E501 :return: The type of this WellKnownDfTemplateVariable. # noqa: E501 :rtype: DataFlowTemplateVariable","title":"well_known_df_template_variable"},{"location":"api-reference/#deepsearch.cps.apis.public.rest","text":"Corpus Processing Service (CPS) API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 2.0.0 Generated by: https://openapi-generator.tech","title":"rest"},{"location":"api-reference/#deepsearch.cps.apis.public.rest.RESTClientObject","text":"Bases: object request ( method , url , query_params = None , headers = None , body = None , post_params = None , _preload_content = True , _request_timeout = None ) \u00b6 Perform requests. :param method: http request method :param url: http request url :param query_params: query parameters in the url :param headers: http request headers :param body: request json body, for application/json :param post_params: request post parameters, application/x-www-form-urlencoded and multipart/form-data :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts.","title":"RESTClientObject"},{"location":"api-reference/#deepsearch.cps.apis.public.rest.RESTResponse","text":"Bases: io . IOBase getheader ( name , default = None ) \u00b6 Returns a given response header. getheaders () \u00b6 Returns a dictionary of the response headers.","title":"RESTResponse"},{"location":"api-reference/#deepsearch.cps.apis.user","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech","title":"user"},{"location":"api-reference/#deepsearch.cps.apis.user.api","text":"","title":"api"},{"location":"api-reference/#deepsearch.cps.apis.user.api.admin_api","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech AdminApi \u00b6 Bases: object Do not edit the class manually. confirm_user ( user_key , ** kwargs ) \u00b6 confirm_user # noqa: E501 Confirm a pending user. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.confirm_user(user_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str user_key: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. confirm_user_with_http_info ( user_key , ** kwargs ) \u00b6 confirm_user # noqa: E501 Confirm a pending user. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.confirm_user_with_http_info(user_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str user_key: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. list_all_projects ( ** kwargs ) \u00b6 list_all_projects # noqa: E501 List all projects # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_all_projects(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[Project] If the method is called asynchronously, returns the request thread. list_all_projects_with_http_info ( ** kwargs ) \u00b6 list_all_projects # noqa: E501 List all projects # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_all_projects_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[Project], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_audits ( ** kwargs ) \u00b6 list_audits # noqa: E501 List audits globally # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_audits(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str user_key: :param str type_: :param str search_term: :param str before: :param str after: :param int limit: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: InlineResponse200 If the method is called asynchronously, returns the request thread. list_audits_with_http_info ( ** kwargs ) \u00b6 list_audits # noqa: E501 List audits globally # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_audits_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str user_key: :param str type_: :param str search_term: :param str before: :param str after: :param int limit: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(InlineResponse200, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_pending_users ( ** kwargs ) \u00b6 list_pending_users # noqa: E501 List pending user requests. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_pending_users(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str term: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[UserDetails] If the method is called asynchronously, returns the request thread. list_pending_users_with_http_info ( ** kwargs ) \u00b6 list_pending_users # noqa: E501 List pending user requests. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_pending_users_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str term: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[UserDetails], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread.","title":"admin_api"},{"location":"api-reference/#deepsearch.cps.apis.user.api.oidc_api","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech OidcApi \u00b6 Bases: object Do not edit the class manually. authenticate ( ** kwargs ) \u00b6 authenticate # noqa: E501 Redirect to the OIDC authenticate endpoint. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.authenticate(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. authenticate_with_http_info ( ** kwargs ) \u00b6 authenticate # noqa: E501 Redirect to the OIDC authenticate endpoint. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.authenticate_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. create_tokens ( ** kwargs ) \u00b6 create_tokens # noqa: E501 Retrieve the user access and identity tokens using either the code or the refresh_token. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_tokens(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param CreateTokensRequestBody body: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: OidcTokenResponse If the method is called asynchronously, returns the request thread. create_tokens_with_http_info ( ** kwargs ) \u00b6 create_tokens # noqa: E501 Retrieve the user access and identity tokens using either the code or the refresh_token. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_tokens_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param CreateTokensRequestBody body: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(OidcTokenResponse, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. register_user ( data , ** kwargs ) \u00b6 register_user # noqa: E501 Register a new user, provided a valid access_token and id_token from the oidc provider. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.register_user(data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param RegisterUserRequestBody data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: UserDetails If the method is called asynchronously, returns the request thread. register_user_with_http_info ( data , ** kwargs ) \u00b6 register_user # noqa: E501 Register a new user, provided a valid access_token and id_token from the oidc provider. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.register_user_with_http_info(data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param RegisterUserRequestBody data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(UserDetails, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. token ( ** kwargs ) \u00b6 token # noqa: E501 Retrieve the user access and identity tokens using either the code or the refresh_token. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.token(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str code: The oidc code response :param str refresh_token: The oidc code response :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: OidcTokenResponse If the method is called asynchronously, returns the request thread. token_with_http_info ( ** kwargs ) \u00b6 token # noqa: E501 Retrieve the user access and identity tokens using either the code or the refresh_token. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.token_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str code: The oidc code response :param str refresh_token: The oidc code response :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(OidcTokenResponse, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread.","title":"oidc_api"},{"location":"api-reference/#deepsearch.cps.apis.user.api.projects_api","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech ProjectsApi \u00b6 Bases: object Do not edit the class manually. add_user ( proj_key , data , ** kwargs ) \u00b6 add_user # noqa: E501 Assign a new user to a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.add_user(proj_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param ProjectUserAssignment data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: SuccessMessage If the method is called asynchronously, returns the request thread. add_user_with_http_info ( proj_key , data , ** kwargs ) \u00b6 add_user # noqa: E501 Assign a new user to a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.add_user_with_http_info(proj_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param ProjectUserAssignment data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(SuccessMessage, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. create ( data , ** kwargs ) \u00b6 create # noqa: E501 Create a new project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create(data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param CreateProjectRequestBody data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Project If the method is called asynchronously, returns the request thread. create_with_http_info ( data , ** kwargs ) \u00b6 create # noqa: E501 Create a new project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.create_with_http_info(data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param CreateProjectRequestBody data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Project, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. delete ( proj_key , confirmation_token , ** kwargs ) \u00b6 delete # noqa: E501 Delete a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete(proj_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param str confirmation_token: The delete confirmation token (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. delete_with_http_info ( proj_key , confirmation_token , ** kwargs ) \u00b6 delete # noqa: E501 Delete a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.delete_with_http_info(proj_key, confirmation_token, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param str confirmation_token: The delete confirmation token (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. details ( proj_key , ** kwargs ) \u00b6 details # noqa: E501 Returns the details of the project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.details(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: Project If the method is called asynchronously, returns the request thread. details_with_http_info ( proj_key , ** kwargs ) \u00b6 details # noqa: E501 Returns the details of the project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.details_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(Project, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. edit_user ( proj_key , data , ** kwargs ) \u00b6 edit_user # noqa: E501 Assign a new user to a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.edit_user(proj_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param ProjectUserAssignment data: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: SuccessMessage If the method is called asynchronously, returns the request thread. edit_user_with_http_info ( proj_key , data , ** kwargs ) \u00b6 edit_user # noqa: E501 Assign a new user to a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.edit_user_with_http_info(proj_key, data, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param ProjectUserAssignment data: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(SuccessMessage, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_delete_confirmation_token ( proj_key , ** kwargs ) \u00b6 get_delete_confirmation_token # noqa: E501 Get a delete confirmation token for the provided project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_delete_confirmation_token(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: TokenResponse If the method is called asynchronously, returns the request thread. get_delete_confirmation_token_with_http_info ( proj_key , ** kwargs ) \u00b6 get_delete_confirmation_token # noqa: E501 Get a delete confirmation token for the provided project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_delete_confirmation_token_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(TokenResponse, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_project_token ( proj_key , ** kwargs ) \u00b6 get_project_token # noqa: E501 Request a token granting access to the current project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_token(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: AccessToken If the method is called asynchronously, returns the request thread. get_project_token_with_http_info ( proj_key , ** kwargs ) \u00b6 get_project_token # noqa: E501 Request a token granting access to the current project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_project_token_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(AccessToken, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. is_authorized ( proj_key , ** kwargs ) \u00b6 is_authorized # noqa: E501 Provide user-key and project-key to coordinates a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.is_authorized(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param str role: The specific role to probe :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: SuccessMessage If the method is called asynchronously, returns the request thread. is_authorized_with_http_info ( proj_key , ** kwargs ) \u00b6 is_authorized # noqa: E501 Provide user-key and project-key to coordinates a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.is_authorized_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param str role: The specific role to probe :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(SuccessMessage, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_audits_in_project ( proj_key , ** kwargs ) \u00b6 list_audits_in_project # noqa: E501 List audits related to the project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_audits_in_project(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param str user_key: :param str type_: :param str search_term: :param str before: :param str after: :param int limit: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: InlineResponse200 If the method is called asynchronously, returns the request thread. list_audits_in_project_with_http_info ( proj_key , ** kwargs ) \u00b6 list_audits_in_project # noqa: E501 List audits related to the project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_audits_in_project_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param str user_key: :param str type_: :param str search_term: :param str before: :param str after: :param int limit: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(InlineResponse200, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_projects ( ** kwargs ) \u00b6 list_projects # noqa: E501 List all projects assigned to a user # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_projects(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str role: filter for the user role :param bool include_collaborators: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[Project] If the method is called asynchronously, returns the request thread. list_projects_with_http_info ( ** kwargs ) \u00b6 list_projects # noqa: E501 List all projects assigned to a user # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_projects_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str role: filter for the user role :param bool include_collaborators: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[Project], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. list_users ( proj_key , ** kwargs ) \u00b6 list_users # noqa: E501 List all users belonging to a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_users(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: dict(str, list[UserDetails]) If the method is called asynchronously, returns the request thread. list_users_with_http_info ( proj_key , ** kwargs ) \u00b6 list_users # noqa: E501 List all users belonging to a project # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.list_users_with_http_info(proj_key, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(dict(str, list[UserDetails]), status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. remove_user ( proj_key , username , ** kwargs ) \u00b6 remove_user # noqa: E501 Delete an user from a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.remove_user(proj_key, username, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param str username: The username for the user (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread. remove_user_with_http_info ( proj_key , username , ** kwargs ) \u00b6 remove_user # noqa: E501 Delete an user from a project. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.remove_user_with_http_info(proj_key, username, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str proj_key: The project key (required) :param str username: The username for the user (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: None If the method is called asynchronously, returns the request thread.","title":"projects_api"},{"location":"api-reference/#deepsearch.cps.apis.user.api.settings_api","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech SettingsApi \u00b6 Bases: object Do not edit the class manually. global_permissions ( ** kwargs ) \u00b6 global_permissions # noqa: E501 Get the global permissions for users. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.global_permissions(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: dict(str, bool) If the method is called asynchronously, returns the request thread. global_permissions_with_http_info ( ** kwargs ) \u00b6 global_permissions # noqa: E501 Get the global permissions for users. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.global_permissions_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(dict(str, bool), status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread.","title":"settings_api"},{"location":"api-reference/#deepsearch.cps.apis.user.api.user_api","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech UserApi \u00b6 Bases: object Do not edit the class manually. api_key_create ( ** kwargs ) \u00b6 api_key_create # noqa: E501 Create an API Key for your user # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.api_key_create(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ApiKey If the method is called asynchronously, returns the request thread. api_key_create_with_http_info ( ** kwargs ) \u00b6 api_key_create # noqa: E501 Create an API Key for your user # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.api_key_create_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ApiKey, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread.","title":"user_api"},{"location":"api-reference/#deepsearch.cps.apis.user.api.users_api","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech UsersApi \u00b6 Bases: object Do not edit the class manually. api_key_get ( ** kwargs ) \u00b6 api_key_get # noqa: E501 Show the API Key for your user # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.api_key_get(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ApiKey If the method is called asynchronously, returns the request thread. api_key_get_with_http_info ( ** kwargs ) \u00b6 api_key_get # noqa: E501 Show the API Key for your user # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.api_key_get_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ApiKey, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_access_token ( ** kwargs ) \u00b6 get_access_token # noqa: E501 Request a user API token # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_access_token(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param GetAccessTokenRequestBody options: :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: AccessToken If the method is called asynchronously, returns the request thread. get_access_token_with_http_info ( ** kwargs ) \u00b6 get_access_token # noqa: E501 Request a user API token # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_access_token_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param GetAccessTokenRequestBody options: :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(AccessToken, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. get_current_user_details ( ** kwargs ) \u00b6 get_current_user_details # noqa: E501 Gets the current user's details. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_current_user_details(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: UserDetails If the method is called asynchronously, returns the request thread. get_current_user_details_with_http_info ( ** kwargs ) \u00b6 get_current_user_details # noqa: E501 Gets the current user's details. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.get_current_user_details_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(UserDetails, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. impersonate_user_token ( body , ** kwargs ) \u00b6 impersonate_user_token # noqa: E501 Request an impersonate user token. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.impersonate_user_token(body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param ImpersonateUserTokenRequestBody body: (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: TokenResponse If the method is called asynchronously, returns the request thread. impersonate_user_token_with_http_info ( body , ** kwargs ) \u00b6 impersonate_user_token # noqa: E501 Request an impersonate user token. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.impersonate_user_token_with_http_info(body, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param ImpersonateUserTokenRequestBody body: (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(TokenResponse, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. search ( term , ** kwargs ) \u00b6 search # noqa: E501 Search for users matching the email or name. Depending on the user's permissions, only owners and assignees from their projects may be shown. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.search(term, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str term: Search term (required) :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[UserDetails] If the method is called asynchronously, returns the request thread. search_with_http_info ( term , ** kwargs ) \u00b6 search # noqa: E501 Search for users matching the email or name. Depending on the user's permissions, only owners and assignees from their projects may be shown. # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.search_with_http_info(term, async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param str term: Search term (required) :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[UserDetails], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. service_accounts_create ( ** kwargs ) \u00b6 service_accounts_create # noqa: E501 Create a new service accounts for your user # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.service_accounts_create(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: ServiceAccount If the method is called asynchronously, returns the request thread. service_accounts_create_with_http_info ( ** kwargs ) \u00b6 service_accounts_create # noqa: E501 Create a new service accounts for your user # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.service_accounts_create_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(ServiceAccount, status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread. service_accounts_list ( ** kwargs ) \u00b6 service_accounts_list # noqa: E501 List all service accounts of your user # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.service_accounts_list(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: list[ServiceAccount] If the method is called asynchronously, returns the request thread. service_accounts_list_with_http_info ( ** kwargs ) \u00b6 service_accounts_list # noqa: E501 List all service accounts of your user # noqa: E501 This method makes a synchronous HTTP request by default. To make an asynchronous HTTP request, please pass async_req=True thread = api.service_accounts_list_with_http_info(async_req=True) result = thread.get() :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: tuple(list[ServiceAccount], status_code(int), headers(HTTPHeaderDict)) If the method is called asynchronously, returns the request thread.","title":"users_api"},{"location":"api-reference/#deepsearch.cps.apis.user.api_client","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech","title":"api_client"},{"location":"api-reference/#deepsearch.cps.apis.user.api_client.ApiClient","text":"Bases: object Generic API client for OpenAPI client library builds. OpenAPI generic API client. This client handles the client- server communication, and is invariant across implementations. Specifics of the methods and models for each application are generated from the OpenAPI templates. NOTE: This class is auto generated by OpenAPI Generator. Ref: https://openapi-generator.tech Do not edit the class manually. :param configuration: .Configuration object for this client :param header_name: a header to pass when making calls to the API. :param header_value: a header value to pass when making calls to the API. :param cookie: a cookie to include in the header when making calls to the API :param pool_threads: The number of threads to use for async requests to the API. More threads means more concurrent API requests. __deserialize ( data , klass ) \u00b6 Deserializes dict, list, str into an object. :param data: dict, list or str. :param klass: class literal, or string of class name. :return: object. __deserialize_date ( string ) \u00b6 Deserializes string to date. :param string: str. :return: date. __deserialize_datetime ( string ) \u00b6 Deserializes string to datetime. The string should be in iso8601 datetime format. :param string: str. :return: datetime. __deserialize_file ( response ) \u00b6 Deserializes body to file Saves response body into a file in a temporary folder, using the filename from the Content-Disposition header if provided. :param response: RESTResponse. :return: file path. __deserialize_model ( data , klass ) \u00b6 Deserializes list or dict to model. :param data: dict, list. :param klass: class literal. :return: model object. __deserialize_object ( value ) \u00b6 Return an original value. :return: object. __deserialize_primitive ( data , klass ) \u00b6 Deserializes string to primitive type. :param data: str. :param klass: class literal. :return: int, long, float, str, bool. call_api ( resource_path , method , path_params = None , query_params = None , header_params = None , body = None , post_params = None , files = None , response_type = None , auth_settings = None , async_req = None , _return_http_data_only = None , collection_formats = None , _preload_content = True , _request_timeout = None , _host = None ) \u00b6 Makes the HTTP request (synchronous) and returns deserialized data. To make an async_req request, set the async_req parameter. :param resource_path: Path to method endpoint. :param method: Method to call. :param path_params: Path parameters in the url. :param query_params: Query parameters in the url. :param header_params: Header parameters to be placed in the request header. :param body: Request body. :param post_params dict: Request post form parameters, for application/x-www-form-urlencoded , multipart/form-data . :param auth_settings list: Auth Settings names for the request. :param response: Response data type. :param files dict: key -> filename, value -> filepath, for multipart/form-data . :param async_req bool: execute request asynchronously :param _return_http_data_only: response data without head status code and headers :param collection_formats: dict of collection formats for path, query, header, and post parameters. :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts. :return: If async_req parameter is True, the request will be called asynchronously. The method will return the request thread. If parameter async_req is False or missing, then the method will return the response directly. deserialize ( response , response_type ) \u00b6 Deserializes response into an object. :param response: RESTResponse object to be deserialized. :param response_type: class literal for deserialized object, or string of class name. :return: deserialized object. files_parameters ( files = None ) \u00b6 Builds form parameters. :param files: File parameters. :return: Form parameters with files. parameters_to_tuples ( params , collection_formats ) \u00b6 Get parameters as list of tuples, formatting collections. :param params: Parameters as dict or list of two-tuples :param dict collection_formats: Parameter collection formats :return: Parameters as list of tuples, collections formatted pool () property \u00b6 Create thread pool on first request avoids instantiating unused threadpool for blocking clients. request ( method , url , query_params = None , headers = None , post_params = None , body = None , _preload_content = True , _request_timeout = None ) \u00b6 Makes the HTTP request using RESTClient. sanitize_for_serialization ( obj ) \u00b6 Builds a JSON POST object. If obj is None, return None. If obj is str, int, long, float, bool, return directly. If obj is datetime.datetime, datetime.date convert to string in iso8601 format. If obj is list, sanitize each element in the list. If obj is dict, return the dict. If obj is OpenAPI model, return the properties dict. :param obj: The data to serialize. :return: The serialized form of data. select_header_accept ( accepts ) \u00b6 Returns Accept based on an array of accepts provided. :param accepts: List of headers. :return: Accept (e.g. application/json). select_header_content_type ( content_types ) \u00b6 Returns Content-Type based on an array of content_types provided. :param content_types: List of content-types. :return: Content-Type (e.g. application/json). update_params_for_auth ( headers , querys , auth_settings ) \u00b6 Updates header and query params based on authentication setting. :param headers: Header parameters dict to be updated. :param querys: Query parameters tuple list to be updated. :param auth_settings: Authentication setting identifiers list. user_agent () property writable \u00b6 User agent for this API client","title":"ApiClient"},{"location":"api-reference/#deepsearch.cps.apis.user.configuration","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech","title":"configuration"},{"location":"api-reference/#deepsearch.cps.apis.user.configuration.Configuration","text":"Bases: object This class is auto generated by OpenAPI Generator Do not edit the class manually. :param host: Base url :param api_key: Dict to store API key(s). Each entry in the dict specifies an API key. The dict key is the name of the security scheme in the OAS specification. The dict value is the API key secret. :param api_key_prefix: Dict to store API prefix (e.g. Bearer) The dict key is the name of the security scheme in the OAS specification. The dict value is an API key prefix when generating the auth data. :param username: Username for HTTP basic authentication :param password: Password for HTTP basic authentication :param discard_unknown_keys: Boolean value indicating whether to discard unknown properties. A server may send a response that includes additional properties that are not known by the client in the following scenarios: 1. The OpenAPI document is incomplete, i.e. it does not match the server implementation. 2. The client was generated using an older version of the OpenAPI document and the server has been upgraded since then. If a schema in the OpenAPI document defines the additionalProperties attribute, then all undeclared properties received by the server are injected into the additional properties map. In that case, there are undeclared properties, and nothing to discard. :Example: API Key Authentication Example. Given the following security scheme in the OpenAPI specification: components: securitySchemes: cookieAuth: # name for the security scheme type: apiKey in: cookie name: JSESSIONID # cookie name You can programmatically set the cookie: conf = deepsearch.cps.apis.user.Configuration( api_key={'cookieAuth': 'abc123'} api_key_prefix={'cookieAuth': 'JSESSIONID'} ) The following cookie will be added to the HTTP request: Cookie: JSESSIONID abc123 HTTP Basic Authentication Example. Given the following security scheme in the OpenAPI specification: components: securitySchemes: http_basic_auth: type: http scheme: basic Configure API client with HTTP basic authentication: conf = deepsearch.cps.apis.user.Configuration( username='the-user', password='the-password', ) assert_hostname = None instance-attribute \u00b6 Set this to True/False to enable/disable SSL hostname verification. cert_file = None instance-attribute \u00b6 client certificate file connection_pool_maxsize = multiprocessing . cpu_count () * 5 instance-attribute \u00b6 urllib3 connection pool's maximum number of connections saved per pool. urllib3 uses 1 connection as default value, but this is not the best value when you are making a lot of possibly parallel requests to the same host, which is often the case here. cpu_count * 5 is used as default value to increase performance. host = host instance-attribute \u00b6 Default Base url key_file = None instance-attribute \u00b6 client key file logger = {} instance-attribute \u00b6 Logging Settings logger_file_handler = None instance-attribute \u00b6 Log file handler logger_stream_handler = None instance-attribute \u00b6 Log stream handler password = password instance-attribute \u00b6 Password for HTTP basic authentication proxy = None instance-attribute \u00b6 Proxy URL proxy_headers = None instance-attribute \u00b6 Proxy headers refresh_api_key_hook = None instance-attribute \u00b6 function hook to refresh API key if expired retries = None instance-attribute \u00b6 Adding retries to override urllib3 default value 3 safe_chars_for_path_param = '' instance-attribute \u00b6 Safe chars for path_param ssl_ca_cert = None instance-attribute \u00b6 Set this to customize the certificate file to verify the peer. temp_folder_path = None instance-attribute \u00b6 Temp file folder for downloading files username = username instance-attribute \u00b6 Username for HTTP basic authentication verify_ssl = True instance-attribute \u00b6 SSL/TLS verification Set this to false to skip verifying SSL certificate when calling API from https server. __init__ ( host = 'http://localhost/api/cps/user/v1' , api_key = None , api_key_prefix = None , username = None , password = None , discard_unknown_keys = False ) \u00b6 Constructor auth_settings () \u00b6 Gets Auth Settings dict for api client. :return: The Auth Settings information dict. debug () property writable \u00b6 Debug status :param value: The debug status, True or False. :type: bool get_api_key_with_prefix ( identifier ) \u00b6 Gets API key (with prefix if set). :param identifier: The identifier of apiKey. :return: The token for api key authentication. get_basic_auth_token () \u00b6 Gets HTTP basic authentication header (string). :return: The token for basic HTTP authentication. get_default_copy () classmethod \u00b6 Return new instance of configuration. This method returns newly created, based on default constructor, object of Configuration class or returns a copy of default configuration passed by the set_default method. :return: The configuration object. get_host_from_settings ( index , variables = None ) \u00b6 Gets host URL based on the index and variables :param index: array index of the host settings :param variables: hash of variable and the corresponding value :return: URL based on host settings get_host_settings () \u00b6 Gets an array of host settings :return: An array of host settings logger_file () property writable \u00b6 The logger file. If the logger_file is None, then add stream handler and remove file handler. Otherwise, add file handler and remove stream handler. :param value: The logger_file path. :type: str logger_format () property writable \u00b6 The logger format. The logger_formatter will be updated when sets logger_format. :param value: The format string. :type: str set_default ( default ) classmethod \u00b6 Set default instance of configuration. It stores default configuration, which can be returned by get_default_copy method. :param default: object of Configuration to_debug_report () \u00b6 Gets the essential information for debugging. :return: The report for debugging.","title":"Configuration"},{"location":"api-reference/#deepsearch.cps.apis.user.exceptions","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech","title":"exceptions"},{"location":"api-reference/#deepsearch.cps.apis.user.exceptions.ApiException","text":"Bases: OpenApiException __str__ () \u00b6 Custom error messages for exception","title":"ApiException"},{"location":"api-reference/#deepsearch.cps.apis.user.exceptions.ApiKeyError","text":"Bases: OpenApiException , KeyError __init__ ( msg , path_to_item = None ) \u00b6 Parameters: Name Type Description Default msg str the exception message required","title":"ApiKeyError"},{"location":"api-reference/#deepsearch.cps.apis.user.exceptions.ApiTypeError","text":"Bases: OpenApiException , TypeError __init__ ( msg , path_to_item = None , valid_classes = None , key_type = None ) \u00b6 Raises an exception for TypeErrors Parameters: Name Type Description Default msg str the exception message required Other Parameters: Name Type Description path_to_item list a list of keys an indices to get to the current_item None if unset valid_classes tuple the primitive classes that current item should be an instance of None if unset key_type bool False if our value is a value in a dict True if it is a key in a dict False if our item is an item in a list None if unset","title":"ApiTypeError"},{"location":"api-reference/#deepsearch.cps.apis.user.exceptions.ApiValueError","text":"Bases: OpenApiException , ValueError __init__ ( msg , path_to_item = None ) \u00b6 Parameters: Name Type Description Default msg str the exception message required","title":"ApiValueError"},{"location":"api-reference/#deepsearch.cps.apis.user.exceptions.OpenApiException","text":"Bases: Exception The base exception class for all OpenAPIExceptions","title":"OpenApiException"},{"location":"api-reference/#deepsearch.cps.apis.user.exceptions.render_path","text":"Returns a string representation of a path","title":"render_path()"},{"location":"api-reference/#deepsearch.cps.apis.user.models","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech","title":"models"},{"location":"api-reference/#deepsearch.cps.apis.user.models.access_token","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech AccessToken \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( access_token = None , local_vars_configuration = None ) \u00b6 AccessToken - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint access_token () property writable \u00b6 Gets the access_token of this AccessToken. # noqa: E501 :return: The access_token of this AccessToken. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"access_token"},{"location":"api-reference/#deepsearch.cps.apis.user.models.api_key","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech ApiKey \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( api_key = None , email = None , local_vars_configuration = None ) \u00b6 ApiKey - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint api_key () property writable \u00b6 Gets the api_key of this ApiKey. # noqa: E501 :return: The api_key of this ApiKey. # noqa: E501 :rtype: str email () property writable \u00b6 Gets the email of this ApiKey. # noqa: E501 :return: The email of this ApiKey. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"api_key"},{"location":"api-reference/#deepsearch.cps.apis.user.models.audit_record","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech AuditRecord \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( details = None , id = None , message = None , proj_key = None , timestamp = None , type = None , user_key = None , local_vars_configuration = None ) \u00b6 AuditRecord - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint details () property writable \u00b6 Gets the details of this AuditRecord. # noqa: E501 :return: The details of this AuditRecord. # noqa: E501 :rtype: object id () property writable \u00b6 Gets the id of this AuditRecord. # noqa: E501 :return: The id of this AuditRecord. # noqa: E501 :rtype: str message () property writable \u00b6 Gets the message of this AuditRecord. # noqa: E501 :return: The message of this AuditRecord. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this AuditRecord. # noqa: E501 :return: The proj_key of this AuditRecord. # noqa: E501 :rtype: str timestamp () property writable \u00b6 Gets the timestamp of this AuditRecord. # noqa: E501 :return: The timestamp of this AuditRecord. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model type () property writable \u00b6 Gets the type of this AuditRecord. # noqa: E501 :return: The type of this AuditRecord. # noqa: E501 :rtype: str user_key () property writable \u00b6 Gets the user_key of this AuditRecord. # noqa: E501 :return: The user_key of this AuditRecord. # noqa: E501 :rtype: str","title":"audit_record"},{"location":"api-reference/#deepsearch.cps.apis.user.models.create_project_request_body","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech CreateProjectRequestBody \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( name = None , proj_key = None , local_vars_configuration = None ) \u00b6 CreateProjectRequestBody - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint name () property writable \u00b6 Gets the name of this CreateProjectRequestBody. # noqa: E501 Name of the project # noqa: E501 :return: The name of this CreateProjectRequestBody. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this CreateProjectRequestBody. # noqa: E501 Internal project key to use. (use only if you really know what you are doing) # noqa: E501 :return: The proj_key of this CreateProjectRequestBody. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"create_project_request_body"},{"location":"api-reference/#deepsearch.cps.apis.user.models.create_tokens_request_body","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech CreateTokensRequestBody \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( code = None , refresh_token = None , local_vars_configuration = None ) \u00b6 CreateTokensRequestBody - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint code () property writable \u00b6 Gets the code of this CreateTokensRequestBody. # noqa: E501 The oidc code response # noqa: E501 :return: The code of this CreateTokensRequestBody. # noqa: E501 :rtype: str refresh_token () property writable \u00b6 Gets the refresh_token of this CreateTokensRequestBody. # noqa: E501 The refresh token # noqa: E501 :return: The refresh_token of this CreateTokensRequestBody. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"create_tokens_request_body"},{"location":"api-reference/#deepsearch.cps.apis.user.models.error_response","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech ErrorResponse \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( error = None , local_vars_configuration = None ) \u00b6 ErrorResponse - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint error () property writable \u00b6 Gets the error of this ErrorResponse. # noqa: E501 Description of the error. # noqa: E501 :return: The error of this ErrorResponse. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"error_response"},{"location":"api-reference/#deepsearch.cps.apis.user.models.get_access_token_request_body","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech GetAccessTokenRequestBody \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( admin = False , local_vars_configuration = None ) \u00b6 GetAccessTokenRequestBody - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint admin () property writable \u00b6 Gets the admin of this GetAccessTokenRequestBody. # noqa: E501 :return: The admin of this GetAccessTokenRequestBody. # noqa: E501 :rtype: bool to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"get_access_token_request_body"},{"location":"api-reference/#deepsearch.cps.apis.user.models.impersonate_user_token_request_body","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech ImpersonateUserTokenRequestBody \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( impersonate_secret = None , target_user_key = None , local_vars_configuration = None ) \u00b6 ImpersonateUserTokenRequestBody - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint impersonate_secret () property writable \u00b6 Gets the impersonate_secret of this ImpersonateUserTokenRequestBody. # noqa: E501 :return: The impersonate_secret of this ImpersonateUserTokenRequestBody. # noqa: E501 :rtype: str target_user_key () property writable \u00b6 Gets the target_user_key of this ImpersonateUserTokenRequestBody. # noqa: E501 :return: The target_user_key of this ImpersonateUserTokenRequestBody. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"impersonate_user_token_request_body"},{"location":"api-reference/#deepsearch.cps.apis.user.models.inline_response200","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech InlineResponse200 \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( audits = None , local_vars_configuration = None ) \u00b6 InlineResponse200 - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint audits () property writable \u00b6 Gets the audits of this InlineResponse200. # noqa: E501 :return: The audits of this InlineResponse200. # noqa: E501 :rtype: list[AuditRecord] to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"inline_response200"},{"location":"api-reference/#deepsearch.cps.apis.user.models.oidc_token_response","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech OidcTokenResponse \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( access_token = None , id_token = None , refresh_token = None , local_vars_configuration = None ) \u00b6 OidcTokenResponse - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint access_token () property writable \u00b6 Gets the access_token of this OidcTokenResponse. # noqa: E501 :return: The access_token of this OidcTokenResponse. # noqa: E501 :rtype: str id_token () property writable \u00b6 Gets the id_token of this OidcTokenResponse. # noqa: E501 :return: The id_token of this OidcTokenResponse. # noqa: E501 :rtype: str refresh_token () property writable \u00b6 Gets the refresh_token of this OidcTokenResponse. # noqa: E501 :return: The refresh_token of this OidcTokenResponse. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"oidc_token_response"},{"location":"api-reference/#deepsearch.cps.apis.user.models.project","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech Project \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( date = None , name = None , proj_key = None , role = None , local_vars_configuration = None ) \u00b6 Project - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint date () property writable \u00b6 Gets the date of this Project. # noqa: E501 :return: The date of this Project. # noqa: E501 :rtype: str name () property writable \u00b6 Gets the name of this Project. # noqa: E501 :return: The name of this Project. # noqa: E501 :rtype: str proj_key () property writable \u00b6 Gets the proj_key of this Project. # noqa: E501 :return: The proj_key of this Project. # noqa: E501 :rtype: str role () property writable \u00b6 Gets the role of this Project. # noqa: E501 :return: The role of this Project. # noqa: E501 :rtype: UserType to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"project"},{"location":"api-reference/#deepsearch.cps.apis.user.models.project_user_assignment","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech ProjectUserAssignment \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( role = None , username = None , local_vars_configuration = None ) \u00b6 ProjectUserAssignment - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint role () property writable \u00b6 Gets the role of this ProjectUserAssignment. # noqa: E501 The role to assign to the user # noqa: E501 :return: The role of this ProjectUserAssignment. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model username () property writable \u00b6 Gets the username of this ProjectUserAssignment. # noqa: E501 The username # noqa: E501 :return: The username of this ProjectUserAssignment. # noqa: E501 :rtype: str","title":"project_user_assignment"},{"location":"api-reference/#deepsearch.cps.apis.user.models.register_user_request_body","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech RegisterUserRequestBody \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( access_token = None , id_token = None , local_vars_configuration = None ) \u00b6 RegisterUserRequestBody - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint access_token () property writable \u00b6 Gets the access_token of this RegisterUserRequestBody. # noqa: E501 OIDC access_token signed by the provider # noqa: E501 :return: The access_token of this RegisterUserRequestBody. # noqa: E501 :rtype: str id_token () property writable \u00b6 Gets the id_token of this RegisterUserRequestBody. # noqa: E501 OIDC id_token signed by the provider # noqa: E501 :return: The id_token of this RegisterUserRequestBody. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"register_user_request_body"},{"location":"api-reference/#deepsearch.cps.apis.user.models.service_account","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech ServiceAccount \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( credentials = None , name = None , user_key = None , local_vars_configuration = None ) \u00b6 ServiceAccount - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint credentials () property writable \u00b6 Gets the credentials of this ServiceAccount. # noqa: E501 :return: The credentials of this ServiceAccount. # noqa: E501 :rtype: ServiceAccountCredentials name () property writable \u00b6 Gets the name of this ServiceAccount. # noqa: E501 :return: The name of this ServiceAccount. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model user_key () property writable \u00b6 Gets the user_key of this ServiceAccount. # noqa: E501 :return: The user_key of this ServiceAccount. # noqa: E501 :rtype: str","title":"service_account"},{"location":"api-reference/#deepsearch.cps.apis.user.models.service_account_credentials","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech ServiceAccountCredentials \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( password = None , username = None , local_vars_configuration = None ) \u00b6 ServiceAccountCredentials - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint password () property writable \u00b6 Gets the password of this ServiceAccountCredentials. # noqa: E501 :return: The password of this ServiceAccountCredentials. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model username () property writable \u00b6 Gets the username of this ServiceAccountCredentials. # noqa: E501 :return: The username of this ServiceAccountCredentials. # noqa: E501 :rtype: str","title":"service_account_credentials"},{"location":"api-reference/#deepsearch.cps.apis.user.models.success_message","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech SuccessMessage \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( success = None , local_vars_configuration = None ) \u00b6 SuccessMessage - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint success () property writable \u00b6 Gets the success of this SuccessMessage. # noqa: E501 Human readable message. # noqa: E501 :return: The success of this SuccessMessage. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"success_message"},{"location":"api-reference/#deepsearch.cps.apis.user.models.token_response","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech TokenResponse \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( token = None , local_vars_configuration = None ) \u00b6 TokenResponse - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model token () property writable \u00b6 Gets the token of this TokenResponse. # noqa: E501 The delete confirmation token. # noqa: E501 :return: The token of this TokenResponse. # noqa: E501 :rtype: str","title":"token_response"},{"location":"api-reference/#deepsearch.cps.apis.user.models.user_details","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech UserDetails \u00b6 Bases: object Do not edit the class manually. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( email = None , role = None , username = None , local_vars_configuration = None ) \u00b6 UserDetails - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint email () property writable \u00b6 Gets the email of this UserDetails. # noqa: E501 :return: The email of this UserDetails. # noqa: E501 :rtype: str role () property writable \u00b6 Gets the role of this UserDetails. # noqa: E501 :return: The role of this UserDetails. # noqa: E501 :rtype: str to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model username () property writable \u00b6 Gets the username of this UserDetails. # noqa: E501 :return: The username of this UserDetails. # noqa: E501 :rtype: str","title":"user_details"},{"location":"api-reference/#deepsearch.cps.apis.user.models.user_type","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech UserType \u00b6 Bases: object Do not edit the class manually. allowable_values = [ ASSIGNEE , OWNER ] class-attribute \u00b6 Attributes: Name Type Description openapi_types dict The key is attribute name and the value is attribute type. attribute_map dict The key is attribute name and the value is json key in definition. __eq__ ( other ) \u00b6 Returns true if both objects are equal __init__ ( local_vars_configuration = None ) \u00b6 UserType - a model defined in OpenAPI __ne__ ( other ) \u00b6 Returns true if both objects are not equal __repr__ () \u00b6 For print and pprint to_dict () \u00b6 Returns the model properties as a dict to_str () \u00b6 Returns the string representation of the model","title":"user_type"},{"location":"api-reference/#deepsearch.cps.apis.user.rest","text":"User Management API No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator) # noqa: E501 The version of the OpenAPI document: 1.2.0 Generated by: https://openapi-generator.tech","title":"rest"},{"location":"api-reference/#deepsearch.cps.apis.user.rest.RESTClientObject","text":"Bases: object request ( method , url , query_params = None , headers = None , body = None , post_params = None , _preload_content = True , _request_timeout = None ) \u00b6 Perform requests. :param method: http request method :param url: http request url :param query_params: query parameters in the url :param headers: http request headers :param body: request json body, for application/json :param post_params: request post parameters, application/x-www-form-urlencoded and multipart/form-data :param _preload_content: if False, the urllib3.HTTPResponse object will be returned without reading/decoding response data. Default is True. :param _request_timeout: timeout setting for this request. If one number provided, it will be total request timeout. It can also be a pair (tuple) of (connection, read) timeouts.","title":"RESTClientObject"},{"location":"api-reference/#deepsearch.cps.apis.user.rest.RESTResponse","text":"Bases: io . IOBase getheader ( name , default = None ) \u00b6 Returns a given response header. getheaders () \u00b6 Returns a dictionary of the response headers.","title":"RESTResponse"},{"location":"api-reference/#deepsearch.cps.cli","text":"","title":"cli"},{"location":"api-reference/#deepsearch.cps.cli.data_indices_typer","text":"","title":"data_indices_typer"},{"location":"api-reference/#deepsearch.cps.cli.data_indices_typer.upload_files","text":"Upload pdfs, zips, or online documents to a data index in a project","title":"upload_files()"},{"location":"api-reference/#deepsearch.cps.client","text":"","title":"client"},{"location":"api-reference/#deepsearch.cps.client.CpsApi","text":"","title":"CpsApi"},{"location":"api-reference/#deepsearch.cps.client.api.CpsApi.default_from_env","text":"Connect to CPS's API using a configured environment file","title":"default_from_env()"},{"location":"api-reference/#deepsearch.cps.client.api","text":"","title":"api"},{"location":"api-reference/#deepsearch.cps.client.api.CpsApi","text":"","title":"CpsApi"},{"location":"api-reference/#deepsearch.cps.client.api.CpsApi.default_from_env","text":"Connect to CPS's API using a configured environment file","title":"default_from_env()"},{"location":"api-reference/#deepsearch.cps.client.builders","text":"","title":"builders"},{"location":"api-reference/#deepsearch.cps.client.builders.wf_builder","text":"","title":"wf_builder"},{"location":"api-reference/#deepsearch.cps.client.builders.wf_builder.WorkflowTask","text":"set_as_output () \u00b6 Set this task to provide an output.","title":"WorkflowTask"},{"location":"api-reference/#deepsearch.cps.client.components","text":"","title":"components"},{"location":"api-reference/#deepsearch.cps.client.components.CpsApiDataIndices","text":"","title":"CpsApiDataIndices"},{"location":"api-reference/#deepsearch.cps.client.components.data_indices.CpsApiDataIndices.create","text":"Method to create a new index.","title":"create()"},{"location":"api-reference/#deepsearch.cps.client.components.data_indices.CpsApiDataIndices.create--input","text":"string key of project in which index is created string name of data index string, OPTIONAL description of data index string, OPTIONAL type of data index, default is \"Document\" possible values: \"Document\", \"DB Records\", \"Generic\", \"Experiment\" string, OPTIONAL schema of data index, default is \"deepsearch_doc\" possible values: \"deepsearch-doc\", \"deepsearch-db\", \"generic\"","title":"Input"},{"location":"api-reference/#deepsearch.cps.client.components.data_indices.CpsApiDataIndices.upload_file","text":"Call api for converting and uploading file to a project's data index.","title":"upload_file()"},{"location":"api-reference/#deepsearch.cps.client.components.CpsApiKnowledgeGraphs","text":"","title":"CpsApiKnowledgeGraphs"},{"location":"api-reference/#deepsearch.cps.client.components.knowledge_graphs.CpsApiKnowledgeGraphs.list_flavours","text":"List Knowledge Graph flavours.","title":"list_flavours()"},{"location":"api-reference/#deepsearch.cps.client.components.CpsApiTasks","text":"","title":"CpsApiTasks"},{"location":"api-reference/#deepsearch.cps.client.components.tasks.CpsApiTasks.wait_for","text":"Waits for a task and returns its result, or raises an exception in case of failure.","title":"wait_for()"},{"location":"api-reference/#deepsearch.cps.client.components.data_indices","text":"","title":"data_indices"},{"location":"api-reference/#deepsearch.cps.client.components.data_indices.CpsApiDataIndices","text":"create ( proj_key , name , desc = '' , type = None , schema_key = None ) \u00b6 Method to create a new index.","title":"CpsApiDataIndices"},{"location":"api-reference/#deepsearch.cps.client.components.data_indices.CpsApiDataIndices.create--input","text":"string key of project in which index is created string name of data index string, OPTIONAL description of data index string, OPTIONAL type of data index, default is \"Document\" possible values: \"Document\", \"DB Records\", \"Generic\", \"Experiment\" string, OPTIONAL schema of data index, default is \"deepsearch_doc\" possible values: \"deepsearch-doc\", \"deepsearch-db\", \"generic\" upload_file ( coords , body ) \u00b6 Call api for converting and uploading file to a project's data index.","title":"Input"},{"location":"api-reference/#deepsearch.cps.client.components.knowledge_graphs","text":"","title":"knowledge_graphs"},{"location":"api-reference/#deepsearch.cps.client.components.knowledge_graphs.CpsApiKg","text":"Bases: ApiConnectedObject save_snapshot_of_data_flow ( flavours , load_after_assembled = False , name = None ) \u00b6 Re-create the snapshot for a KG, using the last-assembled data-flow as a base","title":"CpsApiKg"},{"location":"api-reference/#deepsearch.cps.client.components.knowledge_graphs.CpsApiKnowledgeGraphs","text":"list_flavours ( project ) \u00b6 List Knowledge Graph flavours.","title":"CpsApiKnowledgeGraphs"},{"location":"api-reference/#deepsearch.cps.client.components.tasks","text":"","title":"tasks"},{"location":"api-reference/#deepsearch.cps.client.components.tasks.CpsApiTasks","text":"wait_for ( project , task_id ) \u00b6 Waits for a task and returns its result, or raises an exception in case of failure.","title":"CpsApiTasks"},{"location":"api-reference/#deepsearch.cps.client.queries","text":"","title":"queries"},{"location":"api-reference/#deepsearch.cps.client.queries.Resource","text":"Bases: Protocol Models which implement this Protocol can be passed as coordinates to tasks","title":"Resource"},{"location":"api-reference/#deepsearch.cps.client.queries.query_tasks","text":"","title":"query_tasks"},{"location":"api-reference/#deepsearch.cps.client.queries.query_tasks.ForEach","text":"Bases: Task , TaskWithWellKnownOutputs [ ForEachOutputs ] current_element () \u00b6 Create a placeholder that will inject the current element into the template. current_index () \u00b6 Create a placeholder that will inject the current index into the template.","title":"ForEach"},{"location":"api-reference/#deepsearch.cps.client.queries.query_tasks.for_each","text":"ForEach \u00b6 Bases: Task , TaskWithWellKnownOutputs [ ForEachOutputs ] current_element () \u00b6 Create a placeholder that will inject the current element into the template. current_index () \u00b6 Create a placeholder that will inject the current index into the template.","title":"for_each"},{"location":"api-reference/#deepsearch.cps.client.queries.task","text":"","title":"task"},{"location":"api-reference/#deepsearch.cps.client.queries.task.Resource","text":"Bases: Protocol Models which implement this Protocol can be passed as coordinates to tasks","title":"Resource"},{"location":"api-reference/#deepsearch.cps.data_indices","text":"","title":"data_indices"},{"location":"api-reference/#deepsearch.cps.data_indices.utils","text":"","title":"utils"},{"location":"api-reference/#deepsearch.cps.data_indices.utils.process_local_file","text":"Individual files are uploaded for conversion and storage in data index.","title":"process_local_file()"},{"location":"api-reference/#deepsearch.cps.data_indices.utils.process_url_input","text":"Individual urls are uploaded for conversion and storage in data index.","title":"process_url_input()"},{"location":"api-reference/#deepsearch.cps.data_indices.utils.upload_files","text":"Orchestrate document conversion and upload to an index in a project","title":"upload_files()"},{"location":"api-reference/#deepsearch.cps.ipython","text":"","title":"ipython"},{"location":"api-reference/#deepsearch.cps.ipython.kg_helpers","text":"","title":"kg_helpers"},{"location":"api-reference/#deepsearch.cps.ipython.kg_helpers.display_kg_topology","text":"Visualize the KG topology :param config: Knowledge Graph API Configuration :type config: Configuration :param width: IFrame width :type width: int :param height: IFrame height :type height: int","title":"display_kg_topology()"},{"location":"api-reference/#deepsearch.cps.ipython.kg_helpers.display_workflow","text":"Visualize the workflow DAG :param config: Knowledge Graph API Configuration :type config: Configuration :param width: IFrame width :type width: int :param height: IFrame height :type height: int","title":"display_workflow()"},{"location":"api-reference/#deepsearch.cps.ipython.kg_widgets","text":"","title":"kg_widgets"},{"location":"api-reference/#deepsearch.cps.ipython.kg_widgets.KGSelector","text":"","title":"KGSelector"},{"location":"api-reference/#deepsearch.cps.ipython.kg_widgets.KGSelector.interactive","text":"Select the KG using the interacting widget components","title":"interactive()"},{"location":"api-reference/#deepsearch.cps.kg","text":"","title":"kg"},{"location":"api-reference/#deepsearch.cps.kg.workflow","text":"","title":"workflow"},{"location":"api-reference/#deepsearch.cps.kg.workflow.wf_functions","text":"","title":"wf_functions"},{"location":"api-reference/#deepsearch.cps.kg.workflow.wf_functions.run","text":"Run the workflow against the given KG :param workflow: Workflow object :type workflow: Workflow :param config: Knowledge Graph API Configuration :type config: Configuration :returns workflow results","title":"run()"},{"location":"api-reference/#deepsearch.cps.kg.workflow.wf_functions.validate","text":"Validate the workflow DAG :param workflow: Workflow object :type workflow: Workflow :param config: Knowledge Graph API Configuration :type config: Configuration","title":"validate()"},{"location":"api-reference/#deepsearch.cps.kg.workflow.workflow","text":"","title":"workflow"},{"location":"api-reference/#deepsearch.cps.kg.workflow.workflow.Workflow","text":"as_output ( limit = None ) \u00b6 Set node type as output :param limit: Response limit :type limit: int combine ( * workflows ) \u00b6 Combine result :param *workflows : Nodes to combine :type *workflows : List['Workflow'] edge_traversal ( edges = [], include = []) \u00b6 Traverse edges :param edges: The edges to traverse :type edges: List[str] :param include: Include nodes in operation :type include: List['Workflow'] filter ( filter_type = 'cut-off' , field_operation = '==' , field_value = '' , include = []) \u00b6 Filter values :param filter_type: Filter type. Possible values \"cut-off\", \"field-value\" :type filter_type: str :param field_operation: The field operation to use if filter type is \"field-value\". Possible values \"<\", \"==\", \">\" :type field_operation: str :param field_value: The field value to filter by :type field_value: str :param include: Include nodes in operation :type include: List['Workflow'] filter_categories ( * categories , include = []) \u00b6 Filter node type by category :param categories: the categories to filter :type categories: List[str] :param include: Include nodes in operation :type include: List['Workflow'] get_operations () \u00b6 Return workflow operations intersect ( * workflows ) \u00b6 Intersect result :param *workflows : Nodes to intersect :type *workflows : List['Workflow'] matrix_function ( matrix_function = 'abs' , include = []) \u00b6 Run result through matrix function :param matrix_function: Scalar function to use. Possible values \"e^A\", \"cosh\", \"sinh\" :type matrix_function: str :param include: Include nodes in operation :type include: List['Workflow'] multiply ( * workflows ) \u00b6 Multiply result :param *workflows : Nodes to multiply :type *workflows : List['Workflow'] negate ( * workflows ) \u00b6 Negate result :param *workflows : Nodes to negate :type *workflows : List['Workflow'] normalize ( normalize_type = 'RENORMALIZE_L2' , include = []) \u00b6 Normalize result :param normalize_type: Normalize type to use. Possible values \"RENORMALIZE_L1\", \"RENORMALIZE_L2\", \"RENORMALIZE_LINF\" :type normalize_type: str :param include: Include nodes in operation :type include: List['Workflow'] pearson_traversal ( edges = [], include = []) \u00b6 Traverse edges using pearson traversal :param edges: The edges to traverse :type edges: List[str] :param include: Include nodes in operation :type include: List['Workflow'] scalar_function ( scalar_function = 'abs' , include = []) \u00b6 Run result through scalar function :param scalar_function: Scalar function to use. Possible values \"uniform\", \"abs\", \"inv\", \"sigmoid\", \"softmax\" :type scalar_function: str :param include: Include nodes in operation :type include: List['Workflow'] search_nodes_by_approximation ( * args , tolerance = 0.8 , include = []) \u00b6 Search nodes where the arguments are approximate :param *args : the search arguments :type *args : List[str] :param tolerance: the tolerance :type tolerance: float :param include: Include nodes in operation :type include: List['Workflow'] search_nodes_by_db_id_pair ( * args , include = []) \u00b6 Search nodes that contain the db\\id pair :param *args : the db\\id pairs in format {\"_db\": \"db value\", \"_id\": \"id value\"} :type *args : List[str] :param include: Include nodes in operation :type include: List['Workflow'] search_nodes_by_index ( indices = [], weights = [], include = []) \u00b6 Search nodes by index :param indices: the indices to search :type indices: str :param weights: the weight to search :type weights: float :param include: Include nodes in operation :type include: List['Workflow'] search_nodes_by_regex ( * args , include = []) \u00b6 Search nodes by regex that match args :param *args : the search arguments :type *args : List[str] :param include: Include nodes in operation :type include: List['Workflow'] search_nodes_containing ( * args , include = []) \u00b6 Search nodes that contain the args :param *args : the search arguments :type *args : List[str] :param include: Include nodes in operation :type include: List['Workflow'] search_nodes_equal ( * args , include = []) \u00b6 Search nodes that equal the args :param *args : the search arguments :type *args : List[str] :param include: Include nodes in operation :type include: List['Workflow'] search_nodes_in_category ( * categories , include = []) \u00b6 Search nodes in categories :param categories: the categories to search :type categories: List[str] :param include: Include nodes in operation :type include: List['Workflow'] set_to_field_value ( field_name = '' , include = []) \u00b6 Set node to field value :param field_name: The field name :type field_name: str :param include: Include nodes in operation :type include: List['Workflow'] split ( times = 1 ) \u00b6 Add children to node :param times: Number of children to add :type times: int :returns node childs sum ( * workflows ) \u00b6 Sum result :param *workflows : Nodes to sum :type *workflows : List['Workflow'] to_json ( indent = 2 ) \u00b6 Return workflow as json string :param indent: result indentation :type indent: int","title":"Workflow"},{"location":"api-reference/#deepsearch.documents","text":"","title":"documents"},{"location":"api-reference/#deepsearch.documents.cli","text":"","title":"cli"},{"location":"api-reference/#deepsearch.documents.cli.main","text":"","title":"main"},{"location":"api-reference/#deepsearch.documents.cli.main.convert","text":"Document conversion via DeepSearch Technology.","title":"convert()"},{"location":"api-reference/#deepsearch.documents.cli.main.convert--inputs","text":"proj_key : string [REQUIRED] Your DeepSearch CPS Project Key. Contact DeepSearch Developers to request one. url : string [OPTIONAL] For converting a document from the web, please provide its url. local_file : string/path [OPTIONAL] For converting local files, please provide absolute path to file or to directory containing multiple files. NOTE: Either url or local_file should be supplied.","title":"Inputs"},{"location":"api-reference/#deepsearch.documents.core","text":"","title":"core"},{"location":"api-reference/#deepsearch.documents.core.convert","text":"","title":"convert"},{"location":"api-reference/#deepsearch.documents.core.convert.check_single_task_status","text":"Check status of individual tasks.","title":"check_single_task_status()"},{"location":"api-reference/#deepsearch.documents.core.convert.check_status_running_tasks","text":"Check status of multiple running tasks and display progress with progress bar.","title":"check_status_running_tasks()"},{"location":"api-reference/#deepsearch.documents.core.convert.download_converted_docs","text":"Download all converted documents","title":"download_converted_docs()"},{"location":"api-reference/#deepsearch.documents.core.convert.download_url","text":"Download contents from a url.","title":"download_url()"},{"location":"api-reference/#deepsearch.documents.core.convert.get_ccs_project_key","text":"Given a cps project key, returns ccs project key and collection name.","title":"get_ccs_project_key()"},{"location":"api-reference/#deepsearch.documents.core.convert.get_converted_doc","text":"Download converted document","title":"get_converted_doc()"},{"location":"api-reference/#deepsearch.documents.core.convert.make_payload","text":"Create payload for requesting conversion","title":"make_payload()"},{"location":"api-reference/#deepsearch.documents.core.convert.send_files_for_conversion","text":"Send multiple files for conversion.","title":"send_files_for_conversion()"},{"location":"api-reference/#deepsearch.documents.core.convert.send_urls_for_conversion","text":"Send multiple online documents for conversion.","title":"send_urls_for_conversion()"},{"location":"api-reference/#deepsearch.documents.core.convert.submit_url_for_conversion","text":"Convert an online pdf using DeepSearch Technology.","title":"submit_url_for_conversion()"},{"location":"api-reference/#deepsearch.documents.core.convert.upload_single_file","text":"Uploads a single file. Return internal download url.","title":"upload_single_file()"},{"location":"api-reference/#deepsearch.documents.core.create_report","text":"","title":"create_report"},{"location":"api-reference/#deepsearch.documents.core.create_report.report_docs","text":"Function to create report when DeepSearch is converting local documents.","title":"report_docs()"},{"location":"api-reference/#deepsearch.documents.core.create_report.report_urls","text":"Function to create report when DeepSearch is converting urls.","title":"report_urls()"},{"location":"api-reference/#deepsearch.documents.core.input_process","text":"","title":"input_process"},{"location":"api-reference/#deepsearch.documents.core.input_process.batch_single_files","text":"Batch individual pdfs into zip files.","title":"batch_single_files()"},{"location":"api-reference/#deepsearch.documents.core.input_process.cleanup","text":"Clean temporarily created zip batches.","title":"cleanup()"},{"location":"api-reference/#deepsearch.documents.core.input_process.create_root_dir","text":"Creates root directory labelled with timestamp","title":"create_root_dir()"},{"location":"api-reference/#deepsearch.documents.core.input_process.get_urls","text":"Returns list of url from input file.","title":"get_urls()"},{"location":"api-reference/#deepsearch.documents.core.input_process.process_local_input","text":"Classify the user provided local input and take appropriate action.","title":"process_local_input()"},{"location":"api-reference/#deepsearch.documents.core.input_process.process_url_input","text":"Classify user provided url(s) and take appropriate action.","title":"process_url_input()"},{"location":"api-reference/#deepsearch.documents.core.main","text":"","title":"main"},{"location":"api-reference/#deepsearch.documents.core.main.convert_document","text":"Document conversion via DeepSearch Technology. Function to orchestrate document conversion.","title":"convert_document()"},{"location":"api-reference/#deepsearch.documents.core.main.convert_document--inputs","text":"proj_key : string [REQUIRED] Your DeepSearch CPS Project Key. Contact DeepSearch Developers to request one. url : string [OPTIONAL] For converting a document from the web, please provide its url. local_file : path [OPTIONAL] For converting local files, please provide absolute path to file or to directory containing multiple files. NOTE: Either url or local_file should be supplied.","title":"Inputs"},{"location":"api-reference/#deepsearch.plugins","text":"","title":"plugins"},{"location":"api-reference/#deepsearch.plugins.example_toy_cli_plugin","text":"A toy example plugin for the DeepSearch CLI.","title":"example_toy_cli_plugin"},{"location":"cli-reference/","text":"CLI Reference \u00b6 This page provides documentation for our command line tools. app \u00b6 Usage: [OPTIONS] COMMAND [ARGS]... config \u00b6 Manage CLI config files Usage: config [OPTIONS] COMMAND [ARGS]... config-file-path \u00b6 Get current configuration file path. This takes into account the environment variable 'DEEPSEARCH_TOOLKIT_CONFIG_FILE' and the presence of a file named 'deepsearch_toolkit.json' unless '--default' is passed Usage: config config-file-path [OPTIONS] Options: --default / --no-default [default: no-default] cps \u00b6 Interact with DeepSearch CPS component Usage: cps [OPTIONS] COMMAND [ARGS]... data-indices \u00b6 Manage CPS data indices Usage: cps data-indices [OPTIONS] COMMAND [ARGS]... create \u00b6 Create data index in project Usage: cps data-indices create [OPTIONS] Options: -p, --proj-key TEXT Provide project key [required] -n, --name TEXT Name of data index [required] -d, -desc TEXT Describe your data index --type [Document|DB Record|Generic|Experiment] Type of Data Index [default: Document] delete \u00b6 Delete data index in a project Usage: cps data-indices delete [OPTIONS] Options: -p, --proj-key TEXT Provide project key [required] -x, --index-key TEXT index_key of data index [required] list \u00b6 List data indices in project Usage: cps data-indices list [OPTIONS] Options: -p, --proj-key TEXT Provide project key [required] -o, --output [table|json] Output format [default: OutputEnum.table] upload \u00b6 Upload files/urls to index Usage: cps data-indices upload [OPTIONS] Options: -p, --proj-key TEXT Provide project key [required] -u, --url TEXT Provide single url or absolute path to file containing multiple urls separated by empty lines. -i, --input-file PATH Provide absolute path to local file or directory containing pdf documents, zip files, or both. -x, --index-key TEXT index_key of data index [required] elastic-data \u00b6 Manage Elastic data collections Usage: cps elastic-data [OPTIONS] COMMAND [ARGS]... list \u00b6 List Elastic Data Collections Usage: cps elastic-data list [OPTIONS] Options: --domain TEXT [default: all] -o, --output [table|json] Output format [default: OutputEnum.table] kgs \u00b6 Manage CPS KGs Usage: cps kgs [OPTIONS] COMMAND [ARGS]... list \u00b6 List KGs Usage: cps kgs list [OPTIONS] Options: -p, --proj-key TEXT Provide project key [required] -o, --output [table|json] Output format [default: OutputEnum.table] list-flavours \u00b6 List KG flavours for a project Usage: cps kgs list-flavours [OPTIONS] Options: -p, --proj-key TEXT Provide project key [required] -o, --output [table|json] Output format [default: OutputEnum.table] save-snapshot \u00b6 Save a snapshot from an assembled Data Set Usage: cps kgs save-snapshot [OPTIONS] Options: -p, --proj-key TEXT Provide project key [required] -k, --kg-key TEXT Knowledge Graph [required] -w, --wait Wait for the operation to finish --flavour TEXT Name of the Flavour/Capacity of the snapshot. Use 'list-flavours' to get a list [required] --load-after-assembled [default: True] --snapshot-name TEXT projects \u00b6 Manage CPS projects Usage: cps projects [OPTIONS] COMMAND [ARGS]... list \u00b6 List projects Usage: cps projects list [OPTIONS] Options: -o, --output [table|json] Output format [default: OutputEnum.table] documents \u00b6 Interact with DeepSearch Document Conversion component Usage: documents [OPTIONS] COMMAND [ARGS]... convert \u00b6 Convert pdf documents using DeepSearch Technology Usage: documents convert [OPTIONS] Options: -p, --proj-key TEXT Provide project key [required] -u, --url TEXT Provide single url or absolute path to file containing multiple urls separated by empty lines. -i, --input-file PATH Provide absolute path to local file or directory containing pdf documents, zip files, or both. login \u00b6 Login to DeepSearch platform Usage: login [OPTIONS] COMMAND [ARGS]... Options: --host TEXT [default: https://cps.foc- deepsearch.zurich.ibm.com] --email TEXT [required] --api-key TEXT [required] --verify-ssl / --no-verify-ssl [default: verify-ssl] --output TEXT Where to save configuration to. Use '-' to print to stdout [default: /home/runner/.con fig/DeepSearch/deepsearch_toolkit.json] query \u00b6 Interact with DeepSearch Query component Usage: query [OPTIONS] COMMAND [ARGS]... data-query \u00b6 Launch a DeepSearch data query Usage: query data-query [OPTIONS] SEARCH_QUERY Options: SEARCH_QUERY [required] -s, --source TEXT -p, --proj-key TEXT Provide project key [required] -e, --instance TEXT -x, --index-key TEXT index_key of data index [required] -o, --output [table|json] Output format [default: OutputEnum.table] kg-fts \u00b6 Launch a KG Full Text Search Usage: query kg-fts [OPTIONS] SEARCH_QUERY Options: SEARCH_QUERY [required] -p, --proj-key TEXT Provide project key [required] -k, --kg-key TEXT [required] -c, --collection TEXT [required] -o, --output [table|json] Output format [default: OutputEnum.table] query-flow \u00b6 Launch a raw flow query Usage: query query-flow [OPTIONS] Options: -i, --input-file PATH [required] -o, --output [table|json] Output format [default: OutputEnum.table] wf \u00b6 Launch a CPS KG Worflow query Usage: query wf [OPTIONS] Options: -i, --input-file PATH JSON Workflow file, as generated by the CPS KG UI [required] -p, --proj-key TEXT Provide project key [required] -k, --kg-key TEXT [required] -o, --output [table|json] Output format [default: OutputEnum.table] version \u00b6 Print the client and server version Usage: version [OPTIONS]","title":"CLI reference"},{"location":"cli-reference/#cli-reference","text":"This page provides documentation for our command line tools.","title":"CLI Reference"},{"location":"cli-reference/#app","text":"Usage: [OPTIONS] COMMAND [ARGS]...","title":"app"},{"location":"cli-reference/#config","text":"Manage CLI config files Usage: config [OPTIONS] COMMAND [ARGS]...","title":"config"},{"location":"cli-reference/#config-file-path","text":"Get current configuration file path. This takes into account the environment variable 'DEEPSEARCH_TOOLKIT_CONFIG_FILE' and the presence of a file named 'deepsearch_toolkit.json' unless '--default' is passed Usage: config config-file-path [OPTIONS] Options: --default / --no-default [default: no-default]","title":"config-file-path"},{"location":"cli-reference/#cps","text":"Interact with DeepSearch CPS component Usage: cps [OPTIONS] COMMAND [ARGS]...","title":"cps"},{"location":"cli-reference/#data-indices","text":"Manage CPS data indices Usage: cps data-indices [OPTIONS] COMMAND [ARGS]...","title":"data-indices"},{"location":"cli-reference/#create","text":"Create data index in project Usage: cps data-indices create [OPTIONS] Options: -p, --proj-key TEXT Provide project key [required] -n, --name TEXT Name of data index [required] -d, -desc TEXT Describe your data index --type [Document|DB Record|Generic|Experiment] Type of Data Index [default: Document]","title":"create"},{"location":"cli-reference/#delete","text":"Delete data index in a project Usage: cps data-indices delete [OPTIONS] Options: -p, --proj-key TEXT Provide project key [required] -x, --index-key TEXT index_key of data index [required]","title":"delete"},{"location":"cli-reference/#list","text":"List data indices in project Usage: cps data-indices list [OPTIONS] Options: -p, --proj-key TEXT Provide project key [required] -o, --output [table|json] Output format [default: OutputEnum.table]","title":"list"},{"location":"cli-reference/#upload","text":"Upload files/urls to index Usage: cps data-indices upload [OPTIONS] Options: -p, --proj-key TEXT Provide project key [required] -u, --url TEXT Provide single url or absolute path to file containing multiple urls separated by empty lines. -i, --input-file PATH Provide absolute path to local file or directory containing pdf documents, zip files, or both. -x, --index-key TEXT index_key of data index [required]","title":"upload"},{"location":"cli-reference/#elastic-data","text":"Manage Elastic data collections Usage: cps elastic-data [OPTIONS] COMMAND [ARGS]...","title":"elastic-data"},{"location":"cli-reference/#list_1","text":"List Elastic Data Collections Usage: cps elastic-data list [OPTIONS] Options: --domain TEXT [default: all] -o, --output [table|json] Output format [default: OutputEnum.table]","title":"list"},{"location":"cli-reference/#kgs","text":"Manage CPS KGs Usage: cps kgs [OPTIONS] COMMAND [ARGS]...","title":"kgs"},{"location":"cli-reference/#list_2","text":"List KGs Usage: cps kgs list [OPTIONS] Options: -p, --proj-key TEXT Provide project key [required] -o, --output [table|json] Output format [default: OutputEnum.table]","title":"list"},{"location":"cli-reference/#list-flavours","text":"List KG flavours for a project Usage: cps kgs list-flavours [OPTIONS] Options: -p, --proj-key TEXT Provide project key [required] -o, --output [table|json] Output format [default: OutputEnum.table]","title":"list-flavours"},{"location":"cli-reference/#save-snapshot","text":"Save a snapshot from an assembled Data Set Usage: cps kgs save-snapshot [OPTIONS] Options: -p, --proj-key TEXT Provide project key [required] -k, --kg-key TEXT Knowledge Graph [required] -w, --wait Wait for the operation to finish --flavour TEXT Name of the Flavour/Capacity of the snapshot. Use 'list-flavours' to get a list [required] --load-after-assembled [default: True] --snapshot-name TEXT","title":"save-snapshot"},{"location":"cli-reference/#projects","text":"Manage CPS projects Usage: cps projects [OPTIONS] COMMAND [ARGS]...","title":"projects"},{"location":"cli-reference/#list_3","text":"List projects Usage: cps projects list [OPTIONS] Options: -o, --output [table|json] Output format [default: OutputEnum.table]","title":"list"},{"location":"cli-reference/#documents","text":"Interact with DeepSearch Document Conversion component Usage: documents [OPTIONS] COMMAND [ARGS]...","title":"documents"},{"location":"cli-reference/#convert","text":"Convert pdf documents using DeepSearch Technology Usage: documents convert [OPTIONS] Options: -p, --proj-key TEXT Provide project key [required] -u, --url TEXT Provide single url or absolute path to file containing multiple urls separated by empty lines. -i, --input-file PATH Provide absolute path to local file or directory containing pdf documents, zip files, or both.","title":"convert"},{"location":"cli-reference/#login","text":"Login to DeepSearch platform Usage: login [OPTIONS] COMMAND [ARGS]... Options: --host TEXT [default: https://cps.foc- deepsearch.zurich.ibm.com] --email TEXT [required] --api-key TEXT [required] --verify-ssl / --no-verify-ssl [default: verify-ssl] --output TEXT Where to save configuration to. Use '-' to print to stdout [default: /home/runner/.con fig/DeepSearch/deepsearch_toolkit.json]","title":"login"},{"location":"cli-reference/#query","text":"Interact with DeepSearch Query component Usage: query [OPTIONS] COMMAND [ARGS]...","title":"query"},{"location":"cli-reference/#data-query","text":"Launch a DeepSearch data query Usage: query data-query [OPTIONS] SEARCH_QUERY Options: SEARCH_QUERY [required] -s, --source TEXT -p, --proj-key TEXT Provide project key [required] -e, --instance TEXT -x, --index-key TEXT index_key of data index [required] -o, --output [table|json] Output format [default: OutputEnum.table]","title":"data-query"},{"location":"cli-reference/#kg-fts","text":"Launch a KG Full Text Search Usage: query kg-fts [OPTIONS] SEARCH_QUERY Options: SEARCH_QUERY [required] -p, --proj-key TEXT Provide project key [required] -k, --kg-key TEXT [required] -c, --collection TEXT [required] -o, --output [table|json] Output format [default: OutputEnum.table]","title":"kg-fts"},{"location":"cli-reference/#query-flow","text":"Launch a raw flow query Usage: query query-flow [OPTIONS] Options: -i, --input-file PATH [required] -o, --output [table|json] Output format [default: OutputEnum.table]","title":"query-flow"},{"location":"cli-reference/#wf","text":"Launch a CPS KG Worflow query Usage: query wf [OPTIONS] Options: -i, --input-file PATH JSON Workflow file, as generated by the CPS KG UI [required] -p, --proj-key TEXT Provide project key [required] -k, --kg-key TEXT [required] -o, --output [table|json] Output format [default: OutputEnum.table]","title":"wf"},{"location":"cli-reference/#version","text":"Print the client and server version Usage: version [OPTIONS]","title":"version"},{"location":"apis/","text":"WARNING: Generated Code \u00b6 This code was generated by a tool. Do not modify these files.","title":"WARNING: Generated Code"},{"location":"apis/#warning-generated-code","text":"This code was generated by a tool. Do not modify these files.","title":"WARNING: Generated Code"},{"location":"apis/public/AnnotateApi/","text":"deepsearch.cps.apis.public.AnnotateApi \u00b6 All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description generate_project_object_annotations POST /project/{proj_key}/object_annotations generate_project_object_annotations_async POST /project/{proj_key}/object_annotations_async get_cached_annotator_metadata POST /project/{proj_key}/annotator/metadata get_project_annotator_supported_annotations POST /project/{proj_key}/annotate/supported_annotations generate_project_object_annotations \u00b6 AnnotatedObject1 generate_project_object_annotations(proj_key, options) Run an annotator on an object, using resources from the project. DEPRECATED , please use generate_project_object_annotations_async instead. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . AnnotateApi ( api_client ) proj_key = 'proj_key_example' # str | options = deepsearch . cps . apis . public . AnnotateObjectOptions () # AnnotateObjectOptions | try : api_response = api_instance . generate_project_object_annotations ( proj_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling AnnotateApi->generate_project_object_annotations: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str options AnnotateObjectOptions Return type \u00b6 AnnotatedObject1 Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] generate_project_object_annotations_async \u00b6 Task generate_project_object_annotations_async(proj_key, options) Run an annotator on an object, using resources from the project. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . AnnotateApi ( api_client ) proj_key = 'proj_key_example' # str | options = deepsearch . cps . apis . public . AnnotateObjectOptions1 () # AnnotateObjectOptions1 | try : api_response = api_instance . generate_project_object_annotations_async ( proj_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling AnnotateApi->generate_project_object_annotations_async: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str options AnnotateObjectOptions1 Return type \u00b6 Task Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_cached_annotator_metadata \u00b6 AnnotatorMetadata get_cached_annotator_metadata(proj_key, options) Get annotator's metadata Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . AnnotateApi ( api_client ) proj_key = 'proj_key_example' # str | options = None # object | try : api_response = api_instance . get_cached_annotator_metadata ( proj_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling AnnotateApi->get_cached_annotator_metadata: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str options object Return type \u00b6 AnnotatorMetadata Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json, text/html HTTP response details \u00b6 Status code Description Response headers 200 OK - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_project_annotator_supported_annotations \u00b6 SupportedAnnotatorAnnotations get_project_annotator_supported_annotations(proj_key, options) Get supported annotations for an annotator Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . AnnotateApi ( api_client ) proj_key = 'proj_key_example' # str | options = None # object | try : api_response = api_instance . get_project_annotator_supported_annotations ( proj_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling AnnotateApi->get_project_annotator_supported_annotations: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str options object Return type \u00b6 SupportedAnnotatorAnnotations Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json, text/html HTTP response details \u00b6 Status code Description Response headers 200 OK - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"deepsearch.cps.apis.public.AnnotateApi"},{"location":"apis/public/AnnotateApi/#deepsearchcpsapispublicannotateapi","text":"All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description generate_project_object_annotations POST /project/{proj_key}/object_annotations generate_project_object_annotations_async POST /project/{proj_key}/object_annotations_async get_cached_annotator_metadata POST /project/{proj_key}/annotator/metadata get_project_annotator_supported_annotations POST /project/{proj_key}/annotate/supported_annotations","title":"deepsearch.cps.apis.public.AnnotateApi"},{"location":"apis/public/AnnotateApi/#generate_project_object_annotations","text":"AnnotatedObject1 generate_project_object_annotations(proj_key, options) Run an annotator on an object, using resources from the project. DEPRECATED , please use generate_project_object_annotations_async instead.","title":"generate_project_object_annotations"},{"location":"apis/public/AnnotateApi/#example","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . AnnotateApi ( api_client ) proj_key = 'proj_key_example' # str | options = deepsearch . cps . apis . public . AnnotateObjectOptions () # AnnotateObjectOptions | try : api_response = api_instance . generate_project_object_annotations ( proj_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling AnnotateApi->generate_project_object_annotations: %s \\n \" % e )","title":"Example"},{"location":"apis/public/AnnotateApi/#parameters","text":"Name Type Description Notes proj_key str options AnnotateObjectOptions","title":"Parameters"},{"location":"apis/public/AnnotateApi/#return-type","text":"AnnotatedObject1","title":"Return type"},{"location":"apis/public/AnnotateApi/#authorization","text":"Bearer","title":"Authorization"},{"location":"apis/public/AnnotateApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/AnnotateApi/#http-response-details","text":"Status code Description Response headers 200 OK - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/AnnotateApi/#generate_project_object_annotations_async","text":"Task generate_project_object_annotations_async(proj_key, options) Run an annotator on an object, using resources from the project.","title":"generate_project_object_annotations_async"},{"location":"apis/public/AnnotateApi/#example_1","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . AnnotateApi ( api_client ) proj_key = 'proj_key_example' # str | options = deepsearch . cps . apis . public . AnnotateObjectOptions1 () # AnnotateObjectOptions1 | try : api_response = api_instance . generate_project_object_annotations_async ( proj_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling AnnotateApi->generate_project_object_annotations_async: %s \\n \" % e )","title":"Example"},{"location":"apis/public/AnnotateApi/#parameters_1","text":"Name Type Description Notes proj_key str options AnnotateObjectOptions1","title":"Parameters"},{"location":"apis/public/AnnotateApi/#return-type_1","text":"Task","title":"Return type"},{"location":"apis/public/AnnotateApi/#authorization_1","text":"Bearer","title":"Authorization"},{"location":"apis/public/AnnotateApi/#http-request-headers_1","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/AnnotateApi/#http-response-details_1","text":"Status code Description Response headers 200 OK - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/AnnotateApi/#get_cached_annotator_metadata","text":"AnnotatorMetadata get_cached_annotator_metadata(proj_key, options) Get annotator's metadata","title":"get_cached_annotator_metadata"},{"location":"apis/public/AnnotateApi/#example_2","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . AnnotateApi ( api_client ) proj_key = 'proj_key_example' # str | options = None # object | try : api_response = api_instance . get_cached_annotator_metadata ( proj_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling AnnotateApi->get_cached_annotator_metadata: %s \\n \" % e )","title":"Example"},{"location":"apis/public/AnnotateApi/#parameters_2","text":"Name Type Description Notes proj_key str options object","title":"Parameters"},{"location":"apis/public/AnnotateApi/#return-type_2","text":"AnnotatorMetadata","title":"Return type"},{"location":"apis/public/AnnotateApi/#authorization_2","text":"Bearer","title":"Authorization"},{"location":"apis/public/AnnotateApi/#http-request-headers_2","text":"Content-Type : application/json Accept : application/json, text/html","title":"HTTP request headers"},{"location":"apis/public/AnnotateApi/#http-response-details_2","text":"Status code Description Response headers 200 OK - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/AnnotateApi/#get_project_annotator_supported_annotations","text":"SupportedAnnotatorAnnotations get_project_annotator_supported_annotations(proj_key, options) Get supported annotations for an annotator","title":"get_project_annotator_supported_annotations"},{"location":"apis/public/AnnotateApi/#example_3","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . AnnotateApi ( api_client ) proj_key = 'proj_key_example' # str | options = None # object | try : api_response = api_instance . get_project_annotator_supported_annotations ( proj_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling AnnotateApi->get_project_annotator_supported_annotations: %s \\n \" % e )","title":"Example"},{"location":"apis/public/AnnotateApi/#parameters_3","text":"Name Type Description Notes proj_key str options object","title":"Parameters"},{"location":"apis/public/AnnotateApi/#return-type_3","text":"SupportedAnnotatorAnnotations","title":"Return type"},{"location":"apis/public/AnnotateApi/#authorization_3","text":"Bearer","title":"Authorization"},{"location":"apis/public/AnnotateApi/#http-request-headers_3","text":"Content-Type : application/json Accept : application/json, text/html","title":"HTTP request headers"},{"location":"apis/public/AnnotateApi/#http-response-details_3","text":"Status code Description Response headers 200 OK - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/AnnotateDocumentRequest/","text":"AnnotateDocumentRequest \u00b6 Properties \u00b6 Name Type Description Notes document object image_annotators list[AnnotatorParametersOrRef] table_annotators list[AnnotatorParametersOrRef] text_annotators list[AnnotatorParametersOrRef] use_cache bool [optional] [default to True] [Back to Model list] [Back to API list] [Back to README]","title":"AnnotateDocumentRequest"},{"location":"apis/public/AnnotateDocumentRequest/#annotatedocumentrequest","text":"","title":"AnnotateDocumentRequest"},{"location":"apis/public/AnnotateDocumentRequest/#properties","text":"Name Type Description Notes document object image_annotators list[AnnotatorParametersOrRef] table_annotators list[AnnotatorParametersOrRef] text_annotators list[AnnotatorParametersOrRef] use_cache bool [optional] [default to True] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/AnnotateObjectOptions/","text":"AnnotateObjectOptions \u00b6 Properties \u00b6 Name Type Description Notes input AnnotatorInput parameters dict(str, object) [Back to Model list] [Back to API list] [Back to README]","title":"AnnotateObjectOptions"},{"location":"apis/public/AnnotateObjectOptions/#annotateobjectoptions","text":"","title":"AnnotateObjectOptions"},{"location":"apis/public/AnnotateObjectOptions/#properties","text":"Name Type Description Notes input AnnotatorInput parameters dict(str, object) [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/AnnotateObjectOptions1/","text":"AnnotateObjectOptions1 \u00b6 Properties \u00b6 Name Type Description Notes input AnnotatorInput model_config_key str [optional] parameters dict(str, object) proj_key str [optional] public bool [optional] [Back to Model list] [Back to API list] [Back to README]","title":"AnnotateObjectOptions1"},{"location":"apis/public/AnnotateObjectOptions1/#annotateobjectoptions1","text":"","title":"AnnotateObjectOptions1"},{"location":"apis/public/AnnotateObjectOptions1/#properties","text":"Name Type Description Notes input AnnotatorInput model_config_key str [optional] parameters dict(str, object) proj_key str [optional] public bool [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/AnnotatedDocumentReport/","text":"AnnotatedDocumentReport \u00b6 Properties \u00b6 Name Type Description Notes document ProjectProjKeyAnnotateDocumentReportDocument document_annotation_parameters object [optional] document_conversion_parameters object [optional] report ProjectProjKeyAnnotateDocumentReportReport [Back to Model list] [Back to API list] [Back to README]","title":"AnnotatedDocumentReport"},{"location":"apis/public/AnnotatedDocumentReport/#annotateddocumentreport","text":"","title":"AnnotatedDocumentReport"},{"location":"apis/public/AnnotatedDocumentReport/#properties","text":"Name Type Description Notes document ProjectProjKeyAnnotateDocumentReportDocument document_annotation_parameters object [optional] document_conversion_parameters object [optional] report ProjectProjKeyAnnotateDocumentReportReport [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/AnnotatedImage/","text":"AnnotatedImage \u00b6 Properties \u00b6 Name Type Description Notes entities dict(str, list[EntityAnnotation]) properties object relationships dict(str, list[object]) text str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"AnnotatedImage"},{"location":"apis/public/AnnotatedImage/#annotatedimage","text":"","title":"AnnotatedImage"},{"location":"apis/public/AnnotatedImage/#properties","text":"Name Type Description Notes entities dict(str, list[EntityAnnotation]) properties object relationships dict(str, list[object]) text str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/AnnotatedObject/","text":"AnnotatedObject \u00b6 Properties \u00b6 Name Type Description Notes image AnnotatedImage [optional] table AnnotatedTable [optional] text AnnotatedTextLines [optional] [Back to Model list] [Back to API list] [Back to README]","title":"AnnotatedObject"},{"location":"apis/public/AnnotatedObject/#annotatedobject","text":"","title":"AnnotatedObject"},{"location":"apis/public/AnnotatedObject/#properties","text":"Name Type Description Notes image AnnotatedImage [optional] table AnnotatedTable [optional] text AnnotatedTextLines [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/AnnotatedObject1/","text":"AnnotatedObject1 \u00b6 Properties \u00b6 Name Type Description Notes image AnnotatedImage [optional] table AnnotatedTable [optional] text AnnotatedTextLines [optional] [Back to Model list] [Back to API list] [Back to README]","title":"AnnotatedObject1"},{"location":"apis/public/AnnotatedObject1/#annotatedobject1","text":"","title":"AnnotatedObject1"},{"location":"apis/public/AnnotatedObject1/#properties","text":"Name Type Description Notes image AnnotatedImage [optional] table AnnotatedTable [optional] text AnnotatedTextLines [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/AnnotatedTable/","text":"AnnotatedTable \u00b6 Properties \u00b6 Name Type Description Notes entities dict(str, list[EntityAnnotation]) properties object relationships dict(str, list[object]) text str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"AnnotatedTable"},{"location":"apis/public/AnnotatedTable/#annotatedtable","text":"","title":"AnnotatedTable"},{"location":"apis/public/AnnotatedTable/#properties","text":"Name Type Description Notes entities dict(str, list[EntityAnnotation]) properties object relationships dict(str, list[object]) text str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/AnnotatedText/","text":"AnnotatedText \u00b6 Properties \u00b6 Name Type Description Notes entities dict(str, list[EntityAnnotation]) properties object relationships dict(str, list[object]) text str [Back to Model list] [Back to API list] [Back to README]","title":"AnnotatedText"},{"location":"apis/public/AnnotatedText/#annotatedtext","text":"","title":"AnnotatedText"},{"location":"apis/public/AnnotatedText/#properties","text":"Name Type Description Notes entities dict(str, list[EntityAnnotation]) properties object relationships dict(str, list[object]) text str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/AnnotatedTextLines/","text":"AnnotatedTextLines \u00b6 Properties \u00b6 Name Type Description Notes entities list[dict(str, list[EntityAnnotation])] One item per line on the original text. properties list[object] One item per line on the original text. relationships list[dict(str, list[object])] One item per line on the original text. text str Input text after clean up. The annotation indexes will be based on this text and not the input text. [Back to Model list] [Back to API list] [Back to README]","title":"AnnotatedTextLines"},{"location":"apis/public/AnnotatedTextLines/#annotatedtextlines","text":"","title":"AnnotatedTextLines"},{"location":"apis/public/AnnotatedTextLines/#properties","text":"Name Type Description Notes entities list[dict(str, list[EntityAnnotation])] One item per line on the original text. properties list[object] One item per line on the original text. relationships list[dict(str, list[object])] One item per line on the original text. text str Input text after clean up. The annotation indexes will be based on this text and not the input text. [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/AnnotatorImageInput/","text":"AnnotatorImageInput \u00b6 Properties \u00b6 Name Type Description Notes metadata ImageMetadata [optional] source ImageSource [Back to Model list] [Back to API list] [Back to README]","title":"AnnotatorImageInput"},{"location":"apis/public/AnnotatorImageInput/#annotatorimageinput","text":"","title":"AnnotatorImageInput"},{"location":"apis/public/AnnotatorImageInput/#properties","text":"Name Type Description Notes metadata ImageMetadata [optional] source ImageSource [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/AnnotatorInput/","text":"AnnotatorInput \u00b6 Properties \u00b6 Name Type Description Notes image AnnotatorImageInput [optional] table list[list[object]] A table, specified as an array of arrays. Each outer array represents a row, and each item in the inner array represents the column. [optional] text str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"AnnotatorInput"},{"location":"apis/public/AnnotatorInput/#annotatorinput","text":"","title":"AnnotatorInput"},{"location":"apis/public/AnnotatorInput/#properties","text":"Name Type Description Notes image AnnotatorImageInput [optional] table list[list[object]] A table, specified as an array of arrays. Each outer array represents a row, and each item in the inner array represents the column. [optional] text str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/AnnotatorMetadata/","text":"AnnotatorMetadata \u00b6 Properties \u00b6 Name Type Description Notes author str description str name str url str version str [Back to Model list] [Back to API list] [Back to README]","title":"AnnotatorMetadata"},{"location":"apis/public/AnnotatorMetadata/#annotatormetadata","text":"","title":"AnnotatorMetadata"},{"location":"apis/public/AnnotatorMetadata/#properties","text":"Name Type Description Notes author str description str name str url str version str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/AnnotatorParametersOrRef/","text":"AnnotatorParametersOrRef \u00b6 Properties \u00b6 Name Type Description Notes model_config_key str [optional] proj_key str [optional] public bool [optional] type str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"AnnotatorParametersOrRef"},{"location":"apis/public/AnnotatorParametersOrRef/#annotatorparametersorref","text":"","title":"AnnotatorParametersOrRef"},{"location":"apis/public/AnnotatorParametersOrRef/#properties","text":"Name Type Description Notes model_config_key str [optional] proj_key str [optional] public bool [optional] type str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/AnnotatorSupportedAnnotationsParameters/","text":"AnnotatorSupportedAnnotationsParameters \u00b6 Properties \u00b6 Name Type Description Notes annotator str annotator_settings object [optional] [Back to Model list] [Back to API list] [Back to README]","title":"AnnotatorSupportedAnnotationsParameters"},{"location":"apis/public/AnnotatorSupportedAnnotationsParameters/#annotatorsupportedannotationsparameters","text":"","title":"AnnotatorSupportedAnnotationsParameters"},{"location":"apis/public/AnnotatorSupportedAnnotationsParameters/#properties","text":"Name Type Description Notes annotator str annotator_settings object [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/AssembleDataFlowIntoKnowledgeGraphOptions/","text":"AssembleDataFlowIntoKnowledgeGraphOptions \u00b6 Properties \u00b6 Name Type Description Notes data_flow BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow render BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender snapshot TakeSnapshotSettingsBackendAware [optional] [Back to Model list] [Back to API list] [Back to README]","title":"AssembleDataFlowIntoKnowledgeGraphOptions"},{"location":"apis/public/AssembleDataFlowIntoKnowledgeGraphOptions/#assembledataflowintoknowledgegraphoptions","text":"","title":"AssembleDataFlowIntoKnowledgeGraphOptions"},{"location":"apis/public/AssembleDataFlowIntoKnowledgeGraphOptions/#properties","text":"Name Type Description Notes data_flow BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow render BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender snapshot TakeSnapshotSettingsBackendAware [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/AssembleDataFlowIntoKnowledgeGraphOptions1/","text":"AssembleDataFlowIntoKnowledgeGraphOptions1 \u00b6 Properties \u00b6 Name Type Description Notes data_flow BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow render BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender snapshot TakeSnapshotSettings [optional] [Back to Model list] [Back to API list] [Back to README]","title":"AssembleDataFlowIntoKnowledgeGraphOptions1"},{"location":"apis/public/AssembleDataFlowIntoKnowledgeGraphOptions1/#assembledataflowintoknowledgegraphoptions1","text":"","title":"AssembleDataFlowIntoKnowledgeGraphOptions1"},{"location":"apis/public/AssembleDataFlowIntoKnowledgeGraphOptions1/#properties","text":"Name Type Description Notes data_flow BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow render BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender snapshot TakeSnapshotSettings [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/BackendFlavour/","text":"BackendFlavour \u00b6 Properties \u00b6 Name Type Description Notes kg_amqp str [optional] kg_legacy_api str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"BackendFlavour"},{"location":"apis/public/BackendFlavour/#backendflavour","text":"","title":"BackendFlavour"},{"location":"apis/public/BackendFlavour/#properties","text":"Name Type Description Notes kg_amqp str [optional] kg_legacy_api str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow/","text":"BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow \u00b6 Properties \u00b6 Name Type Description Notes df_tpl_key str If set, the data flow with this key will be used. [optional] proj_key str If set, allows for cross-project data flows to be used. [optional] public bool Must be set if the data flow template is public [optional] raw_data_flow BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow [optional] [Back to Model list] [Back to API list] [Back to README]","title":"BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow"},{"location":"apis/public/BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow/#backendprojectprojkeybagsbagkeytasksassembledataflowdataflow","text":"","title":"BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow"},{"location":"apis/public/BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow/#properties","text":"Name Type Description Notes df_tpl_key str If set, the data flow with this key will be used. [optional] proj_key str If set, allows for cross-project data flows to be used. [optional] public bool Must be set if the data flow template is public [optional] raw_data_flow BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow/","text":"BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow \u00b6 If this is set, the raw data flow contents will be used. Properties \u00b6 Name Type Description Notes template str Must be valid JSON variables object [Back to Model list] [Back to API list] [Back to README]","title":"BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow"},{"location":"apis/public/BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow/#backendprojectprojkeybagsbagkeytasksassembledataflowdataflowrawdataflow","text":"If this is set, the raw data flow contents will be used.","title":"BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow"},{"location":"apis/public/BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRawDataFlow/#properties","text":"Name Type Description Notes template str Must be valid JSON variables object [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender/","text":"BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender \u00b6 Properties \u00b6 Name Type Description Notes variables dict(str, object) [Back to Model list] [Back to API list] [Back to README]","title":"BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender"},{"location":"apis/public/BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender/#backendprojectprojkeybagsbagkeytasksassembledataflowrender","text":"","title":"BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender"},{"location":"apis/public/BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender/#properties","text":"Name Type Description Notes variables dict(str, object) [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/BackupKnowledgeGraphOptions/","text":"BackupKnowledgeGraphOptions \u00b6 Properties \u00b6 Name Type Description Notes backup_s3 bool [optional] [default to True] coordinates S3CoordinatesWithBackupKey [optional] [Back to Model list] [Back to API list] [Back to README]","title":"BackupKnowledgeGraphOptions"},{"location":"apis/public/BackupKnowledgeGraphOptions/#backupknowledgegraphoptions","text":"","title":"BackupKnowledgeGraphOptions"},{"location":"apis/public/BackupKnowledgeGraphOptions/#properties","text":"Name Type Description Notes backup_s3 bool [optional] [default to True] coordinates S3CoordinatesWithBackupKey [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/Bag/","text":"Bag \u00b6 Properties \u00b6 Name Type Description Notes svc_endpoint str bag_domain str bag_key str bag_url str flavour str name str proj_key str public bool slug str timestamp float token str [Back to Model list] [Back to API list] [Back to README]","title":"Bag"},{"location":"apis/public/Bag/#bag","text":"","title":"Bag"},{"location":"apis/public/Bag/#properties","text":"Name Type Description Notes svc_endpoint str bag_domain str bag_key str bag_url str flavour str name str proj_key str public bool slug str timestamp float token str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/BagAmqpBackend/","text":"BagAmqpBackend \u00b6 Properties \u00b6 Name Type Description Notes flavour str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"BagAmqpBackend"},{"location":"apis/public/BagAmqpBackend/#bagamqpbackend","text":"","title":"BagAmqpBackend"},{"location":"apis/public/BagAmqpBackend/#properties","text":"Name Type Description Notes flavour str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/BagBackendAware/","text":"BagBackendAware \u00b6 Properties \u00b6 Name Type Description Notes backend BagBackends bag_key str description str last_coords_resolution float [optional] name str proj_key str public bool slug str timestamp float [Back to Model list] [Back to API list] [Back to README]","title":"BagBackendAware"},{"location":"apis/public/BagBackendAware/#bagbackendaware","text":"","title":"BagBackendAware"},{"location":"apis/public/BagBackendAware/#properties","text":"Name Type Description Notes backend BagBackends bag_key str description str last_coords_resolution float [optional] name str proj_key str public bool slug str timestamp float [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/BagBackends/","text":"BagBackends \u00b6 Properties \u00b6 Name Type Description Notes kg_amqp BagAmqpBackend [optional] kg_legacy_api BagKgLegacyApiBackend [optional] [Back to Model list] [Back to API list] [Back to README]","title":"BagBackends"},{"location":"apis/public/BagBackends/#bagbackends","text":"","title":"BagBackends"},{"location":"apis/public/BagBackends/#properties","text":"Name Type Description Notes kg_amqp BagAmqpBackend [optional] kg_legacy_api BagKgLegacyApiBackend [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/BagCallback/","text":"BagCallback \u00b6 Properties \u00b6 Name Type Description Notes callback_url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"BagCallback"},{"location":"apis/public/BagCallback/#bagcallback","text":"","title":"BagCallback"},{"location":"apis/public/BagCallback/#properties","text":"Name Type Description Notes callback_url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/BagComponentStatus/","text":"BagComponentStatus \u00b6 Properties \u00b6 Name Type Description Notes start_time float status BagComponentStatusEnum [Back to Model list] [Back to API list] [Back to README]","title":"BagComponentStatus"},{"location":"apis/public/BagComponentStatus/#bagcomponentstatus","text":"","title":"BagComponentStatus"},{"location":"apis/public/BagComponentStatus/#properties","text":"Name Type Description Notes start_time float status BagComponentStatusEnum [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/BagComponentStatusEnum/","text":"BagComponentStatusEnum \u00b6 Properties \u00b6 Name Type Description Notes [Back to Model list] [Back to API list] [Back to README]","title":"BagComponentStatusEnum"},{"location":"apis/public/BagComponentStatusEnum/#bagcomponentstatusenum","text":"","title":"BagComponentStatusEnum"},{"location":"apis/public/BagComponentStatusEnum/#properties","text":"Name Type Description Notes [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/BagFlavour/","text":"BagFlavour \u00b6 Properties \u00b6 Name Type Description Notes description str [optional] display_name str [optional] name str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"BagFlavour"},{"location":"apis/public/BagFlavour/#bagflavour","text":"","title":"BagFlavour"},{"location":"apis/public/BagFlavour/#properties","text":"Name Type Description Notes description str [optional] display_name str [optional] name str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/BagFlavourDefaultQuota/","text":"BagFlavourDefaultQuota \u00b6 Properties \u00b6 Name Type Description Notes default_quota float [optional] display_name str name str [Back to Model list] [Back to API list] [Back to README]","title":"BagFlavourDefaultQuota"},{"location":"apis/public/BagFlavourDefaultQuota/#bagflavourdefaultquota","text":"","title":"BagFlavourDefaultQuota"},{"location":"apis/public/BagFlavourDefaultQuota/#properties","text":"Name Type Description Notes default_quota float [optional] display_name str name str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/BagFlavourFullData/","text":"BagFlavourFullData \u00b6 Properties \u00b6 Name Type Description Notes backend str config object default_quota int [optional] description str display_name str is_from_deployment bool [optional] name str [optional] order float [optional] project_specific bool [Back to Model list] [Back to API list] [Back to README]","title":"BagFlavourFullData"},{"location":"apis/public/BagFlavourFullData/#bagflavourfulldata","text":"","title":"BagFlavourFullData"},{"location":"apis/public/BagFlavourFullData/#properties","text":"Name Type Description Notes backend str config object default_quota int [optional] description str display_name str is_from_deployment bool [optional] name str [optional] order float [optional] project_specific bool [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/BagKgLegacyApiBackend/","text":"BagKgLegacyApiBackend \u00b6 Properties \u00b6 Name Type Description Notes svc_endpoint str [optional] bag_domain str [optional] bag_url str [optional] flavour str [optional] token str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"BagKgLegacyApiBackend"},{"location":"apis/public/BagKgLegacyApiBackend/#bagkglegacyapibackend","text":"","title":"BagKgLegacyApiBackend"},{"location":"apis/public/BagKgLegacyApiBackend/#properties","text":"Name Type Description Notes svc_endpoint str [optional] bag_domain str [optional] bag_url str [optional] flavour str [optional] token str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/BagStatus/","text":"BagStatus \u00b6 Properties \u00b6 Name Type Description Notes components BagStatusComponents status BagComponentStatusEnum [Back to Model list] [Back to API list] [Back to README]","title":"BagStatus"},{"location":"apis/public/BagStatus/#bagstatus","text":"","title":"BagStatus"},{"location":"apis/public/BagStatus/#properties","text":"Name Type Description Notes components BagStatusComponents status BagComponentStatusEnum [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/BagStatusBackendAware/","text":"BagStatusBackendAware \u00b6 Properties \u00b6 Name Type Description Notes kg_amqp BagStatusBackendAwareKgAmqp [optional] kg_legacy_api BagStatus [optional] overall_status BagComponentStatusEnum [Back to Model list] [Back to API list] [Back to README]","title":"BagStatusBackendAware"},{"location":"apis/public/BagStatusBackendAware/#bagstatusbackendaware","text":"","title":"BagStatusBackendAware"},{"location":"apis/public/BagStatusBackendAware/#properties","text":"Name Type Description Notes kg_amqp BagStatusBackendAwareKgAmqp [optional] kg_legacy_api BagStatus [optional] overall_status BagComponentStatusEnum [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/BagStatusBackendAwareKgAmqp/","text":"BagStatusBackendAwareKgAmqp \u00b6 Properties \u00b6 Name Type Description Notes status BagComponentStatusEnum [Back to Model list] [Back to API list] [Back to README]","title":"BagStatusBackendAwareKgAmqp"},{"location":"apis/public/BagStatusBackendAwareKgAmqp/#bagstatusbackendawarekgamqp","text":"","title":"BagStatusBackendAwareKgAmqp"},{"location":"apis/public/BagStatusBackendAwareKgAmqp/#properties","text":"Name Type Description Notes status BagComponentStatusEnum [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/BagStatusComponents/","text":"BagStatusComponents \u00b6 Properties \u00b6 Name Type Description Notes erlenmeyer_api BagComponentStatus Status of the Erlenmeyer API for this Graph erlenmeyer_ui BagComponentStatus Status of the Erlenmeyer UI for this Graph kg BagComponentStatus Status of the Knowledge Graph and its API [Back to Model list] [Back to API list] [Back to README]","title":"BagStatusComponents"},{"location":"apis/public/BagStatusComponents/#bagstatuscomponents","text":"","title":"BagStatusComponents"},{"location":"apis/public/BagStatusComponents/#properties","text":"Name Type Description Notes erlenmeyer_api BagComponentStatus Status of the Erlenmeyer API for this Graph erlenmeyer_ui BagComponentStatus Status of the Erlenmeyer UI for this Graph kg BagComponentStatus Status of the Knowledge Graph and its API [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/CatalogReference/","text":"CatalogReference \u00b6 Properties \u00b6 Name Type Description Notes collection_name str dc_key str proj_key str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CatalogReference"},{"location":"apis/public/CatalogReference/#catalogreference","text":"","title":"CatalogReference"},{"location":"apis/public/CatalogReference/#properties","text":"Name Type Description Notes collection_name str dc_key str proj_key str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/CcsCollectionReference/","text":"CcsCollectionReference \u00b6 Properties \u00b6 Name Type Description Notes collection_name str language str [optional] proj_key str [Back to Model list] [Back to API list] [Back to README]","title":"CcsCollectionReference"},{"location":"apis/public/CcsCollectionReference/#ccscollectionreference","text":"","title":"CcsCollectionReference"},{"location":"apis/public/CcsCollectionReference/#properties","text":"Name Type Description Notes collection_name str language str [optional] proj_key str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/CcsTask/","text":"CcsTask \u00b6 Properties \u00b6 Name Type Description Notes ccs_collection_name str ccs_project_key str task_id str [Back to Model list] [Back to API list] [Back to README]","title":"CcsTask"},{"location":"apis/public/CcsTask/#ccstask","text":"","title":"CcsTask"},{"location":"apis/public/CcsTask/#properties","text":"Name Type Description Notes ccs_collection_name str ccs_project_key str task_id str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/CeleryTask/","text":"CeleryTask \u00b6 Properties \u00b6 Name Type Description Notes failures list[SystemCeleryTasksFailureFailures] proj_key str task_id str [Back to Model list] [Back to API list] [Back to README]","title":"CeleryTask"},{"location":"apis/public/CeleryTask/#celerytask","text":"","title":"CeleryTask"},{"location":"apis/public/CeleryTask/#properties","text":"Name Type Description Notes failures list[SystemCeleryTasksFailureFailures] proj_key str task_id str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/CeleryTask1/","text":"CeleryTask1 \u00b6 Properties \u00b6 Name Type Description Notes completed_at float created_at float meta dict(str, object) metrics object [optional] proj_key str project_task_id str project_task_type str [optional] started_at float task_id str task_status str task_type str worker_name str [Back to Model list] [Back to API list] [Back to README]","title":"CeleryTask1"},{"location":"apis/public/CeleryTask1/#celerytask1","text":"","title":"CeleryTask1"},{"location":"apis/public/CeleryTask1/#properties","text":"Name Type Description Notes completed_at float created_at float meta dict(str, object) metrics object [optional] proj_key str project_task_id str project_task_type str [optional] started_at float task_id str task_status str task_type str worker_name str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/CeleryTaskPromise/","text":"CeleryTaskPromise \u00b6 Properties \u00b6 Name Type Description Notes result object task_id str task_status str [Back to Model list] [Back to API list] [Back to README]","title":"CeleryTaskPromise"},{"location":"apis/public/CeleryTaskPromise/#celerytaskpromise","text":"","title":"CeleryTaskPromise"},{"location":"apis/public/CeleryTaskPromise/#properties","text":"Name Type Description Notes result object task_id str task_status str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/CloneDataCatalogOptions/","text":"CloneDataCatalogOptions \u00b6 Properties \u00b6 Name Type Description Notes collections list[str] [optional] copy_s3 bool Should the catalog's S3 data also be copied? [optional] [default to True] description str name str public bool [Back to Model list] [Back to API list] [Back to README]","title":"CloneDataCatalogOptions"},{"location":"apis/public/CloneDataCatalogOptions/#clonedatacatalogoptions","text":"","title":"CloneDataCatalogOptions"},{"location":"apis/public/CloneDataCatalogOptions/#properties","text":"Name Type Description Notes collections list[str] [optional] copy_s3 bool Should the catalog's S3 data also be copied? [optional] [default to True] description str name str public bool [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/CloneDataCatalogResult/","text":"CloneDataCatalogResult \u00b6 Properties \u00b6 Name Type Description Notes clone_task Task data_catalogue DataCatalogue [Back to Model list] [Back to API list] [Back to README]","title":"CloneDataCatalogResult"},{"location":"apis/public/CloneDataCatalogResult/#clonedatacatalogresult","text":"","title":"CloneDataCatalogResult"},{"location":"apis/public/CloneDataCatalogResult/#properties","text":"Name Type Description Notes clone_task Task data_catalogue DataCatalogue [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/CloneDictionaryOptions/","text":"CloneDictionaryOptions \u00b6 Properties \u00b6 Name Type Description Notes collections list[str] [optional] copy_s3 bool Should the dictionary's S3 data also be copied? [optional] [default to True] description str name str public bool [Back to Model list] [Back to API list] [Back to README]","title":"CloneDictionaryOptions"},{"location":"apis/public/CloneDictionaryOptions/#clonedictionaryoptions","text":"","title":"CloneDictionaryOptions"},{"location":"apis/public/CloneDictionaryOptions/#properties","text":"Name Type Description Notes collections list[str] [optional] copy_s3 bool Should the dictionary's S3 data also be copied? [optional] [default to True] description str name str public bool [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ClonePublicDataCatalogOptions/","text":"ClonePublicDataCatalogOptions \u00b6 Properties \u00b6 Name Type Description Notes collections list[str] [optional] copy_s3 bool Should the catalog's S3 data also be copied? [optional] [default to True] description str name str proj_key str The project key of the project to store the resulting data catalogue public bool [Back to Model list] [Back to API list] [Back to README]","title":"ClonePublicDataCatalogOptions"},{"location":"apis/public/ClonePublicDataCatalogOptions/#clonepublicdatacatalogoptions","text":"","title":"ClonePublicDataCatalogOptions"},{"location":"apis/public/ClonePublicDataCatalogOptions/#properties","text":"Name Type Description Notes collections list[str] [optional] copy_s3 bool Should the catalog's S3 data also be copied? [optional] [default to True] description str name str proj_key str The project key of the project to store the resulting data catalogue public bool [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ClonePublicDictionaryOptions/","text":"ClonePublicDictionaryOptions \u00b6 Properties \u00b6 Name Type Description Notes collections list[str] [optional] copy_s3 bool Should the dictionary's S3 data also be copied? [optional] [default to True] description str name str proj_key str The project key of the project to store the resulting dictionary public bool [Back to Model list] [Back to API list] [Back to README]","title":"ClonePublicDictionaryOptions"},{"location":"apis/public/ClonePublicDictionaryOptions/#clonepublicdictionaryoptions","text":"","title":"ClonePublicDictionaryOptions"},{"location":"apis/public/ClonePublicDictionaryOptions/#properties","text":"Name Type Description Notes collections list[str] [optional] copy_s3 bool Should the dictionary's S3 data also be copied? [optional] [default to True] description str name str proj_key str The project key of the project to store the resulting dictionary public bool [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/CollectionListCoordinates/","text":"CollectionListCoordinates \u00b6 Properties \u00b6 Name Type Description Notes collections list[str] [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CollectionListCoordinates"},{"location":"apis/public/CollectionListCoordinates/#collectionlistcoordinates","text":"","title":"CollectionListCoordinates"},{"location":"apis/public/CollectionListCoordinates/#properties","text":"Name Type Description Notes collections list[str] [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/CpsModelReference/","text":"CpsModelReference \u00b6 Properties \u00b6 Name Type Description Notes model_config_key str proj_key str [Back to Model list] [Back to API list] [Back to README]","title":"CpsModelReference"},{"location":"apis/public/CpsModelReference/#cpsmodelreference","text":"","title":"CpsModelReference"},{"location":"apis/public/CpsModelReference/#properties","text":"Name Type Description Notes model_config_key str proj_key str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/CpsPackage/","text":"CpsPackage \u00b6 Properties \u00b6 Name Type Description Notes dependencies list[str] description str name str package_id str type str [Back to Model list] [Back to API list] [Back to README]","title":"CpsPackage"},{"location":"apis/public/CpsPackage/#cpspackage","text":"","title":"CpsPackage"},{"location":"apis/public/CpsPackage/#properties","text":"Name Type Description Notes dependencies list[str] description str name str package_id str type str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/CreateCollectionInDictionaryOptions/","text":"CreateCollectionInDictionaryOptions \u00b6 Properties \u00b6 Name Type Description Notes collection_name str [Back to Model list] [Back to API list] [Back to README]","title":"CreateCollectionInDictionaryOptions"},{"location":"apis/public/CreateCollectionInDictionaryOptions/#createcollectionindictionaryoptions","text":"","title":"CreateCollectionInDictionaryOptions"},{"location":"apis/public/CreateCollectionInDictionaryOptions/#properties","text":"Name Type Description Notes collection_name str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/CreateDataCatalogCollectionOptions/","text":"CreateDataCatalogCollectionOptions \u00b6 Properties \u00b6 Name Type Description Notes collection_name str [Back to Model list] [Back to API list] [Back to README]","title":"CreateDataCatalogCollectionOptions"},{"location":"apis/public/CreateDataCatalogCollectionOptions/#createdatacatalogcollectionoptions","text":"","title":"CreateDataCatalogCollectionOptions"},{"location":"apis/public/CreateDataCatalogCollectionOptions/#properties","text":"Name Type Description Notes collection_name str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/CreateDataCatalogOptions/","text":"CreateDataCatalogOptions \u00b6 Properties \u00b6 Name Type Description Notes category_schemas list[DataCatalogCategorySchema] [optional] collections_data_flows list[DataCatalogDataFlow] [optional] description str name str public bool topologydata_flows list[DataCatalogTopology] [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CreateDataCatalogOptions"},{"location":"apis/public/CreateDataCatalogOptions/#createdatacatalogoptions","text":"","title":"CreateDataCatalogOptions"},{"location":"apis/public/CreateDataCatalogOptions/#properties","text":"Name Type Description Notes category_schemas list[DataCatalogCategorySchema] [optional] collections_data_flows list[DataCatalogDataFlow] [optional] description str name str public bool topologydata_flows list[DataCatalogTopology] [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/CreateDataFlowTemplateOptions/","text":"CreateDataFlowTemplateOptions \u00b6 Properties \u00b6 Name Type Description Notes description str name str public bool template DataFlowTemplate variables dict(str, ProjectProjKeyKgcDataflowTemplatesVariables) [Back to Model list] [Back to API list] [Back to README]","title":"CreateDataFlowTemplateOptions"},{"location":"apis/public/CreateDataFlowTemplateOptions/#createdataflowtemplateoptions","text":"","title":"CreateDataFlowTemplateOptions"},{"location":"apis/public/CreateDataFlowTemplateOptions/#properties","text":"Name Type Description Notes description str name str public bool template DataFlowTemplate variables dict(str, ProjectProjKeyKgcDataflowTemplatesVariables) [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/CreateDictionaryOptions/","text":"CreateDictionaryOptions \u00b6 Properties \u00b6 Name Type Description Notes description str name str public bool [Back to Model list] [Back to API list] [Back to README]","title":"CreateDictionaryOptions"},{"location":"apis/public/CreateDictionaryOptions/#createdictionaryoptions","text":"","title":"CreateDictionaryOptions"},{"location":"apis/public/CreateDictionaryOptions/#properties","text":"Name Type Description Notes description str name str public bool [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/CreateKnowledgeGraphOptions/","text":"CreateKnowledgeGraphOptions \u00b6 Properties \u00b6 Name Type Description Notes description str Description of the BAG [optional] flavours list[str] Flavours names of the bag. Determines its available resources name str Name of the BAG public bool If true, the BAG will be publicly available [Back to Model list] [Back to API list] [Back to README]","title":"CreateKnowledgeGraphOptions"},{"location":"apis/public/CreateKnowledgeGraphOptions/#createknowledgegraphoptions","text":"","title":"CreateKnowledgeGraphOptions"},{"location":"apis/public/CreateKnowledgeGraphOptions/#properties","text":"Name Type Description Notes description str Description of the BAG [optional] flavours list[str] Flavours names of the bag. Determines its available resources name str Name of the BAG public bool If true, the BAG will be publicly available [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/CreateKnowledgeGraphOptions1/","text":"CreateKnowledgeGraphOptions1 \u00b6 Properties \u00b6 Name Type Description Notes description str Description of the BAG [optional] flavour str \\\"Flavour\\\" of the BAG, determines its available resources. name str Name of the BAG public bool If true, the BAG will be publicly available [Back to Model list] [Back to API list] [Back to README]","title":"CreateKnowledgeGraphOptions1"},{"location":"apis/public/CreateKnowledgeGraphOptions1/#createknowledgegraphoptions1","text":"","title":"CreateKnowledgeGraphOptions1"},{"location":"apis/public/CreateKnowledgeGraphOptions1/#properties","text":"Name Type Description Notes description str Description of the BAG [optional] flavour str \\\"Flavour\\\" of the BAG, determines its available resources. name str Name of the BAG public bool If true, the BAG will be publicly available [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/CreateProjectModelConfigOptions/","text":"CreateProjectModelConfigOptions \u00b6 Properties \u00b6 Name Type Description Notes configurations ProjectProjKeyModelConfigsConfigurations description str model_config_key str [optional] name str public bool [Back to Model list] [Back to API list] [Back to README]","title":"CreateProjectModelConfigOptions"},{"location":"apis/public/CreateProjectModelConfigOptions/#createprojectmodelconfigoptions","text":"","title":"CreateProjectModelConfigOptions"},{"location":"apis/public/CreateProjectModelConfigOptions/#properties","text":"Name Type Description Notes configurations ProjectProjKeyModelConfigsConfigurations description str model_config_key str [optional] name str public bool [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataCatalogCategorySchema/","text":"DataCatalogCategorySchema \u00b6 Properties \u00b6 Name Type Description Notes key str schema dict(str, object) [Back to Model list] [Back to API list] [Back to README]","title":"DataCatalogCategorySchema"},{"location":"apis/public/DataCatalogCategorySchema/#datacatalogcategoryschema","text":"","title":"DataCatalogCategorySchema"},{"location":"apis/public/DataCatalogCategorySchema/#properties","text":"Name Type Description Notes key str schema dict(str, object) [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataCatalogCollection/","text":"DataCatalogCollection \u00b6 Properties \u00b6 Name Type Description Notes item_count int name str [Back to Model list] [Back to API list] [Back to README]","title":"DataCatalogCollection"},{"location":"apis/public/DataCatalogCollection/#datacatalogcollection","text":"","title":"DataCatalogCollection"},{"location":"apis/public/DataCatalogCollection/#properties","text":"Name Type Description Notes item_count int name str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataCatalogDataFlow/","text":"DataCatalogDataFlow \u00b6 Properties \u00b6 Name Type Description Notes data_flows list[object] key str [Back to Model list] [Back to API list] [Back to README]","title":"DataCatalogDataFlow"},{"location":"apis/public/DataCatalogDataFlow/#datacatalogdataflow","text":"","title":"DataCatalogDataFlow"},{"location":"apis/public/DataCatalogDataFlow/#properties","text":"Name Type Description Notes data_flows list[object] key str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataCatalogImportOptions/","text":"DataCatalogImportOptions \u00b6 Properties \u00b6 Name Type Description Notes options ProjectProjKeyDataCataloguesFromMongoOptions target ProjectProjKeyDataCataloguesFromMongoTarget [Back to Model list] [Back to API list] [Back to README]","title":"DataCatalogImportOptions"},{"location":"apis/public/DataCatalogImportOptions/#datacatalogimportoptions","text":"","title":"DataCatalogImportOptions"},{"location":"apis/public/DataCatalogImportOptions/#properties","text":"Name Type Description Notes options ProjectProjKeyDataCataloguesFromMongoOptions target ProjectProjKeyDataCataloguesFromMongoTarget [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataCatalogImportResult/","text":"DataCatalogImportResult \u00b6 Properties \u00b6 Name Type Description Notes data_catalogue DataCatalogue import_task Task [Back to Model list] [Back to API list] [Back to README]","title":"DataCatalogImportResult"},{"location":"apis/public/DataCatalogImportResult/#datacatalogimportresult","text":"","title":"DataCatalogImportResult"},{"location":"apis/public/DataCatalogImportResult/#properties","text":"Name Type Description Notes data_catalogue DataCatalogue import_task Task [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataCatalogProvenanceLog/","text":"DataCatalogProvenanceLog \u00b6 Properties \u00b6 Name Type Description Notes collection_name str source DataCatalogProvenanceLogSource timestamp float user DataCatalogProvenanceLogUser [Back to Model list] [Back to API list] [Back to README]","title":"DataCatalogProvenanceLog"},{"location":"apis/public/DataCatalogProvenanceLog/#datacatalogprovenancelog","text":"","title":"DataCatalogProvenanceLog"},{"location":"apis/public/DataCatalogProvenanceLog/#properties","text":"Name Type Description Notes collection_name str source DataCatalogProvenanceLogSource timestamp float user DataCatalogProvenanceLogUser [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataCatalogProvenanceLogSource/","text":"DataCatalogProvenanceLogSource \u00b6 Properties \u00b6 Name Type Description Notes ccs object [optional] clone object [optional] elastic object [optional] file object [optional] mongo_s3 object [optional] url object [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DataCatalogProvenanceLogSource"},{"location":"apis/public/DataCatalogProvenanceLogSource/#datacatalogprovenancelogsource","text":"","title":"DataCatalogProvenanceLogSource"},{"location":"apis/public/DataCatalogProvenanceLogSource/#properties","text":"Name Type Description Notes ccs object [optional] clone object [optional] elastic object [optional] file object [optional] mongo_s3 object [optional] url object [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataCatalogProvenanceLogUser/","text":"DataCatalogProvenanceLogUser \u00b6 Properties \u00b6 Name Type Description Notes email str name str user_key str [Back to Model list] [Back to API list] [Back to README]","title":"DataCatalogProvenanceLogUser"},{"location":"apis/public/DataCatalogProvenanceLogUser/#datacatalogprovenanceloguser","text":"","title":"DataCatalogProvenanceLogUser"},{"location":"apis/public/DataCatalogProvenanceLogUser/#properties","text":"Name Type Description Notes email str name str user_key str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataCatalogSchema/","text":"DataCatalogSchema \u00b6 Properties \u00b6 Name Type Description Notes name str [optional] schema str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DataCatalogSchema"},{"location":"apis/public/DataCatalogSchema/#datacatalogschema","text":"","title":"DataCatalogSchema"},{"location":"apis/public/DataCatalogSchema/#properties","text":"Name Type Description Notes name str [optional] schema str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataCatalogTopology/","text":"DataCatalogTopology \u00b6 Properties \u00b6 Name Type Description Notes categories list[DataCatalogTopologyNode] edges list[DataCatalogTopologyEdge] [Back to Model list] [Back to API list] [Back to README]","title":"DataCatalogTopology"},{"location":"apis/public/DataCatalogTopology/#datacatalogtopology","text":"","title":"DataCatalogTopology"},{"location":"apis/public/DataCatalogTopology/#properties","text":"Name Type Description Notes categories list[DataCatalogTopologyNode] edges list[DataCatalogTopologyEdge] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataCatalogTopologyEdge/","text":"DataCatalogTopologyEdge \u00b6 Properties \u00b6 Name Type Description Notes name str source list[str] source_field str target list[str] target_field str [Back to Model list] [Back to API list] [Back to README]","title":"DataCatalogTopologyEdge"},{"location":"apis/public/DataCatalogTopologyEdge/#datacatalogtopologyedge","text":"","title":"DataCatalogTopologyEdge"},{"location":"apis/public/DataCatalogTopologyEdge/#properties","text":"Name Type Description Notes name str source list[str] source_field str target list[str] target_field str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataCatalogTopologyNode/","text":"DataCatalogTopologyNode \u00b6 Properties \u00b6 Name Type Description Notes data_fields list[str] name str [Back to Model list] [Back to API list] [Back to README]","title":"DataCatalogTopologyNode"},{"location":"apis/public/DataCatalogTopologyNode/#datacatalogtopologynode","text":"","title":"DataCatalogTopologyNode"},{"location":"apis/public/DataCatalogTopologyNode/#properties","text":"Name Type Description Notes data_fields list[str] name str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataCatalogUrlImportOptions/","text":"DataCatalogUrlImportOptions \u00b6 Properties \u00b6 Name Type Description Notes options ProjectProjKeyDataCataloguesFromUrlOptions target ProjectProjKeyDataCataloguesFromMongoTarget [Back to Model list] [Back to API list] [Back to README]","title":"DataCatalogUrlImportOptions"},{"location":"apis/public/DataCatalogUrlImportOptions/#datacatalogurlimportoptions","text":"","title":"DataCatalogUrlImportOptions"},{"location":"apis/public/DataCatalogUrlImportOptions/#properties","text":"Name Type Description Notes options ProjectProjKeyDataCataloguesFromUrlOptions target ProjectProjKeyDataCataloguesFromMongoTarget [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataCatalogsApi/","text":"deepsearch.cps.apis.public.DataCatalogsApi \u00b6 All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description clone_project_data_catalog POST /project/{proj_key}/data_catalogues/{dc_key}/actions/clone clone_public_data_catalog POST /project/public/data_catalogues/{dc_key}/actions/clone create_project_data_catalog POST /project/{proj_key}/data_catalogues create_project_data_catalog_collection POST /project/{proj_key}/data_catalogues/{dc_key}/collections create_project_data_catalog_delete_token POST /project/{proj_key}/data_catalogues/{dc_key}/delete_token delete_project_data_catalog DELETE /project/{proj_key}/data_catalogues/{dc_key} delete_project_data_catalog_collection DELETE /project/{proj_key}/data_catalogues/{dc_key}/collections/{collection_name} export_dataset POST /project/{proj_key}/bags/{bag_key}/tasks/export_dataset export_project_data_catalog_collection_data POST /project/{proj_key}/data_catalogues/{dc_key}/collections/{collection_name}/actions/export export_project_data_catalog_data POST /project/{proj_key}/data_catalogues/{dc_key}/actions/export get_data_catalog_collection_data GET /project/{proj_key}/data_catalogues/{dc_key}/collections/{collection_name}/data get_project_data_catalog GET /project/{proj_key}/data_catalogues/{dc_key} get_public_data_catalog GET /project/public/data_catalogues/{dc_key} import_project_data_catalog_collection_data POST /project/{proj_key}/data_catalogues/{dc_key}/collections/{collection_name}/actions/import import_project_data_catalog_data POST /project/{proj_key}/data_catalogues/{dc_key}/actions/import import_project_data_catalog_from_mongo POST /project/{proj_key}/data_catalogues/from_mongo import_project_data_catalog_from_url POST /project/{proj_key}/data_catalogues/from_url infer_project_data_catalog_category_schema POST /project/{proj_key}/data_catalogues/{dc_key}/collections/{collection_name}/actions/infer_schema list_data_catalogs_and_collections_from_schema POST /project/data_catalogues/with_schema list_known_data_catalog_schemas GET /project/data_cataloges/known_schemas list_project_data_catalog_collections GET /project/{proj_key}/data_catalogues/{dc_key}/collections list_project_data_catalogs GET /project/{proj_key}/data_catalogues list_public_data_catalog_collections GET /project/public/data_catalogues/{dc_key}/collections list_public_data_catalogs GET /project/public/data_catalogues patch_project_data_catalog PATCH /project/{proj_key}/data_catalogues/{dc_key} upload_project_data_catalog_collection_data POST /project/{proj_key}/data_catalogues/{dc_key}/collections/{collection_name}/actions/upload upload_project_data_catalog_data POST /project/{proj_key}/data_catalogues/{dc_key}/actions/upload clone_project_data_catalog \u00b6 CloneDataCatalogResult clone_project_data_catalog(proj_key, dc_key, options) Clone an existing data catalogue Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | options = deepsearch . cps . apis . public . CloneDataCatalogOptions () # CloneDataCatalogOptions | try : api_response = api_instance . clone_project_data_catalog ( proj_key , dc_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->clone_project_data_catalog: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dc_key str options CloneDataCatalogOptions Return type \u00b6 CloneDataCatalogResult Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Data catalogue cloned, and data is being copied. - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] clone_public_data_catalog \u00b6 CloneDataCatalogResult clone_public_data_catalog(dc_key, options) Clone an existing public data catalogue Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) dc_key = 'dc_key_example' # str | options = deepsearch . cps . apis . public . ClonePublicDataCatalogOptions () # ClonePublicDataCatalogOptions | try : api_response = api_instance . clone_public_data_catalog ( dc_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->clone_public_data_catalog: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes dc_key str options ClonePublicDataCatalogOptions Return type \u00b6 CloneDataCatalogResult Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Data catalogue cloned, and data is being copied. - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_project_data_catalog \u00b6 DataCatalogue create_project_data_catalog(proj_key, options) Create an empty data catalog Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | options = deepsearch . cps . apis . public . CreateDataCatalogOptions () # CreateDataCatalogOptions | try : api_response = api_instance . create_project_data_catalog ( proj_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->create_project_data_catalog: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str options CreateDataCatalogOptions Return type \u00b6 DataCatalogue Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Data catalog created. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_project_data_catalog_collection \u00b6 create_project_data_catalog_collection(proj_key, dc_key, body) Create a collection in a data catalog Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | body = deepsearch . cps . apis . public . CreateDataCatalogCollectionOptions () # CreateDataCatalogCollectionOptions | try : api_instance . create_project_data_catalog_collection ( proj_key , dc_key , body ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->create_project_data_catalog_collection: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dc_key str body CreateDataCatalogCollectionOptions Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Collection created. - 404 Dictionary doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_project_data_catalog_delete_token \u00b6 TokenResponse create_project_data_catalog_delete_token(proj_key, dc_key) Get a token used to confirm the deletion of a data catalog. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | try : api_response = api_instance . create_project_data_catalog_delete_token ( proj_key , dc_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->create_project_data_catalog_delete_token: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dc_key str Return type \u00b6 TokenResponse Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Data catalog deletion token. - 404 Data flow template not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_project_data_catalog \u00b6 delete_project_data_catalog(proj_key, dc_key, confirmation_token) Delete a single data catalog Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | confirmation_token = 'confirmation_token_example' # str | try : api_instance . delete_project_data_catalog ( proj_key , dc_key , confirmation_token ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->delete_project_data_catalog: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dc_key str confirmation_token str Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 204 Data catalog deleted. - 404 Data catalog doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_project_data_catalog_collection \u00b6 delete_project_data_catalog_collection(proj_key, dc_key, collection_name) Delete a single data catalog's collection Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | collection_name = 'collection_name_example' # str | try : api_instance . delete_project_data_catalog_collection ( proj_key , dc_key , collection_name ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->delete_project_data_catalog_collection: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dc_key str collection_name str Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 204 Collection deleted. - 404 Collection doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] export_dataset \u00b6 ProjectTask export_dataset(proj_key, bag_key, data) Export dataset from a Knowledge Graph Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Configure API key authorization: KGAuth configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'X-CPS-KG-Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['X-CPS-KG-Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | data = deepsearch . cps . apis . public . InlineObject3 () # InlineObject3 | try : api_response = api_instance . export_dataset ( proj_key , bag_key , data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->export_dataset: %s \\n \" % e ) Api Key Authentication (KGAuth): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Configure API key authorization: KGAuth configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'X-CPS-KG-Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['X-CPS-KG-Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | data = deepsearch . cps . apis . public . InlineObject3 () # InlineObject3 | try : api_response = api_instance . export_dataset ( proj_key , bag_key , data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->export_dataset: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str data InlineObject3 Return type \u00b6 ProjectTask Authorization \u00b6 Bearer , KGAuth HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Task - 404 Task not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] export_project_data_catalog_collection_data \u00b6 file export_project_data_catalog_collection_data(proj_key, dc_key, collection_name) Export the contents of a data catalog's collection Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | collection_name = 'collection_name_example' # str | try : api_response = api_instance . export_project_data_catalog_collection_data ( proj_key , dc_key , collection_name ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->export_project_data_catalog_collection_data: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dc_key str collection_name str Return type \u00b6 file Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/zip, application/json, application/x-jsonlines HTTP response details \u00b6 Status code Description Response headers 200 Data catalog collection contents. - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] export_project_data_catalog_data \u00b6 file export_project_data_catalog_data(proj_key, dc_key) Export the contents of a data catalog. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | try : api_response = api_instance . export_project_data_catalog_data ( proj_key , dc_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->export_project_data_catalog_data: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dc_key str Return type \u00b6 file Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/zip HTTP response details \u00b6 Status code Description Response headers 200 Data catalog contents. - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_data_catalog_collection_data \u00b6 get_data_catalog_collection_data(proj_key, dc_key, collection_name, after=after, limit=limit) Get Data Catalog Collection data. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | collection_name = 'collection_name_example' # str | after = 'after_example' # str | (optional) limit = 50 # int | (optional) (default to 50) try : api_instance . get_data_catalog_collection_data ( proj_key , dc_key , collection_name , after = after , limit = limit ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->get_data_catalog_collection_data: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dc_key str collection_name str after str [optional] limit int [optional] [default to 50] Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Get Data Catalog Collection data. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_project_data_catalog \u00b6 DataCatalogue get_project_data_catalog(proj_key, dc_key, include_collections=include_collections) Get a single data catalogue Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | include_collections = False # bool | (optional) (default to False) try : api_response = api_instance . get_project_data_catalog ( proj_key , dc_key , include_collections = include_collections ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->get_project_data_catalog: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dc_key str include_collections bool [optional] [default to False] Return type \u00b6 DataCatalogue Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Data catalogue - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_public_data_catalog \u00b6 DataCatalogue get_public_data_catalog(dc_key, include_collections=include_collections) Get a single data catalogue that was made public Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) dc_key = 'dc_key_example' # str | include_collections = False # bool | (optional) (default to False) try : api_response = api_instance . get_public_data_catalog ( dc_key , include_collections = include_collections ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->get_public_data_catalog: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes dc_key str include_collections bool [optional] [default to False] Return type \u00b6 DataCatalogue Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Data catalogue - 404 Data catalogue not found or is not public - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] import_project_data_catalog_collection_data \u00b6 Task import_project_data_catalog_collection_data(proj_key, dc_key, collection_name, body) Import data to a data catalog collection. The collection will be created if it doesn't exist. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | collection_name = 'collection_name_example' # str | body = deepsearch . cps . apis . public . ImportToDataCatalogCollectionOptions () # ImportToDataCatalogCollectionOptions | try : api_response = api_instance . import_project_data_catalog_collection_data ( proj_key , dc_key , collection_name , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->import_project_data_catalog_collection_data: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dc_key str collection_name str body ImportToDataCatalogCollectionOptions Return type \u00b6 Task Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Data is being processed. - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] import_project_data_catalog_data \u00b6 Task import_project_data_catalog_data(proj_key, dc_key, body) Import data to a data catalog. The collections will be created if they don't exist. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | body = deepsearch . cps . apis . public . ImportToDataCatalogOptions () # ImportToDataCatalogOptions | try : api_response = api_instance . import_project_data_catalog_data ( proj_key , dc_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->import_project_data_catalog_data: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dc_key str body ImportToDataCatalogOptions Return type \u00b6 Task Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Data is being processed. - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] import_project_data_catalog_from_mongo \u00b6 DataCatalogImportResult import_project_data_catalog_from_mongo(proj_key, body) Create a data catalogue from a mongo database Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | body = deepsearch . cps . apis . public . DataCatalogImportOptions () # DataCatalogImportOptions | try : api_response = api_instance . import_project_data_catalog_from_mongo ( proj_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->import_project_data_catalog_from_mongo: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str body DataCatalogImportOptions Return type \u00b6 DataCatalogImportResult Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Data catalogue created, and data is being imported. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] import_project_data_catalog_from_url \u00b6 DataCatalogImportResult import_project_data_catalog_from_url(proj_key, body) Create a data catalogue from a URL to a file Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | body = deepsearch . cps . apis . public . DataCatalogUrlImportOptions () # DataCatalogUrlImportOptions | try : api_response = api_instance . import_project_data_catalog_from_url ( proj_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->import_project_data_catalog_from_url: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str body DataCatalogUrlImportOptions Return type \u00b6 DataCatalogImportResult Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Data catalogue created, and data is being imported. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] infer_project_data_catalog_category_schema \u00b6 Task infer_project_data_catalog_category_schema(proj_key, dc_key, collection_name, body) Infer the schema for a data catalog's collection. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | collection_name = 'collection_name_example' # str | body = deepsearch . cps . apis . public . InferProjectDataCatalogCategorySchema () # InferProjectDataCatalogCategorySchema | try : api_response = api_instance . infer_project_data_catalog_category_schema ( proj_key , dc_key , collection_name , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->infer_project_data_catalog_category_schema: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dc_key str collection_name str body InferProjectDataCatalogCategorySchema Return type \u00b6 Task Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_data_catalogs_and_collections_from_schema \u00b6 list[DataCatalogue] list_data_catalogs_and_collections_from_schema(schema, proj_key=proj_key) List data catalogues with specific schema Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) schema = None # dict(str, object) | proj_key = 'proj_key_example' # str | (optional) try : api_response = api_instance . list_data_catalogs_and_collections_from_schema ( schema , proj_key = proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->list_data_catalogs_and_collections_from_schema: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes schema dict(str, object) proj_key str [optional] Return type \u00b6 list[DataCatalogue] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of data catalogues - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_known_data_catalog_schemas \u00b6 list[DataCatalogSchema] list_known_data_catalog_schemas() List System Known Data Catalog Schemas. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) try : api_response = api_instance . list_known_data_catalog_schemas () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->list_known_data_catalog_schemas: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 list[DataCatalogSchema] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of Known Data Catalog Schemas. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_project_data_catalog_collections \u00b6 list[DataCatalogCollection] list_project_data_catalog_collections(proj_key, dc_key) Get the collections of a data catalog. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | try : api_response = api_instance . list_project_data_catalog_collections ( proj_key , dc_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->list_project_data_catalog_collections: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dc_key str Return type \u00b6 list[DataCatalogCollection] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Data catalog collections - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_project_data_catalogs \u00b6 list[DataCatalogue] list_project_data_catalogs(proj_key, query=query) List data catalogues for a project Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | query = 'query_example' # str | (optional) try : api_response = api_instance . list_project_data_catalogs ( proj_key , query = query ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->list_project_data_catalogs: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str query str [optional] Return type \u00b6 list[DataCatalogue] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of data catalogues - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_public_data_catalog_collections \u00b6 list[DataCatalogCollection] list_public_data_catalog_collections(dc_key) Get the collections of a data catalog. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) dc_key = 'dc_key_example' # str | try : api_response = api_instance . list_public_data_catalog_collections ( dc_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->list_public_data_catalog_collections: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes dc_key str Return type \u00b6 list[DataCatalogCollection] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Data catalog collections - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_public_data_catalogs \u00b6 list[DataCatalogue] list_public_data_catalogs(query=query) List public data catalogues Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) query = 'query_example' # str | (optional) try : api_response = api_instance . list_public_data_catalogs ( query = query ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->list_public_data_catalogs: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes query str [optional] Return type \u00b6 list[DataCatalogue] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of public data catalogues - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] patch_project_data_catalog \u00b6 DataCatalogue patch_project_data_catalog(proj_key, dc_key, options) Update the metadata of a data catalog. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | options = deepsearch . cps . apis . public . PatchDataCatalogOptions () # PatchDataCatalogOptions | try : api_response = api_instance . patch_project_data_catalog ( proj_key , dc_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->patch_project_data_catalog: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dc_key str options PatchDataCatalogOptions Return type \u00b6 DataCatalogue Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Data catalog updated. - 404 Data catalog not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] upload_project_data_catalog_collection_data \u00b6 Task upload_project_data_catalog_collection_data(proj_key, dc_key, collection_name, file) Upload data to a data catalog collection. The collection will be created if it doesn't exist. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | collection_name = 'collection_name_example' # str | file = '/path/to/file' # file | try : api_response = api_instance . upload_project_data_catalog_collection_data ( proj_key , dc_key , collection_name , file ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->upload_project_data_catalog_collection_data: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dc_key str collection_name str file file Return type \u00b6 Task Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : multipart/form-data Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Data is being processed. - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] upload_project_data_catalog_data \u00b6 Task upload_project_data_catalog_data(proj_key, dc_key, file) Upload data to a data catalog. The collection name(s) will be inferred from the file name(s). Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | file = '/path/to/file' # file | try : api_response = api_instance . upload_project_data_catalog_data ( proj_key , dc_key , file ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->upload_project_data_catalog_data: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dc_key str file file Return type \u00b6 Task Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : multipart/form-data Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Data is being processed. - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"deepsearch.cps.apis.public.DataCatalogsApi"},{"location":"apis/public/DataCatalogsApi/#deepsearchcpsapispublicdatacatalogsapi","text":"All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description clone_project_data_catalog POST /project/{proj_key}/data_catalogues/{dc_key}/actions/clone clone_public_data_catalog POST /project/public/data_catalogues/{dc_key}/actions/clone create_project_data_catalog POST /project/{proj_key}/data_catalogues create_project_data_catalog_collection POST /project/{proj_key}/data_catalogues/{dc_key}/collections create_project_data_catalog_delete_token POST /project/{proj_key}/data_catalogues/{dc_key}/delete_token delete_project_data_catalog DELETE /project/{proj_key}/data_catalogues/{dc_key} delete_project_data_catalog_collection DELETE /project/{proj_key}/data_catalogues/{dc_key}/collections/{collection_name} export_dataset POST /project/{proj_key}/bags/{bag_key}/tasks/export_dataset export_project_data_catalog_collection_data POST /project/{proj_key}/data_catalogues/{dc_key}/collections/{collection_name}/actions/export export_project_data_catalog_data POST /project/{proj_key}/data_catalogues/{dc_key}/actions/export get_data_catalog_collection_data GET /project/{proj_key}/data_catalogues/{dc_key}/collections/{collection_name}/data get_project_data_catalog GET /project/{proj_key}/data_catalogues/{dc_key} get_public_data_catalog GET /project/public/data_catalogues/{dc_key} import_project_data_catalog_collection_data POST /project/{proj_key}/data_catalogues/{dc_key}/collections/{collection_name}/actions/import import_project_data_catalog_data POST /project/{proj_key}/data_catalogues/{dc_key}/actions/import import_project_data_catalog_from_mongo POST /project/{proj_key}/data_catalogues/from_mongo import_project_data_catalog_from_url POST /project/{proj_key}/data_catalogues/from_url infer_project_data_catalog_category_schema POST /project/{proj_key}/data_catalogues/{dc_key}/collections/{collection_name}/actions/infer_schema list_data_catalogs_and_collections_from_schema POST /project/data_catalogues/with_schema list_known_data_catalog_schemas GET /project/data_cataloges/known_schemas list_project_data_catalog_collections GET /project/{proj_key}/data_catalogues/{dc_key}/collections list_project_data_catalogs GET /project/{proj_key}/data_catalogues list_public_data_catalog_collections GET /project/public/data_catalogues/{dc_key}/collections list_public_data_catalogs GET /project/public/data_catalogues patch_project_data_catalog PATCH /project/{proj_key}/data_catalogues/{dc_key} upload_project_data_catalog_collection_data POST /project/{proj_key}/data_catalogues/{dc_key}/collections/{collection_name}/actions/upload upload_project_data_catalog_data POST /project/{proj_key}/data_catalogues/{dc_key}/actions/upload","title":"deepsearch.cps.apis.public.DataCatalogsApi"},{"location":"apis/public/DataCatalogsApi/#clone_project_data_catalog","text":"CloneDataCatalogResult clone_project_data_catalog(proj_key, dc_key, options) Clone an existing data catalogue","title":"clone_project_data_catalog"},{"location":"apis/public/DataCatalogsApi/#example","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | options = deepsearch . cps . apis . public . CloneDataCatalogOptions () # CloneDataCatalogOptions | try : api_response = api_instance . clone_project_data_catalog ( proj_key , dc_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->clone_project_data_catalog: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters","text":"Name Type Description Notes proj_key str dc_key str options CloneDataCatalogOptions","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type","text":"CloneDataCatalogResult","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details","text":"Status code Description Response headers 200 Data catalogue cloned, and data is being copied. - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#clone_public_data_catalog","text":"CloneDataCatalogResult clone_public_data_catalog(dc_key, options) Clone an existing public data catalogue","title":"clone_public_data_catalog"},{"location":"apis/public/DataCatalogsApi/#example_1","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) dc_key = 'dc_key_example' # str | options = deepsearch . cps . apis . public . ClonePublicDataCatalogOptions () # ClonePublicDataCatalogOptions | try : api_response = api_instance . clone_public_data_catalog ( dc_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->clone_public_data_catalog: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_1","text":"Name Type Description Notes dc_key str options ClonePublicDataCatalogOptions","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_1","text":"CloneDataCatalogResult","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_1","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_1","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_1","text":"Status code Description Response headers 200 Data catalogue cloned, and data is being copied. - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#create_project_data_catalog","text":"DataCatalogue create_project_data_catalog(proj_key, options) Create an empty data catalog","title":"create_project_data_catalog"},{"location":"apis/public/DataCatalogsApi/#example_2","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | options = deepsearch . cps . apis . public . CreateDataCatalogOptions () # CreateDataCatalogOptions | try : api_response = api_instance . create_project_data_catalog ( proj_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->create_project_data_catalog: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_2","text":"Name Type Description Notes proj_key str options CreateDataCatalogOptions","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_2","text":"DataCatalogue","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_2","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_2","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_2","text":"Status code Description Response headers 200 Data catalog created. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#create_project_data_catalog_collection","text":"create_project_data_catalog_collection(proj_key, dc_key, body) Create a collection in a data catalog","title":"create_project_data_catalog_collection"},{"location":"apis/public/DataCatalogsApi/#example_3","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | body = deepsearch . cps . apis . public . CreateDataCatalogCollectionOptions () # CreateDataCatalogCollectionOptions | try : api_instance . create_project_data_catalog_collection ( proj_key , dc_key , body ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->create_project_data_catalog_collection: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_3","text":"Name Type Description Notes proj_key str dc_key str body CreateDataCatalogCollectionOptions","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_3","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_3","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_3","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_3","text":"Status code Description Response headers 200 Collection created. - 404 Dictionary doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#create_project_data_catalog_delete_token","text":"TokenResponse create_project_data_catalog_delete_token(proj_key, dc_key) Get a token used to confirm the deletion of a data catalog.","title":"create_project_data_catalog_delete_token"},{"location":"apis/public/DataCatalogsApi/#example_4","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | try : api_response = api_instance . create_project_data_catalog_delete_token ( proj_key , dc_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->create_project_data_catalog_delete_token: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_4","text":"Name Type Description Notes proj_key str dc_key str","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_4","text":"TokenResponse","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_4","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_4","text":"Status code Description Response headers 200 Data catalog deletion token. - 404 Data flow template not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#delete_project_data_catalog","text":"delete_project_data_catalog(proj_key, dc_key, confirmation_token) Delete a single data catalog","title":"delete_project_data_catalog"},{"location":"apis/public/DataCatalogsApi/#example_5","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | confirmation_token = 'confirmation_token_example' # str | try : api_instance . delete_project_data_catalog ( proj_key , dc_key , confirmation_token ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->delete_project_data_catalog: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_5","text":"Name Type Description Notes proj_key str dc_key str confirmation_token str","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_5","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_5","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_5","text":"Status code Description Response headers 204 Data catalog deleted. - 404 Data catalog doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#delete_project_data_catalog_collection","text":"delete_project_data_catalog_collection(proj_key, dc_key, collection_name) Delete a single data catalog's collection","title":"delete_project_data_catalog_collection"},{"location":"apis/public/DataCatalogsApi/#example_6","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | collection_name = 'collection_name_example' # str | try : api_instance . delete_project_data_catalog_collection ( proj_key , dc_key , collection_name ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->delete_project_data_catalog_collection: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_6","text":"Name Type Description Notes proj_key str dc_key str collection_name str","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_6","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_6","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_6","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_6","text":"Status code Description Response headers 204 Collection deleted. - 404 Collection doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#export_dataset","text":"ProjectTask export_dataset(proj_key, bag_key, data) Export dataset from a Knowledge Graph","title":"export_dataset"},{"location":"apis/public/DataCatalogsApi/#example_7","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Configure API key authorization: KGAuth configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'X-CPS-KG-Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['X-CPS-KG-Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | data = deepsearch . cps . apis . public . InlineObject3 () # InlineObject3 | try : api_response = api_instance . export_dataset ( proj_key , bag_key , data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->export_dataset: %s \\n \" % e ) Api Key Authentication (KGAuth): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Configure API key authorization: KGAuth configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'X-CPS-KG-Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['X-CPS-KG-Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | data = deepsearch . cps . apis . public . InlineObject3 () # InlineObject3 | try : api_response = api_instance . export_dataset ( proj_key , bag_key , data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->export_dataset: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_7","text":"Name Type Description Notes proj_key str bag_key str data InlineObject3","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_7","text":"ProjectTask","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_7","text":"Bearer , KGAuth","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_7","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_7","text":"Status code Description Response headers 200 Task - 404 Task not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#export_project_data_catalog_collection_data","text":"file export_project_data_catalog_collection_data(proj_key, dc_key, collection_name) Export the contents of a data catalog's collection","title":"export_project_data_catalog_collection_data"},{"location":"apis/public/DataCatalogsApi/#example_8","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | collection_name = 'collection_name_example' # str | try : api_response = api_instance . export_project_data_catalog_collection_data ( proj_key , dc_key , collection_name ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->export_project_data_catalog_collection_data: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_8","text":"Name Type Description Notes proj_key str dc_key str collection_name str","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_8","text":"file","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_8","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_8","text":"Content-Type : Not defined Accept : application/zip, application/json, application/x-jsonlines","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_8","text":"Status code Description Response headers 200 Data catalog collection contents. - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#export_project_data_catalog_data","text":"file export_project_data_catalog_data(proj_key, dc_key) Export the contents of a data catalog.","title":"export_project_data_catalog_data"},{"location":"apis/public/DataCatalogsApi/#example_9","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | try : api_response = api_instance . export_project_data_catalog_data ( proj_key , dc_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->export_project_data_catalog_data: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_9","text":"Name Type Description Notes proj_key str dc_key str","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_9","text":"file","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_9","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_9","text":"Content-Type : Not defined Accept : application/zip","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_9","text":"Status code Description Response headers 200 Data catalog contents. - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#get_data_catalog_collection_data","text":"get_data_catalog_collection_data(proj_key, dc_key, collection_name, after=after, limit=limit) Get Data Catalog Collection data.","title":"get_data_catalog_collection_data"},{"location":"apis/public/DataCatalogsApi/#example_10","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | collection_name = 'collection_name_example' # str | after = 'after_example' # str | (optional) limit = 50 # int | (optional) (default to 50) try : api_instance . get_data_catalog_collection_data ( proj_key , dc_key , collection_name , after = after , limit = limit ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->get_data_catalog_collection_data: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_10","text":"Name Type Description Notes proj_key str dc_key str collection_name str after str [optional] limit int [optional] [default to 50]","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_10","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_10","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_10","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_10","text":"Status code Description Response headers 200 Get Data Catalog Collection data. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#get_project_data_catalog","text":"DataCatalogue get_project_data_catalog(proj_key, dc_key, include_collections=include_collections) Get a single data catalogue","title":"get_project_data_catalog"},{"location":"apis/public/DataCatalogsApi/#example_11","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | include_collections = False # bool | (optional) (default to False) try : api_response = api_instance . get_project_data_catalog ( proj_key , dc_key , include_collections = include_collections ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->get_project_data_catalog: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_11","text":"Name Type Description Notes proj_key str dc_key str include_collections bool [optional] [default to False]","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_11","text":"DataCatalogue","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_11","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_11","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_11","text":"Status code Description Response headers 200 Data catalogue - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#get_public_data_catalog","text":"DataCatalogue get_public_data_catalog(dc_key, include_collections=include_collections) Get a single data catalogue that was made public","title":"get_public_data_catalog"},{"location":"apis/public/DataCatalogsApi/#example_12","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) dc_key = 'dc_key_example' # str | include_collections = False # bool | (optional) (default to False) try : api_response = api_instance . get_public_data_catalog ( dc_key , include_collections = include_collections ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->get_public_data_catalog: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_12","text":"Name Type Description Notes dc_key str include_collections bool [optional] [default to False]","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_12","text":"DataCatalogue","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_12","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_12","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_12","text":"Status code Description Response headers 200 Data catalogue - 404 Data catalogue not found or is not public - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#import_project_data_catalog_collection_data","text":"Task import_project_data_catalog_collection_data(proj_key, dc_key, collection_name, body) Import data to a data catalog collection. The collection will be created if it doesn't exist.","title":"import_project_data_catalog_collection_data"},{"location":"apis/public/DataCatalogsApi/#example_13","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | collection_name = 'collection_name_example' # str | body = deepsearch . cps . apis . public . ImportToDataCatalogCollectionOptions () # ImportToDataCatalogCollectionOptions | try : api_response = api_instance . import_project_data_catalog_collection_data ( proj_key , dc_key , collection_name , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->import_project_data_catalog_collection_data: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_13","text":"Name Type Description Notes proj_key str dc_key str collection_name str body ImportToDataCatalogCollectionOptions","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_13","text":"Task","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_13","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_13","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_13","text":"Status code Description Response headers 200 Data is being processed. - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#import_project_data_catalog_data","text":"Task import_project_data_catalog_data(proj_key, dc_key, body) Import data to a data catalog. The collections will be created if they don't exist.","title":"import_project_data_catalog_data"},{"location":"apis/public/DataCatalogsApi/#example_14","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | body = deepsearch . cps . apis . public . ImportToDataCatalogOptions () # ImportToDataCatalogOptions | try : api_response = api_instance . import_project_data_catalog_data ( proj_key , dc_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->import_project_data_catalog_data: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_14","text":"Name Type Description Notes proj_key str dc_key str body ImportToDataCatalogOptions","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_14","text":"Task","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_14","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_14","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_14","text":"Status code Description Response headers 200 Data is being processed. - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#import_project_data_catalog_from_mongo","text":"DataCatalogImportResult import_project_data_catalog_from_mongo(proj_key, body) Create a data catalogue from a mongo database","title":"import_project_data_catalog_from_mongo"},{"location":"apis/public/DataCatalogsApi/#example_15","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | body = deepsearch . cps . apis . public . DataCatalogImportOptions () # DataCatalogImportOptions | try : api_response = api_instance . import_project_data_catalog_from_mongo ( proj_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->import_project_data_catalog_from_mongo: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_15","text":"Name Type Description Notes proj_key str body DataCatalogImportOptions","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_15","text":"DataCatalogImportResult","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_15","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_15","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_15","text":"Status code Description Response headers 200 Data catalogue created, and data is being imported. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#import_project_data_catalog_from_url","text":"DataCatalogImportResult import_project_data_catalog_from_url(proj_key, body) Create a data catalogue from a URL to a file","title":"import_project_data_catalog_from_url"},{"location":"apis/public/DataCatalogsApi/#example_16","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | body = deepsearch . cps . apis . public . DataCatalogUrlImportOptions () # DataCatalogUrlImportOptions | try : api_response = api_instance . import_project_data_catalog_from_url ( proj_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->import_project_data_catalog_from_url: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_16","text":"Name Type Description Notes proj_key str body DataCatalogUrlImportOptions","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_16","text":"DataCatalogImportResult","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_16","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_16","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_16","text":"Status code Description Response headers 200 Data catalogue created, and data is being imported. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#infer_project_data_catalog_category_schema","text":"Task infer_project_data_catalog_category_schema(proj_key, dc_key, collection_name, body) Infer the schema for a data catalog's collection.","title":"infer_project_data_catalog_category_schema"},{"location":"apis/public/DataCatalogsApi/#example_17","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | collection_name = 'collection_name_example' # str | body = deepsearch . cps . apis . public . InferProjectDataCatalogCategorySchema () # InferProjectDataCatalogCategorySchema | try : api_response = api_instance . infer_project_data_catalog_category_schema ( proj_key , dc_key , collection_name , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->infer_project_data_catalog_category_schema: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_17","text":"Name Type Description Notes proj_key str dc_key str collection_name str body InferProjectDataCatalogCategorySchema","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_17","text":"Task","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_17","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_17","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_17","text":"Status code Description Response headers 200 OK - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#list_data_catalogs_and_collections_from_schema","text":"list[DataCatalogue] list_data_catalogs_and_collections_from_schema(schema, proj_key=proj_key) List data catalogues with specific schema","title":"list_data_catalogs_and_collections_from_schema"},{"location":"apis/public/DataCatalogsApi/#example_18","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) schema = None # dict(str, object) | proj_key = 'proj_key_example' # str | (optional) try : api_response = api_instance . list_data_catalogs_and_collections_from_schema ( schema , proj_key = proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->list_data_catalogs_and_collections_from_schema: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_18","text":"Name Type Description Notes schema dict(str, object) proj_key str [optional]","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_18","text":"list[DataCatalogue]","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_18","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_18","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_18","text":"Status code Description Response headers 200 List of data catalogues - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#list_known_data_catalog_schemas","text":"list[DataCatalogSchema] list_known_data_catalog_schemas() List System Known Data Catalog Schemas.","title":"list_known_data_catalog_schemas"},{"location":"apis/public/DataCatalogsApi/#example_19","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) try : api_response = api_instance . list_known_data_catalog_schemas () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->list_known_data_catalog_schemas: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_19","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_19","text":"list[DataCatalogSchema]","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_19","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_19","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_19","text":"Status code Description Response headers 200 List of Known Data Catalog Schemas. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#list_project_data_catalog_collections","text":"list[DataCatalogCollection] list_project_data_catalog_collections(proj_key, dc_key) Get the collections of a data catalog.","title":"list_project_data_catalog_collections"},{"location":"apis/public/DataCatalogsApi/#example_20","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | try : api_response = api_instance . list_project_data_catalog_collections ( proj_key , dc_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->list_project_data_catalog_collections: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_20","text":"Name Type Description Notes proj_key str dc_key str","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_20","text":"list[DataCatalogCollection]","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_20","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_20","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_20","text":"Status code Description Response headers 200 Data catalog collections - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#list_project_data_catalogs","text":"list[DataCatalogue] list_project_data_catalogs(proj_key, query=query) List data catalogues for a project","title":"list_project_data_catalogs"},{"location":"apis/public/DataCatalogsApi/#example_21","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | query = 'query_example' # str | (optional) try : api_response = api_instance . list_project_data_catalogs ( proj_key , query = query ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->list_project_data_catalogs: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_21","text":"Name Type Description Notes proj_key str query str [optional]","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_21","text":"list[DataCatalogue]","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_21","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_21","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_21","text":"Status code Description Response headers 200 List of data catalogues - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#list_public_data_catalog_collections","text":"list[DataCatalogCollection] list_public_data_catalog_collections(dc_key) Get the collections of a data catalog.","title":"list_public_data_catalog_collections"},{"location":"apis/public/DataCatalogsApi/#example_22","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) dc_key = 'dc_key_example' # str | try : api_response = api_instance . list_public_data_catalog_collections ( dc_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->list_public_data_catalog_collections: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_22","text":"Name Type Description Notes dc_key str","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_22","text":"list[DataCatalogCollection]","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_22","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_22","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_22","text":"Status code Description Response headers 200 Data catalog collections - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#list_public_data_catalogs","text":"list[DataCatalogue] list_public_data_catalogs(query=query) List public data catalogues","title":"list_public_data_catalogs"},{"location":"apis/public/DataCatalogsApi/#example_23","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) query = 'query_example' # str | (optional) try : api_response = api_instance . list_public_data_catalogs ( query = query ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->list_public_data_catalogs: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_23","text":"Name Type Description Notes query str [optional]","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_23","text":"list[DataCatalogue]","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_23","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_23","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_23","text":"Status code Description Response headers 200 List of public data catalogues - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#patch_project_data_catalog","text":"DataCatalogue patch_project_data_catalog(proj_key, dc_key, options) Update the metadata of a data catalog.","title":"patch_project_data_catalog"},{"location":"apis/public/DataCatalogsApi/#example_24","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | options = deepsearch . cps . apis . public . PatchDataCatalogOptions () # PatchDataCatalogOptions | try : api_response = api_instance . patch_project_data_catalog ( proj_key , dc_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->patch_project_data_catalog: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_24","text":"Name Type Description Notes proj_key str dc_key str options PatchDataCatalogOptions","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_24","text":"DataCatalogue","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_24","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_24","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_24","text":"Status code Description Response headers 200 Data catalog updated. - 404 Data catalog not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#upload_project_data_catalog_collection_data","text":"Task upload_project_data_catalog_collection_data(proj_key, dc_key, collection_name, file) Upload data to a data catalog collection. The collection will be created if it doesn't exist.","title":"upload_project_data_catalog_collection_data"},{"location":"apis/public/DataCatalogsApi/#example_25","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | collection_name = 'collection_name_example' # str | file = '/path/to/file' # file | try : api_response = api_instance . upload_project_data_catalog_collection_data ( proj_key , dc_key , collection_name , file ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->upload_project_data_catalog_collection_data: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_25","text":"Name Type Description Notes proj_key str dc_key str collection_name str file file","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_25","text":"Task","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_25","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_25","text":"Content-Type : multipart/form-data Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_25","text":"Status code Description Response headers 200 Data is being processed. - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogsApi/#upload_project_data_catalog_data","text":"Task upload_project_data_catalog_data(proj_key, dc_key, file) Upload data to a data catalog. The collection name(s) will be inferred from the file name(s).","title":"upload_project_data_catalog_data"},{"location":"apis/public/DataCatalogsApi/#example_26","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataCatalogsApi ( api_client ) proj_key = 'proj_key_example' # str | dc_key = 'dc_key_example' # str | file = '/path/to/file' # file | try : api_response = api_instance . upload_project_data_catalog_data ( proj_key , dc_key , file ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataCatalogsApi->upload_project_data_catalog_data: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataCatalogsApi/#parameters_26","text":"Name Type Description Notes proj_key str dc_key str file file","title":"Parameters"},{"location":"apis/public/DataCatalogsApi/#return-type_26","text":"Task","title":"Return type"},{"location":"apis/public/DataCatalogsApi/#authorization_26","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataCatalogsApi/#http-request-headers_26","text":"Content-Type : multipart/form-data Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataCatalogsApi/#http-response-details_26","text":"Status code Description Response headers 200 Data is being processed. - 404 Data catalogue not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataCatalogue/","text":"DataCatalogue \u00b6 Properties \u00b6 Name Type Description Notes category_schemas list[DataCatalogCategorySchema] collections list[DataCatalogCollection] [optional] collections_data_flows list[DataCatalogDataFlow] copy_of str created_at float created_by str dc_key str description str name str proj_key str provenance_logs list[DataCatalogProvenanceLog] public bool topology DataCatalogTopology [Back to Model list] [Back to API list] [Back to README]","title":"DataCatalogue"},{"location":"apis/public/DataCatalogue/#datacatalogue","text":"","title":"DataCatalogue"},{"location":"apis/public/DataCatalogue/#properties","text":"Name Type Description Notes category_schemas list[DataCatalogCategorySchema] collections list[DataCatalogCollection] [optional] collections_data_flows list[DataCatalogDataFlow] copy_of str created_at float created_by str dc_key str description str name str proj_key str provenance_logs list[DataCatalogProvenanceLog] public bool topology DataCatalogTopology [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataCollection/","text":"DataCollection \u00b6 Properties \u00b6 Name Type Description Notes documents float health str metadata DataCollectionMetadata name str source DataCollectionSource [optional] status str [Back to Model list] [Back to API list] [Back to README]","title":"DataCollection"},{"location":"apis/public/DataCollection/#datacollection","text":"","title":"DataCollection"},{"location":"apis/public/DataCollection/#properties","text":"Name Type Description Notes documents float health str metadata DataCollectionMetadata name str source DataCollectionSource [optional] status str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataCollectionMetadata/","text":"DataCollectionMetadata \u00b6 Properties \u00b6 Name Type Description Notes aliases list[str] created str description str domain list[str] source str storage str [optional] type str version str [Back to Model list] [Back to API list] [Back to README]","title":"DataCollectionMetadata"},{"location":"apis/public/DataCollectionMetadata/#datacollectionmetadata","text":"","title":"DataCollectionMetadata"},{"location":"apis/public/DataCollectionMetadata/#properties","text":"Name Type Description Notes aliases list[str] created str description str domain list[str] source str storage str [optional] type str version str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataCollectionSource/","text":"DataCollectionSource \u00b6 Properties \u00b6 Name Type Description Notes elastic_id str [optional] index_key str proj_key str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DataCollectionSource"},{"location":"apis/public/DataCollectionSource/#datacollectionsource","text":"","title":"DataCollectionSource"},{"location":"apis/public/DataCollectionSource/#properties","text":"Name Type Description Notes elastic_id str [optional] index_key str proj_key str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataFlow/","text":"DataFlow \u00b6 Properties \u00b6 Name Type Description Notes created_at float [optional] description str [optional] df_tpl_key str [optional] name str [optional] proj_key str [optional] public bool [optional] template object [optional] updated_at float [optional] variables dict(str, object) [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DataFlow"},{"location":"apis/public/DataFlow/#dataflow","text":"","title":"DataFlow"},{"location":"apis/public/DataFlow/#properties","text":"Name Type Description Notes created_at float [optional] description str [optional] df_tpl_key str [optional] name str [optional] proj_key str [optional] public bool [optional] template object [optional] updated_at float [optional] variables dict(str, object) [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataFlowAssembleIntoKnowledgeGraphTask/","text":"DataFlowAssembleIntoKnowledgeGraphTask \u00b6 Properties \u00b6 Name Type Description Notes data_flow ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow [optional] timestamp float [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DataFlowAssembleIntoKnowledgeGraphTask"},{"location":"apis/public/DataFlowAssembleIntoKnowledgeGraphTask/#dataflowassembleintoknowledgegraphtask","text":"","title":"DataFlowAssembleIntoKnowledgeGraphTask"},{"location":"apis/public/DataFlowAssembleIntoKnowledgeGraphTask/#properties","text":"Name Type Description Notes data_flow ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow [optional] timestamp float [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataFlowAssembleReport/","text":"DataFlowAssembleReport \u00b6 Properties \u00b6 Name Type Description Notes dataflow_tasks dict(str, DataFlowAssembleReportSingleTask) [optional] task_id str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DataFlowAssembleReport"},{"location":"apis/public/DataFlowAssembleReport/#dataflowassemblereport","text":"","title":"DataFlowAssembleReport"},{"location":"apis/public/DataFlowAssembleReport/#properties","text":"Name Type Description Notes dataflow_tasks dict(str, DataFlowAssembleReportSingleTask) [optional] task_id str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataFlowAssembleReportCause/","text":"DataFlowAssembleReportCause \u00b6 Properties \u00b6 Name Type Description Notes type str [optional] value object [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DataFlowAssembleReportCause"},{"location":"apis/public/DataFlowAssembleReportCause/#dataflowassemblereportcause","text":"","title":"DataFlowAssembleReportCause"},{"location":"apis/public/DataFlowAssembleReportCause/#properties","text":"Name Type Description Notes type str [optional] value object [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataFlowAssembleReportChunks/","text":"DataFlowAssembleReportChunks \u00b6 Properties \u00b6 Name Type Description Notes completed int [optional] failure int [optional] spawned int [optional] success int [optional] total int [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DataFlowAssembleReportChunks"},{"location":"apis/public/DataFlowAssembleReportChunks/#dataflowassemblereportchunks","text":"","title":"DataFlowAssembleReportChunks"},{"location":"apis/public/DataFlowAssembleReportChunks/#properties","text":"Name Type Description Notes completed int [optional] failure int [optional] spawned int [optional] success int [optional] total int [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataFlowAssembleReportErrors/","text":"DataFlowAssembleReportErrors \u00b6 Properties \u00b6 Name Type Description Notes cause DataFlowAssembleReportCause [optional] timestamp float [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DataFlowAssembleReportErrors"},{"location":"apis/public/DataFlowAssembleReportErrors/#dataflowassemblereporterrors","text":"","title":"DataFlowAssembleReportErrors"},{"location":"apis/public/DataFlowAssembleReportErrors/#properties","text":"Name Type Description Notes cause DataFlowAssembleReportCause [optional] timestamp float [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataFlowAssembleReportOptions/","text":"DataFlowAssembleReportOptions \u00b6 Properties \u00b6 Name Type Description Notes event_log_level str [optional] [default to 'error'] max_errors int [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DataFlowAssembleReportOptions"},{"location":"apis/public/DataFlowAssembleReportOptions/#dataflowassemblereportoptions","text":"","title":"DataFlowAssembleReportOptions"},{"location":"apis/public/DataFlowAssembleReportOptions/#properties","text":"Name Type Description Notes event_log_level str [optional] [default to 'error'] max_errors int [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataFlowAssembleReportSingleTask/","text":"DataFlowAssembleReportSingleTask \u00b6 Properties \u00b6 Name Type Description Notes chunks DataFlowAssembleReportChunks [optional] errors list[DataFlowAssembleReportErrors] [optional] progress float [optional] status str [optional] task_type str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DataFlowAssembleReportSingleTask"},{"location":"apis/public/DataFlowAssembleReportSingleTask/#dataflowassemblereportsingletask","text":"","title":"DataFlowAssembleReportSingleTask"},{"location":"apis/public/DataFlowAssembleReportSingleTask/#properties","text":"Name Type Description Notes chunks DataFlowAssembleReportChunks [optional] errors list[DataFlowAssembleReportErrors] [optional] progress float [optional] status str [optional] task_type str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataFlowLoadIntoKnowledgeGraphTask/","text":"DataFlowLoadIntoKnowledgeGraphTask \u00b6 Properties \u00b6 Name Type Description Notes data_flow ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow [optional] save object [optional] timestamp float [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DataFlowLoadIntoKnowledgeGraphTask"},{"location":"apis/public/DataFlowLoadIntoKnowledgeGraphTask/#dataflowloadintoknowledgegraphtask","text":"","title":"DataFlowLoadIntoKnowledgeGraphTask"},{"location":"apis/public/DataFlowLoadIntoKnowledgeGraphTask/#properties","text":"Name Type Description Notes data_flow ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow [optional] save object [optional] timestamp float [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataFlowTemplate/","text":"DataFlowTemplate \u00b6 Properties \u00b6 Name Type Description Notes config object data_flow list[object] [Back to Model list] [Back to API list] [Back to README]","title":"DataFlowTemplate"},{"location":"apis/public/DataFlowTemplate/#dataflowtemplate","text":"","title":"DataFlowTemplate"},{"location":"apis/public/DataFlowTemplate/#properties","text":"Name Type Description Notes config object data_flow list[object] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataFlowTemplateListItem/","text":"DataFlowTemplateListItem \u00b6 Properties \u00b6 Name Type Description Notes created_at float [optional] description str [optional] df_tpl_key str [optional] name str [optional] proj_key str [optional] public bool [optional] updated_at float [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DataFlowTemplateListItem"},{"location":"apis/public/DataFlowTemplateListItem/#dataflowtemplatelistitem","text":"","title":"DataFlowTemplateListItem"},{"location":"apis/public/DataFlowTemplateListItem/#properties","text":"Name Type Description Notes created_at float [optional] description str [optional] df_tpl_key str [optional] name str [optional] proj_key str [optional] public bool [optional] updated_at float [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataFlowTemplateVariable/","text":"DataFlowTemplateVariable \u00b6 Properties \u00b6 Name Type Description Notes [Back to Model list] [Back to API list] [Back to README]","title":"DataFlowTemplateVariable"},{"location":"apis/public/DataFlowTemplateVariable/#dataflowtemplatevariable","text":"","title":"DataFlowTemplateVariable"},{"location":"apis/public/DataFlowTemplateVariable/#properties","text":"Name Type Description Notes [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataFlowTopologyOptions/","text":"DataFlowTopologyOptions \u00b6 Properties \u00b6 Name Type Description Notes variables dict(str, object) [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DataFlowTopologyOptions"},{"location":"apis/public/DataFlowTopologyOptions/#dataflowtopologyoptions","text":"","title":"DataFlowTopologyOptions"},{"location":"apis/public/DataFlowTopologyOptions/#properties","text":"Name Type Description Notes variables dict(str, object) [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataFlowsApi/","text":"deepsearch.cps.apis.public.DataFlowsApi \u00b6 All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description assemble_project_data_flow POST /project/{proj_key}/kgc/dataflows/actions/run assemble_project_data_flow_template_into_knowledge_graph POST /project/{proj_key}/kgc/dataflow_templates/{df_tpl_key}/actions/run assemble_project_raw_data_flow_template_into_knowledge_graph POST /project/{proj_key}/kgc/raw_dataflow_templates/actions/run create_project_data_flow_template POST /project/{proj_key}/kgc/dataflow_templates create_project_data_flow_template_delete_token POST /project/{proj_key}/kgc/dataflow_templates/{df_tpl_key}/delete_token create_project_knowledge_graph_assemble_report POST /project/{proj_key}/dataset_assembles/{task_id}/report debug_project_data_flow_template POST /project/{proj_key}/kgc_dataflow_templates/debug/{df_tpl_key} delete_project_data_flow_template DELETE /project/{proj_key}/kgc/dataflow_templates/{df_tpl_key} export_project_data_flow_template POST /project/{proj_key}/kgc/dataflow_templates/{df_tpl_key}/export.json export_public_data_flow_template POST /project/public/kgc/dataflow_templates/{df_tpl_key}/export.json get_project_data_flow GET /project/{proj_key}/kgc/dataflow_templates/{df_tpl_key} get_project_data_flow_template_topology POST /project/{proj_key}/kgc/dataflow_templates/{df_tpl_key}/topology get_public_data_flow_template GET /project/public/kgc/dataflow_templates/{df_tpl_key} list_project_data_flow_templates GET /project/{proj_key}/kgc/dataflow_templates list_public_data_flow_templates GET /project/public/kgc/dataflow_templates load_project_data_flow POST /project/{proj_key}/kgc/dataflows/actions/load load_project_data_flow_template_into_knowledge_graph POST /project/{proj_key}/kgc/dataflow_templates/{df_tpl_key}/actions/load render_project_data_flow_template POST /project/{proj_key}/kgc/dataflow_templates/{df_tpl_key}/actions/render update_project_data_flow_template PUT /project/{proj_key}/kgc/dataflow_templates/{df_tpl_key} upload_project_data_flow_template POST /project/{proj_key}/kgc/dataflow_templates/from_json validate_project_data_flow POST /project/{proj_key}/kgc/dataflows/actions/validate assemble_project_data_flow \u00b6 Task assemble_project_data_flow(proj_key, dataflow) Run a dataflow Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | dataflow = deepsearch . cps . apis . public . KgcDataInput () # KgcDataInput | try : api_response = api_instance . assemble_project_data_flow ( proj_key , dataflow ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->assemble_project_data_flow: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dataflow KgcDataInput Return type \u00b6 Task Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Task started. - 400 Invalid dataflow. - [Back to top] [Back to API list] [Back to Model list] [Back to README] assemble_project_data_flow_template_into_knowledge_graph \u00b6 Task assemble_project_data_flow_template_into_knowledge_graph(proj_key, df_tpl_key, options) Render a single data flow template, replacing the variable placeholders by their actual values and run it. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | df_tpl_key = 'df_tpl_key_example' # str | options = deepsearch . cps . apis . public . RunDataFlowTemplateOptions () # RunDataFlowTemplateOptions | try : api_response = api_instance . assemble_project_data_flow_template_into_knowledge_graph ( proj_key , df_tpl_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->assemble_project_data_flow_template_into_knowledge_graph: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str df_tpl_key str options RunDataFlowTemplateOptions Return type \u00b6 Task Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Task started. - 400 Invalid dataflow. - 404 Data flow template doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] assemble_project_raw_data_flow_template_into_knowledge_graph \u00b6 Task assemble_project_raw_data_flow_template_into_knowledge_graph(proj_key, options) Render a single data flow template, replacing the variable placeholders by their actual values and run it. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | options = deepsearch . cps . apis . public . RunDataFlowTemplateOptions1 () # RunDataFlowTemplateOptions1 | try : api_response = api_instance . assemble_project_raw_data_flow_template_into_knowledge_graph ( proj_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->assemble_project_raw_data_flow_template_into_knowledge_graph: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str options RunDataFlowTemplateOptions1 Return type \u00b6 Task Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Task started. - 400 Invalid dataflow. - 404 Data flow template doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_project_data_flow_template \u00b6 DataFlow create_project_data_flow_template(proj_key, options) Create a data flow template Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | options = deepsearch . cps . apis . public . CreateDataFlowTemplateOptions () # CreateDataFlowTemplateOptions | try : api_response = api_instance . create_project_data_flow_template ( proj_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->create_project_data_flow_template: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str options CreateDataFlowTemplateOptions Return type \u00b6 DataFlow Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Dataflow created. - 400 Invalid dataflow. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_project_data_flow_template_delete_token \u00b6 TokenResponse create_project_data_flow_template_delete_token(proj_key, df_tpl_key) Get a token used to confirm the deletion of a data flow template. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | df_tpl_key = 'df_tpl_key_example' # str | try : api_response = api_instance . create_project_data_flow_template_delete_token ( proj_key , df_tpl_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->create_project_data_flow_template_delete_token: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str df_tpl_key str Return type \u00b6 TokenResponse Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Data flow deletion token. - 404 Data flow template not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_project_knowledge_graph_assemble_report \u00b6 DataFlowAssembleReport create_project_knowledge_graph_assemble_report(proj_key, task_id, options) Create a report for a data flow task assemble. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | task_id = 'task_id_example' # str | options = deepsearch . cps . apis . public . DataFlowAssembleReportOptions () # DataFlowAssembleReportOptions | try : api_response = api_instance . create_project_knowledge_graph_assemble_report ( proj_key , task_id , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->create_project_knowledge_graph_assemble_report: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str task_id str options DataFlowAssembleReportOptions Return type \u00b6 DataFlowAssembleReport Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Report. - 404 Task not found, or is not a data flow assemble. - [Back to top] [Back to API list] [Back to Model list] [Back to README] debug_project_data_flow_template \u00b6 object debug_project_data_flow_template(proj_key, df_tpl_key, options) (Debug) get the fully rendered data flow, with all the coordinates set. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | df_tpl_key = 'df_tpl_key_example' # str | options = deepsearch . cps . apis . public . FullyRenderedDataFlow () # FullyRenderedDataFlow | try : api_response = api_instance . debug_project_data_flow_template ( proj_key , df_tpl_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->debug_project_data_flow_template: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str df_tpl_key str options FullyRenderedDataFlow Return type \u00b6 object Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Rendered data flow. - 400 Invalid dataflow. - 404 Data flow template doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_project_data_flow_template \u00b6 delete_project_data_flow_template(proj_key, df_tpl_key, confirmation_token) Delete a single data flow template Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | df_tpl_key = 'df_tpl_key_example' # str | confirmation_token = 'confirmation_token_example' # str | try : api_instance . delete_project_data_flow_template ( proj_key , df_tpl_key , confirmation_token ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->delete_project_data_flow_template: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str df_tpl_key str confirmation_token str Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 204 Data flow deleted. - 404 Data flow template doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] export_project_data_flow_template \u00b6 file export_project_data_flow_template(proj_key, df_tpl_key) Export a single data flow template Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | df_tpl_key = 'df_tpl_key_example' # str | try : api_response = api_instance . export_project_data_flow_template ( proj_key , df_tpl_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->export_project_data_flow_template: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str df_tpl_key str Return type \u00b6 file Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/vnd.ibm.cps.df-template+json HTTP response details \u00b6 Status code Description Response headers 200 Data flow template. - 404 Data flow template doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] export_public_data_flow_template \u00b6 file export_public_data_flow_template(df_tpl_key) Export a single public data flow template Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) df_tpl_key = 'df_tpl_key_example' # str | try : api_response = api_instance . export_public_data_flow_template ( df_tpl_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->export_public_data_flow_template: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes df_tpl_key str Return type \u00b6 file Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/vnd.ibm.cps.df-template+json HTTP response details \u00b6 Status code Description Response headers 200 Data flow template. - 404 Data flow template doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_project_data_flow \u00b6 DataFlow get_project_data_flow(proj_key, df_tpl_key) Get a single data flow template Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | df_tpl_key = 'df_tpl_key_example' # str | try : api_response = api_instance . get_project_data_flow ( proj_key , df_tpl_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->get_project_data_flow: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str df_tpl_key str Return type \u00b6 DataFlow Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Data flow template. - 404 Data flow template doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_project_data_flow_template_topology \u00b6 Topology get_project_data_flow_template_topology(proj_key, df_tpl_key, options) Render a single data flow template, replacing the variable placeholders by their actual values and get the resulting Knowledge Graph topology from it. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | df_tpl_key = 'df_tpl_key_example' # str | options = deepsearch . cps . apis . public . DataFlowTopologyOptions () # DataFlowTopologyOptions | try : api_response = api_instance . get_project_data_flow_template_topology ( proj_key , df_tpl_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->get_project_data_flow_template_topology: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str df_tpl_key str options DataFlowTopologyOptions Return type \u00b6 Topology Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Data flow topology. - 400 Invalid dataflow. - 404 Data flow template doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_public_data_flow_template \u00b6 DataFlow get_public_data_flow_template(df_tpl_key) Get a single data flow template Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) df_tpl_key = 'df_tpl_key_example' # str | try : api_response = api_instance . get_public_data_flow_template ( df_tpl_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->get_public_data_flow_template: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes df_tpl_key str Return type \u00b6 DataFlow Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Data flow. - 404 Data flow template doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_project_data_flow_templates \u00b6 list[DataFlowTemplateListItem] list_project_data_flow_templates(proj_key, query=query) List a data flow templates Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | query = 'query_example' # str | (optional) try : api_response = api_instance . list_project_data_flow_templates ( proj_key , query = query ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->list_project_data_flow_templates: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str query str [optional] Return type \u00b6 list[DataFlowTemplateListItem] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of data flow templates. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_public_data_flow_templates \u00b6 list[DataFlowTemplateListItem] list_public_data_flow_templates(query=query) List public data flow templates Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) query = 'query_example' # str | (optional) try : api_response = api_instance . list_public_data_flow_templates ( query = query ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->list_public_data_flow_templates: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes query str [optional] Return type \u00b6 list[DataFlowTemplateListItem] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of data flow templates. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] load_project_data_flow \u00b6 Task load_project_data_flow(proj_key, options) Load a dataflow into a KG Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | options = deepsearch . cps . apis . public . LoadKgcDataInput () # LoadKgcDataInput | try : api_response = api_instance . load_project_data_flow ( proj_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->load_project_data_flow: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str options LoadKgcDataInput Return type \u00b6 Task Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Task started. - 400 Invalid dataflow. - [Back to top] [Back to API list] [Back to Model list] [Back to README] load_project_data_flow_template_into_knowledge_graph \u00b6 Task load_project_data_flow_template_into_knowledge_graph(proj_key, df_tpl_key, options) Render a single data flow template, replacing the variable placeholders by their actual values and load it into a Knowledge Graph. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | df_tpl_key = 'df_tpl_key_example' # str | options = deepsearch . cps . apis . public . LoadDataFlowIntoKnowledgeGraphOptions1 () # LoadDataFlowIntoKnowledgeGraphOptions1 | try : api_response = api_instance . load_project_data_flow_template_into_knowledge_graph ( proj_key , df_tpl_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->load_project_data_flow_template_into_knowledge_graph: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str df_tpl_key str options LoadDataFlowIntoKnowledgeGraphOptions1 Return type \u00b6 Task Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Task started. - 400 Invalid dataflow. - 404 Data flow template doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] render_project_data_flow_template \u00b6 object render_project_data_flow_template(proj_key, df_tpl_key, options) Render a single data flow template, replacing the variable placeholders by their actual values. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | df_tpl_key = 'df_tpl_key_example' # str | options = deepsearch . cps . apis . public . RenderDataFlowTemplateOptions () # RenderDataFlowTemplateOptions | try : api_response = api_instance . render_project_data_flow_template ( proj_key , df_tpl_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->render_project_data_flow_template: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str df_tpl_key str options RenderDataFlowTemplateOptions Return type \u00b6 object Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Rendered data flow - 400 Invalid dataflow. - 404 Data flow template doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_project_data_flow_template \u00b6 DataFlow update_project_data_flow_template(proj_key, df_tpl_key, options) Update a data flow template Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | df_tpl_key = 'df_tpl_key_example' # str | options = deepsearch . cps . apis . public . UpdateDataFlowOptions () # UpdateDataFlowOptions | try : api_response = api_instance . update_project_data_flow_template ( proj_key , df_tpl_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->update_project_data_flow_template: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str df_tpl_key str options UpdateDataFlowOptions Return type \u00b6 DataFlow Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Dataflow updated. - 400 Invalid dataflow. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] upload_project_data_flow_template \u00b6 DataFlow upload_project_data_flow_template(proj_key, contents, name=name, description=description, public=public) Create a data flow template from a JSON file. DEPRECATED : use create_project_data_flow_template Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | contents = '/path/to/file' # file | name = 'name_example' # str | (optional) description = 'description_example' # str | (optional) public = True # bool | (optional) try : api_response = api_instance . upload_project_data_flow_template ( proj_key , contents , name = name , description = description , public = public ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->upload_project_data_flow_template: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str contents file name str [optional] description str [optional] public bool [optional] Return type \u00b6 DataFlow Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : multipart/form-data Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Dataflow created. - 400 Invalid dataflow. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] validate_project_data_flow \u00b6 validate_project_data_flow(proj_key, dataflow) Validate a dataflow Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | dataflow = deepsearch . cps . apis . public . KgcDataInput () # KgcDataInput | try : api_instance . validate_project_data_flow ( proj_key , dataflow ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->validate_project_data_flow: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dataflow KgcDataInput Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Validation successful. - 400 Invalid dataflow. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"deepsearch.cps.apis.public.DataFlowsApi"},{"location":"apis/public/DataFlowsApi/#deepsearchcpsapispublicdataflowsapi","text":"All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description assemble_project_data_flow POST /project/{proj_key}/kgc/dataflows/actions/run assemble_project_data_flow_template_into_knowledge_graph POST /project/{proj_key}/kgc/dataflow_templates/{df_tpl_key}/actions/run assemble_project_raw_data_flow_template_into_knowledge_graph POST /project/{proj_key}/kgc/raw_dataflow_templates/actions/run create_project_data_flow_template POST /project/{proj_key}/kgc/dataflow_templates create_project_data_flow_template_delete_token POST /project/{proj_key}/kgc/dataflow_templates/{df_tpl_key}/delete_token create_project_knowledge_graph_assemble_report POST /project/{proj_key}/dataset_assembles/{task_id}/report debug_project_data_flow_template POST /project/{proj_key}/kgc_dataflow_templates/debug/{df_tpl_key} delete_project_data_flow_template DELETE /project/{proj_key}/kgc/dataflow_templates/{df_tpl_key} export_project_data_flow_template POST /project/{proj_key}/kgc/dataflow_templates/{df_tpl_key}/export.json export_public_data_flow_template POST /project/public/kgc/dataflow_templates/{df_tpl_key}/export.json get_project_data_flow GET /project/{proj_key}/kgc/dataflow_templates/{df_tpl_key} get_project_data_flow_template_topology POST /project/{proj_key}/kgc/dataflow_templates/{df_tpl_key}/topology get_public_data_flow_template GET /project/public/kgc/dataflow_templates/{df_tpl_key} list_project_data_flow_templates GET /project/{proj_key}/kgc/dataflow_templates list_public_data_flow_templates GET /project/public/kgc/dataflow_templates load_project_data_flow POST /project/{proj_key}/kgc/dataflows/actions/load load_project_data_flow_template_into_knowledge_graph POST /project/{proj_key}/kgc/dataflow_templates/{df_tpl_key}/actions/load render_project_data_flow_template POST /project/{proj_key}/kgc/dataflow_templates/{df_tpl_key}/actions/render update_project_data_flow_template PUT /project/{proj_key}/kgc/dataflow_templates/{df_tpl_key} upload_project_data_flow_template POST /project/{proj_key}/kgc/dataflow_templates/from_json validate_project_data_flow POST /project/{proj_key}/kgc/dataflows/actions/validate","title":"deepsearch.cps.apis.public.DataFlowsApi"},{"location":"apis/public/DataFlowsApi/#assemble_project_data_flow","text":"Task assemble_project_data_flow(proj_key, dataflow) Run a dataflow","title":"assemble_project_data_flow"},{"location":"apis/public/DataFlowsApi/#example","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | dataflow = deepsearch . cps . apis . public . KgcDataInput () # KgcDataInput | try : api_response = api_instance . assemble_project_data_flow ( proj_key , dataflow ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->assemble_project_data_flow: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataFlowsApi/#parameters","text":"Name Type Description Notes proj_key str dataflow KgcDataInput","title":"Parameters"},{"location":"apis/public/DataFlowsApi/#return-type","text":"Task","title":"Return type"},{"location":"apis/public/DataFlowsApi/#authorization","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataFlowsApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataFlowsApi/#http-response-details","text":"Status code Description Response headers 200 Task started. - 400 Invalid dataflow. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataFlowsApi/#assemble_project_data_flow_template_into_knowledge_graph","text":"Task assemble_project_data_flow_template_into_knowledge_graph(proj_key, df_tpl_key, options) Render a single data flow template, replacing the variable placeholders by their actual values and run it.","title":"assemble_project_data_flow_template_into_knowledge_graph"},{"location":"apis/public/DataFlowsApi/#example_1","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | df_tpl_key = 'df_tpl_key_example' # str | options = deepsearch . cps . apis . public . RunDataFlowTemplateOptions () # RunDataFlowTemplateOptions | try : api_response = api_instance . assemble_project_data_flow_template_into_knowledge_graph ( proj_key , df_tpl_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->assemble_project_data_flow_template_into_knowledge_graph: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataFlowsApi/#parameters_1","text":"Name Type Description Notes proj_key str df_tpl_key str options RunDataFlowTemplateOptions","title":"Parameters"},{"location":"apis/public/DataFlowsApi/#return-type_1","text":"Task","title":"Return type"},{"location":"apis/public/DataFlowsApi/#authorization_1","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataFlowsApi/#http-request-headers_1","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataFlowsApi/#http-response-details_1","text":"Status code Description Response headers 200 Task started. - 400 Invalid dataflow. - 404 Data flow template doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataFlowsApi/#assemble_project_raw_data_flow_template_into_knowledge_graph","text":"Task assemble_project_raw_data_flow_template_into_knowledge_graph(proj_key, options) Render a single data flow template, replacing the variable placeholders by their actual values and run it.","title":"assemble_project_raw_data_flow_template_into_knowledge_graph"},{"location":"apis/public/DataFlowsApi/#example_2","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | options = deepsearch . cps . apis . public . RunDataFlowTemplateOptions1 () # RunDataFlowTemplateOptions1 | try : api_response = api_instance . assemble_project_raw_data_flow_template_into_knowledge_graph ( proj_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->assemble_project_raw_data_flow_template_into_knowledge_graph: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataFlowsApi/#parameters_2","text":"Name Type Description Notes proj_key str options RunDataFlowTemplateOptions1","title":"Parameters"},{"location":"apis/public/DataFlowsApi/#return-type_2","text":"Task","title":"Return type"},{"location":"apis/public/DataFlowsApi/#authorization_2","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataFlowsApi/#http-request-headers_2","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataFlowsApi/#http-response-details_2","text":"Status code Description Response headers 200 Task started. - 400 Invalid dataflow. - 404 Data flow template doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataFlowsApi/#create_project_data_flow_template","text":"DataFlow create_project_data_flow_template(proj_key, options) Create a data flow template","title":"create_project_data_flow_template"},{"location":"apis/public/DataFlowsApi/#example_3","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | options = deepsearch . cps . apis . public . CreateDataFlowTemplateOptions () # CreateDataFlowTemplateOptions | try : api_response = api_instance . create_project_data_flow_template ( proj_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->create_project_data_flow_template: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataFlowsApi/#parameters_3","text":"Name Type Description Notes proj_key str options CreateDataFlowTemplateOptions","title":"Parameters"},{"location":"apis/public/DataFlowsApi/#return-type_3","text":"DataFlow","title":"Return type"},{"location":"apis/public/DataFlowsApi/#authorization_3","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataFlowsApi/#http-request-headers_3","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataFlowsApi/#http-response-details_3","text":"Status code Description Response headers 200 Dataflow created. - 400 Invalid dataflow. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataFlowsApi/#create_project_data_flow_template_delete_token","text":"TokenResponse create_project_data_flow_template_delete_token(proj_key, df_tpl_key) Get a token used to confirm the deletion of a data flow template.","title":"create_project_data_flow_template_delete_token"},{"location":"apis/public/DataFlowsApi/#example_4","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | df_tpl_key = 'df_tpl_key_example' # str | try : api_response = api_instance . create_project_data_flow_template_delete_token ( proj_key , df_tpl_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->create_project_data_flow_template_delete_token: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataFlowsApi/#parameters_4","text":"Name Type Description Notes proj_key str df_tpl_key str","title":"Parameters"},{"location":"apis/public/DataFlowsApi/#return-type_4","text":"TokenResponse","title":"Return type"},{"location":"apis/public/DataFlowsApi/#authorization_4","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataFlowsApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataFlowsApi/#http-response-details_4","text":"Status code Description Response headers 200 Data flow deletion token. - 404 Data flow template not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataFlowsApi/#create_project_knowledge_graph_assemble_report","text":"DataFlowAssembleReport create_project_knowledge_graph_assemble_report(proj_key, task_id, options) Create a report for a data flow task assemble.","title":"create_project_knowledge_graph_assemble_report"},{"location":"apis/public/DataFlowsApi/#example_5","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | task_id = 'task_id_example' # str | options = deepsearch . cps . apis . public . DataFlowAssembleReportOptions () # DataFlowAssembleReportOptions | try : api_response = api_instance . create_project_knowledge_graph_assemble_report ( proj_key , task_id , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->create_project_knowledge_graph_assemble_report: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataFlowsApi/#parameters_5","text":"Name Type Description Notes proj_key str task_id str options DataFlowAssembleReportOptions","title":"Parameters"},{"location":"apis/public/DataFlowsApi/#return-type_5","text":"DataFlowAssembleReport","title":"Return type"},{"location":"apis/public/DataFlowsApi/#authorization_5","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataFlowsApi/#http-request-headers_5","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataFlowsApi/#http-response-details_5","text":"Status code Description Response headers 200 Report. - 404 Task not found, or is not a data flow assemble. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataFlowsApi/#debug_project_data_flow_template","text":"object debug_project_data_flow_template(proj_key, df_tpl_key, options) (Debug) get the fully rendered data flow, with all the coordinates set.","title":"debug_project_data_flow_template"},{"location":"apis/public/DataFlowsApi/#example_6","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | df_tpl_key = 'df_tpl_key_example' # str | options = deepsearch . cps . apis . public . FullyRenderedDataFlow () # FullyRenderedDataFlow | try : api_response = api_instance . debug_project_data_flow_template ( proj_key , df_tpl_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->debug_project_data_flow_template: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataFlowsApi/#parameters_6","text":"Name Type Description Notes proj_key str df_tpl_key str options FullyRenderedDataFlow","title":"Parameters"},{"location":"apis/public/DataFlowsApi/#return-type_6","text":"object","title":"Return type"},{"location":"apis/public/DataFlowsApi/#authorization_6","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataFlowsApi/#http-request-headers_6","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataFlowsApi/#http-response-details_6","text":"Status code Description Response headers 200 Rendered data flow. - 400 Invalid dataflow. - 404 Data flow template doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataFlowsApi/#delete_project_data_flow_template","text":"delete_project_data_flow_template(proj_key, df_tpl_key, confirmation_token) Delete a single data flow template","title":"delete_project_data_flow_template"},{"location":"apis/public/DataFlowsApi/#example_7","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | df_tpl_key = 'df_tpl_key_example' # str | confirmation_token = 'confirmation_token_example' # str | try : api_instance . delete_project_data_flow_template ( proj_key , df_tpl_key , confirmation_token ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->delete_project_data_flow_template: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataFlowsApi/#parameters_7","text":"Name Type Description Notes proj_key str df_tpl_key str confirmation_token str","title":"Parameters"},{"location":"apis/public/DataFlowsApi/#return-type_7","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/DataFlowsApi/#authorization_7","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataFlowsApi/#http-request-headers_7","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataFlowsApi/#http-response-details_7","text":"Status code Description Response headers 204 Data flow deleted. - 404 Data flow template doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataFlowsApi/#export_project_data_flow_template","text":"file export_project_data_flow_template(proj_key, df_tpl_key) Export a single data flow template","title":"export_project_data_flow_template"},{"location":"apis/public/DataFlowsApi/#example_8","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | df_tpl_key = 'df_tpl_key_example' # str | try : api_response = api_instance . export_project_data_flow_template ( proj_key , df_tpl_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->export_project_data_flow_template: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataFlowsApi/#parameters_8","text":"Name Type Description Notes proj_key str df_tpl_key str","title":"Parameters"},{"location":"apis/public/DataFlowsApi/#return-type_8","text":"file","title":"Return type"},{"location":"apis/public/DataFlowsApi/#authorization_8","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataFlowsApi/#http-request-headers_8","text":"Content-Type : Not defined Accept : application/vnd.ibm.cps.df-template+json","title":"HTTP request headers"},{"location":"apis/public/DataFlowsApi/#http-response-details_8","text":"Status code Description Response headers 200 Data flow template. - 404 Data flow template doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataFlowsApi/#export_public_data_flow_template","text":"file export_public_data_flow_template(df_tpl_key) Export a single public data flow template","title":"export_public_data_flow_template"},{"location":"apis/public/DataFlowsApi/#example_9","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) df_tpl_key = 'df_tpl_key_example' # str | try : api_response = api_instance . export_public_data_flow_template ( df_tpl_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->export_public_data_flow_template: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataFlowsApi/#parameters_9","text":"Name Type Description Notes df_tpl_key str","title":"Parameters"},{"location":"apis/public/DataFlowsApi/#return-type_9","text":"file","title":"Return type"},{"location":"apis/public/DataFlowsApi/#authorization_9","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataFlowsApi/#http-request-headers_9","text":"Content-Type : Not defined Accept : application/vnd.ibm.cps.df-template+json","title":"HTTP request headers"},{"location":"apis/public/DataFlowsApi/#http-response-details_9","text":"Status code Description Response headers 200 Data flow template. - 404 Data flow template doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataFlowsApi/#get_project_data_flow","text":"DataFlow get_project_data_flow(proj_key, df_tpl_key) Get a single data flow template","title":"get_project_data_flow"},{"location":"apis/public/DataFlowsApi/#example_10","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | df_tpl_key = 'df_tpl_key_example' # str | try : api_response = api_instance . get_project_data_flow ( proj_key , df_tpl_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->get_project_data_flow: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataFlowsApi/#parameters_10","text":"Name Type Description Notes proj_key str df_tpl_key str","title":"Parameters"},{"location":"apis/public/DataFlowsApi/#return-type_10","text":"DataFlow","title":"Return type"},{"location":"apis/public/DataFlowsApi/#authorization_10","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataFlowsApi/#http-request-headers_10","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataFlowsApi/#http-response-details_10","text":"Status code Description Response headers 200 Data flow template. - 404 Data flow template doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataFlowsApi/#get_project_data_flow_template_topology","text":"Topology get_project_data_flow_template_topology(proj_key, df_tpl_key, options) Render a single data flow template, replacing the variable placeholders by their actual values and get the resulting Knowledge Graph topology from it.","title":"get_project_data_flow_template_topology"},{"location":"apis/public/DataFlowsApi/#example_11","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | df_tpl_key = 'df_tpl_key_example' # str | options = deepsearch . cps . apis . public . DataFlowTopologyOptions () # DataFlowTopologyOptions | try : api_response = api_instance . get_project_data_flow_template_topology ( proj_key , df_tpl_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->get_project_data_flow_template_topology: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataFlowsApi/#parameters_11","text":"Name Type Description Notes proj_key str df_tpl_key str options DataFlowTopologyOptions","title":"Parameters"},{"location":"apis/public/DataFlowsApi/#return-type_11","text":"Topology","title":"Return type"},{"location":"apis/public/DataFlowsApi/#authorization_11","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataFlowsApi/#http-request-headers_11","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataFlowsApi/#http-response-details_11","text":"Status code Description Response headers 200 Data flow topology. - 400 Invalid dataflow. - 404 Data flow template doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataFlowsApi/#get_public_data_flow_template","text":"DataFlow get_public_data_flow_template(df_tpl_key) Get a single data flow template","title":"get_public_data_flow_template"},{"location":"apis/public/DataFlowsApi/#example_12","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) df_tpl_key = 'df_tpl_key_example' # str | try : api_response = api_instance . get_public_data_flow_template ( df_tpl_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->get_public_data_flow_template: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataFlowsApi/#parameters_12","text":"Name Type Description Notes df_tpl_key str","title":"Parameters"},{"location":"apis/public/DataFlowsApi/#return-type_12","text":"DataFlow","title":"Return type"},{"location":"apis/public/DataFlowsApi/#authorization_12","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataFlowsApi/#http-request-headers_12","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataFlowsApi/#http-response-details_12","text":"Status code Description Response headers 200 Data flow. - 404 Data flow template doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataFlowsApi/#list_project_data_flow_templates","text":"list[DataFlowTemplateListItem] list_project_data_flow_templates(proj_key, query=query) List a data flow templates","title":"list_project_data_flow_templates"},{"location":"apis/public/DataFlowsApi/#example_13","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | query = 'query_example' # str | (optional) try : api_response = api_instance . list_project_data_flow_templates ( proj_key , query = query ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->list_project_data_flow_templates: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataFlowsApi/#parameters_13","text":"Name Type Description Notes proj_key str query str [optional]","title":"Parameters"},{"location":"apis/public/DataFlowsApi/#return-type_13","text":"list[DataFlowTemplateListItem]","title":"Return type"},{"location":"apis/public/DataFlowsApi/#authorization_13","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataFlowsApi/#http-request-headers_13","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataFlowsApi/#http-response-details_13","text":"Status code Description Response headers 200 List of data flow templates. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataFlowsApi/#list_public_data_flow_templates","text":"list[DataFlowTemplateListItem] list_public_data_flow_templates(query=query) List public data flow templates","title":"list_public_data_flow_templates"},{"location":"apis/public/DataFlowsApi/#example_14","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) query = 'query_example' # str | (optional) try : api_response = api_instance . list_public_data_flow_templates ( query = query ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->list_public_data_flow_templates: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataFlowsApi/#parameters_14","text":"Name Type Description Notes query str [optional]","title":"Parameters"},{"location":"apis/public/DataFlowsApi/#return-type_14","text":"list[DataFlowTemplateListItem]","title":"Return type"},{"location":"apis/public/DataFlowsApi/#authorization_14","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataFlowsApi/#http-request-headers_14","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataFlowsApi/#http-response-details_14","text":"Status code Description Response headers 200 List of data flow templates. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataFlowsApi/#load_project_data_flow","text":"Task load_project_data_flow(proj_key, options) Load a dataflow into a KG","title":"load_project_data_flow"},{"location":"apis/public/DataFlowsApi/#example_15","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | options = deepsearch . cps . apis . public . LoadKgcDataInput () # LoadKgcDataInput | try : api_response = api_instance . load_project_data_flow ( proj_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->load_project_data_flow: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataFlowsApi/#parameters_15","text":"Name Type Description Notes proj_key str options LoadKgcDataInput","title":"Parameters"},{"location":"apis/public/DataFlowsApi/#return-type_15","text":"Task","title":"Return type"},{"location":"apis/public/DataFlowsApi/#authorization_15","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataFlowsApi/#http-request-headers_15","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataFlowsApi/#http-response-details_15","text":"Status code Description Response headers 200 Task started. - 400 Invalid dataflow. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataFlowsApi/#load_project_data_flow_template_into_knowledge_graph","text":"Task load_project_data_flow_template_into_knowledge_graph(proj_key, df_tpl_key, options) Render a single data flow template, replacing the variable placeholders by their actual values and load it into a Knowledge Graph.","title":"load_project_data_flow_template_into_knowledge_graph"},{"location":"apis/public/DataFlowsApi/#example_16","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | df_tpl_key = 'df_tpl_key_example' # str | options = deepsearch . cps . apis . public . LoadDataFlowIntoKnowledgeGraphOptions1 () # LoadDataFlowIntoKnowledgeGraphOptions1 | try : api_response = api_instance . load_project_data_flow_template_into_knowledge_graph ( proj_key , df_tpl_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->load_project_data_flow_template_into_knowledge_graph: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataFlowsApi/#parameters_16","text":"Name Type Description Notes proj_key str df_tpl_key str options LoadDataFlowIntoKnowledgeGraphOptions1","title":"Parameters"},{"location":"apis/public/DataFlowsApi/#return-type_16","text":"Task","title":"Return type"},{"location":"apis/public/DataFlowsApi/#authorization_16","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataFlowsApi/#http-request-headers_16","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataFlowsApi/#http-response-details_16","text":"Status code Description Response headers 200 Task started. - 400 Invalid dataflow. - 404 Data flow template doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataFlowsApi/#render_project_data_flow_template","text":"object render_project_data_flow_template(proj_key, df_tpl_key, options) Render a single data flow template, replacing the variable placeholders by their actual values.","title":"render_project_data_flow_template"},{"location":"apis/public/DataFlowsApi/#example_17","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | df_tpl_key = 'df_tpl_key_example' # str | options = deepsearch . cps . apis . public . RenderDataFlowTemplateOptions () # RenderDataFlowTemplateOptions | try : api_response = api_instance . render_project_data_flow_template ( proj_key , df_tpl_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->render_project_data_flow_template: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataFlowsApi/#parameters_17","text":"Name Type Description Notes proj_key str df_tpl_key str options RenderDataFlowTemplateOptions","title":"Parameters"},{"location":"apis/public/DataFlowsApi/#return-type_17","text":"object","title":"Return type"},{"location":"apis/public/DataFlowsApi/#authorization_17","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataFlowsApi/#http-request-headers_17","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataFlowsApi/#http-response-details_17","text":"Status code Description Response headers 200 Rendered data flow - 400 Invalid dataflow. - 404 Data flow template doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataFlowsApi/#update_project_data_flow_template","text":"DataFlow update_project_data_flow_template(proj_key, df_tpl_key, options) Update a data flow template","title":"update_project_data_flow_template"},{"location":"apis/public/DataFlowsApi/#example_18","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | df_tpl_key = 'df_tpl_key_example' # str | options = deepsearch . cps . apis . public . UpdateDataFlowOptions () # UpdateDataFlowOptions | try : api_response = api_instance . update_project_data_flow_template ( proj_key , df_tpl_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->update_project_data_flow_template: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataFlowsApi/#parameters_18","text":"Name Type Description Notes proj_key str df_tpl_key str options UpdateDataFlowOptions","title":"Parameters"},{"location":"apis/public/DataFlowsApi/#return-type_18","text":"DataFlow","title":"Return type"},{"location":"apis/public/DataFlowsApi/#authorization_18","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataFlowsApi/#http-request-headers_18","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataFlowsApi/#http-response-details_18","text":"Status code Description Response headers 200 Dataflow updated. - 400 Invalid dataflow. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataFlowsApi/#upload_project_data_flow_template","text":"DataFlow upload_project_data_flow_template(proj_key, contents, name=name, description=description, public=public) Create a data flow template from a JSON file. DEPRECATED : use create_project_data_flow_template","title":"upload_project_data_flow_template"},{"location":"apis/public/DataFlowsApi/#example_19","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | contents = '/path/to/file' # file | name = 'name_example' # str | (optional) description = 'description_example' # str | (optional) public = True # bool | (optional) try : api_response = api_instance . upload_project_data_flow_template ( proj_key , contents , name = name , description = description , public = public ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->upload_project_data_flow_template: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataFlowsApi/#parameters_19","text":"Name Type Description Notes proj_key str contents file name str [optional] description str [optional] public bool [optional]","title":"Parameters"},{"location":"apis/public/DataFlowsApi/#return-type_19","text":"DataFlow","title":"Return type"},{"location":"apis/public/DataFlowsApi/#authorization_19","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataFlowsApi/#http-request-headers_19","text":"Content-Type : multipart/form-data Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataFlowsApi/#http-response-details_19","text":"Status code Description Response headers 200 Dataflow created. - 400 Invalid dataflow. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataFlowsApi/#validate_project_data_flow","text":"validate_project_data_flow(proj_key, dataflow) Validate a dataflow","title":"validate_project_data_flow"},{"location":"apis/public/DataFlowsApi/#example_20","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataFlowsApi ( api_client ) proj_key = 'proj_key_example' # str | dataflow = deepsearch . cps . apis . public . KgcDataInput () # KgcDataInput | try : api_instance . validate_project_data_flow ( proj_key , dataflow ) except ApiException as e : print ( \"Exception when calling DataFlowsApi->validate_project_data_flow: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataFlowsApi/#parameters_20","text":"Name Type Description Notes proj_key str dataflow KgcDataInput","title":"Parameters"},{"location":"apis/public/DataFlowsApi/#return-type_20","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/DataFlowsApi/#authorization_20","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataFlowsApi/#http-request-headers_20","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataFlowsApi/#http-response-details_20","text":"Status code Description Response headers 200 Validation successful. - 400 Invalid dataflow. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataIndexUploadFileSource/","text":"DataIndexUploadFileSource \u00b6 Properties \u00b6 Name Type Description Notes file_url str File URL to be converted and uploaded to the data index [optional] scratch_files_id list[str] List of CCS's scratch files id to be converted and uploaded to the data index [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DataIndexUploadFileSource"},{"location":"apis/public/DataIndexUploadFileSource/#dataindexuploadfilesource","text":"","title":"DataIndexUploadFileSource"},{"location":"apis/public/DataIndexUploadFileSource/#properties","text":"Name Type Description Notes file_url str File URL to be converted and uploaded to the data index [optional] scratch_files_id list[str] List of CCS's scratch files id to be converted and uploaded to the data index [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DataIndicesApi/","text":"deepsearch.cps.apis.public.DataIndicesApi \u00b6 All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description ccs_convert_upload_file_project_data_index POST /project/{proj_key}/data_indices/{index_key}/actions/ccs_convert_upload create_project_data_index POST /project/{proj_key}/data_indices create_project_data_index_delete_token POST /project/{proj_key}/data_indices/{index_key}/delete_token delete_project_data_index DELETE /project/{proj_key}/data_indices/{index_key} get_project_data_index GET /project/{proj_key}/data_indices/{index_key} get_project_data_indices GET /project/{proj_key}/data_indices search_project_data_index POST /project/{proj_key}/data_indices/{index_key}/search update_project_data_index PATCH /project/{proj_key}/data_indices/{index_key} upload_project_data_index_file POST /project/{proj_key}/data_indices/{index_key}/actions/upload ccs_convert_upload_file_project_data_index \u00b6 CcsTask ccs_convert_upload_file_project_data_index(proj_key, index_key, body) Convert files via CCS and upload to a project data index (only for indices with 'deepsearch-doc' schema) Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataIndicesApi ( api_client ) proj_key = 'proj_key_example' # str | index_key = 'index_key_example' # str | body = deepsearch . cps . apis . public . DataIndexUploadFileSource () # DataIndexUploadFileSource | try : api_response = api_instance . ccs_convert_upload_file_project_data_index ( proj_key , index_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataIndicesApi->ccs_convert_upload_file_project_data_index: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str index_key str body DataIndexUploadFileSource Return type \u00b6 CcsTask Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 CCS task info - 404 Project data index not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_project_data_index \u00b6 ProjectDataIndexWithStatus create_project_data_index(proj_key, data) Create a project data index Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataIndicesApi ( api_client ) proj_key = 'proj_key_example' # str | data = None # object | try : api_response = api_instance . create_project_data_index ( proj_key , data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataIndicesApi->create_project_data_index: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str data object Return type \u00b6 ProjectDataIndexWithStatus Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Project data index. - 404 Project data index not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_project_data_index_delete_token \u00b6 TokenResponse create_project_data_index_delete_token(proj_key, index_key) Get a token used to confirm the deletion of a project data index. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataIndicesApi ( api_client ) proj_key = 'proj_key_example' # str | index_key = 'index_key_example' # str | try : api_response = api_instance . create_project_data_index_delete_token ( proj_key , index_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataIndicesApi->create_project_data_index_delete_token: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str index_key str Return type \u00b6 TokenResponse Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Project data index deletion token. - 404 Data flow template not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_project_data_index \u00b6 delete_project_data_index(proj_key, index_key, confirmation_token) Delete a project index data Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataIndicesApi ( api_client ) proj_key = 'proj_key_example' # str | index_key = 'index_key_example' # str | confirmation_token = 'confirmation_token_example' # str | The delete confirmation token try : api_instance . delete_project_data_index ( proj_key , index_key , confirmation_token ) except ApiException as e : print ( \"Exception when calling DataIndicesApi->delete_project_data_index: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str index_key str confirmation_token str The delete confirmation token Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Project data index deleted successfully. - 404 Project data index not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_project_data_index \u00b6 ProjectDataIndexWithStatus get_project_data_index(proj_key, index_key) Get project data index Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataIndicesApi ( api_client ) proj_key = 'proj_key_example' # str | index_key = 'index_key_example' # str | try : api_response = api_instance . get_project_data_index ( proj_key , index_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataIndicesApi->get_project_data_index: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str index_key str Return type \u00b6 ProjectDataIndexWithStatus Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Project data index. - 404 Project data index not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_project_data_indices \u00b6 list[ProjectDataIndexWithStatus] get_project_data_indices(proj_key) Get project data indices Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataIndicesApi ( api_client ) proj_key = 'proj_key_example' # str | try : api_response = api_instance . get_project_data_indices ( proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataIndicesApi->get_project_data_indices: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str Return type \u00b6 list[ProjectDataIndexWithStatus] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Project data indices. - 404 Project data index not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] search_project_data_index \u00b6 ElasticIndexSearchResults search_project_data_index(proj_key, index_key, parameters) Search a project data index Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataIndicesApi ( api_client ) proj_key = 'proj_key_example' # str | index_key = 'index_key_example' # str | parameters = None # dict(str, object) | try : api_response = api_instance . search_project_data_index ( proj_key , index_key , parameters ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataIndicesApi->search_project_data_index: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str index_key str parameters dict(str, object) Return type \u00b6 ElasticIndexSearchResults Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List project data index search results - 404 Project data indices search not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_project_data_index \u00b6 ProjectDataIndexWithStatus update_project_data_index(proj_key, index_key, data) Update a project data index Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataIndicesApi ( api_client ) proj_key = 'proj_key_example' # str | index_key = 'index_key_example' # str | data = None # object | try : api_response = api_instance . update_project_data_index ( proj_key , index_key , data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataIndicesApi->update_project_data_index: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str index_key str data object Return type \u00b6 ProjectDataIndexWithStatus Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Updated project data index. - 404 Project data index not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] upload_project_data_index_file \u00b6 upload_project_data_index_file(proj_key, index_key, file) Upload a file to a project data index Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataIndicesApi ( api_client ) proj_key = 'proj_key_example' # str | index_key = 'index_key_example' # str | file = '/path/to/file' # file | try : api_instance . upload_project_data_index_file ( proj_key , index_key , file ) except ApiException as e : print ( \"Exception when calling DataIndicesApi->upload_project_data_index_file: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str index_key str file file Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : multipart/form-data Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 File uploaded successfully - 404 Project data index not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"deepsearch.cps.apis.public.DataIndicesApi"},{"location":"apis/public/DataIndicesApi/#deepsearchcpsapispublicdataindicesapi","text":"All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description ccs_convert_upload_file_project_data_index POST /project/{proj_key}/data_indices/{index_key}/actions/ccs_convert_upload create_project_data_index POST /project/{proj_key}/data_indices create_project_data_index_delete_token POST /project/{proj_key}/data_indices/{index_key}/delete_token delete_project_data_index DELETE /project/{proj_key}/data_indices/{index_key} get_project_data_index GET /project/{proj_key}/data_indices/{index_key} get_project_data_indices GET /project/{proj_key}/data_indices search_project_data_index POST /project/{proj_key}/data_indices/{index_key}/search update_project_data_index PATCH /project/{proj_key}/data_indices/{index_key} upload_project_data_index_file POST /project/{proj_key}/data_indices/{index_key}/actions/upload","title":"deepsearch.cps.apis.public.DataIndicesApi"},{"location":"apis/public/DataIndicesApi/#ccs_convert_upload_file_project_data_index","text":"CcsTask ccs_convert_upload_file_project_data_index(proj_key, index_key, body) Convert files via CCS and upload to a project data index (only for indices with 'deepsearch-doc' schema)","title":"ccs_convert_upload_file_project_data_index"},{"location":"apis/public/DataIndicesApi/#example","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataIndicesApi ( api_client ) proj_key = 'proj_key_example' # str | index_key = 'index_key_example' # str | body = deepsearch . cps . apis . public . DataIndexUploadFileSource () # DataIndexUploadFileSource | try : api_response = api_instance . ccs_convert_upload_file_project_data_index ( proj_key , index_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataIndicesApi->ccs_convert_upload_file_project_data_index: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataIndicesApi/#parameters","text":"Name Type Description Notes proj_key str index_key str body DataIndexUploadFileSource","title":"Parameters"},{"location":"apis/public/DataIndicesApi/#return-type","text":"CcsTask","title":"Return type"},{"location":"apis/public/DataIndicesApi/#authorization","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataIndicesApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataIndicesApi/#http-response-details","text":"Status code Description Response headers 200 CCS task info - 404 Project data index not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataIndicesApi/#create_project_data_index","text":"ProjectDataIndexWithStatus create_project_data_index(proj_key, data) Create a project data index","title":"create_project_data_index"},{"location":"apis/public/DataIndicesApi/#example_1","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataIndicesApi ( api_client ) proj_key = 'proj_key_example' # str | data = None # object | try : api_response = api_instance . create_project_data_index ( proj_key , data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataIndicesApi->create_project_data_index: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataIndicesApi/#parameters_1","text":"Name Type Description Notes proj_key str data object","title":"Parameters"},{"location":"apis/public/DataIndicesApi/#return-type_1","text":"ProjectDataIndexWithStatus","title":"Return type"},{"location":"apis/public/DataIndicesApi/#authorization_1","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataIndicesApi/#http-request-headers_1","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataIndicesApi/#http-response-details_1","text":"Status code Description Response headers 200 Project data index. - 404 Project data index not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataIndicesApi/#create_project_data_index_delete_token","text":"TokenResponse create_project_data_index_delete_token(proj_key, index_key) Get a token used to confirm the deletion of a project data index.","title":"create_project_data_index_delete_token"},{"location":"apis/public/DataIndicesApi/#example_2","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataIndicesApi ( api_client ) proj_key = 'proj_key_example' # str | index_key = 'index_key_example' # str | try : api_response = api_instance . create_project_data_index_delete_token ( proj_key , index_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataIndicesApi->create_project_data_index_delete_token: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataIndicesApi/#parameters_2","text":"Name Type Description Notes proj_key str index_key str","title":"Parameters"},{"location":"apis/public/DataIndicesApi/#return-type_2","text":"TokenResponse","title":"Return type"},{"location":"apis/public/DataIndicesApi/#authorization_2","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataIndicesApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataIndicesApi/#http-response-details_2","text":"Status code Description Response headers 200 Project data index deletion token. - 404 Data flow template not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataIndicesApi/#delete_project_data_index","text":"delete_project_data_index(proj_key, index_key, confirmation_token) Delete a project index data","title":"delete_project_data_index"},{"location":"apis/public/DataIndicesApi/#example_3","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataIndicesApi ( api_client ) proj_key = 'proj_key_example' # str | index_key = 'index_key_example' # str | confirmation_token = 'confirmation_token_example' # str | The delete confirmation token try : api_instance . delete_project_data_index ( proj_key , index_key , confirmation_token ) except ApiException as e : print ( \"Exception when calling DataIndicesApi->delete_project_data_index: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataIndicesApi/#parameters_3","text":"Name Type Description Notes proj_key str index_key str confirmation_token str The delete confirmation token","title":"Parameters"},{"location":"apis/public/DataIndicesApi/#return-type_3","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/DataIndicesApi/#authorization_3","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataIndicesApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataIndicesApi/#http-response-details_3","text":"Status code Description Response headers 200 Project data index deleted successfully. - 404 Project data index not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataIndicesApi/#get_project_data_index","text":"ProjectDataIndexWithStatus get_project_data_index(proj_key, index_key) Get project data index","title":"get_project_data_index"},{"location":"apis/public/DataIndicesApi/#example_4","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataIndicesApi ( api_client ) proj_key = 'proj_key_example' # str | index_key = 'index_key_example' # str | try : api_response = api_instance . get_project_data_index ( proj_key , index_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataIndicesApi->get_project_data_index: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataIndicesApi/#parameters_4","text":"Name Type Description Notes proj_key str index_key str","title":"Parameters"},{"location":"apis/public/DataIndicesApi/#return-type_4","text":"ProjectDataIndexWithStatus","title":"Return type"},{"location":"apis/public/DataIndicesApi/#authorization_4","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataIndicesApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataIndicesApi/#http-response-details_4","text":"Status code Description Response headers 200 Project data index. - 404 Project data index not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataIndicesApi/#get_project_data_indices","text":"list[ProjectDataIndexWithStatus] get_project_data_indices(proj_key) Get project data indices","title":"get_project_data_indices"},{"location":"apis/public/DataIndicesApi/#example_5","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataIndicesApi ( api_client ) proj_key = 'proj_key_example' # str | try : api_response = api_instance . get_project_data_indices ( proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataIndicesApi->get_project_data_indices: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataIndicesApi/#parameters_5","text":"Name Type Description Notes proj_key str","title":"Parameters"},{"location":"apis/public/DataIndicesApi/#return-type_5","text":"list[ProjectDataIndexWithStatus]","title":"Return type"},{"location":"apis/public/DataIndicesApi/#authorization_5","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataIndicesApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataIndicesApi/#http-response-details_5","text":"Status code Description Response headers 200 Project data indices. - 404 Project data index not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataIndicesApi/#search_project_data_index","text":"ElasticIndexSearchResults search_project_data_index(proj_key, index_key, parameters) Search a project data index","title":"search_project_data_index"},{"location":"apis/public/DataIndicesApi/#example_6","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataIndicesApi ( api_client ) proj_key = 'proj_key_example' # str | index_key = 'index_key_example' # str | parameters = None # dict(str, object) | try : api_response = api_instance . search_project_data_index ( proj_key , index_key , parameters ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataIndicesApi->search_project_data_index: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataIndicesApi/#parameters_6","text":"Name Type Description Notes proj_key str index_key str parameters dict(str, object)","title":"Parameters"},{"location":"apis/public/DataIndicesApi/#return-type_6","text":"ElasticIndexSearchResults","title":"Return type"},{"location":"apis/public/DataIndicesApi/#authorization_6","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataIndicesApi/#http-request-headers_6","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataIndicesApi/#http-response-details_6","text":"Status code Description Response headers 200 List project data index search results - 404 Project data indices search not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataIndicesApi/#update_project_data_index","text":"ProjectDataIndexWithStatus update_project_data_index(proj_key, index_key, data) Update a project data index","title":"update_project_data_index"},{"location":"apis/public/DataIndicesApi/#example_7","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataIndicesApi ( api_client ) proj_key = 'proj_key_example' # str | index_key = 'index_key_example' # str | data = None # object | try : api_response = api_instance . update_project_data_index ( proj_key , index_key , data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DataIndicesApi->update_project_data_index: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataIndicesApi/#parameters_7","text":"Name Type Description Notes proj_key str index_key str data object","title":"Parameters"},{"location":"apis/public/DataIndicesApi/#return-type_7","text":"ProjectDataIndexWithStatus","title":"Return type"},{"location":"apis/public/DataIndicesApi/#authorization_7","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataIndicesApi/#http-request-headers_7","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataIndicesApi/#http-response-details_7","text":"Status code Description Response headers 200 Updated project data index. - 404 Project data index not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DataIndicesApi/#upload_project_data_index_file","text":"upload_project_data_index_file(proj_key, index_key, file) Upload a file to a project data index","title":"upload_project_data_index_file"},{"location":"apis/public/DataIndicesApi/#example_8","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DataIndicesApi ( api_client ) proj_key = 'proj_key_example' # str | index_key = 'index_key_example' # str | file = '/path/to/file' # file | try : api_instance . upload_project_data_index_file ( proj_key , index_key , file ) except ApiException as e : print ( \"Exception when calling DataIndicesApi->upload_project_data_index_file: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DataIndicesApi/#parameters_8","text":"Name Type Description Notes proj_key str index_key str file file","title":"Parameters"},{"location":"apis/public/DataIndicesApi/#return-type_8","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/DataIndicesApi/#authorization_8","text":"Bearer","title":"Authorization"},{"location":"apis/public/DataIndicesApi/#http-request-headers_8","text":"Content-Type : multipart/form-data Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DataIndicesApi/#http-response-details_8","text":"Status code Description Response headers 200 File uploaded successfully - 404 Project data index not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DictionariesApi/","text":"deepsearch.cps.apis.public.DictionariesApi \u00b6 All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description clone_project_dictionary POST /project/{proj_key}/dictionaries/{dict_key}/actions/clone clone_public_dictionary POST /project/public/dictionaries/{dict_key}/actions/clone create_project_dictionary POST /project/{proj_key}/dictionaries create_project_dictionary_collection POST /project/{proj_key}/dictionaries/{dict_key}/collections create_project_dictionary_delete_token POST /project/{proj_key}/dictionaries/{dict_key}/delete_token delete_project_dictionary DELETE /project/{proj_key}/dictionaries/{dict_key} delete_project_dictionary_collection DELETE /project/{proj_key}/dictionaries/{dict_key}/collections/{collection_name} export_project_dictionary_collection_data POST /project/{proj_key}/dictionaries/{dict_key}/collections/{collection_name}/actions/export export_project_dictionary_data POST /project/{proj_key}/dictionaries/{dict_key}/actions/export get_project_dictionary GET /project/{proj_key}/dictionaries/{dict_key} get_project_dictionary_collection_data GET /project/{proj_key}/dictionaries/{dict_key}/collections/{collection_name}/data get_public_dictionary GET /project/public/dictionaries/{dict_key} import_project_dictionary_from_mongo POST /project/{proj_key}/dictionaries/from_mongo list_project_dictionaries GET /project/{proj_key}/dictionaries list_project_dictionary_collections GET /project/{proj_key}/dictionaries/{dict_key}/collections list_public_dictionaries GET /project/public/dictionaries list_public_dictionary_collections GET /project/public/dictionaries/{dict_key}/collections update_project_dictionary PATCH /project/{proj_key}/dictionaries/{dict_key} update_project_dictionary_collection_data PATCH /project/{proj_key}/dictionaries/{dict_key}/collections/{collection_name}/data upload_project_dictionary_collection_data POST /project/{proj_key}/dictionaries/{dict_key}/collections/{collection_name}/actions/upload upload_project_dictionary_data POST /project/{proj_key}/dictionaries/{dict_key}/actions/upload clone_project_dictionary \u00b6 DictionaryCloneResult clone_project_dictionary(proj_key, dict_key, body) Clone an existing dictionary Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | body = deepsearch . cps . apis . public . CloneDictionaryOptions () # CloneDictionaryOptions | try : api_response = api_instance . clone_project_dictionary ( proj_key , dict_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->clone_project_dictionary: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dict_key str body CloneDictionaryOptions Return type \u00b6 DictionaryCloneResult Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Dictionary cloned, and data is being copied. - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] clone_public_dictionary \u00b6 DictionaryCloneResult clone_public_dictionary(dict_key, body) Clone an existing public dictionary Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) dict_key = 'dict_key_example' # str | body = deepsearch . cps . apis . public . ClonePublicDictionaryOptions () # ClonePublicDictionaryOptions | try : api_response = api_instance . clone_public_dictionary ( dict_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->clone_public_dictionary: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes dict_key str body ClonePublicDictionaryOptions Return type \u00b6 DictionaryCloneResult Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Dictionary cloned, and data is being copied. - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_project_dictionary \u00b6 Dictionary create_project_dictionary(proj_key, body) Create an empty dictionary Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | body = deepsearch . cps . apis . public . CreateDictionaryOptions () # CreateDictionaryOptions | try : api_response = api_instance . create_project_dictionary ( proj_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->create_project_dictionary: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str body CreateDictionaryOptions Return type \u00b6 Dictionary Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Dictionary created. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_project_dictionary_collection \u00b6 create_project_dictionary_collection(proj_key, dict_key, body) Create a collection in a dictionary Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | body = deepsearch . cps . apis . public . CreateCollectionInDictionaryOptions () # CreateCollectionInDictionaryOptions | try : api_instance . create_project_dictionary_collection ( proj_key , dict_key , body ) except ApiException as e : print ( \"Exception when calling DictionariesApi->create_project_dictionary_collection: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dict_key str body CreateCollectionInDictionaryOptions Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Collection created. - 404 Dictionary doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_project_dictionary_delete_token \u00b6 TokenResponse create_project_dictionary_delete_token(proj_key, dict_key) Get a token used to confirm the deletion of a dictionary. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | try : api_response = api_instance . create_project_dictionary_delete_token ( proj_key , dict_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->create_project_dictionary_delete_token: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dict_key str Return type \u00b6 TokenResponse Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Dictionary deletion token. - 404 Data flow template not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_project_dictionary \u00b6 delete_project_dictionary(proj_key, dict_key, confirmation_token) Delete a single dictionary Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | confirmation_token = 'confirmation_token_example' # str | try : api_instance . delete_project_dictionary ( proj_key , dict_key , confirmation_token ) except ApiException as e : print ( \"Exception when calling DictionariesApi->delete_project_dictionary: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dict_key str confirmation_token str Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 204 Dictionary deleted. - 404 Dictionary doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_project_dictionary_collection \u00b6 delete_project_dictionary_collection(proj_key, dict_key, collection_name) Delete a single dictionary's collection Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | collection_name = 'collection_name_example' # str | try : api_instance . delete_project_dictionary_collection ( proj_key , dict_key , collection_name ) except ApiException as e : print ( \"Exception when calling DictionariesApi->delete_project_dictionary_collection: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dict_key str collection_name str Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 204 Collection deleted. - 404 Collection doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] export_project_dictionary_collection_data \u00b6 file export_project_dictionary_collection_data(proj_key, dict_key, collection_name, file_format=file_format) Export the contents of a dictionary's collection Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | collection_name = 'collection_name_example' # str | file_format = 'file_format_example' # str | (optional) try : api_response = api_instance . export_project_dictionary_collection_data ( proj_key , dict_key , collection_name , file_format = file_format ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->export_project_dictionary_collection_data: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dict_key str collection_name str file_format str [optional] Return type \u00b6 file Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/zip, application/json HTTP response details \u00b6 Status code Description Response headers 200 Dictionary collection contents. - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] export_project_dictionary_data \u00b6 file export_project_dictionary_data(proj_key, dict_key) Export the contents of a dictionary. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | try : api_response = api_instance . export_project_dictionary_data ( proj_key , dict_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->export_project_dictionary_data: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dict_key str Return type \u00b6 file Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/zip HTTP response details \u00b6 Status code Description Response headers 200 Dictionary contents. - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_project_dictionary \u00b6 Dictionary get_project_dictionary(proj_key, dict_key, include_collections=include_collections) Get a single dictionary Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | include_collections = False # bool | (optional) (default to False) try : api_response = api_instance . get_project_dictionary ( proj_key , dict_key , include_collections = include_collections ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->get_project_dictionary: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dict_key str include_collections bool [optional] [default to False] Return type \u00b6 Dictionary Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Dictionary - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_project_dictionary_collection_data \u00b6 object get_project_dictionary_collection_data(proj_key, dict_key, collection_name, after=after, limit=limit, response_format=response_format) Get a preview of the data in a dictionary Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | collection_name = 'collection_name_example' # str | after = 'after_example' # str | (optional) limit = 1000 # int | (optional) (default to 1000) response_format = 'object' # str | (optional) (default to 'object') try : api_response = api_instance . get_project_dictionary_collection_data ( proj_key , dict_key , collection_name , after = after , limit = limit , response_format = response_format ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->get_project_dictionary_collection_data: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dict_key str collection_name str after str [optional] limit int [optional] [default to 1000] response_format str [optional] [default to 'object'] Return type \u00b6 object Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Dictionary collection contents. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_public_dictionary \u00b6 Dictionary get_public_dictionary(dict_key, include_collections=include_collections) Get a single dictionary that was made public Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) dict_key = 'dict_key_example' # str | include_collections = False # bool | (optional) (default to False) try : api_response = api_instance . get_public_dictionary ( dict_key , include_collections = include_collections ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->get_public_dictionary: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes dict_key str include_collections bool [optional] [default to False] Return type \u00b6 Dictionary Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Dictionary - 404 Dictionary not found or is not public - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] import_project_dictionary_from_mongo \u00b6 DictionaryImportResult import_project_dictionary_from_mongo(proj_key, body) Create a dictionary from a mongo database Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | body = deepsearch . cps . apis . public . DictionaryImportOptions () # DictionaryImportOptions | try : api_response = api_instance . import_project_dictionary_from_mongo ( proj_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->import_project_dictionary_from_mongo: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str body DictionaryImportOptions Return type \u00b6 DictionaryImportResult Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Dictionary created, and data is being imported. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_project_dictionaries \u00b6 list[Dictionary] list_project_dictionaries(proj_key, query=query) List dictionaries for a project Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | query = 'query_example' # str | (optional) try : api_response = api_instance . list_project_dictionaries ( proj_key , query = query ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->list_project_dictionaries: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str query str [optional] Return type \u00b6 list[Dictionary] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of dictionaries - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_project_dictionary_collections \u00b6 list[DictionaryCollection] list_project_dictionary_collections(proj_key, dict_key) Get the collections of a dictionary. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | try : api_response = api_instance . list_project_dictionary_collections ( proj_key , dict_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->list_project_dictionary_collections: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dict_key str Return type \u00b6 list[DictionaryCollection] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Dictionary collections - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_public_dictionaries \u00b6 list[Dictionary] list_public_dictionaries(query=query) List public dictionaries Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) query = 'query_example' # str | (optional) try : api_response = api_instance . list_public_dictionaries ( query = query ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->list_public_dictionaries: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes query str [optional] Return type \u00b6 list[Dictionary] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of public dictionaries - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_public_dictionary_collections \u00b6 list[DictionaryCollection] list_public_dictionary_collections(dict_key) Get the collections of a dictionary. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) dict_key = 'dict_key_example' # str | try : api_response = api_instance . list_public_dictionary_collections ( dict_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->list_public_dictionary_collections: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes dict_key str Return type \u00b6 list[DictionaryCollection] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Dictionary collections - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_project_dictionary \u00b6 Dictionary update_project_dictionary(proj_key, dict_key, options) Update the metadata of a dictionary Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | options = deepsearch . cps . apis . public . PatchDictionaryOptions () # PatchDictionaryOptions | try : api_response = api_instance . update_project_dictionary ( proj_key , dict_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->update_project_dictionary: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dict_key str options PatchDictionaryOptions Return type \u00b6 Dictionary Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Dictionary updated. - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_project_dictionary_collection_data \u00b6 update_project_dictionary_collection_data(proj_key, dict_key, collection_name, body) Update the data in a dictionary's collection Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | collection_name = 'collection_name_example' # str | body = [ deepsearch . cps . apis . public . DictionaryCollectionPatch ()] # list[DictionaryCollectionPatch] | A subset of JSON Patch operation list. Only `add`, `replace`, and `remove` is supported. See http://jsonpatch.com/ for more details. try : api_instance . update_project_dictionary_collection_data ( proj_key , dict_key , collection_name , body ) except ApiException as e : print ( \"Exception when calling DictionariesApi->update_project_dictionary_collection_data: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dict_key str collection_name str body list[DictionaryCollectionPatch] A subset of JSON Patch operation list. Only `add`, `replace`, and `remove` is supported. See http://jsonpatch.com/ for more details. Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 204 Data updated. - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] upload_project_dictionary_collection_data \u00b6 Task upload_project_dictionary_collection_data(proj_key, dict_key, collection_name, file) Upload data to a dictionary collection. The collection will be created if it doesn't exist. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | collection_name = 'collection_name_example' # str | file = '/path/to/file' # file | try : api_response = api_instance . upload_project_dictionary_collection_data ( proj_key , dict_key , collection_name , file ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->upload_project_dictionary_collection_data: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dict_key str collection_name str file file Return type \u00b6 Task Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : multipart/form-data Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Data is being processed. - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] upload_project_dictionary_data \u00b6 Task upload_project_dictionary_data(proj_key, dict_key, file) Upload data to a dictionary. The collection name(s) will be inferred from the file name(s). Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | file = '/path/to/file' # file | try : api_response = api_instance . upload_project_dictionary_data ( proj_key , dict_key , file ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->upload_project_dictionary_data: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str dict_key str file file Return type \u00b6 Task Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : multipart/form-data Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Data is being processed. - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"deepsearch.cps.apis.public.DictionariesApi"},{"location":"apis/public/DictionariesApi/#deepsearchcpsapispublicdictionariesapi","text":"All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description clone_project_dictionary POST /project/{proj_key}/dictionaries/{dict_key}/actions/clone clone_public_dictionary POST /project/public/dictionaries/{dict_key}/actions/clone create_project_dictionary POST /project/{proj_key}/dictionaries create_project_dictionary_collection POST /project/{proj_key}/dictionaries/{dict_key}/collections create_project_dictionary_delete_token POST /project/{proj_key}/dictionaries/{dict_key}/delete_token delete_project_dictionary DELETE /project/{proj_key}/dictionaries/{dict_key} delete_project_dictionary_collection DELETE /project/{proj_key}/dictionaries/{dict_key}/collections/{collection_name} export_project_dictionary_collection_data POST /project/{proj_key}/dictionaries/{dict_key}/collections/{collection_name}/actions/export export_project_dictionary_data POST /project/{proj_key}/dictionaries/{dict_key}/actions/export get_project_dictionary GET /project/{proj_key}/dictionaries/{dict_key} get_project_dictionary_collection_data GET /project/{proj_key}/dictionaries/{dict_key}/collections/{collection_name}/data get_public_dictionary GET /project/public/dictionaries/{dict_key} import_project_dictionary_from_mongo POST /project/{proj_key}/dictionaries/from_mongo list_project_dictionaries GET /project/{proj_key}/dictionaries list_project_dictionary_collections GET /project/{proj_key}/dictionaries/{dict_key}/collections list_public_dictionaries GET /project/public/dictionaries list_public_dictionary_collections GET /project/public/dictionaries/{dict_key}/collections update_project_dictionary PATCH /project/{proj_key}/dictionaries/{dict_key} update_project_dictionary_collection_data PATCH /project/{proj_key}/dictionaries/{dict_key}/collections/{collection_name}/data upload_project_dictionary_collection_data POST /project/{proj_key}/dictionaries/{dict_key}/collections/{collection_name}/actions/upload upload_project_dictionary_data POST /project/{proj_key}/dictionaries/{dict_key}/actions/upload","title":"deepsearch.cps.apis.public.DictionariesApi"},{"location":"apis/public/DictionariesApi/#clone_project_dictionary","text":"DictionaryCloneResult clone_project_dictionary(proj_key, dict_key, body) Clone an existing dictionary","title":"clone_project_dictionary"},{"location":"apis/public/DictionariesApi/#example","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | body = deepsearch . cps . apis . public . CloneDictionaryOptions () # CloneDictionaryOptions | try : api_response = api_instance . clone_project_dictionary ( proj_key , dict_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->clone_project_dictionary: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DictionariesApi/#parameters","text":"Name Type Description Notes proj_key str dict_key str body CloneDictionaryOptions","title":"Parameters"},{"location":"apis/public/DictionariesApi/#return-type","text":"DictionaryCloneResult","title":"Return type"},{"location":"apis/public/DictionariesApi/#authorization","text":"Bearer","title":"Authorization"},{"location":"apis/public/DictionariesApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DictionariesApi/#http-response-details","text":"Status code Description Response headers 200 Dictionary cloned, and data is being copied. - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DictionariesApi/#clone_public_dictionary","text":"DictionaryCloneResult clone_public_dictionary(dict_key, body) Clone an existing public dictionary","title":"clone_public_dictionary"},{"location":"apis/public/DictionariesApi/#example_1","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) dict_key = 'dict_key_example' # str | body = deepsearch . cps . apis . public . ClonePublicDictionaryOptions () # ClonePublicDictionaryOptions | try : api_response = api_instance . clone_public_dictionary ( dict_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->clone_public_dictionary: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DictionariesApi/#parameters_1","text":"Name Type Description Notes dict_key str body ClonePublicDictionaryOptions","title":"Parameters"},{"location":"apis/public/DictionariesApi/#return-type_1","text":"DictionaryCloneResult","title":"Return type"},{"location":"apis/public/DictionariesApi/#authorization_1","text":"Bearer","title":"Authorization"},{"location":"apis/public/DictionariesApi/#http-request-headers_1","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DictionariesApi/#http-response-details_1","text":"Status code Description Response headers 200 Dictionary cloned, and data is being copied. - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DictionariesApi/#create_project_dictionary","text":"Dictionary create_project_dictionary(proj_key, body) Create an empty dictionary","title":"create_project_dictionary"},{"location":"apis/public/DictionariesApi/#example_2","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | body = deepsearch . cps . apis . public . CreateDictionaryOptions () # CreateDictionaryOptions | try : api_response = api_instance . create_project_dictionary ( proj_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->create_project_dictionary: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DictionariesApi/#parameters_2","text":"Name Type Description Notes proj_key str body CreateDictionaryOptions","title":"Parameters"},{"location":"apis/public/DictionariesApi/#return-type_2","text":"Dictionary","title":"Return type"},{"location":"apis/public/DictionariesApi/#authorization_2","text":"Bearer","title":"Authorization"},{"location":"apis/public/DictionariesApi/#http-request-headers_2","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DictionariesApi/#http-response-details_2","text":"Status code Description Response headers 200 Dictionary created. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DictionariesApi/#create_project_dictionary_collection","text":"create_project_dictionary_collection(proj_key, dict_key, body) Create a collection in a dictionary","title":"create_project_dictionary_collection"},{"location":"apis/public/DictionariesApi/#example_3","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | body = deepsearch . cps . apis . public . CreateCollectionInDictionaryOptions () # CreateCollectionInDictionaryOptions | try : api_instance . create_project_dictionary_collection ( proj_key , dict_key , body ) except ApiException as e : print ( \"Exception when calling DictionariesApi->create_project_dictionary_collection: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DictionariesApi/#parameters_3","text":"Name Type Description Notes proj_key str dict_key str body CreateCollectionInDictionaryOptions","title":"Parameters"},{"location":"apis/public/DictionariesApi/#return-type_3","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/DictionariesApi/#authorization_3","text":"Bearer","title":"Authorization"},{"location":"apis/public/DictionariesApi/#http-request-headers_3","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DictionariesApi/#http-response-details_3","text":"Status code Description Response headers 200 Collection created. - 404 Dictionary doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DictionariesApi/#create_project_dictionary_delete_token","text":"TokenResponse create_project_dictionary_delete_token(proj_key, dict_key) Get a token used to confirm the deletion of a dictionary.","title":"create_project_dictionary_delete_token"},{"location":"apis/public/DictionariesApi/#example_4","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | try : api_response = api_instance . create_project_dictionary_delete_token ( proj_key , dict_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->create_project_dictionary_delete_token: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DictionariesApi/#parameters_4","text":"Name Type Description Notes proj_key str dict_key str","title":"Parameters"},{"location":"apis/public/DictionariesApi/#return-type_4","text":"TokenResponse","title":"Return type"},{"location":"apis/public/DictionariesApi/#authorization_4","text":"Bearer","title":"Authorization"},{"location":"apis/public/DictionariesApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DictionariesApi/#http-response-details_4","text":"Status code Description Response headers 200 Dictionary deletion token. - 404 Data flow template not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DictionariesApi/#delete_project_dictionary","text":"delete_project_dictionary(proj_key, dict_key, confirmation_token) Delete a single dictionary","title":"delete_project_dictionary"},{"location":"apis/public/DictionariesApi/#example_5","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | confirmation_token = 'confirmation_token_example' # str | try : api_instance . delete_project_dictionary ( proj_key , dict_key , confirmation_token ) except ApiException as e : print ( \"Exception when calling DictionariesApi->delete_project_dictionary: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DictionariesApi/#parameters_5","text":"Name Type Description Notes proj_key str dict_key str confirmation_token str","title":"Parameters"},{"location":"apis/public/DictionariesApi/#return-type_5","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/DictionariesApi/#authorization_5","text":"Bearer","title":"Authorization"},{"location":"apis/public/DictionariesApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DictionariesApi/#http-response-details_5","text":"Status code Description Response headers 204 Dictionary deleted. - 404 Dictionary doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DictionariesApi/#delete_project_dictionary_collection","text":"delete_project_dictionary_collection(proj_key, dict_key, collection_name) Delete a single dictionary's collection","title":"delete_project_dictionary_collection"},{"location":"apis/public/DictionariesApi/#example_6","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | collection_name = 'collection_name_example' # str | try : api_instance . delete_project_dictionary_collection ( proj_key , dict_key , collection_name ) except ApiException as e : print ( \"Exception when calling DictionariesApi->delete_project_dictionary_collection: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DictionariesApi/#parameters_6","text":"Name Type Description Notes proj_key str dict_key str collection_name str","title":"Parameters"},{"location":"apis/public/DictionariesApi/#return-type_6","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/DictionariesApi/#authorization_6","text":"Bearer","title":"Authorization"},{"location":"apis/public/DictionariesApi/#http-request-headers_6","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DictionariesApi/#http-response-details_6","text":"Status code Description Response headers 204 Collection deleted. - 404 Collection doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DictionariesApi/#export_project_dictionary_collection_data","text":"file export_project_dictionary_collection_data(proj_key, dict_key, collection_name, file_format=file_format) Export the contents of a dictionary's collection","title":"export_project_dictionary_collection_data"},{"location":"apis/public/DictionariesApi/#example_7","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | collection_name = 'collection_name_example' # str | file_format = 'file_format_example' # str | (optional) try : api_response = api_instance . export_project_dictionary_collection_data ( proj_key , dict_key , collection_name , file_format = file_format ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->export_project_dictionary_collection_data: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DictionariesApi/#parameters_7","text":"Name Type Description Notes proj_key str dict_key str collection_name str file_format str [optional]","title":"Parameters"},{"location":"apis/public/DictionariesApi/#return-type_7","text":"file","title":"Return type"},{"location":"apis/public/DictionariesApi/#authorization_7","text":"Bearer","title":"Authorization"},{"location":"apis/public/DictionariesApi/#http-request-headers_7","text":"Content-Type : Not defined Accept : application/zip, application/json","title":"HTTP request headers"},{"location":"apis/public/DictionariesApi/#http-response-details_7","text":"Status code Description Response headers 200 Dictionary collection contents. - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DictionariesApi/#export_project_dictionary_data","text":"file export_project_dictionary_data(proj_key, dict_key) Export the contents of a dictionary.","title":"export_project_dictionary_data"},{"location":"apis/public/DictionariesApi/#example_8","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | try : api_response = api_instance . export_project_dictionary_data ( proj_key , dict_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->export_project_dictionary_data: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DictionariesApi/#parameters_8","text":"Name Type Description Notes proj_key str dict_key str","title":"Parameters"},{"location":"apis/public/DictionariesApi/#return-type_8","text":"file","title":"Return type"},{"location":"apis/public/DictionariesApi/#authorization_8","text":"Bearer","title":"Authorization"},{"location":"apis/public/DictionariesApi/#http-request-headers_8","text":"Content-Type : Not defined Accept : application/zip","title":"HTTP request headers"},{"location":"apis/public/DictionariesApi/#http-response-details_8","text":"Status code Description Response headers 200 Dictionary contents. - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DictionariesApi/#get_project_dictionary","text":"Dictionary get_project_dictionary(proj_key, dict_key, include_collections=include_collections) Get a single dictionary","title":"get_project_dictionary"},{"location":"apis/public/DictionariesApi/#example_9","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | include_collections = False # bool | (optional) (default to False) try : api_response = api_instance . get_project_dictionary ( proj_key , dict_key , include_collections = include_collections ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->get_project_dictionary: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DictionariesApi/#parameters_9","text":"Name Type Description Notes proj_key str dict_key str include_collections bool [optional] [default to False]","title":"Parameters"},{"location":"apis/public/DictionariesApi/#return-type_9","text":"Dictionary","title":"Return type"},{"location":"apis/public/DictionariesApi/#authorization_9","text":"Bearer","title":"Authorization"},{"location":"apis/public/DictionariesApi/#http-request-headers_9","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DictionariesApi/#http-response-details_9","text":"Status code Description Response headers 200 Dictionary - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DictionariesApi/#get_project_dictionary_collection_data","text":"object get_project_dictionary_collection_data(proj_key, dict_key, collection_name, after=after, limit=limit, response_format=response_format) Get a preview of the data in a dictionary","title":"get_project_dictionary_collection_data"},{"location":"apis/public/DictionariesApi/#example_10","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | collection_name = 'collection_name_example' # str | after = 'after_example' # str | (optional) limit = 1000 # int | (optional) (default to 1000) response_format = 'object' # str | (optional) (default to 'object') try : api_response = api_instance . get_project_dictionary_collection_data ( proj_key , dict_key , collection_name , after = after , limit = limit , response_format = response_format ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->get_project_dictionary_collection_data: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DictionariesApi/#parameters_10","text":"Name Type Description Notes proj_key str dict_key str collection_name str after str [optional] limit int [optional] [default to 1000] response_format str [optional] [default to 'object']","title":"Parameters"},{"location":"apis/public/DictionariesApi/#return-type_10","text":"object","title":"Return type"},{"location":"apis/public/DictionariesApi/#authorization_10","text":"Bearer","title":"Authorization"},{"location":"apis/public/DictionariesApi/#http-request-headers_10","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DictionariesApi/#http-response-details_10","text":"Status code Description Response headers 200 Dictionary collection contents. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DictionariesApi/#get_public_dictionary","text":"Dictionary get_public_dictionary(dict_key, include_collections=include_collections) Get a single dictionary that was made public","title":"get_public_dictionary"},{"location":"apis/public/DictionariesApi/#example_11","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) dict_key = 'dict_key_example' # str | include_collections = False # bool | (optional) (default to False) try : api_response = api_instance . get_public_dictionary ( dict_key , include_collections = include_collections ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->get_public_dictionary: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DictionariesApi/#parameters_11","text":"Name Type Description Notes dict_key str include_collections bool [optional] [default to False]","title":"Parameters"},{"location":"apis/public/DictionariesApi/#return-type_11","text":"Dictionary","title":"Return type"},{"location":"apis/public/DictionariesApi/#authorization_11","text":"Bearer","title":"Authorization"},{"location":"apis/public/DictionariesApi/#http-request-headers_11","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DictionariesApi/#http-response-details_11","text":"Status code Description Response headers 200 Dictionary - 404 Dictionary not found or is not public - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DictionariesApi/#import_project_dictionary_from_mongo","text":"DictionaryImportResult import_project_dictionary_from_mongo(proj_key, body) Create a dictionary from a mongo database","title":"import_project_dictionary_from_mongo"},{"location":"apis/public/DictionariesApi/#example_12","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | body = deepsearch . cps . apis . public . DictionaryImportOptions () # DictionaryImportOptions | try : api_response = api_instance . import_project_dictionary_from_mongo ( proj_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->import_project_dictionary_from_mongo: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DictionariesApi/#parameters_12","text":"Name Type Description Notes proj_key str body DictionaryImportOptions","title":"Parameters"},{"location":"apis/public/DictionariesApi/#return-type_12","text":"DictionaryImportResult","title":"Return type"},{"location":"apis/public/DictionariesApi/#authorization_12","text":"Bearer","title":"Authorization"},{"location":"apis/public/DictionariesApi/#http-request-headers_12","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DictionariesApi/#http-response-details_12","text":"Status code Description Response headers 200 Dictionary created, and data is being imported. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DictionariesApi/#list_project_dictionaries","text":"list[Dictionary] list_project_dictionaries(proj_key, query=query) List dictionaries for a project","title":"list_project_dictionaries"},{"location":"apis/public/DictionariesApi/#example_13","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | query = 'query_example' # str | (optional) try : api_response = api_instance . list_project_dictionaries ( proj_key , query = query ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->list_project_dictionaries: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DictionariesApi/#parameters_13","text":"Name Type Description Notes proj_key str query str [optional]","title":"Parameters"},{"location":"apis/public/DictionariesApi/#return-type_13","text":"list[Dictionary]","title":"Return type"},{"location":"apis/public/DictionariesApi/#authorization_13","text":"Bearer","title":"Authorization"},{"location":"apis/public/DictionariesApi/#http-request-headers_13","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DictionariesApi/#http-response-details_13","text":"Status code Description Response headers 200 List of dictionaries - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DictionariesApi/#list_project_dictionary_collections","text":"list[DictionaryCollection] list_project_dictionary_collections(proj_key, dict_key) Get the collections of a dictionary.","title":"list_project_dictionary_collections"},{"location":"apis/public/DictionariesApi/#example_14","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | try : api_response = api_instance . list_project_dictionary_collections ( proj_key , dict_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->list_project_dictionary_collections: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DictionariesApi/#parameters_14","text":"Name Type Description Notes proj_key str dict_key str","title":"Parameters"},{"location":"apis/public/DictionariesApi/#return-type_14","text":"list[DictionaryCollection]","title":"Return type"},{"location":"apis/public/DictionariesApi/#authorization_14","text":"Bearer","title":"Authorization"},{"location":"apis/public/DictionariesApi/#http-request-headers_14","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DictionariesApi/#http-response-details_14","text":"Status code Description Response headers 200 Dictionary collections - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DictionariesApi/#list_public_dictionaries","text":"list[Dictionary] list_public_dictionaries(query=query) List public dictionaries","title":"list_public_dictionaries"},{"location":"apis/public/DictionariesApi/#example_15","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) query = 'query_example' # str | (optional) try : api_response = api_instance . list_public_dictionaries ( query = query ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->list_public_dictionaries: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DictionariesApi/#parameters_15","text":"Name Type Description Notes query str [optional]","title":"Parameters"},{"location":"apis/public/DictionariesApi/#return-type_15","text":"list[Dictionary]","title":"Return type"},{"location":"apis/public/DictionariesApi/#authorization_15","text":"Bearer","title":"Authorization"},{"location":"apis/public/DictionariesApi/#http-request-headers_15","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DictionariesApi/#http-response-details_15","text":"Status code Description Response headers 200 List of public dictionaries - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DictionariesApi/#list_public_dictionary_collections","text":"list[DictionaryCollection] list_public_dictionary_collections(dict_key) Get the collections of a dictionary.","title":"list_public_dictionary_collections"},{"location":"apis/public/DictionariesApi/#example_16","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) dict_key = 'dict_key_example' # str | try : api_response = api_instance . list_public_dictionary_collections ( dict_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->list_public_dictionary_collections: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DictionariesApi/#parameters_16","text":"Name Type Description Notes dict_key str","title":"Parameters"},{"location":"apis/public/DictionariesApi/#return-type_16","text":"list[DictionaryCollection]","title":"Return type"},{"location":"apis/public/DictionariesApi/#authorization_16","text":"Bearer","title":"Authorization"},{"location":"apis/public/DictionariesApi/#http-request-headers_16","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DictionariesApi/#http-response-details_16","text":"Status code Description Response headers 200 Dictionary collections - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DictionariesApi/#update_project_dictionary","text":"Dictionary update_project_dictionary(proj_key, dict_key, options) Update the metadata of a dictionary","title":"update_project_dictionary"},{"location":"apis/public/DictionariesApi/#example_17","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | options = deepsearch . cps . apis . public . PatchDictionaryOptions () # PatchDictionaryOptions | try : api_response = api_instance . update_project_dictionary ( proj_key , dict_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->update_project_dictionary: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DictionariesApi/#parameters_17","text":"Name Type Description Notes proj_key str dict_key str options PatchDictionaryOptions","title":"Parameters"},{"location":"apis/public/DictionariesApi/#return-type_17","text":"Dictionary","title":"Return type"},{"location":"apis/public/DictionariesApi/#authorization_17","text":"Bearer","title":"Authorization"},{"location":"apis/public/DictionariesApi/#http-request-headers_17","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DictionariesApi/#http-response-details_17","text":"Status code Description Response headers 200 Dictionary updated. - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DictionariesApi/#update_project_dictionary_collection_data","text":"update_project_dictionary_collection_data(proj_key, dict_key, collection_name, body) Update the data in a dictionary's collection","title":"update_project_dictionary_collection_data"},{"location":"apis/public/DictionariesApi/#example_18","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | collection_name = 'collection_name_example' # str | body = [ deepsearch . cps . apis . public . DictionaryCollectionPatch ()] # list[DictionaryCollectionPatch] | A subset of JSON Patch operation list. Only `add`, `replace`, and `remove` is supported. See http://jsonpatch.com/ for more details. try : api_instance . update_project_dictionary_collection_data ( proj_key , dict_key , collection_name , body ) except ApiException as e : print ( \"Exception when calling DictionariesApi->update_project_dictionary_collection_data: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DictionariesApi/#parameters_18","text":"Name Type Description Notes proj_key str dict_key str collection_name str body list[DictionaryCollectionPatch] A subset of JSON Patch operation list. Only `add`, `replace`, and `remove` is supported. See http://jsonpatch.com/ for more details.","title":"Parameters"},{"location":"apis/public/DictionariesApi/#return-type_18","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/DictionariesApi/#authorization_18","text":"Bearer","title":"Authorization"},{"location":"apis/public/DictionariesApi/#http-request-headers_18","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DictionariesApi/#http-response-details_18","text":"Status code Description Response headers 204 Data updated. - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DictionariesApi/#upload_project_dictionary_collection_data","text":"Task upload_project_dictionary_collection_data(proj_key, dict_key, collection_name, file) Upload data to a dictionary collection. The collection will be created if it doesn't exist.","title":"upload_project_dictionary_collection_data"},{"location":"apis/public/DictionariesApi/#example_19","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | collection_name = 'collection_name_example' # str | file = '/path/to/file' # file | try : api_response = api_instance . upload_project_dictionary_collection_data ( proj_key , dict_key , collection_name , file ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->upload_project_dictionary_collection_data: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DictionariesApi/#parameters_19","text":"Name Type Description Notes proj_key str dict_key str collection_name str file file","title":"Parameters"},{"location":"apis/public/DictionariesApi/#return-type_19","text":"Task","title":"Return type"},{"location":"apis/public/DictionariesApi/#authorization_19","text":"Bearer","title":"Authorization"},{"location":"apis/public/DictionariesApi/#http-request-headers_19","text":"Content-Type : multipart/form-data Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DictionariesApi/#http-response-details_19","text":"Status code Description Response headers 200 Data is being processed. - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DictionariesApi/#upload_project_dictionary_data","text":"Task upload_project_dictionary_data(proj_key, dict_key, file) Upload data to a dictionary. The collection name(s) will be inferred from the file name(s).","title":"upload_project_dictionary_data"},{"location":"apis/public/DictionariesApi/#example_20","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DictionariesApi ( api_client ) proj_key = 'proj_key_example' # str | dict_key = 'dict_key_example' # str | file = '/path/to/file' # file | try : api_response = api_instance . upload_project_dictionary_data ( proj_key , dict_key , file ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DictionariesApi->upload_project_dictionary_data: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DictionariesApi/#parameters_20","text":"Name Type Description Notes proj_key str dict_key str file file","title":"Parameters"},{"location":"apis/public/DictionariesApi/#return-type_20","text":"Task","title":"Return type"},{"location":"apis/public/DictionariesApi/#authorization_20","text":"Bearer","title":"Authorization"},{"location":"apis/public/DictionariesApi/#http-request-headers_20","text":"Content-Type : multipart/form-data Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DictionariesApi/#http-response-details_20","text":"Status code Description Response headers 200 Data is being processed. - 404 Dictionary not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/Dictionary/","text":"Dictionary \u00b6 Properties \u00b6 Name Type Description Notes collections list[DictionaryCollection] [optional] copy_of str created_at float created_by str description str dict_key str name str proj_key str public bool [Back to Model list] [Back to API list] [Back to README]","title":"Dictionary"},{"location":"apis/public/Dictionary/#dictionary","text":"","title":"Dictionary"},{"location":"apis/public/Dictionary/#properties","text":"Name Type Description Notes collections list[DictionaryCollection] [optional] copy_of str created_at float created_by str description str dict_key str name str proj_key str public bool [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DictionaryCloneResult/","text":"DictionaryCloneResult \u00b6 Properties \u00b6 Name Type Description Notes clone_task Task [optional] dictionary Dictionary [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DictionaryCloneResult"},{"location":"apis/public/DictionaryCloneResult/#dictionarycloneresult","text":"","title":"DictionaryCloneResult"},{"location":"apis/public/DictionaryCloneResult/#properties","text":"Name Type Description Notes clone_task Task [optional] dictionary Dictionary [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DictionaryCollection/","text":"DictionaryCollection \u00b6 Properties \u00b6 Name Type Description Notes item_count int name str [Back to Model list] [Back to API list] [Back to README]","title":"DictionaryCollection"},{"location":"apis/public/DictionaryCollection/#dictionarycollection","text":"","title":"DictionaryCollection"},{"location":"apis/public/DictionaryCollection/#properties","text":"Name Type Description Notes item_count int name str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DictionaryCollectionCsvData/","text":"DictionaryCollectionCsvData \u00b6 Properties \u00b6 Name Type Description Notes body str header str [Back to Model list] [Back to API list] [Back to README]","title":"DictionaryCollectionCsvData"},{"location":"apis/public/DictionaryCollectionCsvData/#dictionarycollectioncsvdata","text":"","title":"DictionaryCollectionCsvData"},{"location":"apis/public/DictionaryCollectionCsvData/#properties","text":"Name Type Description Notes body str header str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DictionaryCollectionPatch/","text":"DictionaryCollectionPatch \u00b6 Properties \u00b6 Name Type Description Notes op str path str A path (see JSON patch specification) in the format `/{objectid}` for existing objects, or `/-` for new objects (`add` operations). value DictionaryEntry [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DictionaryCollectionPatch"},{"location":"apis/public/DictionaryCollectionPatch/#dictionarycollectionpatch","text":"","title":"DictionaryCollectionPatch"},{"location":"apis/public/DictionaryCollectionPatch/#properties","text":"Name Type Description Notes op str path str A path (see JSON patch specification) in the format `/{objectid}` for existing objects, or `/-` for new objects (`add` operations). value DictionaryEntry [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DictionaryEntry/","text":"DictionaryEntry \u00b6 Properties \u00b6 Name Type Description Notes name str synonyms list[str] [Back to Model list] [Back to API list] [Back to README]","title":"DictionaryEntry"},{"location":"apis/public/DictionaryEntry/#dictionaryentry","text":"","title":"DictionaryEntry"},{"location":"apis/public/DictionaryEntry/#properties","text":"Name Type Description Notes name str synonyms list[str] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DictionaryImportOptions/","text":"DictionaryImportOptions \u00b6 Properties \u00b6 Name Type Description Notes options ProjectProjKeyDataCataloguesFromMongoOptions target ProjectProjKeyDictionariesFromMongoTarget [Back to Model list] [Back to API list] [Back to README]","title":"DictionaryImportOptions"},{"location":"apis/public/DictionaryImportOptions/#dictionaryimportoptions","text":"","title":"DictionaryImportOptions"},{"location":"apis/public/DictionaryImportOptions/#properties","text":"Name Type Description Notes options ProjectProjKeyDataCataloguesFromMongoOptions target ProjectProjKeyDictionariesFromMongoTarget [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DictionaryImportResult/","text":"DictionaryImportResult \u00b6 Properties \u00b6 Name Type Description Notes dictionary Dictionary [optional] import_task Task [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DictionaryImportResult"},{"location":"apis/public/DictionaryImportResult/#dictionaryimportresult","text":"","title":"DictionaryImportResult"},{"location":"apis/public/DictionaryImportResult/#properties","text":"Name Type Description Notes dictionary Dictionary [optional] import_task Task [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/DocumentAnnotationApi/","text":"deepsearch.cps.apis.public.DocumentAnnotationApi \u00b6 All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description annotate_document POST /project/{proj_key}/annotate/document delete_document_annotation_result DELETE /project/{proj_key}/annotate/document/results/{document_hash} get_annotate_document_result GET /project/{proj_key}/annotate/document/tasks/{task_id} report_inspected_document POST /project/{proj_key}/annotate/document/report annotate_document \u00b6 Task annotate_document(proj_key, body) Run an annotator on a document Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DocumentAnnotationApi ( api_client ) proj_key = 'proj_key_example' # str | body = deepsearch . cps . apis . public . AnnotateDocumentRequest () # AnnotateDocumentRequest | try : api_response = api_instance . annotate_document ( proj_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DocumentAnnotationApi->annotate_document: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str body AnnotateDocumentRequest Return type \u00b6 Task Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_document_annotation_result \u00b6 delete_document_annotation_result(proj_key, document_hash) Delete annotation results for a document Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DocumentAnnotationApi ( api_client ) proj_key = 'proj_key_example' # str | document_hash = 'document_hash_example' # str | try : api_instance . delete_document_annotation_result ( proj_key , document_hash ) except ApiException as e : print ( \"Exception when calling DocumentAnnotationApi->delete_document_annotation_result: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str document_hash str Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_annotate_document_result \u00b6 InlineResponse2002 get_annotate_document_result(proj_key, task_id, wait=wait) Get the result of a previous document annotation Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DocumentAnnotationApi ( api_client ) proj_key = 'proj_key_example' # str | task_id = 'task_id_example' # str | wait = 3.4 # float | Allow the response to be delayed for a few seconds to wait for the result, instead of doing client-side polling. (optional) try : api_response = api_instance . get_annotate_document_result ( proj_key , task_id , wait = wait ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DocumentAnnotationApi->get_annotate_document_result: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str task_id str wait float Allow the response to be delayed for a few seconds to wait for the result, instead of doing client-side polling. [optional] Return type \u00b6 InlineResponse2002 Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] report_inspected_document \u00b6 Task report_inspected_document(proj_key, body) Submit a report on an inspected document Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DocumentAnnotationApi ( api_client ) proj_key = 'proj_key_example' # str | body = deepsearch . cps . apis . public . AnnotatedDocumentReport () # AnnotatedDocumentReport | try : api_response = api_instance . report_inspected_document ( proj_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DocumentAnnotationApi->report_inspected_document: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str body AnnotatedDocumentReport Return type \u00b6 Task Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"deepsearch.cps.apis.public.DocumentAnnotationApi"},{"location":"apis/public/DocumentAnnotationApi/#deepsearchcpsapispublicdocumentannotationapi","text":"All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description annotate_document POST /project/{proj_key}/annotate/document delete_document_annotation_result DELETE /project/{proj_key}/annotate/document/results/{document_hash} get_annotate_document_result GET /project/{proj_key}/annotate/document/tasks/{task_id} report_inspected_document POST /project/{proj_key}/annotate/document/report","title":"deepsearch.cps.apis.public.DocumentAnnotationApi"},{"location":"apis/public/DocumentAnnotationApi/#annotate_document","text":"Task annotate_document(proj_key, body) Run an annotator on a document","title":"annotate_document"},{"location":"apis/public/DocumentAnnotationApi/#example","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DocumentAnnotationApi ( api_client ) proj_key = 'proj_key_example' # str | body = deepsearch . cps . apis . public . AnnotateDocumentRequest () # AnnotateDocumentRequest | try : api_response = api_instance . annotate_document ( proj_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DocumentAnnotationApi->annotate_document: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DocumentAnnotationApi/#parameters","text":"Name Type Description Notes proj_key str body AnnotateDocumentRequest","title":"Parameters"},{"location":"apis/public/DocumentAnnotationApi/#return-type","text":"Task","title":"Return type"},{"location":"apis/public/DocumentAnnotationApi/#authorization","text":"Bearer","title":"Authorization"},{"location":"apis/public/DocumentAnnotationApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DocumentAnnotationApi/#http-response-details","text":"Status code Description Response headers 200 OK - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DocumentAnnotationApi/#delete_document_annotation_result","text":"delete_document_annotation_result(proj_key, document_hash) Delete annotation results for a document","title":"delete_document_annotation_result"},{"location":"apis/public/DocumentAnnotationApi/#example_1","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DocumentAnnotationApi ( api_client ) proj_key = 'proj_key_example' # str | document_hash = 'document_hash_example' # str | try : api_instance . delete_document_annotation_result ( proj_key , document_hash ) except ApiException as e : print ( \"Exception when calling DocumentAnnotationApi->delete_document_annotation_result: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DocumentAnnotationApi/#parameters_1","text":"Name Type Description Notes proj_key str document_hash str","title":"Parameters"},{"location":"apis/public/DocumentAnnotationApi/#return-type_1","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/DocumentAnnotationApi/#authorization_1","text":"Bearer","title":"Authorization"},{"location":"apis/public/DocumentAnnotationApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DocumentAnnotationApi/#http-response-details_1","text":"Status code Description Response headers 200 OK - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DocumentAnnotationApi/#get_annotate_document_result","text":"InlineResponse2002 get_annotate_document_result(proj_key, task_id, wait=wait) Get the result of a previous document annotation","title":"get_annotate_document_result"},{"location":"apis/public/DocumentAnnotationApi/#example_2","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DocumentAnnotationApi ( api_client ) proj_key = 'proj_key_example' # str | task_id = 'task_id_example' # str | wait = 3.4 # float | Allow the response to be delayed for a few seconds to wait for the result, instead of doing client-side polling. (optional) try : api_response = api_instance . get_annotate_document_result ( proj_key , task_id , wait = wait ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DocumentAnnotationApi->get_annotate_document_result: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DocumentAnnotationApi/#parameters_2","text":"Name Type Description Notes proj_key str task_id str wait float Allow the response to be delayed for a few seconds to wait for the result, instead of doing client-side polling. [optional]","title":"Parameters"},{"location":"apis/public/DocumentAnnotationApi/#return-type_2","text":"InlineResponse2002","title":"Return type"},{"location":"apis/public/DocumentAnnotationApi/#authorization_2","text":"Bearer","title":"Authorization"},{"location":"apis/public/DocumentAnnotationApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DocumentAnnotationApi/#http-response-details_2","text":"Status code Description Response headers 200 OK - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/DocumentAnnotationApi/#report_inspected_document","text":"Task report_inspected_document(proj_key, body) Submit a report on an inspected document","title":"report_inspected_document"},{"location":"apis/public/DocumentAnnotationApi/#example_3","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . DocumentAnnotationApi ( api_client ) proj_key = 'proj_key_example' # str | body = deepsearch . cps . apis . public . AnnotatedDocumentReport () # AnnotatedDocumentReport | try : api_response = api_instance . report_inspected_document ( proj_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling DocumentAnnotationApi->report_inspected_document: %s \\n \" % e )","title":"Example"},{"location":"apis/public/DocumentAnnotationApi/#parameters_3","text":"Name Type Description Notes proj_key str body AnnotatedDocumentReport","title":"Parameters"},{"location":"apis/public/DocumentAnnotationApi/#return-type_3","text":"Task","title":"Return type"},{"location":"apis/public/DocumentAnnotationApi/#authorization_3","text":"Bearer","title":"Authorization"},{"location":"apis/public/DocumentAnnotationApi/#http-request-headers_3","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/DocumentAnnotationApi/#http-response-details_3","text":"Status code Description Response headers 200 OK - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/ElasticApi/","text":"deepsearch.cps.apis.public.ElasticApi \u00b6 All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description get_elastic_domains GET /elastic/domains get_elastic_query_max_size GET /elastic/query_max_size get_index_search_results POST /elastic/{elastic_instance}/{elastic_index}/search get_kibana_saved_queries GET /elastic/{elastic_instance}/{elastic_index}/saved_queries list_indices_from_elastic_instance GET /elastic/indices/{index_type}/{index_domain} get_elastic_domains \u00b6 list[str] get_elastic_domains() List system elastic domains. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ElasticApi ( api_client ) try : api_response = api_instance . get_elastic_domains () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ElasticApi->get_elastic_domains: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 list[str] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of Elastic Domains. - 404 Domains not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_elastic_query_max_size \u00b6 InlineResponse200 get_elastic_query_max_size() Get the system maximum workable elastic query size. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ElasticApi ( api_client ) try : api_response = api_instance . get_elastic_query_max_size () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ElasticApi->get_elastic_query_max_size: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 InlineResponse200 Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Maximum elastic query size. - 404 No maximum workable elastic query size found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_index_search_results \u00b6 ElasticIndexSearchResults get_index_search_results(elastic_instance, elastic_index, parameters) List elastic index search results. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ElasticApi ( api_client ) elastic_instance = 'elastic_instance_example' # str | elastic_index = 'elastic_index_example' # str | parameters = None # dict(str, object) | try : api_response = api_instance . get_index_search_results ( elastic_instance , elastic_index , parameters ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ElasticApi->get_index_search_results: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes elastic_instance str elastic_index str parameters dict(str, object) Return type \u00b6 ElasticIndexSearchResults Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List elastic index search results - 404 Instance indices not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_kibana_saved_queries \u00b6 list[KibanaSavedQueriesResult] get_kibana_saved_queries(elastic_instance, elastic_index) List Kibana saved queries. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ElasticApi ( api_client ) elastic_instance = 'elastic_instance_example' # str | elastic_index = 'elastic_index_example' # str | try : api_response = api_instance . get_kibana_saved_queries ( elastic_instance , elastic_index ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ElasticApi->get_kibana_saved_queries: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes elastic_instance str elastic_index str Return type \u00b6 list[KibanaSavedQueriesResult] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of Kibana saved queries - 404 Instance indices not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_indices_from_elastic_instance \u00b6 list[DataCollection] list_indices_from_elastic_instance(index_type, index_domain) List of indices for elastic instance. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ElasticApi ( api_client ) index_type = 'all' # str | (default to 'all') index_domain = 'all' # str | (default to 'all') try : api_response = api_instance . list_indices_from_elastic_instance ( index_type , index_domain ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ElasticApi->list_indices_from_elastic_instance: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes index_type str [default to 'all'] index_domain str [default to 'all'] Return type \u00b6 list[DataCollection] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of Elastic Instance Indices - 404 Instance indices not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"deepsearch.cps.apis.public.ElasticApi"},{"location":"apis/public/ElasticApi/#deepsearchcpsapispublicelasticapi","text":"All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description get_elastic_domains GET /elastic/domains get_elastic_query_max_size GET /elastic/query_max_size get_index_search_results POST /elastic/{elastic_instance}/{elastic_index}/search get_kibana_saved_queries GET /elastic/{elastic_instance}/{elastic_index}/saved_queries list_indices_from_elastic_instance GET /elastic/indices/{index_type}/{index_domain}","title":"deepsearch.cps.apis.public.ElasticApi"},{"location":"apis/public/ElasticApi/#get_elastic_domains","text":"list[str] get_elastic_domains() List system elastic domains.","title":"get_elastic_domains"},{"location":"apis/public/ElasticApi/#example","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ElasticApi ( api_client ) try : api_response = api_instance . get_elastic_domains () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ElasticApi->get_elastic_domains: %s \\n \" % e )","title":"Example"},{"location":"apis/public/ElasticApi/#parameters","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/public/ElasticApi/#return-type","text":"list[str]","title":"Return type"},{"location":"apis/public/ElasticApi/#authorization","text":"Bearer","title":"Authorization"},{"location":"apis/public/ElasticApi/#http-request-headers","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/ElasticApi/#http-response-details","text":"Status code Description Response headers 200 List of Elastic Domains. - 404 Domains not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/ElasticApi/#get_elastic_query_max_size","text":"InlineResponse200 get_elastic_query_max_size() Get the system maximum workable elastic query size.","title":"get_elastic_query_max_size"},{"location":"apis/public/ElasticApi/#example_1","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ElasticApi ( api_client ) try : api_response = api_instance . get_elastic_query_max_size () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ElasticApi->get_elastic_query_max_size: %s \\n \" % e )","title":"Example"},{"location":"apis/public/ElasticApi/#parameters_1","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/public/ElasticApi/#return-type_1","text":"InlineResponse200","title":"Return type"},{"location":"apis/public/ElasticApi/#authorization_1","text":"Bearer","title":"Authorization"},{"location":"apis/public/ElasticApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/ElasticApi/#http-response-details_1","text":"Status code Description Response headers 200 Maximum elastic query size. - 404 No maximum workable elastic query size found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/ElasticApi/#get_index_search_results","text":"ElasticIndexSearchResults get_index_search_results(elastic_instance, elastic_index, parameters) List elastic index search results.","title":"get_index_search_results"},{"location":"apis/public/ElasticApi/#example_2","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ElasticApi ( api_client ) elastic_instance = 'elastic_instance_example' # str | elastic_index = 'elastic_index_example' # str | parameters = None # dict(str, object) | try : api_response = api_instance . get_index_search_results ( elastic_instance , elastic_index , parameters ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ElasticApi->get_index_search_results: %s \\n \" % e )","title":"Example"},{"location":"apis/public/ElasticApi/#parameters_2","text":"Name Type Description Notes elastic_instance str elastic_index str parameters dict(str, object)","title":"Parameters"},{"location":"apis/public/ElasticApi/#return-type_2","text":"ElasticIndexSearchResults","title":"Return type"},{"location":"apis/public/ElasticApi/#authorization_2","text":"Bearer","title":"Authorization"},{"location":"apis/public/ElasticApi/#http-request-headers_2","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/ElasticApi/#http-response-details_2","text":"Status code Description Response headers 200 List elastic index search results - 404 Instance indices not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/ElasticApi/#get_kibana_saved_queries","text":"list[KibanaSavedQueriesResult] get_kibana_saved_queries(elastic_instance, elastic_index) List Kibana saved queries.","title":"get_kibana_saved_queries"},{"location":"apis/public/ElasticApi/#example_3","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ElasticApi ( api_client ) elastic_instance = 'elastic_instance_example' # str | elastic_index = 'elastic_index_example' # str | try : api_response = api_instance . get_kibana_saved_queries ( elastic_instance , elastic_index ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ElasticApi->get_kibana_saved_queries: %s \\n \" % e )","title":"Example"},{"location":"apis/public/ElasticApi/#parameters_3","text":"Name Type Description Notes elastic_instance str elastic_index str","title":"Parameters"},{"location":"apis/public/ElasticApi/#return-type_3","text":"list[KibanaSavedQueriesResult]","title":"Return type"},{"location":"apis/public/ElasticApi/#authorization_3","text":"Bearer","title":"Authorization"},{"location":"apis/public/ElasticApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/ElasticApi/#http-response-details_3","text":"Status code Description Response headers 200 List of Kibana saved queries - 404 Instance indices not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/ElasticApi/#list_indices_from_elastic_instance","text":"list[DataCollection] list_indices_from_elastic_instance(index_type, index_domain) List of indices for elastic instance.","title":"list_indices_from_elastic_instance"},{"location":"apis/public/ElasticApi/#example_4","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ElasticApi ( api_client ) index_type = 'all' # str | (default to 'all') index_domain = 'all' # str | (default to 'all') try : api_response = api_instance . list_indices_from_elastic_instance ( index_type , index_domain ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ElasticApi->list_indices_from_elastic_instance: %s \\n \" % e )","title":"Example"},{"location":"apis/public/ElasticApi/#parameters_4","text":"Name Type Description Notes index_type str [default to 'all'] index_domain str [default to 'all']","title":"Parameters"},{"location":"apis/public/ElasticApi/#return-type_4","text":"list[DataCollection]","title":"Return type"},{"location":"apis/public/ElasticApi/#authorization_4","text":"Bearer","title":"Authorization"},{"location":"apis/public/ElasticApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/ElasticApi/#http-response-details_4","text":"Status code Description Response headers 200 List of Elastic Instance Indices - 404 Instance indices not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/ElasticCoordinates/","text":"ElasticCoordinates \u00b6 Properties \u00b6 Name Type Description Notes ca_certificate_base64 str [optional] dangerously_disable_ssl_validation bool [optional] hosts list[str] [Back to Model list] [Back to API list] [Back to README]","title":"ElasticCoordinates"},{"location":"apis/public/ElasticCoordinates/#elasticcoordinates","text":"","title":"ElasticCoordinates"},{"location":"apis/public/ElasticCoordinates/#properties","text":"Name Type Description Notes ca_certificate_base64 str [optional] dangerously_disable_ssl_validation bool [optional] hosts list[str] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ElasticIndexSearchQueryOptions/","text":"ElasticIndexSearchQueryOptions \u00b6 Properties \u00b6 Name Type Description Notes source list[str] [optional] aggs object [optional] _from float [optional] query dict(str, object) [optional] size float [optional] sort list[object] [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ElasticIndexSearchQueryOptions"},{"location":"apis/public/ElasticIndexSearchQueryOptions/#elasticindexsearchqueryoptions","text":"","title":"ElasticIndexSearchQueryOptions"},{"location":"apis/public/ElasticIndexSearchQueryOptions/#properties","text":"Name Type Description Notes source list[str] [optional] aggs object [optional] _from float [optional] query dict(str, object) [optional] size float [optional] sort list[object] [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ElasticIndexSearchResults/","text":"ElasticIndexSearchResults \u00b6 Properties \u00b6 Name Type Description Notes aggregations object [optional] items list[object] [optional] total float [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ElasticIndexSearchResults"},{"location":"apis/public/ElasticIndexSearchResults/#elasticindexsearchresults","text":"","title":"ElasticIndexSearchResults"},{"location":"apis/public/ElasticIndexSearchResults/#properties","text":"Name Type Description Notes aggregations object [optional] items list[object] [optional] total float [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/EntityAnnotation/","text":"EntityAnnotation \u00b6 Properties \u00b6 Name Type Description Notes match str range list[int] 2-Tuple representing the low and high indexes of the matching substring subtype str [optional] type str [Back to Model list] [Back to API list] [Back to README]","title":"EntityAnnotation"},{"location":"apis/public/EntityAnnotation/#entityannotation","text":"","title":"EntityAnnotation"},{"location":"apis/public/EntityAnnotation/#properties","text":"Name Type Description Notes match str range list[int] 2-Tuple representing the low and high indexes of the matching substring subtype str [optional] type str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/EntityAnnotationDescriptor/","text":"EntityAnnotationDescriptor \u00b6 Properties \u00b6 Name Type Description Notes data_fields list[str] [optional] description str key str [Back to Model list] [Back to API list] [Back to README]","title":"EntityAnnotationDescriptor"},{"location":"apis/public/EntityAnnotationDescriptor/#entityannotationdescriptor","text":"","title":"EntityAnnotationDescriptor"},{"location":"apis/public/EntityAnnotationDescriptor/#properties","text":"Name Type Description Notes data_fields list[str] [optional] description str key str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ErrorResponse/","text":"ErrorResponse \u00b6 Properties \u00b6 Name Type Description Notes error_code str [optional] error_message str [Back to Model list] [Back to API list] [Back to README]","title":"ErrorResponse"},{"location":"apis/public/ErrorResponse/#errorresponse","text":"","title":"ErrorResponse"},{"location":"apis/public/ErrorResponse/#properties","text":"Name Type Description Notes error_code str [optional] error_message str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/FlavoursQuota/","text":"FlavoursQuota \u00b6 Properties \u00b6 Name Type Description Notes display_name str name str quota int [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FlavoursQuota"},{"location":"apis/public/FlavoursQuota/#flavoursquota","text":"","title":"FlavoursQuota"},{"location":"apis/public/FlavoursQuota/#properties","text":"Name Type Description Notes display_name str name str quota int [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/FullyRenderedDataFlow/","text":"FullyRenderedDataFlow \u00b6 Properties \u00b6 Name Type Description Notes target_bag ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag [optional] variables dict(str, object) [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FullyRenderedDataFlow"},{"location":"apis/public/FullyRenderedDataFlow/#fullyrendereddataflow","text":"","title":"FullyRenderedDataFlow"},{"location":"apis/public/FullyRenderedDataFlow/#properties","text":"Name Type Description Notes target_bag ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag [optional] variables dict(str, object) [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ImageCells/","text":"ImageCells \u00b6 Properties \u00b6 Name Type Description Notes data list[object] A 6-tuple consisting of x1, y1, x2, y2, font, coordinates [Back to Model list] [Back to API list] [Back to README]","title":"ImageCells"},{"location":"apis/public/ImageCells/#imagecells","text":"","title":"ImageCells"},{"location":"apis/public/ImageCells/#properties","text":"Name Type Description Notes data list[object] A 6-tuple consisting of x1, y1, x2, y2, font, coordinates [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ImageInfo/","text":"ImageInfo \u00b6 Properties \u00b6 Name Type Description Notes height float width float [Back to Model list] [Back to API list] [Back to README]","title":"ImageInfo"},{"location":"apis/public/ImageInfo/#imageinfo","text":"","title":"ImageInfo"},{"location":"apis/public/ImageInfo/#properties","text":"Name Type Description Notes height float width float [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ImageMetadata/","text":"ImageMetadata \u00b6 Properties \u00b6 Name Type Description Notes cells ImageCells info ImageInfo [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ImageMetadata"},{"location":"apis/public/ImageMetadata/#imagemetadata","text":"","title":"ImageMetadata"},{"location":"apis/public/ImageMetadata/#properties","text":"Name Type Description Notes cells ImageCells info ImageInfo [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ImageSource/","text":"ImageSource \u00b6 Properties \u00b6 Name Type Description Notes proj_key str [optional] scratch_id str [optional] url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ImageSource"},{"location":"apis/public/ImageSource/#imagesource","text":"","title":"ImageSource"},{"location":"apis/public/ImageSource/#properties","text":"Name Type Description Notes proj_key str [optional] scratch_id str [optional] url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ImportFromElasticToDataCatalogOptions/","text":"ImportFromElasticToDataCatalogOptions \u00b6 Properties \u00b6 Name Type Description Notes coordinates ElasticCoordinates [optional] elastic_id str [optional] parameters ImportFromElasticToDataCatalogOptionsParameters [Back to Model list] [Back to API list] [Back to README]","title":"ImportFromElasticToDataCatalogOptions"},{"location":"apis/public/ImportFromElasticToDataCatalogOptions/#importfromelastictodatacatalogoptions","text":"","title":"ImportFromElasticToDataCatalogOptions"},{"location":"apis/public/ImportFromElasticToDataCatalogOptions/#properties","text":"Name Type Description Notes coordinates ElasticCoordinates [optional] elastic_id str [optional] parameters ImportFromElasticToDataCatalogOptionsParameters [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ImportFromElasticToDataCatalogOptionsParameters/","text":"ImportFromElasticToDataCatalogOptionsParameters \u00b6 Properties \u00b6 Name Type Description Notes import_s3_data bool [optional] index str page_size float [optional] query_options ImportFromElasticToDataCatalogOptionsParametersQueryOptions s3 ImportFromElasticToDataCatalogS3Coords [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ImportFromElasticToDataCatalogOptionsParameters"},{"location":"apis/public/ImportFromElasticToDataCatalogOptionsParameters/#importfromelastictodatacatalogoptionsparameters","text":"","title":"ImportFromElasticToDataCatalogOptionsParameters"},{"location":"apis/public/ImportFromElasticToDataCatalogOptionsParameters/#properties","text":"Name Type Description Notes import_s3_data bool [optional] index str page_size float [optional] query_options ImportFromElasticToDataCatalogOptionsParametersQueryOptions s3 ImportFromElasticToDataCatalogS3Coords [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ImportFromElasticToDataCatalogOptionsParametersQueryOptions/","text":"ImportFromElasticToDataCatalogOptionsParametersQueryOptions \u00b6 Properties \u00b6 Name Type Description Notes source list[str] [optional] query dict(str, object) [optional] size float [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ImportFromElasticToDataCatalogOptionsParametersQueryOptions"},{"location":"apis/public/ImportFromElasticToDataCatalogOptionsParametersQueryOptions/#importfromelastictodatacatalogoptionsparametersqueryoptions","text":"","title":"ImportFromElasticToDataCatalogOptionsParametersQueryOptions"},{"location":"apis/public/ImportFromElasticToDataCatalogOptionsParametersQueryOptions/#properties","text":"Name Type Description Notes source list[str] [optional] query dict(str, object) [optional] size float [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ImportFromElasticToDataCatalogS3Coords/","text":"ImportFromElasticToDataCatalogS3Coords \u00b6 Properties \u00b6 Name Type Description Notes access_key str bucket str host str key_prefix str location str port int secret_key str ssl bool verify_ssl bool [Back to Model list] [Back to API list] [Back to README]","title":"ImportFromElasticToDataCatalogS3Coords"},{"location":"apis/public/ImportFromElasticToDataCatalogS3Coords/#importfromelastictodatacatalogs3coords","text":"","title":"ImportFromElasticToDataCatalogS3Coords"},{"location":"apis/public/ImportFromElasticToDataCatalogS3Coords/#properties","text":"Name Type Description Notes access_key str bucket str host str key_prefix str location str port int secret_key str ssl bool verify_ssl bool [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ImportToDataCatalogCollectionOptions/","text":"ImportToDataCatalogCollectionOptions \u00b6 Properties \u00b6 Name Type Description Notes ccs ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs [optional] elastic ImportFromElasticToDataCatalogOptions [optional] url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ImportToDataCatalogCollectionOptions"},{"location":"apis/public/ImportToDataCatalogCollectionOptions/#importtodatacatalogcollectionoptions","text":"","title":"ImportToDataCatalogCollectionOptions"},{"location":"apis/public/ImportToDataCatalogCollectionOptions/#properties","text":"Name Type Description Notes ccs ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs [optional] elastic ImportFromElasticToDataCatalogOptions [optional] url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ImportToDataCatalogOptions/","text":"ImportToDataCatalogOptions \u00b6 Properties \u00b6 Name Type Description Notes coordinates MongoS3CoordinatesWithCollectionList [optional] url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ImportToDataCatalogOptions"},{"location":"apis/public/ImportToDataCatalogOptions/#importtodatacatalogoptions","text":"","title":"ImportToDataCatalogOptions"},{"location":"apis/public/ImportToDataCatalogOptions/#properties","text":"Name Type Description Notes coordinates MongoS3CoordinatesWithCollectionList [optional] url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/InferProjectDataCatalogCategorySchema/","text":"InferProjectDataCatalogCategorySchema \u00b6 Properties \u00b6 Name Type Description Notes sample_size int [optional] [Back to Model list] [Back to API list] [Back to README]","title":"InferProjectDataCatalogCategorySchema"},{"location":"apis/public/InferProjectDataCatalogCategorySchema/#inferprojectdatacatalogcategoryschema","text":"","title":"InferProjectDataCatalogCategorySchema"},{"location":"apis/public/InferProjectDataCatalogCategorySchema/#properties","text":"Name Type Description Notes sample_size int [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/InlineObject/","text":"InlineObject \u00b6 Properties \u00b6 Name Type Description Notes snapshot TakeSnapshotSettingsBackendAware [Back to Model list] [Back to API list] [Back to README]","title":"InlineObject"},{"location":"apis/public/InlineObject/#inlineobject","text":"","title":"InlineObject"},{"location":"apis/public/InlineObject/#properties","text":"Name Type Description Notes snapshot TakeSnapshotSettingsBackendAware [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/InlineObject1/","text":"InlineObject1 \u00b6 Properties \u00b6 Name Type Description Notes access_token str catalog_document_collections list[CatalogReference] ccs_document_collections list[CcsCollectionReference] data_catalogs list[CatalogReference] [optional] entity_mappings dict(str, str) [optional] models list[CpsModelReference] [Back to Model list] [Back to API list] [Back to README]","title":"InlineObject1"},{"location":"apis/public/InlineObject1/#inlineobject1","text":"","title":"InlineObject1"},{"location":"apis/public/InlineObject1/#properties","text":"Name Type Description Notes access_token str catalog_document_collections list[CatalogReference] ccs_document_collections list[CcsCollectionReference] data_catalogs list[CatalogReference] [optional] entity_mappings dict(str, str) [optional] models list[CpsModelReference] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/InlineObject2/","text":"InlineObject2 \u00b6 Properties \u00b6 Name Type Description Notes snapshot TakeSnapshotSettings [Back to Model list] [Back to API list] [Back to README]","title":"InlineObject2"},{"location":"apis/public/InlineObject2/#inlineobject2","text":"","title":"InlineObject2"},{"location":"apis/public/InlineObject2/#properties","text":"Name Type Description Notes snapshot TakeSnapshotSettings [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/InlineObject3/","text":"InlineObject3 \u00b6 Properties \u00b6 Name Type Description Notes info ProjectProjKeyBagsBagKeyTasksExportDatasetInfo [Back to Model list] [Back to API list] [Back to README]","title":"InlineObject3"},{"location":"apis/public/InlineObject3/#inlineobject3","text":"","title":"InlineObject3"},{"location":"apis/public/InlineObject3/#properties","text":"Name Type Description Notes info ProjectProjKeyBagsBagKeyTasksExportDatasetInfo [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/InlineResponse200/","text":"InlineResponse200 \u00b6 Properties \u00b6 Name Type Description Notes elastic_query_max_size float [optional] [Back to Model list] [Back to API list] [Back to README]","title":"InlineResponse200"},{"location":"apis/public/InlineResponse200/#inlineresponse200","text":"","title":"InlineResponse200"},{"location":"apis/public/InlineResponse200/#properties","text":"Name Type Description Notes elastic_query_max_size float [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/InlineResponse2001/","text":"InlineResponse2001 \u00b6 Properties \u00b6 Name Type Description Notes processing_models list[ProcessingModelDescription] [Back to Model list] [Back to API list] [Back to README]","title":"InlineResponse2001"},{"location":"apis/public/InlineResponse2001/#inlineresponse2001","text":"","title":"InlineResponse2001"},{"location":"apis/public/InlineResponse2001/#properties","text":"Name Type Description Notes processing_models list[ProcessingModelDescription] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/InlineResponse2002/","text":"InlineResponse2002 \u00b6 Properties \u00b6 Name Type Description Notes done bool result object task_id str task_status str [Back to Model list] [Back to API list] [Back to README]","title":"InlineResponse2002"},{"location":"apis/public/InlineResponse2002/#inlineresponse2002","text":"","title":"InlineResponse2002"},{"location":"apis/public/InlineResponse2002/#properties","text":"Name Type Description Notes done bool result object task_id str task_status str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/InlineResponse2003/","text":"InlineResponse2003 \u00b6 Properties \u00b6 Name Type Description Notes avail_cpu_slots int [optional] avail_mem_slots int [optional] avail_slots int [optional] name str [optional] num_nodes int [optional] number_kgs int [optional] running_kgs int [optional] workers_pool str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"InlineResponse2003"},{"location":"apis/public/InlineResponse2003/#inlineresponse2003","text":"","title":"InlineResponse2003"},{"location":"apis/public/InlineResponse2003/#properties","text":"Name Type Description Notes avail_cpu_slots int [optional] avail_mem_slots int [optional] avail_slots int [optional] name str [optional] num_nodes int [optional] number_kgs int [optional] running_kgs int [optional] workers_pool str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/KgSnapshot/","text":"KgSnapshot \u00b6 Properties \u00b6 Name Type Description Notes data_flow object [optional] is_current bool [optional] name str [optional] project_task_id str [optional] task_type str [optional] timestamp float [optional] [Back to Model list] [Back to API list] [Back to README]","title":"KgSnapshot"},{"location":"apis/public/KgSnapshot/#kgsnapshot","text":"","title":"KgSnapshot"},{"location":"apis/public/KgSnapshot/#properties","text":"Name Type Description Notes data_flow object [optional] is_current bool [optional] name str [optional] project_task_id str [optional] task_type str [optional] timestamp float [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/KgcDataInput/","text":"KgcDataInput \u00b6 Properties \u00b6 Name Type Description Notes config object data_flow list[dict(str, object)] [Back to Model list] [Back to API list] [Back to README]","title":"KgcDataInput"},{"location":"apis/public/KgcDataInput/#kgcdatainput","text":"","title":"KgcDataInput"},{"location":"apis/public/KgcDataInput/#properties","text":"Name Type Description Notes config object data_flow list[dict(str, object)] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/KibanaSavedQueriesResult/","text":"KibanaSavedQueriesResult \u00b6 Properties \u00b6 Name Type Description Notes description str [optional] fields list[str] [optional] query str [optional] title str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"KibanaSavedQueriesResult"},{"location":"apis/public/KibanaSavedQueriesResult/#kibanasavedqueriesresult","text":"","title":"KibanaSavedQueriesResult"},{"location":"apis/public/KibanaSavedQueriesResult/#properties","text":"Name Type Description Notes description str [optional] fields list[str] [optional] query str [optional] title str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/KnowledgeGraphAuthenticationCallback/","text":"KnowledgeGraphAuthenticationCallback \u00b6 Properties \u00b6 Name Type Description Notes callback_url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"KnowledgeGraphAuthenticationCallback"},{"location":"apis/public/KnowledgeGraphAuthenticationCallback/#knowledgegraphauthenticationcallback","text":"","title":"KnowledgeGraphAuthenticationCallback"},{"location":"apis/public/KnowledgeGraphAuthenticationCallback/#properties","text":"Name Type Description Notes callback_url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/KnowledgeGraphChartUpgradeOptions/","text":"KnowledgeGraphChartUpgradeOptions \u00b6 Properties \u00b6 Name Type Description Notes chart str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"KnowledgeGraphChartUpgradeOptions"},{"location":"apis/public/KnowledgeGraphChartUpgradeOptions/#knowledgegraphchartupgradeoptions","text":"","title":"KnowledgeGraphChartUpgradeOptions"},{"location":"apis/public/KnowledgeGraphChartUpgradeOptions/#properties","text":"Name Type Description Notes chart str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/KnowledgeGraphDeploymentRecreationOptions/","text":"KnowledgeGraphDeploymentRecreationOptions \u00b6 Properties \u00b6 Name Type Description Notes force bool [Back to Model list] [Back to API list] [Back to README]","title":"KnowledgeGraphDeploymentRecreationOptions"},{"location":"apis/public/KnowledgeGraphDeploymentRecreationOptions/#knowledgegraphdeploymentrecreationoptions","text":"","title":"KnowledgeGraphDeploymentRecreationOptions"},{"location":"apis/public/KnowledgeGraphDeploymentRecreationOptions/#properties","text":"Name Type Description Notes force bool [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/KnowledgeGraphSnapshotOptions/","text":"KnowledgeGraphSnapshotOptions \u00b6 Properties \u00b6 Name Type Description Notes name str [Back to Model list] [Back to API list] [Back to README]","title":"KnowledgeGraphSnapshotOptions"},{"location":"apis/public/KnowledgeGraphSnapshotOptions/#knowledgegraphsnapshotoptions","text":"","title":"KnowledgeGraphSnapshotOptions"},{"location":"apis/public/KnowledgeGraphSnapshotOptions/#properties","text":"Name Type Description Notes name str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/KnowledgeGraphSystemInformation/","text":"KnowledgeGraphSystemInformation \u00b6 Properties \u00b6 Name Type Description Notes backend dict(str, SystemKgsBackend) [optional] bag_domain str [optional] bag_key str [optional] bag_url str [optional] name str [optional] proj_key str [optional] project_name str [optional] public bool [optional] slug str [optional] timestamp float [optional] [Back to Model list] [Back to API list] [Back to README]","title":"KnowledgeGraphSystemInformation"},{"location":"apis/public/KnowledgeGraphSystemInformation/#knowledgegraphsysteminformation","text":"","title":"KnowledgeGraphSystemInformation"},{"location":"apis/public/KnowledgeGraphSystemInformation/#properties","text":"Name Type Description Notes backend dict(str, SystemKgsBackend) [optional] bag_domain str [optional] bag_key str [optional] bag_url str [optional] name str [optional] proj_key str [optional] project_name str [optional] public bool [optional] slug str [optional] timestamp float [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/KnowledgeGraphsApi/","text":"deepsearch.cps.apis.public.KnowledgeGraphsApi \u00b6 All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description assemble_project_knowledge_graph_data_flow POST /project/{proj_key}/bags/{bag_key}/tasks/assemble_dataflow backend_assemble_project_kg_data_flow POST /backend/project/{proj_key}/bags/{bag_key}/tasks/assemble_dataflow backend_create_project_kg POST /backend/project/{proj_key}/bags backend_create_project_kg_snapshot_from_data_flow_assembly POST /backend/project/{proj_key}/bags/{bag_key}/tasks/assemble_dataflow/latest/snapshots backend_get_project_kg_status GET /backend/project/{proj_key}/bags/{bag_key}/status backend_list_project_kgs GET /backend/project/{proj_key}/bags backend_update_project_kg_metadata PATCH /backend/project/{proj_key}/bags/{bag_key} create_project_knowledge_graph POST /project/{proj_key}/bags create_project_knowledge_graph_authentication_token GET /project/{proj_key}/bags/{bag_key}/auth_token create_project_knowledge_graph_backup POST /project/{proj_key}/bags/{bag_key}/tasks/backup create_project_knowledge_graph_delete_token POST /project/{proj_key}/bags/{bag_key}/delete_token create_project_knowledge_graph_snapshot POST /project/{proj_key}/bags/{bag_key}/snapshots create_project_knowledge_graph_snapshot_from_data_flow_assembly POST /project/{proj_key}/bags/{bag_key}/tasks/assemble_dataflow/latest/snapshots delete_project_knowledge_graph DELETE /project/{proj_key}/bags/{bag_key} delete_project_knowledge_graph_snapshot DELETE /project/{proj_key}/bags/{bag_key}/snapshots/{execution_id} get_project_knowledge_graph_authentication_callback GET /project/{proj_key}/bags/{bag_key}/auth_callback get_project_knowledge_graph_status GET /project/{proj_key}/bags/{bag_key}/status get_project_knowledge_graph_usage_stats GET /project/{proj_key}/bags/{bag_key}/usage_stats list_project_knowledge_graph_assemble_tasks GET /project/{proj_key}/bags/{bag_key}/tasks/assemble_dataflow list_project_knowledge_graph_load_tasks GET /project/{proj_key}/bags/{bag_key}/tasks/load_dataflow list_project_knowledge_graph_snapshots GET /project/{proj_key}/bags/{bag_key}/snapshots list_project_knowledge_graphs GET /project/{proj_key}/bags list_public_knowledge_graphs GET /project/public/bags load_project_knowledge_graph_data_flow POST /project/{proj_key}/bags/{bag_key}/tasks/load_dataflow load_project_knowledge_graph_snapshot POST /project/{proj_key}/bags/{bag_key}/snapshots/{execution_id}/actions/load recreate_project_knowledge_graph_deployment POST /project/{proj_key}/bags/{bag_key}/tasks/recreate_deployment restore_project_knowledge_graph_backup POST /project/{proj_key}/bags/{bag_key}/tasks/restore resume_project_knowledge_graph POST /project/{proj_key}/bags/{bag_key}/tasks/resume suspend_project_knowledge_graph POST /project/{proj_key}/bags/{bag_key}/tasks/suspend update_project_knowledge_graph_metadata PATCH /project/{proj_key}/bags/{bag_key} upgrade_project_knowledge_graph_deployment POST /project/{proj_key}/bags/{bag_key}/tasks/upgrade assemble_project_knowledge_graph_data_flow \u00b6 ProjectTask assemble_project_knowledge_graph_data_flow(proj_key, bag_key, options) Assemble a data flow on a Knowledge Graph Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | options = deepsearch . cps . apis . public . AssembleDataFlowIntoKnowledgeGraphOptions1 () # AssembleDataFlowIntoKnowledgeGraphOptions1 | try : api_response = api_instance . assemble_project_knowledge_graph_data_flow ( proj_key , bag_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->assemble_project_knowledge_graph_data_flow: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str options AssembleDataFlowIntoKnowledgeGraphOptions1 Return type \u00b6 ProjectTask Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Task started. - 400 Invalid dataflow. - 404 Data flow template doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] backend_assemble_project_kg_data_flow \u00b6 ProjectTask backend_assemble_project_kg_data_flow(proj_key, bag_key, options) Assemble a data flow on a Knowledge Graph, backend-aware Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | options = deepsearch . cps . apis . public . AssembleDataFlowIntoKnowledgeGraphOptions () # AssembleDataFlowIntoKnowledgeGraphOptions | try : api_response = api_instance . backend_assemble_project_kg_data_flow ( proj_key , bag_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->backend_assemble_project_kg_data_flow: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str options AssembleDataFlowIntoKnowledgeGraphOptions Return type \u00b6 ProjectTask Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Task started. - 400 Invalid dataflow. - 404 Data flow template doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] backend_create_project_kg \u00b6 BagBackendAware backend_create_project_kg(proj_key, data) Create new BAG, backend-aware Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | data = deepsearch . cps . apis . public . CreateKnowledgeGraphOptions () # CreateKnowledgeGraphOptions | try : api_response = api_instance . backend_create_project_kg ( proj_key , data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->backend_create_project_kg: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str data CreateKnowledgeGraphOptions Return type \u00b6 BagBackendAware Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 OK - 400 Invalid parameters. - 403 Create knowledge graphs is disabled. - 409 Cannot create BAG because one already exists with that name. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] backend_create_project_kg_snapshot_from_data_flow_assembly \u00b6 ProjectTask backend_create_project_kg_snapshot_from_data_flow_assembly(proj_key, bag_key, body) Create a snapshot of a Knowledge Graph from the last data flow assembly task, backend-aware Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | body = deepsearch . cps . apis . public . InlineObject () # InlineObject | try : api_response = api_instance . backend_create_project_kg_snapshot_from_data_flow_assembly ( proj_key , bag_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->backend_create_project_kg_snapshot_from_data_flow_assembly: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str body InlineObject Return type \u00b6 ProjectTask Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Task started. - 404 KG/BAG/Data Flow Assembly not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] backend_get_project_kg_status \u00b6 BagStatusBackendAware backend_get_project_kg_status(proj_key, bag_key, details=details) Get the status of a Knowledge Graph, backend-aware Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | details = False # bool | (optional) (default to False) try : api_response = api_instance . backend_get_project_kg_status ( proj_key , bag_key , details = details ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->backend_get_project_kg_status: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str details bool [optional] [default to False] Return type \u00b6 BagStatusBackendAware Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Knowledge Graph status. - 404 BAG not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] backend_list_project_kgs \u00b6 list[BagBackendAware] backend_list_project_kgs(proj_key, term=term) List all bags in the project, backend-aware Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | term = 'term_example' # str | (optional) try : api_response = api_instance . backend_list_project_kgs ( proj_key , term = term ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->backend_list_project_kgs: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str term str [optional] Return type \u00b6 list[BagBackendAware] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] backend_update_project_kg_metadata \u00b6 BagBackendAware backend_update_project_kg_metadata(proj_key, bag_key, data) Update the metadata of a Knowledge graph, backend-aware Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | data = deepsearch . cps . apis . public . PatchKnowledgeGraphOptions () # PatchKnowledgeGraphOptions | try : api_response = api_instance . backend_update_project_kg_metadata ( proj_key , bag_key , data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->backend_update_project_kg_metadata: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str data PatchKnowledgeGraphOptions Return type \u00b6 BagBackendAware Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Knowledge graph metadata updated. - 404 Knowledge graph not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_project_knowledge_graph \u00b6 Bag create_project_knowledge_graph(proj_key, data) Create new BAG Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | data = deepsearch . cps . apis . public . CreateKnowledgeGraphOptions1 () # CreateKnowledgeGraphOptions1 | try : api_response = api_instance . create_project_knowledge_graph ( proj_key , data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->create_project_knowledge_graph: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str data CreateKnowledgeGraphOptions1 Return type \u00b6 Bag Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 OK - 400 Invalid parameters. - 403 Create knowledge graphs is disabled. - 409 Cannot create BAG because one already exists with that name. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_project_knowledge_graph_authentication_token \u00b6 TokenResponse create_project_knowledge_graph_authentication_token(proj_key, bag_key) Get a token used to authenticate in the Erlenmeyer / KG APIs of a BAG. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | try : api_response = api_instance . create_project_knowledge_graph_authentication_token ( proj_key , bag_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->create_project_knowledge_graph_authentication_token: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str Return type \u00b6 TokenResponse Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 BAG auth token. - 404 BAG not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_project_knowledge_graph_backup \u00b6 Task create_project_knowledge_graph_backup(proj_key, bag_key, options) Back up a Knowledge Graph Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | options = deepsearch . cps . apis . public . BackupKnowledgeGraphOptions () # BackupKnowledgeGraphOptions | try : api_response = api_instance . create_project_knowledge_graph_backup ( proj_key , bag_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->create_project_knowledge_graph_backup: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str options BackupKnowledgeGraphOptions Return type \u00b6 Task Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 OK - 400 Invalid parameters. - 404 KG/BAG not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_project_knowledge_graph_delete_token \u00b6 TokenResponse create_project_knowledge_graph_delete_token(proj_key, bag_key) Get a token used to confirm the deletion of a BAG. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | try : api_response = api_instance . create_project_knowledge_graph_delete_token ( proj_key , bag_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->create_project_knowledge_graph_delete_token: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str Return type \u00b6 TokenResponse Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 BAG deletion token. - 404 BAG not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_project_knowledge_graph_snapshot \u00b6 ProjectTask create_project_knowledge_graph_snapshot(proj_key, bag_key, body) Create a snapshot of a Knowledge Graph, with its current state. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | body = deepsearch . cps . apis . public . KnowledgeGraphSnapshotOptions () # KnowledgeGraphSnapshotOptions | try : api_response = api_instance . create_project_knowledge_graph_snapshot ( proj_key , bag_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->create_project_knowledge_graph_snapshot: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str body KnowledgeGraphSnapshotOptions Return type \u00b6 ProjectTask Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Task started. - 403 Feature is disabled on this instance. - 404 KG/BAG not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_project_knowledge_graph_snapshot_from_data_flow_assembly \u00b6 ProjectTask create_project_knowledge_graph_snapshot_from_data_flow_assembly(proj_key, bag_key, body) Create a snapshot of a Knowledge Graph from the last data flow assembly task. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | body = deepsearch . cps . apis . public . InlineObject2 () # InlineObject2 | try : api_response = api_instance . create_project_knowledge_graph_snapshot_from_data_flow_assembly ( proj_key , bag_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->create_project_knowledge_graph_snapshot_from_data_flow_assembly: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str body InlineObject2 Return type \u00b6 ProjectTask Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Task started. - 404 KG/BAG/Data Flow Assembly not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_project_knowledge_graph \u00b6 delete_project_knowledge_graph(proj_key, bag_key, confirmation_token) Delete a BAG Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | confirmation_token = 'confirmation_token_example' # str | try : api_instance . delete_project_knowledge_graph ( proj_key , bag_key , confirmation_token ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->delete_project_knowledge_graph: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str confirmation_token str Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 204 BAG deleted. - 404 BAG not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_project_knowledge_graph_snapshot \u00b6 delete_project_knowledge_graph_snapshot(proj_key, bag_key, execution_id) Delete a snapshot resulting from an assembled data flow. The execution log itself is not deleted. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | execution_id = 'execution_id_example' # str | try : api_instance . delete_project_knowledge_graph_snapshot ( proj_key , bag_key , execution_id ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->delete_project_knowledge_graph_snapshot: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str execution_id str Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 204 OK - 400 Invalid parameters. - 404 KG/BAG/Snapshot not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_project_knowledge_graph_authentication_callback \u00b6 KnowledgeGraphAuthenticationCallback get_project_knowledge_graph_authentication_callback(proj_key, bag_key, bag_token) Final step of redirection for authentication on a BAG. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | bag_token = 'bag_token_example' # str | try : api_response = api_instance . get_project_knowledge_graph_authentication_callback ( proj_key , bag_key , bag_token ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->get_project_knowledge_graph_authentication_callback: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str bag_token str Return type \u00b6 KnowledgeGraphAuthenticationCallback Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 BAG auth redirect URL. - 401 Unauthorized. - 404 BAG not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_project_knowledge_graph_status \u00b6 BagStatus get_project_knowledge_graph_status(proj_key, bag_key, details=details) Get the status of a Knowledge Graph Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | details = False # bool | (optional) (default to False) try : api_response = api_instance . get_project_knowledge_graph_status ( proj_key , bag_key , details = details ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->get_project_knowledge_graph_status: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str details bool [optional] [default to False] Return type \u00b6 BagStatus Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Knowledge Graph status. - 404 BAG not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_project_knowledge_graph_usage_stats \u00b6 UsageStats get_project_knowledge_graph_usage_stats(proj_key, bag_key) Get the usage stats of a Knowledge Graph Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | try : api_response = api_instance . get_project_knowledge_graph_usage_stats ( proj_key , bag_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->get_project_knowledge_graph_usage_stats: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str Return type \u00b6 UsageStats Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Knowledge Graph usage stats. - 404 BAG not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_project_knowledge_graph_assemble_tasks \u00b6 list[DataFlowAssembleIntoKnowledgeGraphTask] list_project_knowledge_graph_assemble_tasks(proj_key, bag_key, limit=limit, skip=skip) List assemble tasks for a Knowledge Graph. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | limit = 50 # int | (optional) (default to 50) skip = 0 # int | (optional) (default to 0) try : api_response = api_instance . list_project_knowledge_graph_assemble_tasks ( proj_key , bag_key , limit = limit , skip = skip ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->list_project_knowledge_graph_assemble_tasks: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str limit int [optional] [default to 50] skip int [optional] [default to 0] Return type \u00b6 list[DataFlowAssembleIntoKnowledgeGraphTask] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of tasks. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_project_knowledge_graph_load_tasks \u00b6 list[DataFlowLoadIntoKnowledgeGraphTask] list_project_knowledge_graph_load_tasks(proj_key, bag_key, limit=limit, skip=skip) List load tasks for a Knowledge Graph Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | limit = 50 # int | (optional) (default to 50) skip = 0 # int | (optional) (default to 0) try : api_response = api_instance . list_project_knowledge_graph_load_tasks ( proj_key , bag_key , limit = limit , skip = skip ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->list_project_knowledge_graph_load_tasks: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str limit int [optional] [default to 50] skip int [optional] [default to 0] Return type \u00b6 list[DataFlowLoadIntoKnowledgeGraphTask] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of tasks. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_project_knowledge_graph_snapshots \u00b6 list[KgSnapshot] list_project_knowledge_graph_snapshots(proj_key, bag_key) List snapshots for a knowledge graph from assembled data flows. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | try : api_response = api_instance . list_project_knowledge_graph_snapshots ( proj_key , bag_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->list_project_knowledge_graph_snapshots: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str Return type \u00b6 list[KgSnapshot] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Snapshots - 404 KG/BAG not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_project_knowledge_graphs \u00b6 list[Bag] list_project_knowledge_graphs(proj_key, term=term) List all bags in the project Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | term = 'term_example' # str | (optional) try : api_response = api_instance . list_project_knowledge_graphs ( proj_key , term = term ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->list_project_knowledge_graphs: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str term str [optional] Return type \u00b6 list[Bag] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_public_knowledge_graphs \u00b6 list[Bag] list_public_knowledge_graphs(term=term) List all public BAGs Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) term = 'term_example' # str | (optional) try : api_response = api_instance . list_public_knowledge_graphs ( term = term ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->list_public_knowledge_graphs: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes term str [optional] Return type \u00b6 list[Bag] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] load_project_knowledge_graph_data_flow \u00b6 ProjectTask load_project_knowledge_graph_data_flow(proj_key, bag_key, options) Load a data flow onto a Knowledge Graph. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | options = deepsearch . cps . apis . public . LoadDataFlowIntoKnowledgeGraphOptions () # LoadDataFlowIntoKnowledgeGraphOptions | try : api_response = api_instance . load_project_knowledge_graph_data_flow ( proj_key , bag_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->load_project_knowledge_graph_data_flow: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str options LoadDataFlowIntoKnowledgeGraphOptions Return type \u00b6 ProjectTask Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Task started. - 400 Invalid dataflow. - 404 Data flow template doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] load_project_knowledge_graph_snapshot \u00b6 Task load_project_knowledge_graph_snapshot(proj_key, bag_key, execution_id) Load a snapshot resulting from an assembled data flow Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | execution_id = 'execution_id_example' # str | try : api_response = api_instance . load_project_knowledge_graph_snapshot ( proj_key , bag_key , execution_id ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->load_project_knowledge_graph_snapshot: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str execution_id str Return type \u00b6 Task Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Snapshot is being loaded. - 400 Invalid parameters. - 403 Feature is disabled on this instance. - 404 KG/BAG/Snapshot not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] recreate_project_knowledge_graph_deployment \u00b6 recreate_project_knowledge_graph_deployment(proj_key, bag_key, body) (Re)create the deployment for a Knowledge Graph Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | body = deepsearch . cps . apis . public . KnowledgeGraphDeploymentRecreationOptions () # KnowledgeGraphDeploymentRecreationOptions | try : api_instance . recreate_project_knowledge_graph_deployment ( proj_key , bag_key , body ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->recreate_project_knowledge_graph_deployment: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str body KnowledgeGraphDeploymentRecreationOptions Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Deployment upgrading. - 404 Knowledge Graph doesn't exist. - 409 Refused to recreate the deployment since it already exists and the `force` flag is not `true`. - [Back to top] [Back to API list] [Back to Model list] [Back to README] restore_project_knowledge_graph_backup \u00b6 Task restore_project_knowledge_graph_backup(proj_key, bag_key, options) Restore a back up of a Knowledge Graph Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | options = deepsearch . cps . apis . public . RestoreKnowledgeGraphBackupOptions () # RestoreKnowledgeGraphBackupOptions | try : api_response = api_instance . restore_project_knowledge_graph_backup ( proj_key , bag_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->restore_project_knowledge_graph_backup: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str options RestoreKnowledgeGraphBackupOptions Return type \u00b6 Task Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 OK - 400 Invalid parameters. - 404 KG/BAG not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] resume_project_knowledge_graph \u00b6 ProjectTask resume_project_knowledge_graph(proj_key, bag_key, body) Resume a Knowledge Graph Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | body = deepsearch . cps . apis . public . ResumeKnowledgeGraphOptions () # ResumeKnowledgeGraphOptions | try : api_response = api_instance . resume_project_knowledge_graph ( proj_key , bag_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->resume_project_knowledge_graph: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str body ResumeKnowledgeGraphOptions Return type \u00b6 ProjectTask Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Task started. - 403 Feature is disabled on this instance. - 404 Knowledge Graph doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] suspend_project_knowledge_graph \u00b6 ProjectTask suspend_project_knowledge_graph(proj_key, bag_key, options) Suspend a Knowledge Graph Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | options = deepsearch . cps . apis . public . SuspendKnowledgeGraphOptions () # SuspendKnowledgeGraphOptions | try : api_response = api_instance . suspend_project_knowledge_graph ( proj_key , bag_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->suspend_project_knowledge_graph: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str options SuspendKnowledgeGraphOptions Return type \u00b6 ProjectTask Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Task started. - 404 Knowledge Graph doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_project_knowledge_graph_metadata \u00b6 Bag update_project_knowledge_graph_metadata(proj_key, bag_key, data) Update the metadata of a Knowledge graph Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | data = deepsearch . cps . apis . public . PatchKnowledgeGraphOptions1 () # PatchKnowledgeGraphOptions1 | try : api_response = api_instance . update_project_knowledge_graph_metadata ( proj_key , bag_key , data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->update_project_knowledge_graph_metadata: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str data PatchKnowledgeGraphOptions1 Return type \u00b6 Bag Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Knowledge graph metadata updated. - 404 Knowledge graph not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] upgrade_project_knowledge_graph_deployment \u00b6 upgrade_project_knowledge_graph_deployment(proj_key, bag_key, body) Upgrade the deployment chart of a Knowledge Graph Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | body = deepsearch . cps . apis . public . KnowledgeGraphChartUpgradeOptions () # KnowledgeGraphChartUpgradeOptions | try : api_instance . upgrade_project_knowledge_graph_deployment ( proj_key , bag_key , body ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->upgrade_project_knowledge_graph_deployment: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str bag_key str body KnowledgeGraphChartUpgradeOptions Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Chart upgrading. - 404 Knowledge Graph doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"Public API"},{"location":"apis/public/KnowledgeGraphsApi/#deepsearchcpsapispublicknowledgegraphsapi","text":"All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description assemble_project_knowledge_graph_data_flow POST /project/{proj_key}/bags/{bag_key}/tasks/assemble_dataflow backend_assemble_project_kg_data_flow POST /backend/project/{proj_key}/bags/{bag_key}/tasks/assemble_dataflow backend_create_project_kg POST /backend/project/{proj_key}/bags backend_create_project_kg_snapshot_from_data_flow_assembly POST /backend/project/{proj_key}/bags/{bag_key}/tasks/assemble_dataflow/latest/snapshots backend_get_project_kg_status GET /backend/project/{proj_key}/bags/{bag_key}/status backend_list_project_kgs GET /backend/project/{proj_key}/bags backend_update_project_kg_metadata PATCH /backend/project/{proj_key}/bags/{bag_key} create_project_knowledge_graph POST /project/{proj_key}/bags create_project_knowledge_graph_authentication_token GET /project/{proj_key}/bags/{bag_key}/auth_token create_project_knowledge_graph_backup POST /project/{proj_key}/bags/{bag_key}/tasks/backup create_project_knowledge_graph_delete_token POST /project/{proj_key}/bags/{bag_key}/delete_token create_project_knowledge_graph_snapshot POST /project/{proj_key}/bags/{bag_key}/snapshots create_project_knowledge_graph_snapshot_from_data_flow_assembly POST /project/{proj_key}/bags/{bag_key}/tasks/assemble_dataflow/latest/snapshots delete_project_knowledge_graph DELETE /project/{proj_key}/bags/{bag_key} delete_project_knowledge_graph_snapshot DELETE /project/{proj_key}/bags/{bag_key}/snapshots/{execution_id} get_project_knowledge_graph_authentication_callback GET /project/{proj_key}/bags/{bag_key}/auth_callback get_project_knowledge_graph_status GET /project/{proj_key}/bags/{bag_key}/status get_project_knowledge_graph_usage_stats GET /project/{proj_key}/bags/{bag_key}/usage_stats list_project_knowledge_graph_assemble_tasks GET /project/{proj_key}/bags/{bag_key}/tasks/assemble_dataflow list_project_knowledge_graph_load_tasks GET /project/{proj_key}/bags/{bag_key}/tasks/load_dataflow list_project_knowledge_graph_snapshots GET /project/{proj_key}/bags/{bag_key}/snapshots list_project_knowledge_graphs GET /project/{proj_key}/bags list_public_knowledge_graphs GET /project/public/bags load_project_knowledge_graph_data_flow POST /project/{proj_key}/bags/{bag_key}/tasks/load_dataflow load_project_knowledge_graph_snapshot POST /project/{proj_key}/bags/{bag_key}/snapshots/{execution_id}/actions/load recreate_project_knowledge_graph_deployment POST /project/{proj_key}/bags/{bag_key}/tasks/recreate_deployment restore_project_knowledge_graph_backup POST /project/{proj_key}/bags/{bag_key}/tasks/restore resume_project_knowledge_graph POST /project/{proj_key}/bags/{bag_key}/tasks/resume suspend_project_knowledge_graph POST /project/{proj_key}/bags/{bag_key}/tasks/suspend update_project_knowledge_graph_metadata PATCH /project/{proj_key}/bags/{bag_key} upgrade_project_knowledge_graph_deployment POST /project/{proj_key}/bags/{bag_key}/tasks/upgrade","title":"deepsearch.cps.apis.public.KnowledgeGraphsApi"},{"location":"apis/public/KnowledgeGraphsApi/#assemble_project_knowledge_graph_data_flow","text":"ProjectTask assemble_project_knowledge_graph_data_flow(proj_key, bag_key, options) Assemble a data flow on a Knowledge Graph","title":"assemble_project_knowledge_graph_data_flow"},{"location":"apis/public/KnowledgeGraphsApi/#example","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | options = deepsearch . cps . apis . public . AssembleDataFlowIntoKnowledgeGraphOptions1 () # AssembleDataFlowIntoKnowledgeGraphOptions1 | try : api_response = api_instance . assemble_project_knowledge_graph_data_flow ( proj_key , bag_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->assemble_project_knowledge_graph_data_flow: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters","text":"Name Type Description Notes proj_key str bag_key str options AssembleDataFlowIntoKnowledgeGraphOptions1","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type","text":"ProjectTask","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details","text":"Status code Description Response headers 200 Task started. - 400 Invalid dataflow. - 404 Data flow template doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#backend_assemble_project_kg_data_flow","text":"ProjectTask backend_assemble_project_kg_data_flow(proj_key, bag_key, options) Assemble a data flow on a Knowledge Graph, backend-aware","title":"backend_assemble_project_kg_data_flow"},{"location":"apis/public/KnowledgeGraphsApi/#example_1","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | options = deepsearch . cps . apis . public . AssembleDataFlowIntoKnowledgeGraphOptions () # AssembleDataFlowIntoKnowledgeGraphOptions | try : api_response = api_instance . backend_assemble_project_kg_data_flow ( proj_key , bag_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->backend_assemble_project_kg_data_flow: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_1","text":"Name Type Description Notes proj_key str bag_key str options AssembleDataFlowIntoKnowledgeGraphOptions","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_1","text":"ProjectTask","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_1","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_1","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_1","text":"Status code Description Response headers 200 Task started. - 400 Invalid dataflow. - 404 Data flow template doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#backend_create_project_kg","text":"BagBackendAware backend_create_project_kg(proj_key, data) Create new BAG, backend-aware","title":"backend_create_project_kg"},{"location":"apis/public/KnowledgeGraphsApi/#example_2","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | data = deepsearch . cps . apis . public . CreateKnowledgeGraphOptions () # CreateKnowledgeGraphOptions | try : api_response = api_instance . backend_create_project_kg ( proj_key , data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->backend_create_project_kg: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_2","text":"Name Type Description Notes proj_key str data CreateKnowledgeGraphOptions","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_2","text":"BagBackendAware","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_2","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_2","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_2","text":"Status code Description Response headers 201 OK - 400 Invalid parameters. - 403 Create knowledge graphs is disabled. - 409 Cannot create BAG because one already exists with that name. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#backend_create_project_kg_snapshot_from_data_flow_assembly","text":"ProjectTask backend_create_project_kg_snapshot_from_data_flow_assembly(proj_key, bag_key, body) Create a snapshot of a Knowledge Graph from the last data flow assembly task, backend-aware","title":"backend_create_project_kg_snapshot_from_data_flow_assembly"},{"location":"apis/public/KnowledgeGraphsApi/#example_3","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | body = deepsearch . cps . apis . public . InlineObject () # InlineObject | try : api_response = api_instance . backend_create_project_kg_snapshot_from_data_flow_assembly ( proj_key , bag_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->backend_create_project_kg_snapshot_from_data_flow_assembly: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_3","text":"Name Type Description Notes proj_key str bag_key str body InlineObject","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_3","text":"ProjectTask","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_3","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_3","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_3","text":"Status code Description Response headers 200 Task started. - 404 KG/BAG/Data Flow Assembly not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#backend_get_project_kg_status","text":"BagStatusBackendAware backend_get_project_kg_status(proj_key, bag_key, details=details) Get the status of a Knowledge Graph, backend-aware","title":"backend_get_project_kg_status"},{"location":"apis/public/KnowledgeGraphsApi/#example_4","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | details = False # bool | (optional) (default to False) try : api_response = api_instance . backend_get_project_kg_status ( proj_key , bag_key , details = details ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->backend_get_project_kg_status: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_4","text":"Name Type Description Notes proj_key str bag_key str details bool [optional] [default to False]","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_4","text":"BagStatusBackendAware","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_4","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_4","text":"Status code Description Response headers 200 Knowledge Graph status. - 404 BAG not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#backend_list_project_kgs","text":"list[BagBackendAware] backend_list_project_kgs(proj_key, term=term) List all bags in the project, backend-aware","title":"backend_list_project_kgs"},{"location":"apis/public/KnowledgeGraphsApi/#example_5","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | term = 'term_example' # str | (optional) try : api_response = api_instance . backend_list_project_kgs ( proj_key , term = term ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->backend_list_project_kgs: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_5","text":"Name Type Description Notes proj_key str term str [optional]","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_5","text":"list[BagBackendAware]","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_5","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_5","text":"Status code Description Response headers 200 OK - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#backend_update_project_kg_metadata","text":"BagBackendAware backend_update_project_kg_metadata(proj_key, bag_key, data) Update the metadata of a Knowledge graph, backend-aware","title":"backend_update_project_kg_metadata"},{"location":"apis/public/KnowledgeGraphsApi/#example_6","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | data = deepsearch . cps . apis . public . PatchKnowledgeGraphOptions () # PatchKnowledgeGraphOptions | try : api_response = api_instance . backend_update_project_kg_metadata ( proj_key , bag_key , data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->backend_update_project_kg_metadata: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_6","text":"Name Type Description Notes proj_key str bag_key str data PatchKnowledgeGraphOptions","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_6","text":"BagBackendAware","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_6","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_6","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_6","text":"Status code Description Response headers 200 Knowledge graph metadata updated. - 404 Knowledge graph not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#create_project_knowledge_graph","text":"Bag create_project_knowledge_graph(proj_key, data) Create new BAG","title":"create_project_knowledge_graph"},{"location":"apis/public/KnowledgeGraphsApi/#example_7","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | data = deepsearch . cps . apis . public . CreateKnowledgeGraphOptions1 () # CreateKnowledgeGraphOptions1 | try : api_response = api_instance . create_project_knowledge_graph ( proj_key , data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->create_project_knowledge_graph: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_7","text":"Name Type Description Notes proj_key str data CreateKnowledgeGraphOptions1","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_7","text":"Bag","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_7","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_7","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_7","text":"Status code Description Response headers 201 OK - 400 Invalid parameters. - 403 Create knowledge graphs is disabled. - 409 Cannot create BAG because one already exists with that name. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#create_project_knowledge_graph_authentication_token","text":"TokenResponse create_project_knowledge_graph_authentication_token(proj_key, bag_key) Get a token used to authenticate in the Erlenmeyer / KG APIs of a BAG.","title":"create_project_knowledge_graph_authentication_token"},{"location":"apis/public/KnowledgeGraphsApi/#example_8","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | try : api_response = api_instance . create_project_knowledge_graph_authentication_token ( proj_key , bag_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->create_project_knowledge_graph_authentication_token: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_8","text":"Name Type Description Notes proj_key str bag_key str","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_8","text":"TokenResponse","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_8","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_8","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_8","text":"Status code Description Response headers 200 BAG auth token. - 404 BAG not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#create_project_knowledge_graph_backup","text":"Task create_project_knowledge_graph_backup(proj_key, bag_key, options) Back up a Knowledge Graph","title":"create_project_knowledge_graph_backup"},{"location":"apis/public/KnowledgeGraphsApi/#example_9","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | options = deepsearch . cps . apis . public . BackupKnowledgeGraphOptions () # BackupKnowledgeGraphOptions | try : api_response = api_instance . create_project_knowledge_graph_backup ( proj_key , bag_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->create_project_knowledge_graph_backup: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_9","text":"Name Type Description Notes proj_key str bag_key str options BackupKnowledgeGraphOptions","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_9","text":"Task","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_9","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_9","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_9","text":"Status code Description Response headers 201 OK - 400 Invalid parameters. - 404 KG/BAG not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#create_project_knowledge_graph_delete_token","text":"TokenResponse create_project_knowledge_graph_delete_token(proj_key, bag_key) Get a token used to confirm the deletion of a BAG.","title":"create_project_knowledge_graph_delete_token"},{"location":"apis/public/KnowledgeGraphsApi/#example_10","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | try : api_response = api_instance . create_project_knowledge_graph_delete_token ( proj_key , bag_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->create_project_knowledge_graph_delete_token: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_10","text":"Name Type Description Notes proj_key str bag_key str","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_10","text":"TokenResponse","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_10","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_10","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_10","text":"Status code Description Response headers 200 BAG deletion token. - 404 BAG not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#create_project_knowledge_graph_snapshot","text":"ProjectTask create_project_knowledge_graph_snapshot(proj_key, bag_key, body) Create a snapshot of a Knowledge Graph, with its current state.","title":"create_project_knowledge_graph_snapshot"},{"location":"apis/public/KnowledgeGraphsApi/#example_11","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | body = deepsearch . cps . apis . public . KnowledgeGraphSnapshotOptions () # KnowledgeGraphSnapshotOptions | try : api_response = api_instance . create_project_knowledge_graph_snapshot ( proj_key , bag_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->create_project_knowledge_graph_snapshot: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_11","text":"Name Type Description Notes proj_key str bag_key str body KnowledgeGraphSnapshotOptions","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_11","text":"ProjectTask","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_11","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_11","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_11","text":"Status code Description Response headers 200 Task started. - 403 Feature is disabled on this instance. - 404 KG/BAG not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#create_project_knowledge_graph_snapshot_from_data_flow_assembly","text":"ProjectTask create_project_knowledge_graph_snapshot_from_data_flow_assembly(proj_key, bag_key, body) Create a snapshot of a Knowledge Graph from the last data flow assembly task.","title":"create_project_knowledge_graph_snapshot_from_data_flow_assembly"},{"location":"apis/public/KnowledgeGraphsApi/#example_12","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | body = deepsearch . cps . apis . public . InlineObject2 () # InlineObject2 | try : api_response = api_instance . create_project_knowledge_graph_snapshot_from_data_flow_assembly ( proj_key , bag_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->create_project_knowledge_graph_snapshot_from_data_flow_assembly: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_12","text":"Name Type Description Notes proj_key str bag_key str body InlineObject2","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_12","text":"ProjectTask","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_12","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_12","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_12","text":"Status code Description Response headers 200 Task started. - 404 KG/BAG/Data Flow Assembly not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#delete_project_knowledge_graph","text":"delete_project_knowledge_graph(proj_key, bag_key, confirmation_token) Delete a BAG","title":"delete_project_knowledge_graph"},{"location":"apis/public/KnowledgeGraphsApi/#example_13","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | confirmation_token = 'confirmation_token_example' # str | try : api_instance . delete_project_knowledge_graph ( proj_key , bag_key , confirmation_token ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->delete_project_knowledge_graph: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_13","text":"Name Type Description Notes proj_key str bag_key str confirmation_token str","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_13","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_13","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_13","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_13","text":"Status code Description Response headers 204 BAG deleted. - 404 BAG not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#delete_project_knowledge_graph_snapshot","text":"delete_project_knowledge_graph_snapshot(proj_key, bag_key, execution_id) Delete a snapshot resulting from an assembled data flow. The execution log itself is not deleted.","title":"delete_project_knowledge_graph_snapshot"},{"location":"apis/public/KnowledgeGraphsApi/#example_14","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | execution_id = 'execution_id_example' # str | try : api_instance . delete_project_knowledge_graph_snapshot ( proj_key , bag_key , execution_id ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->delete_project_knowledge_graph_snapshot: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_14","text":"Name Type Description Notes proj_key str bag_key str execution_id str","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_14","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_14","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_14","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_14","text":"Status code Description Response headers 204 OK - 400 Invalid parameters. - 404 KG/BAG/Snapshot not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#get_project_knowledge_graph_authentication_callback","text":"KnowledgeGraphAuthenticationCallback get_project_knowledge_graph_authentication_callback(proj_key, bag_key, bag_token) Final step of redirection for authentication on a BAG.","title":"get_project_knowledge_graph_authentication_callback"},{"location":"apis/public/KnowledgeGraphsApi/#example_15","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | bag_token = 'bag_token_example' # str | try : api_response = api_instance . get_project_knowledge_graph_authentication_callback ( proj_key , bag_key , bag_token ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->get_project_knowledge_graph_authentication_callback: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_15","text":"Name Type Description Notes proj_key str bag_key str bag_token str","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_15","text":"KnowledgeGraphAuthenticationCallback","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_15","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_15","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_15","text":"Status code Description Response headers 200 BAG auth redirect URL. - 401 Unauthorized. - 404 BAG not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#get_project_knowledge_graph_status","text":"BagStatus get_project_knowledge_graph_status(proj_key, bag_key, details=details) Get the status of a Knowledge Graph","title":"get_project_knowledge_graph_status"},{"location":"apis/public/KnowledgeGraphsApi/#example_16","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | details = False # bool | (optional) (default to False) try : api_response = api_instance . get_project_knowledge_graph_status ( proj_key , bag_key , details = details ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->get_project_knowledge_graph_status: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_16","text":"Name Type Description Notes proj_key str bag_key str details bool [optional] [default to False]","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_16","text":"BagStatus","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_16","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_16","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_16","text":"Status code Description Response headers 200 Knowledge Graph status. - 404 BAG not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#get_project_knowledge_graph_usage_stats","text":"UsageStats get_project_knowledge_graph_usage_stats(proj_key, bag_key) Get the usage stats of a Knowledge Graph","title":"get_project_knowledge_graph_usage_stats"},{"location":"apis/public/KnowledgeGraphsApi/#example_17","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | try : api_response = api_instance . get_project_knowledge_graph_usage_stats ( proj_key , bag_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->get_project_knowledge_graph_usage_stats: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_17","text":"Name Type Description Notes proj_key str bag_key str","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_17","text":"UsageStats","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_17","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_17","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_17","text":"Status code Description Response headers 200 Knowledge Graph usage stats. - 404 BAG not found. - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#list_project_knowledge_graph_assemble_tasks","text":"list[DataFlowAssembleIntoKnowledgeGraphTask] list_project_knowledge_graph_assemble_tasks(proj_key, bag_key, limit=limit, skip=skip) List assemble tasks for a Knowledge Graph.","title":"list_project_knowledge_graph_assemble_tasks"},{"location":"apis/public/KnowledgeGraphsApi/#example_18","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | limit = 50 # int | (optional) (default to 50) skip = 0 # int | (optional) (default to 0) try : api_response = api_instance . list_project_knowledge_graph_assemble_tasks ( proj_key , bag_key , limit = limit , skip = skip ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->list_project_knowledge_graph_assemble_tasks: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_18","text":"Name Type Description Notes proj_key str bag_key str limit int [optional] [default to 50] skip int [optional] [default to 0]","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_18","text":"list[DataFlowAssembleIntoKnowledgeGraphTask]","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_18","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_18","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_18","text":"Status code Description Response headers 200 List of tasks. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#list_project_knowledge_graph_load_tasks","text":"list[DataFlowLoadIntoKnowledgeGraphTask] list_project_knowledge_graph_load_tasks(proj_key, bag_key, limit=limit, skip=skip) List load tasks for a Knowledge Graph","title":"list_project_knowledge_graph_load_tasks"},{"location":"apis/public/KnowledgeGraphsApi/#example_19","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | limit = 50 # int | (optional) (default to 50) skip = 0 # int | (optional) (default to 0) try : api_response = api_instance . list_project_knowledge_graph_load_tasks ( proj_key , bag_key , limit = limit , skip = skip ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->list_project_knowledge_graph_load_tasks: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_19","text":"Name Type Description Notes proj_key str bag_key str limit int [optional] [default to 50] skip int [optional] [default to 0]","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_19","text":"list[DataFlowLoadIntoKnowledgeGraphTask]","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_19","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_19","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_19","text":"Status code Description Response headers 200 List of tasks. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#list_project_knowledge_graph_snapshots","text":"list[KgSnapshot] list_project_knowledge_graph_snapshots(proj_key, bag_key) List snapshots for a knowledge graph from assembled data flows.","title":"list_project_knowledge_graph_snapshots"},{"location":"apis/public/KnowledgeGraphsApi/#example_20","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | try : api_response = api_instance . list_project_knowledge_graph_snapshots ( proj_key , bag_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->list_project_knowledge_graph_snapshots: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_20","text":"Name Type Description Notes proj_key str bag_key str","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_20","text":"list[KgSnapshot]","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_20","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_20","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_20","text":"Status code Description Response headers 200 Snapshots - 404 KG/BAG not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#list_project_knowledge_graphs","text":"list[Bag] list_project_knowledge_graphs(proj_key, term=term) List all bags in the project","title":"list_project_knowledge_graphs"},{"location":"apis/public/KnowledgeGraphsApi/#example_21","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | term = 'term_example' # str | (optional) try : api_response = api_instance . list_project_knowledge_graphs ( proj_key , term = term ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->list_project_knowledge_graphs: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_21","text":"Name Type Description Notes proj_key str term str [optional]","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_21","text":"list[Bag]","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_21","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_21","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_21","text":"Status code Description Response headers 200 OK - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#list_public_knowledge_graphs","text":"list[Bag] list_public_knowledge_graphs(term=term) List all public BAGs","title":"list_public_knowledge_graphs"},{"location":"apis/public/KnowledgeGraphsApi/#example_22","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) term = 'term_example' # str | (optional) try : api_response = api_instance . list_public_knowledge_graphs ( term = term ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->list_public_knowledge_graphs: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_22","text":"Name Type Description Notes term str [optional]","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_22","text":"list[Bag]","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_22","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_22","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_22","text":"Status code Description Response headers 200 OK - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#load_project_knowledge_graph_data_flow","text":"ProjectTask load_project_knowledge_graph_data_flow(proj_key, bag_key, options) Load a data flow onto a Knowledge Graph.","title":"load_project_knowledge_graph_data_flow"},{"location":"apis/public/KnowledgeGraphsApi/#example_23","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | options = deepsearch . cps . apis . public . LoadDataFlowIntoKnowledgeGraphOptions () # LoadDataFlowIntoKnowledgeGraphOptions | try : api_response = api_instance . load_project_knowledge_graph_data_flow ( proj_key , bag_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->load_project_knowledge_graph_data_flow: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_23","text":"Name Type Description Notes proj_key str bag_key str options LoadDataFlowIntoKnowledgeGraphOptions","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_23","text":"ProjectTask","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_23","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_23","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_23","text":"Status code Description Response headers 200 Task started. - 400 Invalid dataflow. - 404 Data flow template doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#load_project_knowledge_graph_snapshot","text":"Task load_project_knowledge_graph_snapshot(proj_key, bag_key, execution_id) Load a snapshot resulting from an assembled data flow","title":"load_project_knowledge_graph_snapshot"},{"location":"apis/public/KnowledgeGraphsApi/#example_24","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | execution_id = 'execution_id_example' # str | try : api_response = api_instance . load_project_knowledge_graph_snapshot ( proj_key , bag_key , execution_id ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->load_project_knowledge_graph_snapshot: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_24","text":"Name Type Description Notes proj_key str bag_key str execution_id str","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_24","text":"Task","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_24","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_24","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_24","text":"Status code Description Response headers 200 Snapshot is being loaded. - 400 Invalid parameters. - 403 Feature is disabled on this instance. - 404 KG/BAG/Snapshot not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#recreate_project_knowledge_graph_deployment","text":"recreate_project_knowledge_graph_deployment(proj_key, bag_key, body) (Re)create the deployment for a Knowledge Graph","title":"recreate_project_knowledge_graph_deployment"},{"location":"apis/public/KnowledgeGraphsApi/#example_25","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | body = deepsearch . cps . apis . public . KnowledgeGraphDeploymentRecreationOptions () # KnowledgeGraphDeploymentRecreationOptions | try : api_instance . recreate_project_knowledge_graph_deployment ( proj_key , bag_key , body ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->recreate_project_knowledge_graph_deployment: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_25","text":"Name Type Description Notes proj_key str bag_key str body KnowledgeGraphDeploymentRecreationOptions","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_25","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_25","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_25","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_25","text":"Status code Description Response headers 200 Deployment upgrading. - 404 Knowledge Graph doesn't exist. - 409 Refused to recreate the deployment since it already exists and the `force` flag is not `true`. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#restore_project_knowledge_graph_backup","text":"Task restore_project_knowledge_graph_backup(proj_key, bag_key, options) Restore a back up of a Knowledge Graph","title":"restore_project_knowledge_graph_backup"},{"location":"apis/public/KnowledgeGraphsApi/#example_26","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | options = deepsearch . cps . apis . public . RestoreKnowledgeGraphBackupOptions () # RestoreKnowledgeGraphBackupOptions | try : api_response = api_instance . restore_project_knowledge_graph_backup ( proj_key , bag_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->restore_project_knowledge_graph_backup: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_26","text":"Name Type Description Notes proj_key str bag_key str options RestoreKnowledgeGraphBackupOptions","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_26","text":"Task","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_26","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_26","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_26","text":"Status code Description Response headers 201 OK - 400 Invalid parameters. - 404 KG/BAG not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#resume_project_knowledge_graph","text":"ProjectTask resume_project_knowledge_graph(proj_key, bag_key, body) Resume a Knowledge Graph","title":"resume_project_knowledge_graph"},{"location":"apis/public/KnowledgeGraphsApi/#example_27","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | body = deepsearch . cps . apis . public . ResumeKnowledgeGraphOptions () # ResumeKnowledgeGraphOptions | try : api_response = api_instance . resume_project_knowledge_graph ( proj_key , bag_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->resume_project_knowledge_graph: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_27","text":"Name Type Description Notes proj_key str bag_key str body ResumeKnowledgeGraphOptions","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_27","text":"ProjectTask","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_27","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_27","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_27","text":"Status code Description Response headers 200 Task started. - 403 Feature is disabled on this instance. - 404 Knowledge Graph doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#suspend_project_knowledge_graph","text":"ProjectTask suspend_project_knowledge_graph(proj_key, bag_key, options) Suspend a Knowledge Graph","title":"suspend_project_knowledge_graph"},{"location":"apis/public/KnowledgeGraphsApi/#example_28","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | options = deepsearch . cps . apis . public . SuspendKnowledgeGraphOptions () # SuspendKnowledgeGraphOptions | try : api_response = api_instance . suspend_project_knowledge_graph ( proj_key , bag_key , options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->suspend_project_knowledge_graph: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_28","text":"Name Type Description Notes proj_key str bag_key str options SuspendKnowledgeGraphOptions","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_28","text":"ProjectTask","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_28","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_28","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_28","text":"Status code Description Response headers 200 Task started. - 404 Knowledge Graph doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#update_project_knowledge_graph_metadata","text":"Bag update_project_knowledge_graph_metadata(proj_key, bag_key, data) Update the metadata of a Knowledge graph","title":"update_project_knowledge_graph_metadata"},{"location":"apis/public/KnowledgeGraphsApi/#example_29","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | data = deepsearch . cps . apis . public . PatchKnowledgeGraphOptions1 () # PatchKnowledgeGraphOptions1 | try : api_response = api_instance . update_project_knowledge_graph_metadata ( proj_key , bag_key , data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->update_project_knowledge_graph_metadata: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_29","text":"Name Type Description Notes proj_key str bag_key str data PatchKnowledgeGraphOptions1","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_29","text":"Bag","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_29","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_29","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_29","text":"Status code Description Response headers 200 Knowledge graph metadata updated. - 404 Knowledge graph not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/KnowledgeGraphsApi/#upgrade_project_knowledge_graph_deployment","text":"upgrade_project_knowledge_graph_deployment(proj_key, bag_key, body) Upgrade the deployment chart of a Knowledge Graph","title":"upgrade_project_knowledge_graph_deployment"},{"location":"apis/public/KnowledgeGraphsApi/#example_30","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . KnowledgeGraphsApi ( api_client ) proj_key = 'proj_key_example' # str | bag_key = 'bag_key_example' # str | body = deepsearch . cps . apis . public . KnowledgeGraphChartUpgradeOptions () # KnowledgeGraphChartUpgradeOptions | try : api_instance . upgrade_project_knowledge_graph_deployment ( proj_key , bag_key , body ) except ApiException as e : print ( \"Exception when calling KnowledgeGraphsApi->upgrade_project_knowledge_graph_deployment: %s \\n \" % e )","title":"Example"},{"location":"apis/public/KnowledgeGraphsApi/#parameters_30","text":"Name Type Description Notes proj_key str bag_key str body KnowledgeGraphChartUpgradeOptions","title":"Parameters"},{"location":"apis/public/KnowledgeGraphsApi/#return-type_30","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/KnowledgeGraphsApi/#authorization_30","text":"Bearer","title":"Authorization"},{"location":"apis/public/KnowledgeGraphsApi/#http-request-headers_30","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/KnowledgeGraphsApi/#http-response-details_30","text":"Status code Description Response headers 200 Chart upgrading. - 404 Knowledge Graph doesn't exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/LinkedCcsInstances/","text":"LinkedCcsInstances \u00b6 Properties \u00b6 Name Type Description Notes description str id str [Back to Model list] [Back to API list] [Back to README]","title":"LinkedCcsInstances"},{"location":"apis/public/LinkedCcsInstances/#linkedccsinstances","text":"","title":"LinkedCcsInstances"},{"location":"apis/public/LinkedCcsInstances/#properties","text":"Name Type Description Notes description str id str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/LoadDataFlowIntoKnowledgeGraphOptions/","text":"LoadDataFlowIntoKnowledgeGraphOptions \u00b6 Properties \u00b6 Name Type Description Notes data_flow BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow render BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender save object [Back to Model list] [Back to API list] [Back to README]","title":"LoadDataFlowIntoKnowledgeGraphOptions"},{"location":"apis/public/LoadDataFlowIntoKnowledgeGraphOptions/#loaddataflowintoknowledgegraphoptions","text":"","title":"LoadDataFlowIntoKnowledgeGraphOptions"},{"location":"apis/public/LoadDataFlowIntoKnowledgeGraphOptions/#properties","text":"Name Type Description Notes data_flow BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow render BackendProjectProjKeyBagsBagKeyTasksAssembleDataflowRender save object [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/LoadDataFlowIntoKnowledgeGraphOptions1/","text":"LoadDataFlowIntoKnowledgeGraphOptions1 \u00b6 Properties \u00b6 Name Type Description Notes render ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender [optional] target ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadTarget [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LoadDataFlowIntoKnowledgeGraphOptions1"},{"location":"apis/public/LoadDataFlowIntoKnowledgeGraphOptions1/#loaddataflowintoknowledgegraphoptions1","text":"","title":"LoadDataFlowIntoKnowledgeGraphOptions1"},{"location":"apis/public/LoadDataFlowIntoKnowledgeGraphOptions1/#properties","text":"Name Type Description Notes render ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender [optional] target ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadTarget [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/LoadKgcDataInput/","text":"LoadKgcDataInput \u00b6 Properties \u00b6 Name Type Description Notes dataflow LoadKgcDataInputDataflow target LoadKgcDataInputTarget [Back to Model list] [Back to API list] [Back to README]","title":"LoadKgcDataInput"},{"location":"apis/public/LoadKgcDataInput/#loadkgcdatainput","text":"","title":"LoadKgcDataInput"},{"location":"apis/public/LoadKgcDataInput/#properties","text":"Name Type Description Notes dataflow LoadKgcDataInputDataflow target LoadKgcDataInputTarget [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/LoadKgcDataInputDataflow/","text":"LoadKgcDataInputDataflow \u00b6 Properties \u00b6 Name Type Description Notes config object [optional] data_flow list[object] [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LoadKgcDataInputDataflow"},{"location":"apis/public/LoadKgcDataInputDataflow/#loadkgcdatainputdataflow","text":"","title":"LoadKgcDataInputDataflow"},{"location":"apis/public/LoadKgcDataInputDataflow/#properties","text":"Name Type Description Notes config object [optional] data_flow list[object] [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/LoadKgcDataInputTarget/","text":"LoadKgcDataInputTarget \u00b6 Properties \u00b6 Name Type Description Notes bag_key str save object [Back to Model list] [Back to API list] [Back to README]","title":"LoadKgcDataInputTarget"},{"location":"apis/public/LoadKgcDataInputTarget/#loadkgcdatainputtarget","text":"","title":"LoadKgcDataInputTarget"},{"location":"apis/public/LoadKgcDataInputTarget/#properties","text":"Name Type Description Notes bag_key str save object [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ModelConfiguration/","text":"ModelConfiguration \u00b6 Properties \u00b6 Name Type Description Notes configurations dict(str, object) [optional] created_at float created_by str description str model_config_key str name str proj_key str public bool supported_annotations object [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ModelConfiguration"},{"location":"apis/public/ModelConfiguration/#modelconfiguration","text":"","title":"ModelConfiguration"},{"location":"apis/public/ModelConfiguration/#properties","text":"Name Type Description Notes configurations dict(str, object) [optional] created_at float created_by str description str model_config_key str name str proj_key str public bool supported_annotations object [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ModelConfigurationsApi/","text":"deepsearch.cps.apis.public.ModelConfigurationsApi \u00b6 All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description create_project_model_config POST /project/{proj_key}/model_configs delete_project_model_config DELETE /project/{proj_key}/model_configs/{model_config_key} get_project_models_with_supported_annotations GET /project/{proj_key}/models list_project_model_configs GET /project/{proj_key}/model_configs list_public_model_configs GET /project/public/model_configs read_project_model_config GET /project/{proj_key}/model_configs/{model_config_key} read_public_model_config GET /project/public/model_configs/{model_config_key} update_project_model_config PATCH /project/{proj_key}/model_configs/{model_config_key} create_project_model_config \u00b6 ModelConfiguration create_project_model_config(proj_key, body) Create a Model Configuration Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ModelConfigurationsApi ( api_client ) proj_key = 'proj_key_example' # str | body = deepsearch . cps . apis . public . CreateProjectModelConfigOptions () # CreateProjectModelConfigOptions | try : api_response = api_instance . create_project_model_config ( proj_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ModelConfigurationsApi->create_project_model_config: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str body CreateProjectModelConfigOptions Return type \u00b6 ModelConfiguration Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Model Configuration created. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_project_model_config \u00b6 delete_project_model_config(proj_key, model_config_key) Delete a single Model Configuration Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ModelConfigurationsApi ( api_client ) proj_key = 'proj_key_example' # str | model_config_key = 'model_config_key_example' # str | try : api_instance . delete_project_model_config ( proj_key , model_config_key ) except ApiException as e : print ( \"Exception when calling ModelConfigurationsApi->delete_project_model_config: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str model_config_key str Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 204 Model Configuration deleted. - 404 Model Configuration doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_project_models_with_supported_annotations \u00b6 list[ModelConfiguration] get_project_models_with_supported_annotations(proj_key) List models with the supported annotations for a project Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ModelConfigurationsApi ( api_client ) proj_key = 'proj_key_example' # str | try : api_response = api_instance . get_project_models_with_supported_annotations ( proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ModelConfigurationsApi->get_project_models_with_supported_annotations: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str Return type \u00b6 list[ModelConfiguration] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of Models with the supported annotations - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_project_model_configs \u00b6 list[ModelConfiguration] list_project_model_configs(proj_key) List Model Configurations for a project Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ModelConfigurationsApi ( api_client ) proj_key = 'proj_key_example' # str | try : api_response = api_instance . list_project_model_configs ( proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ModelConfigurationsApi->list_project_model_configs: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str Return type \u00b6 list[ModelConfiguration] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of Model Configurations - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_public_model_configs \u00b6 list[ModelConfiguration] list_public_model_configs() List public Model Configurations Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ModelConfigurationsApi ( api_client ) try : api_response = api_instance . list_public_model_configs () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ModelConfigurationsApi->list_public_model_configs: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 list[ModelConfiguration] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of public Model Configurations - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] read_project_model_config \u00b6 ModelConfiguration read_project_model_config(proj_key, model_config_key, include_collections=include_collections) Get a single Model Configuration Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ModelConfigurationsApi ( api_client ) proj_key = 'proj_key_example' # str | model_config_key = 'model_config_key_example' # str | include_collections = False # bool | (optional) (default to False) try : api_response = api_instance . read_project_model_config ( proj_key , model_config_key , include_collections = include_collections ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ModelConfigurationsApi->read_project_model_config: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str model_config_key str include_collections bool [optional] [default to False] Return type \u00b6 ModelConfiguration Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Model Configuration - 404 Model Configuration not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] read_public_model_config \u00b6 ModelConfiguration read_public_model_config(model_config_key, include_collections=include_collections) Get a single Model Configuration that was made public Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ModelConfigurationsApi ( api_client ) model_config_key = 'model_config_key_example' # str | include_collections = False # bool | (optional) (default to False) try : api_response = api_instance . read_public_model_config ( model_config_key , include_collections = include_collections ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ModelConfigurationsApi->read_public_model_config: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes model_config_key str include_collections bool [optional] [default to False] Return type \u00b6 ModelConfiguration Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Model configuration - 404 Model configuration not found or is not public - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_project_model_config \u00b6 update_project_model_config(proj_key, model_config_key, body) Update a single Model Configuration Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ModelConfigurationsApi ( api_client ) proj_key = 'proj_key_example' # str | model_config_key = 'model_config_key_example' # str | body = deepsearch . cps . apis . public . UpdateProjectModelConfigOptions () # UpdateProjectModelConfigOptions | try : api_instance . update_project_model_config ( proj_key , model_config_key , body ) except ApiException as e : print ( \"Exception when calling ModelConfigurationsApi->update_project_model_config: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str model_config_key str body UpdateProjectModelConfigOptions Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 204 Model Configuration updated. - 404 Model Configuration doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"deepsearch.cps.apis.public.ModelConfigurationsApi"},{"location":"apis/public/ModelConfigurationsApi/#deepsearchcpsapispublicmodelconfigurationsapi","text":"All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description create_project_model_config POST /project/{proj_key}/model_configs delete_project_model_config DELETE /project/{proj_key}/model_configs/{model_config_key} get_project_models_with_supported_annotations GET /project/{proj_key}/models list_project_model_configs GET /project/{proj_key}/model_configs list_public_model_configs GET /project/public/model_configs read_project_model_config GET /project/{proj_key}/model_configs/{model_config_key} read_public_model_config GET /project/public/model_configs/{model_config_key} update_project_model_config PATCH /project/{proj_key}/model_configs/{model_config_key}","title":"deepsearch.cps.apis.public.ModelConfigurationsApi"},{"location":"apis/public/ModelConfigurationsApi/#create_project_model_config","text":"ModelConfiguration create_project_model_config(proj_key, body) Create a Model Configuration","title":"create_project_model_config"},{"location":"apis/public/ModelConfigurationsApi/#example","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ModelConfigurationsApi ( api_client ) proj_key = 'proj_key_example' # str | body = deepsearch . cps . apis . public . CreateProjectModelConfigOptions () # CreateProjectModelConfigOptions | try : api_response = api_instance . create_project_model_config ( proj_key , body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ModelConfigurationsApi->create_project_model_config: %s \\n \" % e )","title":"Example"},{"location":"apis/public/ModelConfigurationsApi/#parameters","text":"Name Type Description Notes proj_key str body CreateProjectModelConfigOptions","title":"Parameters"},{"location":"apis/public/ModelConfigurationsApi/#return-type","text":"ModelConfiguration","title":"Return type"},{"location":"apis/public/ModelConfigurationsApi/#authorization","text":"Bearer","title":"Authorization"},{"location":"apis/public/ModelConfigurationsApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/ModelConfigurationsApi/#http-response-details","text":"Status code Description Response headers 200 Model Configuration created. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/ModelConfigurationsApi/#delete_project_model_config","text":"delete_project_model_config(proj_key, model_config_key) Delete a single Model Configuration","title":"delete_project_model_config"},{"location":"apis/public/ModelConfigurationsApi/#example_1","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ModelConfigurationsApi ( api_client ) proj_key = 'proj_key_example' # str | model_config_key = 'model_config_key_example' # str | try : api_instance . delete_project_model_config ( proj_key , model_config_key ) except ApiException as e : print ( \"Exception when calling ModelConfigurationsApi->delete_project_model_config: %s \\n \" % e )","title":"Example"},{"location":"apis/public/ModelConfigurationsApi/#parameters_1","text":"Name Type Description Notes proj_key str model_config_key str","title":"Parameters"},{"location":"apis/public/ModelConfigurationsApi/#return-type_1","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/ModelConfigurationsApi/#authorization_1","text":"Bearer","title":"Authorization"},{"location":"apis/public/ModelConfigurationsApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/ModelConfigurationsApi/#http-response-details_1","text":"Status code Description Response headers 204 Model Configuration deleted. - 404 Model Configuration doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/ModelConfigurationsApi/#get_project_models_with_supported_annotations","text":"list[ModelConfiguration] get_project_models_with_supported_annotations(proj_key) List models with the supported annotations for a project","title":"get_project_models_with_supported_annotations"},{"location":"apis/public/ModelConfigurationsApi/#example_2","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ModelConfigurationsApi ( api_client ) proj_key = 'proj_key_example' # str | try : api_response = api_instance . get_project_models_with_supported_annotations ( proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ModelConfigurationsApi->get_project_models_with_supported_annotations: %s \\n \" % e )","title":"Example"},{"location":"apis/public/ModelConfigurationsApi/#parameters_2","text":"Name Type Description Notes proj_key str","title":"Parameters"},{"location":"apis/public/ModelConfigurationsApi/#return-type_2","text":"list[ModelConfiguration]","title":"Return type"},{"location":"apis/public/ModelConfigurationsApi/#authorization_2","text":"Bearer","title":"Authorization"},{"location":"apis/public/ModelConfigurationsApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/ModelConfigurationsApi/#http-response-details_2","text":"Status code Description Response headers 200 List of Models with the supported annotations - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/ModelConfigurationsApi/#list_project_model_configs","text":"list[ModelConfiguration] list_project_model_configs(proj_key) List Model Configurations for a project","title":"list_project_model_configs"},{"location":"apis/public/ModelConfigurationsApi/#example_3","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ModelConfigurationsApi ( api_client ) proj_key = 'proj_key_example' # str | try : api_response = api_instance . list_project_model_configs ( proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ModelConfigurationsApi->list_project_model_configs: %s \\n \" % e )","title":"Example"},{"location":"apis/public/ModelConfigurationsApi/#parameters_3","text":"Name Type Description Notes proj_key str","title":"Parameters"},{"location":"apis/public/ModelConfigurationsApi/#return-type_3","text":"list[ModelConfiguration]","title":"Return type"},{"location":"apis/public/ModelConfigurationsApi/#authorization_3","text":"Bearer","title":"Authorization"},{"location":"apis/public/ModelConfigurationsApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/ModelConfigurationsApi/#http-response-details_3","text":"Status code Description Response headers 200 List of Model Configurations - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/ModelConfigurationsApi/#list_public_model_configs","text":"list[ModelConfiguration] list_public_model_configs() List public Model Configurations","title":"list_public_model_configs"},{"location":"apis/public/ModelConfigurationsApi/#example_4","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ModelConfigurationsApi ( api_client ) try : api_response = api_instance . list_public_model_configs () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ModelConfigurationsApi->list_public_model_configs: %s \\n \" % e )","title":"Example"},{"location":"apis/public/ModelConfigurationsApi/#parameters_4","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/public/ModelConfigurationsApi/#return-type_4","text":"list[ModelConfiguration]","title":"Return type"},{"location":"apis/public/ModelConfigurationsApi/#authorization_4","text":"Bearer","title":"Authorization"},{"location":"apis/public/ModelConfigurationsApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/ModelConfigurationsApi/#http-response-details_4","text":"Status code Description Response headers 200 List of public Model Configurations - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/ModelConfigurationsApi/#read_project_model_config","text":"ModelConfiguration read_project_model_config(proj_key, model_config_key, include_collections=include_collections) Get a single Model Configuration","title":"read_project_model_config"},{"location":"apis/public/ModelConfigurationsApi/#example_5","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ModelConfigurationsApi ( api_client ) proj_key = 'proj_key_example' # str | model_config_key = 'model_config_key_example' # str | include_collections = False # bool | (optional) (default to False) try : api_response = api_instance . read_project_model_config ( proj_key , model_config_key , include_collections = include_collections ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ModelConfigurationsApi->read_project_model_config: %s \\n \" % e )","title":"Example"},{"location":"apis/public/ModelConfigurationsApi/#parameters_5","text":"Name Type Description Notes proj_key str model_config_key str include_collections bool [optional] [default to False]","title":"Parameters"},{"location":"apis/public/ModelConfigurationsApi/#return-type_5","text":"ModelConfiguration","title":"Return type"},{"location":"apis/public/ModelConfigurationsApi/#authorization_5","text":"Bearer","title":"Authorization"},{"location":"apis/public/ModelConfigurationsApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/ModelConfigurationsApi/#http-response-details_5","text":"Status code Description Response headers 200 Model Configuration - 404 Model Configuration not found - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/ModelConfigurationsApi/#read_public_model_config","text":"ModelConfiguration read_public_model_config(model_config_key, include_collections=include_collections) Get a single Model Configuration that was made public","title":"read_public_model_config"},{"location":"apis/public/ModelConfigurationsApi/#example_6","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ModelConfigurationsApi ( api_client ) model_config_key = 'model_config_key_example' # str | include_collections = False # bool | (optional) (default to False) try : api_response = api_instance . read_public_model_config ( model_config_key , include_collections = include_collections ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ModelConfigurationsApi->read_public_model_config: %s \\n \" % e )","title":"Example"},{"location":"apis/public/ModelConfigurationsApi/#parameters_6","text":"Name Type Description Notes model_config_key str include_collections bool [optional] [default to False]","title":"Parameters"},{"location":"apis/public/ModelConfigurationsApi/#return-type_6","text":"ModelConfiguration","title":"Return type"},{"location":"apis/public/ModelConfigurationsApi/#authorization_6","text":"Bearer","title":"Authorization"},{"location":"apis/public/ModelConfigurationsApi/#http-request-headers_6","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/ModelConfigurationsApi/#http-response-details_6","text":"Status code Description Response headers 200 Model configuration - 404 Model configuration not found or is not public - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/ModelConfigurationsApi/#update_project_model_config","text":"update_project_model_config(proj_key, model_config_key, body) Update a single Model Configuration","title":"update_project_model_config"},{"location":"apis/public/ModelConfigurationsApi/#example_7","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ModelConfigurationsApi ( api_client ) proj_key = 'proj_key_example' # str | model_config_key = 'model_config_key_example' # str | body = deepsearch . cps . apis . public . UpdateProjectModelConfigOptions () # UpdateProjectModelConfigOptions | try : api_instance . update_project_model_config ( proj_key , model_config_key , body ) except ApiException as e : print ( \"Exception when calling ModelConfigurationsApi->update_project_model_config: %s \\n \" % e )","title":"Example"},{"location":"apis/public/ModelConfigurationsApi/#parameters_7","text":"Name Type Description Notes proj_key str model_config_key str body UpdateProjectModelConfigOptions","title":"Parameters"},{"location":"apis/public/ModelConfigurationsApi/#return-type_7","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/ModelConfigurationsApi/#authorization_7","text":"Bearer","title":"Authorization"},{"location":"apis/public/ModelConfigurationsApi/#http-request-headers_7","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/ModelConfigurationsApi/#http-response-details_7","text":"Status code Description Response headers 204 Model Configuration updated. - 404 Model Configuration doesn't exist. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/ModelSupportedAnnotationsParameters/","text":"ModelSupportedAnnotationsParameters \u00b6 Properties \u00b6 Name Type Description Notes model_config_key str proj_key str public bool [Back to Model list] [Back to API list] [Back to README]","title":"ModelSupportedAnnotationsParameters"},{"location":"apis/public/ModelSupportedAnnotationsParameters/#modelsupportedannotationsparameters","text":"","title":"ModelSupportedAnnotationsParameters"},{"location":"apis/public/ModelSupportedAnnotationsParameters/#properties","text":"Name Type Description Notes model_config_key str proj_key str public bool [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/MongoCoordinates/","text":"MongoCoordinates \u00b6 Properties \u00b6 Name Type Description Notes database str uri str [Back to Model list] [Back to API list] [Back to README]","title":"MongoCoordinates"},{"location":"apis/public/MongoCoordinates/#mongocoordinates","text":"","title":"MongoCoordinates"},{"location":"apis/public/MongoCoordinates/#properties","text":"Name Type Description Notes database str uri str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/MongoS3Coordinates/","text":"MongoS3Coordinates \u00b6 Properties \u00b6 Name Type Description Notes mongo MongoCoordinates [optional] s3 S3Coordinates [optional] [Back to Model list] [Back to API list] [Back to README]","title":"MongoS3Coordinates"},{"location":"apis/public/MongoS3Coordinates/#mongos3coordinates","text":"","title":"MongoS3Coordinates"},{"location":"apis/public/MongoS3Coordinates/#properties","text":"Name Type Description Notes mongo MongoCoordinates [optional] s3 S3Coordinates [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/MongoS3CoordinatesWithCollectionList/","text":"MongoS3CoordinatesWithCollectionList \u00b6 Properties \u00b6 Name Type Description Notes mongo MongoCoordinates [optional] s3 S3Coordinates [optional] collections list[str] [optional] [Back to Model list] [Back to API list] [Back to README]","title":"MongoS3CoordinatesWithCollectionList"},{"location":"apis/public/MongoS3CoordinatesWithCollectionList/#mongos3coordinateswithcollectionlist","text":"","title":"MongoS3CoordinatesWithCollectionList"},{"location":"apis/public/MongoS3CoordinatesWithCollectionList/#properties","text":"Name Type Description Notes mongo MongoCoordinates [optional] s3 S3Coordinates [optional] collections list[str] [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/PatchDataCatalogOptions/","text":"PatchDataCatalogOptions \u00b6 Properties \u00b6 Name Type Description Notes category_schemas list[DataCatalogCategorySchema] [optional] collections_data_flows list[DataCatalogDataFlow] [optional] description str [optional] name str [optional] public bool [optional] topology DataCatalogTopology [optional] [Back to Model list] [Back to API list] [Back to README]","title":"PatchDataCatalogOptions"},{"location":"apis/public/PatchDataCatalogOptions/#patchdatacatalogoptions","text":"","title":"PatchDataCatalogOptions"},{"location":"apis/public/PatchDataCatalogOptions/#properties","text":"Name Type Description Notes category_schemas list[DataCatalogCategorySchema] [optional] collections_data_flows list[DataCatalogDataFlow] [optional] description str [optional] name str [optional] public bool [optional] topology DataCatalogTopology [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/PatchDictionaryOptions/","text":"PatchDictionaryOptions \u00b6 Properties \u00b6 Name Type Description Notes description str [optional] name str [optional] public bool [optional] [Back to Model list] [Back to API list] [Back to README]","title":"PatchDictionaryOptions"},{"location":"apis/public/PatchDictionaryOptions/#patchdictionaryoptions","text":"","title":"PatchDictionaryOptions"},{"location":"apis/public/PatchDictionaryOptions/#properties","text":"Name Type Description Notes description str [optional] name str [optional] public bool [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/PatchKnowledgeGraphOptions/","text":"PatchKnowledgeGraphOptions \u00b6 Properties \u00b6 Name Type Description Notes description str name str public bool [Back to Model list] [Back to API list] [Back to README]","title":"PatchKnowledgeGraphOptions"},{"location":"apis/public/PatchKnowledgeGraphOptions/#patchknowledgegraphoptions","text":"","title":"PatchKnowledgeGraphOptions"},{"location":"apis/public/PatchKnowledgeGraphOptions/#properties","text":"Name Type Description Notes description str name str public bool [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/PatchKnowledgeGraphOptions1/","text":"PatchKnowledgeGraphOptions1 \u00b6 Properties \u00b6 Name Type Description Notes description str name str public bool [Back to Model list] [Back to API list] [Back to README]","title":"PatchKnowledgeGraphOptions1"},{"location":"apis/public/PatchKnowledgeGraphOptions1/#patchknowledgegraphoptions1","text":"","title":"PatchKnowledgeGraphOptions1"},{"location":"apis/public/PatchKnowledgeGraphOptions1/#properties","text":"Name Type Description Notes description str name str public bool [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/Problem/","text":"Problem \u00b6 Properties \u00b6 Name Type Description Notes detail str [optional] status int [optional] title str [optional] type str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Problem"},{"location":"apis/public/Problem/#problem","text":"","title":"Problem"},{"location":"apis/public/Problem/#properties","text":"Name Type Description Notes detail str [optional] status int [optional] title str [optional] type str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProcessingModel/","text":"ProcessingModel \u00b6 Properties \u00b6 Name Type Description Notes dataflow ProcessingModelDataFlow variables dict(str, ProjectProjKeyModelConfigsConfigurations) [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ProcessingModel"},{"location":"apis/public/ProcessingModel/#processingmodel","text":"","title":"ProcessingModel"},{"location":"apis/public/ProcessingModel/#properties","text":"Name Type Description Notes dataflow ProcessingModelDataFlow variables dict(str, ProjectProjKeyModelConfigsConfigurations) [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProcessingModelApi/","text":"deepsearch.cps.apis.public.ProcessingModelApi \u00b6 All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description create_data_flow_from_df_wizard POST /processing_models/docs_graph_with_databases get_processing_models GET /processing_models create_data_flow_from_df_wizard \u00b6 ProcessingModel create_data_flow_from_df_wizard(body) Create a Data Flow from a list of CCS Collections and CPS Models. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ProcessingModelApi ( api_client ) body = deepsearch . cps . apis . public . InlineObject1 () # InlineObject1 | try : api_response = api_instance . create_data_flow_from_df_wizard ( body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProcessingModelApi->create_data_flow_from_df_wizard: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes body InlineObject1 Return type \u00b6 ProcessingModel Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Processing model generated successfully - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_processing_models \u00b6 InlineResponse2001 get_processing_models() List the available processing models. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ProcessingModelApi ( api_client ) try : api_response = api_instance . get_processing_models () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProcessingModelApi->get_processing_models: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 InlineResponse2001 Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of processing models and their description - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"deepsearch.cps.apis.public.ProcessingModelApi"},{"location":"apis/public/ProcessingModelApi/#deepsearchcpsapispublicprocessingmodelapi","text":"All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description create_data_flow_from_df_wizard POST /processing_models/docs_graph_with_databases get_processing_models GET /processing_models","title":"deepsearch.cps.apis.public.ProcessingModelApi"},{"location":"apis/public/ProcessingModelApi/#create_data_flow_from_df_wizard","text":"ProcessingModel create_data_flow_from_df_wizard(body) Create a Data Flow from a list of CCS Collections and CPS Models.","title":"create_data_flow_from_df_wizard"},{"location":"apis/public/ProcessingModelApi/#example","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ProcessingModelApi ( api_client ) body = deepsearch . cps . apis . public . InlineObject1 () # InlineObject1 | try : api_response = api_instance . create_data_flow_from_df_wizard ( body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProcessingModelApi->create_data_flow_from_df_wizard: %s \\n \" % e )","title":"Example"},{"location":"apis/public/ProcessingModelApi/#parameters","text":"Name Type Description Notes body InlineObject1","title":"Parameters"},{"location":"apis/public/ProcessingModelApi/#return-type","text":"ProcessingModel","title":"Return type"},{"location":"apis/public/ProcessingModelApi/#authorization","text":"Bearer","title":"Authorization"},{"location":"apis/public/ProcessingModelApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/ProcessingModelApi/#http-response-details","text":"Status code Description Response headers 200 Processing model generated successfully - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/ProcessingModelApi/#get_processing_models","text":"InlineResponse2001 get_processing_models() List the available processing models.","title":"get_processing_models"},{"location":"apis/public/ProcessingModelApi/#example_1","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ProcessingModelApi ( api_client ) try : api_response = api_instance . get_processing_models () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProcessingModelApi->get_processing_models: %s \\n \" % e )","title":"Example"},{"location":"apis/public/ProcessingModelApi/#parameters_1","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/public/ProcessingModelApi/#return-type_1","text":"InlineResponse2001","title":"Return type"},{"location":"apis/public/ProcessingModelApi/#authorization_1","text":"Bearer","title":"Authorization"},{"location":"apis/public/ProcessingModelApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/ProcessingModelApi/#http-response-details_1","text":"Status code Description Response headers 200 List of processing models and their description - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/ProcessingModelDataFlow/","text":"ProcessingModelDataFlow \u00b6 Properties \u00b6 Name Type Description Notes config object data_flow list[object] [Back to Model list] [Back to API list] [Back to README]","title":"ProcessingModelDataFlow"},{"location":"apis/public/ProcessingModelDataFlow/#processingmodeldataflow","text":"","title":"ProcessingModelDataFlow"},{"location":"apis/public/ProcessingModelDataFlow/#properties","text":"Name Type Description Notes config object data_flow list[object] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProcessingModelDescription/","text":"ProcessingModelDescription \u00b6 Properties \u00b6 Name Type Description Notes description str display_name str name str [Back to Model list] [Back to API list] [Back to README]","title":"ProcessingModelDescription"},{"location":"apis/public/ProcessingModelDescription/#processingmodeldescription","text":"","title":"ProcessingModelDescription"},{"location":"apis/public/ProcessingModelDescription/#properties","text":"Name Type Description Notes description str display_name str name str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectApi/","text":"deepsearch.cps.apis.public.ProjectApi \u00b6 All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description get_project_default_values GET /project/{proj_key}/default_values provision_project_packages POST /project/{proj_key}/packages update_project_default_values POST /project/{proj_key}/default_values get_project_default_values \u00b6 ProjectDefaultValues get_project_default_values(proj_key) List project's default values Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ProjectApi ( api_client ) proj_key = 'proj_key_example' # str | try : api_response = api_instance . get_project_default_values ( proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectApi->get_project_default_values: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str Return type \u00b6 ProjectDefaultValues Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] provision_project_packages \u00b6 Task provision_project_packages(proj_key, body=body) Install packages on a project Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ProjectApi ( api_client ) proj_key = 'proj_key_example' # str | body = deepsearch . cps . apis . public . ProjectPackageInstalationManifest () # ProjectPackageInstalationManifest | (optional) try : api_response = api_instance . provision_project_packages ( proj_key , body = body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectApi->provision_project_packages: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str body ProjectPackageInstalationManifest [optional] Return type \u00b6 Task Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Task started. It can be found in the tasks endpoint for the project. - 404 Package not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_project_default_values \u00b6 update_project_default_values(proj_key, default_values) List project's default values Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ProjectApi ( api_client ) proj_key = 'proj_key_example' # str | default_values = deepsearch . cps . apis . public . ProjectDefaultValues () # ProjectDefaultValues | try : api_instance . update_project_default_values ( proj_key , default_values ) except ApiException as e : print ( \"Exception when calling ProjectApi->update_project_default_values: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str default_values ProjectDefaultValues Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"deepsearch.cps.apis.public.ProjectApi"},{"location":"apis/public/ProjectApi/#deepsearchcpsapispublicprojectapi","text":"All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description get_project_default_values GET /project/{proj_key}/default_values provision_project_packages POST /project/{proj_key}/packages update_project_default_values POST /project/{proj_key}/default_values","title":"deepsearch.cps.apis.public.ProjectApi"},{"location":"apis/public/ProjectApi/#get_project_default_values","text":"ProjectDefaultValues get_project_default_values(proj_key) List project's default values","title":"get_project_default_values"},{"location":"apis/public/ProjectApi/#example","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ProjectApi ( api_client ) proj_key = 'proj_key_example' # str | try : api_response = api_instance . get_project_default_values ( proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectApi->get_project_default_values: %s \\n \" % e )","title":"Example"},{"location":"apis/public/ProjectApi/#parameters","text":"Name Type Description Notes proj_key str","title":"Parameters"},{"location":"apis/public/ProjectApi/#return-type","text":"ProjectDefaultValues","title":"Return type"},{"location":"apis/public/ProjectApi/#authorization","text":"Bearer","title":"Authorization"},{"location":"apis/public/ProjectApi/#http-request-headers","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/ProjectApi/#http-response-details","text":"Status code Description Response headers 200 OK - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/ProjectApi/#provision_project_packages","text":"Task provision_project_packages(proj_key, body=body) Install packages on a project","title":"provision_project_packages"},{"location":"apis/public/ProjectApi/#example_1","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ProjectApi ( api_client ) proj_key = 'proj_key_example' # str | body = deepsearch . cps . apis . public . ProjectPackageInstalationManifest () # ProjectPackageInstalationManifest | (optional) try : api_response = api_instance . provision_project_packages ( proj_key , body = body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectApi->provision_project_packages: %s \\n \" % e )","title":"Example"},{"location":"apis/public/ProjectApi/#parameters_1","text":"Name Type Description Notes proj_key str body ProjectPackageInstalationManifest [optional]","title":"Parameters"},{"location":"apis/public/ProjectApi/#return-type_1","text":"Task","title":"Return type"},{"location":"apis/public/ProjectApi/#authorization_1","text":"Bearer","title":"Authorization"},{"location":"apis/public/ProjectApi/#http-request-headers_1","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/ProjectApi/#http-response-details_1","text":"Status code Description Response headers 200 Task started. It can be found in the tasks endpoint for the project. - 404 Package not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/ProjectApi/#update_project_default_values","text":"update_project_default_values(proj_key, default_values) List project's default values","title":"update_project_default_values"},{"location":"apis/public/ProjectApi/#example_2","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . ProjectApi ( api_client ) proj_key = 'proj_key_example' # str | default_values = deepsearch . cps . apis . public . ProjectDefaultValues () # ProjectDefaultValues | try : api_instance . update_project_default_values ( proj_key , default_values ) except ApiException as e : print ( \"Exception when calling ProjectApi->update_project_default_values: %s \\n \" % e )","title":"Example"},{"location":"apis/public/ProjectApi/#parameters_2","text":"Name Type Description Notes proj_key str default_values ProjectDefaultValues","title":"Parameters"},{"location":"apis/public/ProjectApi/#return-type_2","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/ProjectApi/#authorization_2","text":"Bearer","title":"Authorization"},{"location":"apis/public/ProjectApi/#http-request-headers_2","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/ProjectApi/#http-response-details_2","text":"Status code Description Response headers 200 OK - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/ProjectDataIndexNonView/","text":"ProjectDataIndexNonView \u00b6 Object to create a project data index Properties \u00b6 Name Type Description Notes description str Description of the Index [optional] name str Name of the data index schema_key str Schema key [optional] [default to 'generic'] [Back to Model list] [Back to API list] [Back to README]","title":"ProjectDataIndexNonView"},{"location":"apis/public/ProjectDataIndexNonView/#projectdataindexnonview","text":"Object to create a project data index","title":"ProjectDataIndexNonView"},{"location":"apis/public/ProjectDataIndexNonView/#properties","text":"Name Type Description Notes description str Description of the Index [optional] name str Name of the data index schema_key str Schema key [optional] [default to 'generic'] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectDataIndexSource/","text":"ProjectDataIndexSource \u00b6 Properties \u00b6 Name Type Description Notes index_key str proj_key str [Back to Model list] [Back to API list] [Back to README]","title":"ProjectDataIndexSource"},{"location":"apis/public/ProjectDataIndexSource/#projectdataindexsource","text":"","title":"ProjectDataIndexSource"},{"location":"apis/public/ProjectDataIndexSource/#properties","text":"Name Type Description Notes index_key str proj_key str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectDataIndexView/","text":"ProjectDataIndexView \u00b6 Object to create a project data index view Properties \u00b6 Name Type Description Notes description str Description of the index view [optional] name str Name of the data index view view_of ProjectDataIndexViewOf [Back to Model list] [Back to API list] [Back to README]","title":"ProjectDataIndexView"},{"location":"apis/public/ProjectDataIndexView/#projectdataindexview","text":"Object to create a project data index view","title":"ProjectDataIndexView"},{"location":"apis/public/ProjectDataIndexView/#properties","text":"Name Type Description Notes description str Description of the index view [optional] name str Name of the data index view view_of ProjectDataIndexViewOf [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectDataIndexViewOf/","text":"ProjectDataIndexViewOf \u00b6 Properties \u00b6 Name Type Description Notes index_key str Data index key instance_id str Instance id key, if the source is a data asset [optional] proj_key str Project id key, if the source is a project data index [optional] query_options ElasticIndexSearchQueryOptions [Back to Model list] [Back to API list] [Back to README]","title":"ProjectDataIndexViewOf"},{"location":"apis/public/ProjectDataIndexViewOf/#projectdataindexviewof","text":"","title":"ProjectDataIndexViewOf"},{"location":"apis/public/ProjectDataIndexViewOf/#properties","text":"Name Type Description Notes index_key str Data index key instance_id str Instance id key, if the source is a data asset [optional] proj_key str Project id key, if the source is a project data index [optional] query_options ElasticIndexSearchQueryOptions [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectDataIndexWithStatus/","text":"ProjectDataIndexWithStatus \u00b6 Project data index with elastic status Properties \u00b6 Name Type Description Notes creation_date str description str documents float health str name str schema_key str Index's schema key [optional] source ProjectDataIndexSource status str type str Index type, user friendly format view_of ProjectDataIndexWithStatusViewOf [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ProjectDataIndexWithStatus"},{"location":"apis/public/ProjectDataIndexWithStatus/#projectdataindexwithstatus","text":"Project data index with elastic status","title":"ProjectDataIndexWithStatus"},{"location":"apis/public/ProjectDataIndexWithStatus/#properties","text":"Name Type Description Notes creation_date str description str documents float health str name str schema_key str Index's schema key [optional] source ProjectDataIndexSource status str type str Index type, user friendly format view_of ProjectDataIndexWithStatusViewOf [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectDataIndexWithStatusViewOf/","text":"ProjectDataIndexWithStatusViewOf \u00b6 Properties \u00b6 Name Type Description Notes elastic_id str [optional] index_key str proj_key str [optional] query_options ElasticIndexSearchQueryOptions [Back to Model list] [Back to API list] [Back to README]","title":"ProjectDataIndexWithStatusViewOf"},{"location":"apis/public/ProjectDataIndexWithStatusViewOf/#projectdataindexwithstatusviewof","text":"","title":"ProjectDataIndexWithStatusViewOf"},{"location":"apis/public/ProjectDataIndexWithStatusViewOf/#properties","text":"Name Type Description Notes elastic_id str [optional] index_key str proj_key str [optional] query_options ElasticIndexSearchQueryOptions [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectDefaultValues/","text":"ProjectDefaultValues \u00b6 Properties \u00b6 Name Type Description Notes ccs_project ProjectDefaultValuesCcsProject [optional] dataflow ProjectDefaultValuesDataflow [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ProjectDefaultValues"},{"location":"apis/public/ProjectDefaultValues/#projectdefaultvalues","text":"","title":"ProjectDefaultValues"},{"location":"apis/public/ProjectDefaultValues/#properties","text":"Name Type Description Notes ccs_project ProjectDefaultValuesCcsProject [optional] dataflow ProjectDefaultValuesDataflow [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectDefaultValuesCcsProject/","text":"ProjectDefaultValuesCcsProject \u00b6 Properties \u00b6 Name Type Description Notes collection_name str [optional] name str proj_key str [Back to Model list] [Back to API list] [Back to README]","title":"ProjectDefaultValuesCcsProject"},{"location":"apis/public/ProjectDefaultValuesCcsProject/#projectdefaultvaluesccsproject","text":"","title":"ProjectDefaultValuesCcsProject"},{"location":"apis/public/ProjectDefaultValuesCcsProject/#properties","text":"Name Type Description Notes collection_name str [optional] name str proj_key str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectDefaultValuesDataflow/","text":"ProjectDefaultValuesDataflow \u00b6 Properties \u00b6 Name Type Description Notes df_tpl_key str name str [Back to Model list] [Back to API list] [Back to README]","title":"ProjectDefaultValuesDataflow"},{"location":"apis/public/ProjectDefaultValuesDataflow/#projectdefaultvaluesdataflow","text":"","title":"ProjectDefaultValuesDataflow"},{"location":"apis/public/ProjectDefaultValuesDataflow/#properties","text":"Name Type Description Notes df_tpl_key str name str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectFlavourTotalKgs/","text":"ProjectFlavourTotalKgs \u00b6 Properties \u00b6 Name Type Description Notes flavour_name str proj_key str total_kgs int [Back to Model list] [Back to API list] [Back to README]","title":"ProjectFlavourTotalKgs"},{"location":"apis/public/ProjectFlavourTotalKgs/#projectflavourtotalkgs","text":"","title":"ProjectFlavourTotalKgs"},{"location":"apis/public/ProjectFlavourTotalKgs/#properties","text":"Name Type Description Notes flavour_name str proj_key str total_kgs int [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectFlavours/","text":"ProjectFlavours \u00b6 Properties \u00b6 Name Type Description Notes flavours list[BagFlavourFullData] proj_key str [Back to Model list] [Back to API list] [Back to README]","title":"ProjectFlavours"},{"location":"apis/public/ProjectFlavours/#projectflavours","text":"","title":"ProjectFlavours"},{"location":"apis/public/ProjectFlavours/#properties","text":"Name Type Description Notes flavours list[BagFlavourFullData] proj_key str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectPackageInstalationManifest/","text":"ProjectPackageInstalationManifest \u00b6 Properties \u00b6 Name Type Description Notes packages list[ProjectProjKeyPackagesPackages] [Back to Model list] [Back to API list] [Back to README]","title":"ProjectPackageInstalationManifest"},{"location":"apis/public/ProjectPackageInstalationManifest/#projectpackageinstalationmanifest","text":"","title":"ProjectPackageInstalationManifest"},{"location":"apis/public/ProjectPackageInstalationManifest/#properties","text":"Name Type Description Notes packages list[ProjectProjKeyPackagesPackages] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyAnnotateDocumentReportDocument/","text":"ProjectProjKeyAnnotateDocumentReportDocument \u00b6 Properties \u00b6 Name Type Description Notes input_scratch_id str output_scratch_id str [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyAnnotateDocumentReportDocument"},{"location":"apis/public/ProjectProjKeyAnnotateDocumentReportDocument/#projectprojkeyannotatedocumentreportdocument","text":"","title":"ProjectProjKeyAnnotateDocumentReportDocument"},{"location":"apis/public/ProjectProjKeyAnnotateDocumentReportDocument/#properties","text":"Name Type Description Notes input_scratch_id str output_scratch_id str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyAnnotateDocumentReportReport/","text":"ProjectProjKeyAnnotateDocumentReportReport \u00b6 Properties \u00b6 Name Type Description Notes description str [optional] review_consent bool [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyAnnotateDocumentReportReport"},{"location":"apis/public/ProjectProjKeyAnnotateDocumentReportReport/#projectprojkeyannotatedocumentreportreport","text":"","title":"ProjectProjKeyAnnotateDocumentReportReport"},{"location":"apis/public/ProjectProjKeyAnnotateDocumentReportReport/#properties","text":"Name Type Description Notes description str [optional] review_consent bool [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow/","text":"ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow \u00b6 Properties \u00b6 Name Type Description Notes render_options ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions [optional] template str [optional] variables object [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow"},{"location":"apis/public/ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow/#projectprojkeybagsbagkeytasksassembledataflowdataflow","text":"","title":"ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow"},{"location":"apis/public/ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlow/#properties","text":"Name Type Description Notes render_options ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions [optional] template str [optional] variables object [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions/","text":"ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions \u00b6 Properties \u00b6 Name Type Description Notes target_bag object [optional] variables object [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions"},{"location":"apis/public/ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions/#projectprojkeybagsbagkeytasksassembledataflowdataflowrenderoptions","text":"","title":"ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions"},{"location":"apis/public/ProjectProjKeyBagsBagKeyTasksAssembleDataflowDataFlowRenderOptions/#properties","text":"Name Type Description Notes target_bag object [optional] variables object [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyBagsBagKeyTasksExportDatasetInfo/","text":"ProjectProjKeyBagsBagKeyTasksExportDatasetInfo \u00b6 Properties \u00b6 Name Type Description Notes collection_key str [optional] coords ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords include_s3_data bool [optional] [default to False] node_list list[ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList] [optional] projection object A dict specifying the fields to include or exclude. Use a dict to exclude fields from the result (e.g. projection={'main-text': false}). [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyBagsBagKeyTasksExportDatasetInfo"},{"location":"apis/public/ProjectProjKeyBagsBagKeyTasksExportDatasetInfo/#projectprojkeybagsbagkeytasksexportdatasetinfo","text":"","title":"ProjectProjKeyBagsBagKeyTasksExportDatasetInfo"},{"location":"apis/public/ProjectProjKeyBagsBagKeyTasksExportDatasetInfo/#properties","text":"Name Type Description Notes collection_key str [optional] coords ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords include_s3_data bool [optional] [default to False] node_list list[ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList] [optional] projection object A dict specifying the fields to include or exclude. Use a dict to exclude fields from the result (e.g. projection={'main-text': false}). [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords/","text":"ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords \u00b6 Properties \u00b6 Name Type Description Notes databases object node_collection ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords"},{"location":"apis/public/ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords/#projectprojkeybagsbagkeytasksexportdatasetinfocoords","text":"","title":"ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords"},{"location":"apis/public/ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoords/#properties","text":"Name Type Description Notes databases object node_collection ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection/","text":"ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection \u00b6 Properties \u00b6 Name Type Description Notes collection str collection_name_prefix str database str uri str [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection"},{"location":"apis/public/ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection/#projectprojkeybagsbagkeytasksexportdatasetinfocoordsnodecollection","text":"","title":"ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection"},{"location":"apis/public/ProjectProjKeyBagsBagKeyTasksExportDatasetInfoCoordsNodeCollection/#properties","text":"Name Type Description Notes collection str collection_name_prefix str database str uri str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList/","text":"ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList \u00b6 Properties \u00b6 Name Type Description Notes db str id str [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList"},{"location":"apis/public/ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList/#projectprojkeybagsbagkeytasksexportdatasetinfonodelist","text":"","title":"ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList"},{"location":"apis/public/ProjectProjKeyBagsBagKeyTasksExportDatasetInfoNodeList/#properties","text":"Name Type Description Notes db str id str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyBagsBagKeyTasksSuspendSnapshot/","text":"ProjectProjKeyBagsBagKeyTasksSuspendSnapshot \u00b6 Properties \u00b6 Name Type Description Notes name str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyBagsBagKeyTasksSuspendSnapshot"},{"location":"apis/public/ProjectProjKeyBagsBagKeyTasksSuspendSnapshot/#projectprojkeybagsbagkeytaskssuspendsnapshot","text":"","title":"ProjectProjKeyBagsBagKeyTasksSuspendSnapshot"},{"location":"apis/public/ProjectProjKeyBagsBagKeyTasksSuspendSnapshot/#properties","text":"Name Type Description Notes name str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs/","text":"ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs \u00b6 Properties \u00b6 Name Type Description Notes auth_token str [optional] export_package_mongo_options ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions [optional] proj_key str source_collection_name str [optional] url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs"},{"location":"apis/public/ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs/#projectprojkeydatacataloguesdckeycollectionscollectionnameactionsimportccs","text":"","title":"ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs"},{"location":"apis/public/ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcs/#properties","text":"Name Type Description Notes auth_token str [optional] export_package_mongo_options ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions [optional] proj_key str source_collection_name str [optional] url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions/","text":"ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions \u00b6 Properties \u00b6 Name Type Description Notes assemble_options ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions incremental bool inputs ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsInputs [optional] package_options ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions"},{"location":"apis/public/ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions/#projectprojkeydatacataloguesdckeycollectionscollectionnameactionsimportccsexportpackagemongooptions","text":"","title":"ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions"},{"location":"apis/public/ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptions/#properties","text":"Name Type Description Notes assemble_options ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions incremental bool inputs ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsInputs [optional] package_options ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions/","text":"ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions \u00b6 Properties \u00b6 Name Type Description Notes mode ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode options ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsOptions [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions"},{"location":"apis/public/ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions/#projectprojkeydatacataloguesdckeycollectionscollectionnameactionsimportccsexportpackagemongooptionsassembleoptions","text":"","title":"ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions"},{"location":"apis/public/ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptions/#properties","text":"Name Type Description Notes mode ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode options ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsOptions [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode/","text":"ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode \u00b6 Properties \u00b6 Name Type Description Notes page_elements list[str] Which type of annotations to filter for the page elements: H (human annotations), M (model generated) tables list[str] Which type of annotations to filter for the tables: H (human annotations), M (model generated) [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode"},{"location":"apis/public/ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode/#projectprojkeydatacataloguesdckeycollectionscollectionnameactionsimportccsexportpackagemongooptionsassembleoptionsmode","text":"","title":"ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode"},{"location":"apis/public/ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsMode/#properties","text":"Name Type Description Notes page_elements list[str] Which type of annotations to filter for the page elements: H (human annotations), M (model generated) tables list[str] Which type of annotations to filter for the tables: H (human annotations), M (model generated) [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsOptions/","text":"ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsOptions \u00b6 Properties \u00b6 Name Type Description Notes include_incomplete_documents bool Include documents with missing pages? (e.g. no annotations for some pages) [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsOptions"},{"location":"apis/public/ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsOptions/#projectprojkeydatacataloguesdckeycollectionscollectionnameactionsimportccsexportpackagemongooptionsassembleoptionsoptions","text":"","title":"ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsOptions"},{"location":"apis/public/ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsAssembleOptionsOptions/#properties","text":"Name Type Description Notes include_incomplete_documents bool Include documents with missing pages? (e.g. no annotations for some pages) [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsInputs/","text":"ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsInputs \u00b6 Properties \u00b6 Name Type Description Notes document_hashes list[str] [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsInputs"},{"location":"apis/public/ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsInputs/#projectprojkeydatacataloguesdckeycollectionscollectionnameactionsimportccsexportpackagemongooptionsinputs","text":"","title":"ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsInputs"},{"location":"apis/public/ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsInputs/#properties","text":"Name Type Description Notes document_hashes list[str] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions/","text":"ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions \u00b6 Properties \u00b6 Name Type Description Notes match_mode str [optional] [default to 'document_hash'] redirect_keys_to_s3 list[str] [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions"},{"location":"apis/public/ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions/#projectprojkeydatacataloguesdckeycollectionscollectionnameactionsimportccsexportpackagemongooptionspackageoptions","text":"","title":"ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions"},{"location":"apis/public/ProjectProjKeyDataCataloguesDcKeyCollectionsCollectionNameActionsImportCcsExportPackageMongoOptionsPackageOptions/#properties","text":"Name Type Description Notes match_mode str [optional] [default to 'document_hash'] redirect_keys_to_s3 list[str] [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyDataCataloguesFromMongoOptions/","text":"ProjectProjKeyDataCataloguesFromMongoOptions \u00b6 Properties \u00b6 Name Type Description Notes coordinates MongoS3CoordinatesWithCollectionList [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyDataCataloguesFromMongoOptions"},{"location":"apis/public/ProjectProjKeyDataCataloguesFromMongoOptions/#projectprojkeydatacataloguesfrommongooptions","text":"","title":"ProjectProjKeyDataCataloguesFromMongoOptions"},{"location":"apis/public/ProjectProjKeyDataCataloguesFromMongoOptions/#properties","text":"Name Type Description Notes coordinates MongoS3CoordinatesWithCollectionList [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyDataCataloguesFromMongoTarget/","text":"ProjectProjKeyDataCataloguesFromMongoTarget \u00b6 Properties \u00b6 Name Type Description Notes description str name str public bool [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyDataCataloguesFromMongoTarget"},{"location":"apis/public/ProjectProjKeyDataCataloguesFromMongoTarget/#projectprojkeydatacataloguesfrommongotarget","text":"","title":"ProjectProjKeyDataCataloguesFromMongoTarget"},{"location":"apis/public/ProjectProjKeyDataCataloguesFromMongoTarget/#properties","text":"Name Type Description Notes description str name str public bool [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyDataCataloguesFromUrlOptions/","text":"ProjectProjKeyDataCataloguesFromUrlOptions \u00b6 Properties \u00b6 Name Type Description Notes url str [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyDataCataloguesFromUrlOptions"},{"location":"apis/public/ProjectProjKeyDataCataloguesFromUrlOptions/#projectprojkeydatacataloguesfromurloptions","text":"","title":"ProjectProjKeyDataCataloguesFromUrlOptions"},{"location":"apis/public/ProjectProjKeyDataCataloguesFromUrlOptions/#properties","text":"Name Type Description Notes url str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyDictionariesFromMongoTarget/","text":"ProjectProjKeyDictionariesFromMongoTarget \u00b6 Properties \u00b6 Name Type Description Notes description str name str public bool [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyDictionariesFromMongoTarget"},{"location":"apis/public/ProjectProjKeyDictionariesFromMongoTarget/#projectprojkeydictionariesfrommongotarget","text":"","title":"ProjectProjKeyDictionariesFromMongoTarget"},{"location":"apis/public/ProjectProjKeyDictionariesFromMongoTarget/#properties","text":"Name Type Description Notes description str name str public bool [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag/","text":"ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag \u00b6 Properties \u00b6 Name Type Description Notes bag_key str proj_key str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag"},{"location":"apis/public/ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag/#projectprojkeykgcdataflowtemplatesdebugdftplkeytargetbag","text":"","title":"ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag"},{"location":"apis/public/ProjectProjKeyKgcDataflowTemplatesDebugDfTplKeyTargetBag/#properties","text":"Name Type Description Notes bag_key str proj_key str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender/","text":"ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender \u00b6 Properties \u00b6 Name Type Description Notes target_bag ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag variables dict(str, object) [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender"},{"location":"apis/public/ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender/#projectprojkeykgcdataflowtemplatesdftplkeyactionsloadrender","text":"","title":"ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender"},{"location":"apis/public/ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRender/#properties","text":"Name Type Description Notes target_bag ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag variables dict(str, object) [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag/","text":"ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag \u00b6 Properties \u00b6 Name Type Description Notes bag_key str proj_key str If set, this will override the 'proj_key' parameter in the path, allowing cross-project KGs to be used. [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag"},{"location":"apis/public/ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag/#projectprojkeykgcdataflowtemplatesdftplkeyactionsloadrendertargetbag","text":"","title":"ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag"},{"location":"apis/public/ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag/#properties","text":"Name Type Description Notes bag_key str proj_key str If set, this will override the 'proj_key' parameter in the path, allowing cross-project KGs to be used. [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadTarget/","text":"ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadTarget \u00b6 Properties \u00b6 Name Type Description Notes save object [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadTarget"},{"location":"apis/public/ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadTarget/#projectprojkeykgcdataflowtemplatesdftplkeyactionsloadtarget","text":"","title":"ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadTarget"},{"location":"apis/public/ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadTarget/#properties","text":"Name Type Description Notes save object [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyKgcDataflowTemplatesVariables/","text":"ProjectProjKeyKgcDataflowTemplatesVariables \u00b6 Properties \u00b6 Name Type Description Notes default_value object [optional] type DataFlowTemplateVariable [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyKgcDataflowTemplatesVariables"},{"location":"apis/public/ProjectProjKeyKgcDataflowTemplatesVariables/#projectprojkeykgcdataflowtemplatesvariables","text":"","title":"ProjectProjKeyKgcDataflowTemplatesVariables"},{"location":"apis/public/ProjectProjKeyKgcDataflowTemplatesVariables/#properties","text":"Name Type Description Notes default_value object [optional] type DataFlowTemplateVariable [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow/","text":"ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow \u00b6 Properties \u00b6 Name Type Description Notes template ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate variables dict(str, object) [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow"},{"location":"apis/public/ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow/#projectprojkeykgcrawdataflowtemplatesactionsrundataflow","text":"","title":"ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow"},{"location":"apis/public/ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow/#properties","text":"Name Type Description Notes template ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate variables dict(str, object) [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate/","text":"ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate \u00b6 Properties \u00b6 Name Type Description Notes config object data_flow list[object] [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate"},{"location":"apis/public/ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate/#projectprojkeykgcrawdataflowtemplatesactionsrundataflowtemplate","text":"","title":"ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate"},{"location":"apis/public/ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlowTemplate/#properties","text":"Name Type Description Notes config object data_flow list[object] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyModelConfigsConfigurations/","text":"ProjectProjKeyModelConfigsConfigurations \u00b6 Properties \u00b6 Name Type Description Notes type str [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyModelConfigsConfigurations"},{"location":"apis/public/ProjectProjKeyModelConfigsConfigurations/#projectprojkeymodelconfigsconfigurations","text":"","title":"ProjectProjKeyModelConfigsConfigurations"},{"location":"apis/public/ProjectProjKeyModelConfigsConfigurations/#properties","text":"Name Type Description Notes type str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectProjKeyPackagesPackages/","text":"ProjectProjKeyPackagesPackages \u00b6 Properties \u00b6 Name Type Description Notes overrides object [optional] package_id str [Back to Model list] [Back to API list] [Back to README]","title":"ProjectProjKeyPackagesPackages"},{"location":"apis/public/ProjectProjKeyPackagesPackages/#projectprojkeypackagespackages","text":"","title":"ProjectProjKeyPackagesPackages"},{"location":"apis/public/ProjectProjKeyPackagesPackages/#properties","text":"Name Type Description Notes overrides object [optional] package_id str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectTask/","text":"ProjectTask \u00b6 Properties \u00b6 Name Type Description Notes completed_at float [optional] created_at float [optional] meta object [optional] progress float [optional] proj_key str [optional] started_at float [optional] task_id str [optional] task_status str [optional] task_type str [optional] user_key str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ProjectTask"},{"location":"apis/public/ProjectTask/#projecttask","text":"","title":"ProjectTask"},{"location":"apis/public/ProjectTask/#properties","text":"Name Type Description Notes completed_at float [optional] created_at float [optional] meta object [optional] progress float [optional] proj_key str [optional] started_at float [optional] task_id str [optional] task_status str [optional] task_type str [optional] user_key str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectsFlavours/","text":"ProjectsFlavours \u00b6 Properties \u00b6 Name Type Description Notes flavours list[ProjectsFlavoursFlavours] name str proj_key str [Back to Model list] [Back to API list] [Back to README]","title":"ProjectsFlavours"},{"location":"apis/public/ProjectsFlavours/#projectsflavours","text":"","title":"ProjectsFlavours"},{"location":"apis/public/ProjectsFlavours/#properties","text":"Name Type Description Notes flavours list[ProjectsFlavoursFlavours] name str proj_key str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectsFlavoursFlavours/","text":"ProjectsFlavoursFlavours \u00b6 Properties \u00b6 Name Type Description Notes display_name str [optional] name str [Back to Model list] [Back to API list] [Back to README]","title":"ProjectsFlavoursFlavours"},{"location":"apis/public/ProjectsFlavoursFlavours/#projectsflavoursflavours","text":"","title":"ProjectsFlavoursFlavours"},{"location":"apis/public/ProjectsFlavoursFlavours/#properties","text":"Name Type Description Notes display_name str [optional] name str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ProjectsFlavoursQuota/","text":"ProjectsFlavoursQuota \u00b6 Properties \u00b6 Name Type Description Notes name str proj_key str quotas list[FlavoursQuota] [Back to Model list] [Back to API list] [Back to README]","title":"ProjectsFlavoursQuota"},{"location":"apis/public/ProjectsFlavoursQuota/#projectsflavoursquota","text":"","title":"ProjectsFlavoursQuota"},{"location":"apis/public/ProjectsFlavoursQuota/#properties","text":"Name Type Description Notes name str proj_key str quotas list[FlavoursQuota] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/RelatedTask/","text":"RelatedTask \u00b6 Properties \u00b6 Name Type Description Notes task_id str task_type str [Back to Model list] [Back to API list] [Back to README]","title":"RelatedTask"},{"location":"apis/public/RelatedTask/#relatedtask","text":"","title":"RelatedTask"},{"location":"apis/public/RelatedTask/#properties","text":"Name Type Description Notes task_id str task_type str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/RelationshipAnnotationColumn/","text":"RelationshipAnnotationColumn \u00b6 Properties \u00b6 Name Type Description Notes entities list[str] key str [Back to Model list] [Back to API list] [Back to README]","title":"RelationshipAnnotationColumn"},{"location":"apis/public/RelationshipAnnotationColumn/#relationshipannotationcolumn","text":"","title":"RelationshipAnnotationColumn"},{"location":"apis/public/RelationshipAnnotationColumn/#properties","text":"Name Type Description Notes entities list[str] key str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/RelationshipAnnotationDescriptor/","text":"RelationshipAnnotationDescriptor \u00b6 Properties \u00b6 Name Type Description Notes columns list[RelationshipAnnotationColumn] description str key str [Back to Model list] [Back to API list] [Back to README]","title":"RelationshipAnnotationDescriptor"},{"location":"apis/public/RelationshipAnnotationDescriptor/#relationshipannotationdescriptor","text":"","title":"RelationshipAnnotationDescriptor"},{"location":"apis/public/RelationshipAnnotationDescriptor/#properties","text":"Name Type Description Notes columns list[RelationshipAnnotationColumn] description str key str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/RenderDataFlowTemplateOptions/","text":"RenderDataFlowTemplateOptions \u00b6 Properties \u00b6 Name Type Description Notes target_bag ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag variables dict(str, object) [Back to Model list] [Back to API list] [Back to README]","title":"RenderDataFlowTemplateOptions"},{"location":"apis/public/RenderDataFlowTemplateOptions/#renderdataflowtemplateoptions","text":"","title":"RenderDataFlowTemplateOptions"},{"location":"apis/public/RenderDataFlowTemplateOptions/#properties","text":"Name Type Description Notes target_bag ProjectProjKeyKgcDataflowTemplatesDfTplKeyActionsLoadRenderTargetBag variables dict(str, object) [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/RestoreKnowledgeGraphBackupOptions/","text":"RestoreKnowledgeGraphBackupOptions \u00b6 Properties \u00b6 Name Type Description Notes coordinates S3CoordinatesWithBackupKey [optional] [Back to Model list] [Back to API list] [Back to README]","title":"RestoreKnowledgeGraphBackupOptions"},{"location":"apis/public/RestoreKnowledgeGraphBackupOptions/#restoreknowledgegraphbackupoptions","text":"","title":"RestoreKnowledgeGraphBackupOptions"},{"location":"apis/public/RestoreKnowledgeGraphBackupOptions/#properties","text":"Name Type Description Notes coordinates S3CoordinatesWithBackupKey [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/ResumeKnowledgeGraphOptions/","text":"ResumeKnowledgeGraphOptions \u00b6 Properties \u00b6 Name Type Description Notes reset bool [optional] snapshot_to_restore_id str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ResumeKnowledgeGraphOptions"},{"location":"apis/public/ResumeKnowledgeGraphOptions/#resumeknowledgegraphoptions","text":"","title":"ResumeKnowledgeGraphOptions"},{"location":"apis/public/ResumeKnowledgeGraphOptions/#properties","text":"Name Type Description Notes reset bool [optional] snapshot_to_restore_id str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/RunDataFlowTemplateOptions/","text":"RunDataFlowTemplateOptions \u00b6 Properties \u00b6 Name Type Description Notes target_bag_key str [optional] variables dict(str, object) [optional] [Back to Model list] [Back to API list] [Back to README]","title":"RunDataFlowTemplateOptions"},{"location":"apis/public/RunDataFlowTemplateOptions/#rundataflowtemplateoptions","text":"","title":"RunDataFlowTemplateOptions"},{"location":"apis/public/RunDataFlowTemplateOptions/#properties","text":"Name Type Description Notes target_bag_key str [optional] variables dict(str, object) [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/RunDataFlowTemplateOptions1/","text":"RunDataFlowTemplateOptions1 \u00b6 Properties \u00b6 Name Type Description Notes data_flow ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow log_task bool [default to True] variable_values dict(str, object) [Back to Model list] [Back to API list] [Back to README]","title":"RunDataFlowTemplateOptions1"},{"location":"apis/public/RunDataFlowTemplateOptions1/#rundataflowtemplateoptions1","text":"","title":"RunDataFlowTemplateOptions1"},{"location":"apis/public/RunDataFlowTemplateOptions1/#properties","text":"Name Type Description Notes data_flow ProjectProjKeyKgcRawDataflowTemplatesActionsRunDataFlow log_task bool [default to True] variable_values dict(str, object) [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/S3Coordinates/","text":"S3Coordinates \u00b6 If provided, the S3 data will be copied Properties \u00b6 Name Type Description Notes access_key str bucket str host str key_prefix str location str port int secret_key str ssl bool verify_ssl bool [Back to Model list] [Back to API list] [Back to README]","title":"S3Coordinates"},{"location":"apis/public/S3Coordinates/#s3coordinates","text":"If provided, the S3 data will be copied","title":"S3Coordinates"},{"location":"apis/public/S3Coordinates/#properties","text":"Name Type Description Notes access_key str bucket str host str key_prefix str location str port int secret_key str ssl bool verify_ssl bool [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/S3CoordinatesWithBackupKey/","text":"S3CoordinatesWithBackupKey \u00b6 Properties \u00b6 Name Type Description Notes access_key str [optional] backup_key str bucket str host str [optional] location str [optional] port int [optional] presigned S3CoordinatesWithBackupKeyPresigned [optional] secret_key str [optional] ssl bool [optional] verify_ssl bool [optional] [Back to Model list] [Back to API list] [Back to README]","title":"S3CoordinatesWithBackupKey"},{"location":"apis/public/S3CoordinatesWithBackupKey/#s3coordinateswithbackupkey","text":"","title":"S3CoordinatesWithBackupKey"},{"location":"apis/public/S3CoordinatesWithBackupKey/#properties","text":"Name Type Description Notes access_key str [optional] backup_key str bucket str host str [optional] location str [optional] port int [optional] presigned S3CoordinatesWithBackupKeyPresigned [optional] secret_key str [optional] ssl bool [optional] verify_ssl bool [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/S3CoordinatesWithBackupKeyPresigned/","text":"S3CoordinatesWithBackupKeyPresigned \u00b6 Properties \u00b6 Name Type Description Notes fields dict(str, object) url str [Back to Model list] [Back to API list] [Back to README]","title":"S3CoordinatesWithBackupKeyPresigned"},{"location":"apis/public/S3CoordinatesWithBackupKeyPresigned/#s3coordinateswithbackupkeypresigned","text":"","title":"S3CoordinatesWithBackupKeyPresigned"},{"location":"apis/public/S3CoordinatesWithBackupKeyPresigned/#properties","text":"Name Type Description Notes fields dict(str, object) url str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/StorageSummaryDC/","text":"StorageSummaryDC \u00b6 Properties \u00b6 Name Type Description Notes dc_key str name str size_bytes_db float size_bytes_s3 float size_converted_db str size_converted_s3 str [Back to Model list] [Back to API list] [Back to README]","title":"StorageSummaryDC"},{"location":"apis/public/StorageSummaryDC/#storagesummarydc","text":"","title":"StorageSummaryDC"},{"location":"apis/public/StorageSummaryDC/#properties","text":"Name Type Description Notes dc_key str name str size_bytes_db float size_bytes_s3 float size_converted_db str size_converted_s3 str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/StorageSummaryKG/","text":"StorageSummaryKG \u00b6 Properties \u00b6 Name Type Description Notes bag_key str categories_fraction list[StorageSummaryKGCategoriesFraction] name str size_bytes_db float size_bytes_s3 float size_converted_db str size_converted_s3 str [Back to Model list] [Back to API list] [Back to README]","title":"StorageSummaryKG"},{"location":"apis/public/StorageSummaryKG/#storagesummarykg","text":"","title":"StorageSummaryKG"},{"location":"apis/public/StorageSummaryKG/#properties","text":"Name Type Description Notes bag_key str categories_fraction list[StorageSummaryKGCategoriesFraction] name str size_bytes_db float size_bytes_s3 float size_converted_db str size_converted_s3 str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/StorageSummaryKGCategoriesFraction/","text":"StorageSummaryKGCategoriesFraction \u00b6 Properties \u00b6 Name Type Description Notes color str [optional] name str percentage float size_bytes_db float size_converted_db str [Back to Model list] [Back to API list] [Back to README]","title":"StorageSummaryKGCategoriesFraction"},{"location":"apis/public/StorageSummaryKGCategoriesFraction/#storagesummarykgcategoriesfraction","text":"","title":"StorageSummaryKGCategoriesFraction"},{"location":"apis/public/StorageSummaryKGCategoriesFraction/#properties","text":"Name Type Description Notes color str [optional] name str percentage float size_bytes_db float size_converted_db str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/StorageSummaryTask/","text":"StorageSummaryTask \u00b6 Properties \u00b6 Name Type Description Notes dc_key str [optional] kg_key str [optional] kind str proj_key str task_id str [Back to Model list] [Back to API list] [Back to README]","title":"StorageSummaryTask"},{"location":"apis/public/StorageSummaryTask/#storagesummarytask","text":"","title":"StorageSummaryTask"},{"location":"apis/public/StorageSummaryTask/#properties","text":"Name Type Description Notes dc_key str [optional] kg_key str [optional] kind str proj_key str task_id str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/SupportedAnnotatorAnnotations/","text":"SupportedAnnotatorAnnotations \u00b6 Properties \u00b6 Name Type Description Notes entities list[EntityAnnotationDescriptor] relationships list[RelationshipAnnotationDescriptor] supported_object_types list[str] [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SupportedAnnotatorAnnotations"},{"location":"apis/public/SupportedAnnotatorAnnotations/#supportedannotatorannotations","text":"","title":"SupportedAnnotatorAnnotations"},{"location":"apis/public/SupportedAnnotatorAnnotations/#properties","text":"Name Type Description Notes entities list[EntityAnnotationDescriptor] relationships list[RelationshipAnnotationDescriptor] supported_object_types list[str] [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/SuspendKnowledgeGraphOptions/","text":"SuspendKnowledgeGraphOptions \u00b6 Properties \u00b6 Name Type Description Notes force bool If true, the KG will be suspended even if it's busy snapshot ProjectProjKeyBagsBagKeyTasksSuspendSnapshot [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SuspendKnowledgeGraphOptions"},{"location":"apis/public/SuspendKnowledgeGraphOptions/#suspendknowledgegraphoptions","text":"","title":"SuspendKnowledgeGraphOptions"},{"location":"apis/public/SuspendKnowledgeGraphOptions/#properties","text":"Name Type Description Notes force bool If true, the KG will be suspended even if it's busy snapshot ProjectProjKeyBagsBagKeyTasksSuspendSnapshot [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/SystemApi/","text":"deepsearch.cps.apis.public.SystemApi \u00b6 All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description delete_flavour DELETE /system/admin/delete_flavour/{flavour_name} get_flavour GET /system/admin/get_flavour/{flavour_name} get_flavours_default_quotas GET /system/admin/get_flavours_default_quota get_project_flavour_total_kgs GET /system/admin/get_project_flavour_total_kgs/{proj_key}/{flavour_name} get_project_flavours_quota GET /system/admin/get_project_flavours_quota/{proj_key} get_projects_flavours_quota GET /system/admin/get_projects_flavours_quota get_system_information GET /system/info get_system_modules_configuration GET /system/modules/configuration get_system_modules_tasks GET /system/modules/tasks get_version_report GET /deployment/info list_all_flavours GET /system/admin/list_all_flavours list_flavours_by_project GET /system/admin/get_project_flavours/{proj_key} list_packages GET /system/packages list_projects_flavours GET /system/admin/list_projects_flavours list_system_knowledge_graphs GET /system/kgs save_flavour PUT /system/admin/save_flavour save_flavours_default_quotas PUT /system/admin/save_flavours_default_quota save_project_flavours PUT /system/admin/save_project_flavours save_project_flavours_quota PUT /system/admin/save_project_flavours_quota system_get_all_dcs_admin GET /system/admin/get_all_dcs system_get_all_kgs_admin GET /system/admin/get_all_kgs system_get_cps_summary GET /system/admin/summary system_get_dc_storage_summary_async GET /system/admin/dc_storage_summary/{dc_key} system_get_kg_storage_summary_async GET /system/admin/kg_storage_summary/{kg_key} delete_flavour \u00b6 delete_flavour(flavour_name) Delete flavour from db Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) flavour_name = 'flavour_name_example' # str | try : api_instance . delete_flavour ( flavour_name ) except ApiException as e : print ( \"Exception when calling SystemApi->delete_flavour: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes flavour_name str Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Deleted flavour successful - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_flavour \u00b6 BagFlavourFullData get_flavour(flavour_name) Get flavour from db Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) flavour_name = 'flavour_name_example' # str | try : api_response = api_instance . get_flavour ( flavour_name ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->get_flavour: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes flavour_name str Return type \u00b6 BagFlavourFullData Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Get flavour successful - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_flavours_default_quotas \u00b6 list[BagFlavourDefaultQuota] get_flavours_default_quotas() Get flavours default values Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . get_flavours_default_quotas () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->get_flavours_default_quotas: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 list[BagFlavourDefaultQuota] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Flavours default values - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_project_flavour_total_kgs \u00b6 ProjectFlavourTotalKgs get_project_flavour_total_kgs(proj_key, flavour_name) Gets kg total number by proj_key and flavour_key Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) proj_key = 'proj_key_example' # str | flavour_name = 'flavour_name_example' # str | try : api_response = api_instance . get_project_flavour_total_kgs ( proj_key , flavour_name ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->get_project_flavour_total_kgs: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str flavour_name str Return type \u00b6 ProjectFlavourTotalKgs Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Project flavours total kg number - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_project_flavours_quota \u00b6 list[FlavoursQuota] get_project_flavours_quota(proj_key) Get project flavours quota Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) proj_key = 'proj_key_example' # str | try : api_response = api_instance . get_project_flavours_quota ( proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->get_project_flavours_quota: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str Return type \u00b6 list[FlavoursQuota] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Project flavours quota - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_projects_flavours_quota \u00b6 list[ProjectsFlavoursQuota] get_projects_flavours_quota() Get projects flavours quotas Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . get_projects_flavours_quota () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->get_projects_flavours_quota: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 list[ProjectsFlavoursQuota] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Projects flavours quotas - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_system_information \u00b6 SystemInfo get_system_information() Get system info Example \u00b6 from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient () as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . get_system_information () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->get_system_information: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 SystemInfo Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 OK - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_system_modules_configuration \u00b6 SystemModulesConfiguration get_system_modules_configuration() Get modules configuration Example \u00b6 from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient () as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . get_system_modules_configuration () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->get_system_modules_configuration: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 SystemModulesConfiguration Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 Modules configuration - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_system_modules_tasks \u00b6 SystemModulesTasks get_system_modules_tasks() Get modules tasks Example \u00b6 from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient () as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . get_system_modules_tasks () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->get_system_modules_tasks: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 SystemModulesTasks Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 Modules tasks - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_version_report \u00b6 get_version_report() Get deployment version report Example \u00b6 Api Key Authentication (ManagementKey): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: ManagementKey configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_instance . get_version_report () except ApiException as e : print ( \"Exception when calling SystemApi->get_version_report: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 void (empty response body) Authorization \u00b6 ManagementKey HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 401 Authentication failed, management api token is invalid or doesn't match - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_all_flavours \u00b6 list[BagFlavourFullData] list_all_flavours() Get all KG flavours storage on db Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . list_all_flavours () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->list_all_flavours: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 list[BagFlavourFullData] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Flavours storage on db - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_flavours_by_project \u00b6 ProjectFlavours list_flavours_by_project(proj_key) Get project assignment flavours Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) proj_key = 'proj_key_example' # str | try : api_response = api_instance . list_flavours_by_project ( proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->list_flavours_by_project: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str Return type \u00b6 ProjectFlavours Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Ok - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_packages \u00b6 list[CpsPackage] list_packages() Get packages available in this CPS installation for installing in a project. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . list_packages () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->list_packages: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 list[CpsPackage] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Packages available to this CPS installation - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_projects_flavours \u00b6 list[ProjectsFlavours] list_projects_flavours() Get all projects and their flavours Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . list_projects_flavours () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->list_projects_flavours: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 list[ProjectsFlavours] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Flavours storage on db - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_system_knowledge_graphs \u00b6 list[KnowledgeGraphSystemInformation] list_system_knowledge_graphs(proj_key=proj_key, term=term) List all Knowledge Graphs in the system Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) proj_key = 'proj_key_example' # str | (optional) term = 'term_example' # str | (optional) try : api_response = api_instance . list_system_knowledge_graphs ( proj_key = proj_key , term = term ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->list_system_knowledge_graphs: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str [optional] term str [optional] Return type \u00b6 list[KnowledgeGraphSystemInformation] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 0 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] save_flavour \u00b6 save_flavour(new_flavour, body) Save flavour on db Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) new_flavour = True # bool | body = deepsearch . cps . apis . public . BagFlavourFullData () # BagFlavourFullData | try : api_instance . save_flavour ( new_flavour , body ) except ApiException as e : print ( \"Exception when calling SystemApi->save_flavour: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes new_flavour bool body BagFlavourFullData Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Save flavour successful - 409 Flavour name already taken - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] save_flavours_default_quotas \u00b6 list[BagFlavourDefaultQuota] save_flavours_default_quotas(flavours) Save flavours default quota Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) flavours = [ deepsearch . cps . apis . public . BagFlavourDefaultQuota ()] # list[BagFlavourDefaultQuota] | try : api_response = api_instance . save_flavours_default_quotas ( flavours ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->save_flavours_default_quotas: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes flavours list[BagFlavourDefaultQuota] Return type \u00b6 list[BagFlavourDefaultQuota] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Save flavours default quotas successful - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] save_project_flavours \u00b6 save_project_flavours(body) Save project flavours assignment on db Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) body = deepsearch . cps . apis . public . ProjectsFlavours () # ProjectsFlavours | try : api_instance . save_project_flavours ( body ) except ApiException as e : print ( \"Exception when calling SystemApi->save_project_flavours: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes body ProjectsFlavours Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Save project flavours successful - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] save_project_flavours_quota \u00b6 save_project_flavours_quota(projects_flavours_quotas) Save project flavours quota Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) projects_flavours_quotas = deepsearch . cps . apis . public . ProjectsFlavoursQuota () # ProjectsFlavoursQuota | try : api_instance . save_project_flavours_quota ( projects_flavours_quotas ) except ApiException as e : print ( \"Exception when calling SystemApi->save_project_flavours_quota: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes projects_flavours_quotas ProjectsFlavoursQuota Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Save project flavours quota successful - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] system_get_all_dcs_admin \u00b6 list[str] system_get_all_dcs_admin() Get all data catalogs (only dc_key) for admin use Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . system_get_all_dcs_admin () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->system_get_all_dcs_admin: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 list[str] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Array with all dcs's key - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] system_get_all_kgs_admin \u00b6 list[str] system_get_all_kgs_admin() Get all kgs (only bag_key) for admin use Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . system_get_all_kgs_admin () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->system_get_all_kgs_admin: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 list[str] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Array with all kgs's key - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] system_get_cps_summary \u00b6 list[InlineResponse2003] system_get_cps_summary() Get cps summary data. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . system_get_cps_summary () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->system_get_cps_summary: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 list[InlineResponse2003] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Cps summary - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] system_get_dc_storage_summary_async \u00b6 StorageSummaryTask system_get_dc_storage_summary_async(dc_key) Get dc storage summary Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) dc_key = 'dc_key_example' # str | Data catalog key try : api_response = api_instance . system_get_dc_storage_summary_async ( dc_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->system_get_dc_storage_summary_async: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes dc_key str Data catalog key Return type \u00b6 StorageSummaryTask Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 DC storage summary - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README] system_get_kg_storage_summary_async \u00b6 StorageSummaryTask system_get_kg_storage_summary_async(kg_key) Get kg storage summary Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) kg_key = 'kg_key_example' # str | Knowledge graph key try : api_response = api_instance . system_get_kg_storage_summary_async ( kg_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->system_get_kg_storage_summary_async: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes kg_key str Knowledge graph key Return type \u00b6 StorageSummaryTask Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Kg storage summary - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"deepsearch.cps.apis.public.SystemApi"},{"location":"apis/public/SystemApi/#deepsearchcpsapispublicsystemapi","text":"All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description delete_flavour DELETE /system/admin/delete_flavour/{flavour_name} get_flavour GET /system/admin/get_flavour/{flavour_name} get_flavours_default_quotas GET /system/admin/get_flavours_default_quota get_project_flavour_total_kgs GET /system/admin/get_project_flavour_total_kgs/{proj_key}/{flavour_name} get_project_flavours_quota GET /system/admin/get_project_flavours_quota/{proj_key} get_projects_flavours_quota GET /system/admin/get_projects_flavours_quota get_system_information GET /system/info get_system_modules_configuration GET /system/modules/configuration get_system_modules_tasks GET /system/modules/tasks get_version_report GET /deployment/info list_all_flavours GET /system/admin/list_all_flavours list_flavours_by_project GET /system/admin/get_project_flavours/{proj_key} list_packages GET /system/packages list_projects_flavours GET /system/admin/list_projects_flavours list_system_knowledge_graphs GET /system/kgs save_flavour PUT /system/admin/save_flavour save_flavours_default_quotas PUT /system/admin/save_flavours_default_quota save_project_flavours PUT /system/admin/save_project_flavours save_project_flavours_quota PUT /system/admin/save_project_flavours_quota system_get_all_dcs_admin GET /system/admin/get_all_dcs system_get_all_kgs_admin GET /system/admin/get_all_kgs system_get_cps_summary GET /system/admin/summary system_get_dc_storage_summary_async GET /system/admin/dc_storage_summary/{dc_key} system_get_kg_storage_summary_async GET /system/admin/kg_storage_summary/{kg_key}","title":"deepsearch.cps.apis.public.SystemApi"},{"location":"apis/public/SystemApi/#delete_flavour","text":"delete_flavour(flavour_name) Delete flavour from db","title":"delete_flavour"},{"location":"apis/public/SystemApi/#example","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) flavour_name = 'flavour_name_example' # str | try : api_instance . delete_flavour ( flavour_name ) except ApiException as e : print ( \"Exception when calling SystemApi->delete_flavour: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters","text":"Name Type Description Notes flavour_name str","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/SystemApi/#authorization","text":"Bearer","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details","text":"Status code Description Response headers 200 Deleted flavour successful - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#get_flavour","text":"BagFlavourFullData get_flavour(flavour_name) Get flavour from db","title":"get_flavour"},{"location":"apis/public/SystemApi/#example_1","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) flavour_name = 'flavour_name_example' # str | try : api_response = api_instance . get_flavour ( flavour_name ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->get_flavour: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_1","text":"Name Type Description Notes flavour_name str","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_1","text":"BagFlavourFullData","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_1","text":"Bearer","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_1","text":"Status code Description Response headers 200 Get flavour successful - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#get_flavours_default_quotas","text":"list[BagFlavourDefaultQuota] get_flavours_default_quotas() Get flavours default values","title":"get_flavours_default_quotas"},{"location":"apis/public/SystemApi/#example_2","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . get_flavours_default_quotas () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->get_flavours_default_quotas: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_2","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_2","text":"list[BagFlavourDefaultQuota]","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_2","text":"Bearer","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_2","text":"Status code Description Response headers 200 Flavours default values - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#get_project_flavour_total_kgs","text":"ProjectFlavourTotalKgs get_project_flavour_total_kgs(proj_key, flavour_name) Gets kg total number by proj_key and flavour_key","title":"get_project_flavour_total_kgs"},{"location":"apis/public/SystemApi/#example_3","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) proj_key = 'proj_key_example' # str | flavour_name = 'flavour_name_example' # str | try : api_response = api_instance . get_project_flavour_total_kgs ( proj_key , flavour_name ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->get_project_flavour_total_kgs: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_3","text":"Name Type Description Notes proj_key str flavour_name str","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_3","text":"ProjectFlavourTotalKgs","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_3","text":"Bearer","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_3","text":"Status code Description Response headers 200 Project flavours total kg number - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#get_project_flavours_quota","text":"list[FlavoursQuota] get_project_flavours_quota(proj_key) Get project flavours quota","title":"get_project_flavours_quota"},{"location":"apis/public/SystemApi/#example_4","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) proj_key = 'proj_key_example' # str | try : api_response = api_instance . get_project_flavours_quota ( proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->get_project_flavours_quota: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_4","text":"Name Type Description Notes proj_key str","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_4","text":"list[FlavoursQuota]","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_4","text":"Bearer","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_4","text":"Status code Description Response headers 200 Project flavours quota - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#get_projects_flavours_quota","text":"list[ProjectsFlavoursQuota] get_projects_flavours_quota() Get projects flavours quotas","title":"get_projects_flavours_quota"},{"location":"apis/public/SystemApi/#example_5","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . get_projects_flavours_quota () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->get_projects_flavours_quota: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_5","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_5","text":"list[ProjectsFlavoursQuota]","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_5","text":"Bearer","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_5","text":"Status code Description Response headers 200 Projects flavours quotas - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#get_system_information","text":"SystemInfo get_system_information() Get system info","title":"get_system_information"},{"location":"apis/public/SystemApi/#example_6","text":"from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient () as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . get_system_information () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->get_system_information: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_6","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_6","text":"SystemInfo","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_6","text":"No authorization required","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_6","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_6","text":"Status code Description Response headers 201 OK - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#get_system_modules_configuration","text":"SystemModulesConfiguration get_system_modules_configuration() Get modules configuration","title":"get_system_modules_configuration"},{"location":"apis/public/SystemApi/#example_7","text":"from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient () as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . get_system_modules_configuration () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->get_system_modules_configuration: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_7","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_7","text":"SystemModulesConfiguration","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_7","text":"No authorization required","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_7","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_7","text":"Status code Description Response headers 201 Modules configuration - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#get_system_modules_tasks","text":"SystemModulesTasks get_system_modules_tasks() Get modules tasks","title":"get_system_modules_tasks"},{"location":"apis/public/SystemApi/#example_8","text":"from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient () as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . get_system_modules_tasks () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->get_system_modules_tasks: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_8","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_8","text":"SystemModulesTasks","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_8","text":"No authorization required","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_8","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_8","text":"Status code Description Response headers 201 Modules tasks - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#get_version_report","text":"get_version_report() Get deployment version report","title":"get_version_report"},{"location":"apis/public/SystemApi/#example_9","text":"Api Key Authentication (ManagementKey): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: ManagementKey configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_instance . get_version_report () except ApiException as e : print ( \"Exception when calling SystemApi->get_version_report: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_9","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_9","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_9","text":"ManagementKey","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_9","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_9","text":"Status code Description Response headers 200 OK - 401 Authentication failed, management api token is invalid or doesn't match - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#list_all_flavours","text":"list[BagFlavourFullData] list_all_flavours() Get all KG flavours storage on db","title":"list_all_flavours"},{"location":"apis/public/SystemApi/#example_10","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . list_all_flavours () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->list_all_flavours: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_10","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_10","text":"list[BagFlavourFullData]","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_10","text":"Bearer","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_10","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_10","text":"Status code Description Response headers 200 Flavours storage on db - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#list_flavours_by_project","text":"ProjectFlavours list_flavours_by_project(proj_key) Get project assignment flavours","title":"list_flavours_by_project"},{"location":"apis/public/SystemApi/#example_11","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) proj_key = 'proj_key_example' # str | try : api_response = api_instance . list_flavours_by_project ( proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->list_flavours_by_project: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_11","text":"Name Type Description Notes proj_key str","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_11","text":"ProjectFlavours","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_11","text":"Bearer","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_11","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_11","text":"Status code Description Response headers 200 Ok - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#list_packages","text":"list[CpsPackage] list_packages() Get packages available in this CPS installation for installing in a project.","title":"list_packages"},{"location":"apis/public/SystemApi/#example_12","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . list_packages () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->list_packages: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_12","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_12","text":"list[CpsPackage]","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_12","text":"Bearer","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_12","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_12","text":"Status code Description Response headers 200 Packages available to this CPS installation - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#list_projects_flavours","text":"list[ProjectsFlavours] list_projects_flavours() Get all projects and their flavours","title":"list_projects_flavours"},{"location":"apis/public/SystemApi/#example_13","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . list_projects_flavours () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->list_projects_flavours: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_13","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_13","text":"list[ProjectsFlavours]","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_13","text":"Bearer","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_13","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_13","text":"Status code Description Response headers 200 Flavours storage on db - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#list_system_knowledge_graphs","text":"list[KnowledgeGraphSystemInformation] list_system_knowledge_graphs(proj_key=proj_key, term=term) List all Knowledge Graphs in the system","title":"list_system_knowledge_graphs"},{"location":"apis/public/SystemApi/#example_14","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) proj_key = 'proj_key_example' # str | (optional) term = 'term_example' # str | (optional) try : api_response = api_instance . list_system_knowledge_graphs ( proj_key = proj_key , term = term ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->list_system_knowledge_graphs: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_14","text":"Name Type Description Notes proj_key str [optional] term str [optional]","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_14","text":"list[KnowledgeGraphSystemInformation]","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_14","text":"Bearer","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_14","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_14","text":"Status code Description Response headers 200 OK - 0 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#save_flavour","text":"save_flavour(new_flavour, body) Save flavour on db","title":"save_flavour"},{"location":"apis/public/SystemApi/#example_15","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) new_flavour = True # bool | body = deepsearch . cps . apis . public . BagFlavourFullData () # BagFlavourFullData | try : api_instance . save_flavour ( new_flavour , body ) except ApiException as e : print ( \"Exception when calling SystemApi->save_flavour: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_15","text":"Name Type Description Notes new_flavour bool body BagFlavourFullData","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_15","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_15","text":"Bearer","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_15","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_15","text":"Status code Description Response headers 200 Save flavour successful - 409 Flavour name already taken - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#save_flavours_default_quotas","text":"list[BagFlavourDefaultQuota] save_flavours_default_quotas(flavours) Save flavours default quota","title":"save_flavours_default_quotas"},{"location":"apis/public/SystemApi/#example_16","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) flavours = [ deepsearch . cps . apis . public . BagFlavourDefaultQuota ()] # list[BagFlavourDefaultQuota] | try : api_response = api_instance . save_flavours_default_quotas ( flavours ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->save_flavours_default_quotas: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_16","text":"Name Type Description Notes flavours list[BagFlavourDefaultQuota]","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_16","text":"list[BagFlavourDefaultQuota]","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_16","text":"Bearer","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_16","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_16","text":"Status code Description Response headers 200 Save flavours default quotas successful - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#save_project_flavours","text":"save_project_flavours(body) Save project flavours assignment on db","title":"save_project_flavours"},{"location":"apis/public/SystemApi/#example_17","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) body = deepsearch . cps . apis . public . ProjectsFlavours () # ProjectsFlavours | try : api_instance . save_project_flavours ( body ) except ApiException as e : print ( \"Exception when calling SystemApi->save_project_flavours: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_17","text":"Name Type Description Notes body ProjectsFlavours","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_17","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_17","text":"Bearer","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_17","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_17","text":"Status code Description Response headers 200 Save project flavours successful - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#save_project_flavours_quota","text":"save_project_flavours_quota(projects_flavours_quotas) Save project flavours quota","title":"save_project_flavours_quota"},{"location":"apis/public/SystemApi/#example_18","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) projects_flavours_quotas = deepsearch . cps . apis . public . ProjectsFlavoursQuota () # ProjectsFlavoursQuota | try : api_instance . save_project_flavours_quota ( projects_flavours_quotas ) except ApiException as e : print ( \"Exception when calling SystemApi->save_project_flavours_quota: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_18","text":"Name Type Description Notes projects_flavours_quotas ProjectsFlavoursQuota","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_18","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_18","text":"Bearer","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_18","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_18","text":"Status code Description Response headers 200 Save project flavours quota successful - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#system_get_all_dcs_admin","text":"list[str] system_get_all_dcs_admin() Get all data catalogs (only dc_key) for admin use","title":"system_get_all_dcs_admin"},{"location":"apis/public/SystemApi/#example_19","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . system_get_all_dcs_admin () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->system_get_all_dcs_admin: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_19","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_19","text":"list[str]","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_19","text":"Bearer","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_19","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_19","text":"Status code Description Response headers 200 Array with all dcs's key - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#system_get_all_kgs_admin","text":"list[str] system_get_all_kgs_admin() Get all kgs (only bag_key) for admin use","title":"system_get_all_kgs_admin"},{"location":"apis/public/SystemApi/#example_20","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . system_get_all_kgs_admin () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->system_get_all_kgs_admin: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_20","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_20","text":"list[str]","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_20","text":"Bearer","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_20","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_20","text":"Status code Description Response headers 200 Array with all kgs's key - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#system_get_cps_summary","text":"list[InlineResponse2003] system_get_cps_summary() Get cps summary data.","title":"system_get_cps_summary"},{"location":"apis/public/SystemApi/#example_21","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) try : api_response = api_instance . system_get_cps_summary () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->system_get_cps_summary: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_21","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_21","text":"list[InlineResponse2003]","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_21","text":"Bearer","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_21","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_21","text":"Status code Description Response headers 200 Cps summary - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#system_get_dc_storage_summary_async","text":"StorageSummaryTask system_get_dc_storage_summary_async(dc_key) Get dc storage summary","title":"system_get_dc_storage_summary_async"},{"location":"apis/public/SystemApi/#example_22","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) dc_key = 'dc_key_example' # str | Data catalog key try : api_response = api_instance . system_get_dc_storage_summary_async ( dc_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->system_get_dc_storage_summary_async: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_22","text":"Name Type Description Notes dc_key str Data catalog key","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_22","text":"StorageSummaryTask","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_22","text":"Bearer","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_22","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_22","text":"Status code Description Response headers 200 DC storage summary - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemApi/#system_get_kg_storage_summary_async","text":"StorageSummaryTask system_get_kg_storage_summary_async(kg_key) Get kg storage summary","title":"system_get_kg_storage_summary_async"},{"location":"apis/public/SystemApi/#example_23","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . SystemApi ( api_client ) kg_key = 'kg_key_example' # str | Knowledge graph key try : api_response = api_instance . system_get_kg_storage_summary_async ( kg_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SystemApi->system_get_kg_storage_summary_async: %s \\n \" % e )","title":"Example"},{"location":"apis/public/SystemApi/#parameters_23","text":"Name Type Description Notes kg_key str Knowledge graph key","title":"Parameters"},{"location":"apis/public/SystemApi/#return-type_23","text":"StorageSummaryTask","title":"Return type"},{"location":"apis/public/SystemApi/#authorization_23","text":"Bearer","title":"Authorization"},{"location":"apis/public/SystemApi/#http-request-headers_23","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/SystemApi/#http-response-details_23","text":"Status code Description Response headers 200 Kg storage summary - 500 Error occured on the server - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/SystemCeleryTasksFailureFailures/","text":"SystemCeleryTasksFailureFailures \u00b6 Properties \u00b6 Name Type Description Notes logs dict(str, object) [optional] meta dict(str, object) [optional] task_id str [optional] worker_name str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SystemCeleryTasksFailureFailures"},{"location":"apis/public/SystemCeleryTasksFailureFailures/#systemcelerytasksfailurefailures","text":"","title":"SystemCeleryTasksFailureFailures"},{"location":"apis/public/SystemCeleryTasksFailureFailures/#properties","text":"Name Type Description Notes logs dict(str, object) [optional] meta dict(str, object) [optional] task_id str [optional] worker_name str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/SystemInfo/","text":"SystemInfo \u00b6 Properties \u00b6 Name Type Description Notes allow_non_admins_to_make_resources_public bool [optional] api SystemInfoApi [optional] deployment SystemInfoDeployment [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SystemInfo"},{"location":"apis/public/SystemInfo/#systeminfo","text":"","title":"SystemInfo"},{"location":"apis/public/SystemInfo/#properties","text":"Name Type Description Notes allow_non_admins_to_make_resources_public bool [optional] api SystemInfoApi [optional] deployment SystemInfoDeployment [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/SystemInfoApi/","text":"SystemInfoApi \u00b6 Properties \u00b6 Name Type Description Notes build_date int [optional] commit_hash str [optional] version str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SystemInfoApi"},{"location":"apis/public/SystemInfoApi/#systeminfoapi","text":"","title":"SystemInfoApi"},{"location":"apis/public/SystemInfoApi/#properties","text":"Name Type Description Notes build_date int [optional] commit_hash str [optional] version str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/SystemInfoDeployment/","text":"SystemInfoDeployment \u00b6 Properties \u00b6 Name Type Description Notes disable_kg_actions bool [optional] disclaimer str [optional] linked_ccs_api SystemInfoDeploymentLinkedCcsApi [optional] name str [optional] should_show_warning bool [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SystemInfoDeployment"},{"location":"apis/public/SystemInfoDeployment/#systeminfodeployment","text":"","title":"SystemInfoDeployment"},{"location":"apis/public/SystemInfoDeployment/#properties","text":"Name Type Description Notes disable_kg_actions bool [optional] disclaimer str [optional] linked_ccs_api SystemInfoDeploymentLinkedCcsApi [optional] name str [optional] should_show_warning bool [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/SystemInfoDeploymentLinkedCcsApi/","text":"SystemInfoDeploymentLinkedCcsApi \u00b6 Properties \u00b6 Name Type Description Notes project_sync bool [optional] uri str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SystemInfoDeploymentLinkedCcsApi"},{"location":"apis/public/SystemInfoDeploymentLinkedCcsApi/#systeminfodeploymentlinkedccsapi","text":"","title":"SystemInfoDeploymentLinkedCcsApi"},{"location":"apis/public/SystemInfoDeploymentLinkedCcsApi/#properties","text":"Name Type Description Notes project_sync bool [optional] uri str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/SystemKgsBackend/","text":"SystemKgsBackend \u00b6 Properties \u00b6 Name Type Description Notes deployment SystemKgsDeployment [optional] flavour str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SystemKgsBackend"},{"location":"apis/public/SystemKgsBackend/#systemkgsbackend","text":"","title":"SystemKgsBackend"},{"location":"apis/public/SystemKgsBackend/#properties","text":"Name Type Description Notes deployment SystemKgsDeployment [optional] flavour str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/SystemKgsDeployment/","text":"SystemKgsDeployment \u00b6 Properties \u00b6 Name Type Description Notes chart str [optional] flavour str [optional] name str [optional] resources dict(str, SystemKgsDeploymentResources) [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SystemKgsDeployment"},{"location":"apis/public/SystemKgsDeployment/#systemkgsdeployment","text":"","title":"SystemKgsDeployment"},{"location":"apis/public/SystemKgsDeployment/#properties","text":"Name Type Description Notes chart str [optional] flavour str [optional] name str [optional] resources dict(str, SystemKgsDeploymentResources) [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/SystemKgsDeploymentResources/","text":"SystemKgsDeploymentResources \u00b6 Properties \u00b6 Name Type Description Notes limits object [optional] requests object [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SystemKgsDeploymentResources"},{"location":"apis/public/SystemKgsDeploymentResources/#systemkgsdeploymentresources","text":"","title":"SystemKgsDeploymentResources"},{"location":"apis/public/SystemKgsDeploymentResources/#properties","text":"Name Type Description Notes limits object [optional] requests object [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/SystemModulesConfiguration/","text":"SystemModulesConfiguration \u00b6 Properties \u00b6 Name Type Description Notes df_template_variables list[WellKnownDfTemplateVariable] linked_ccs_instances list[LinkedCcsInstances] linked_elastic_instances list[LinkedCcsInstances] [Back to Model list] [Back to API list] [Back to README]","title":"SystemModulesConfiguration"},{"location":"apis/public/SystemModulesConfiguration/#systemmodulesconfiguration","text":"","title":"SystemModulesConfiguration"},{"location":"apis/public/SystemModulesConfiguration/#properties","text":"Name Type Description Notes df_template_variables list[WellKnownDfTemplateVariable] linked_ccs_instances list[LinkedCcsInstances] linked_elastic_instances list[LinkedCcsInstances] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/SystemModulesTasks/","text":"SystemModulesTasks \u00b6 Properties \u00b6 Name Type Description Notes tasks dict(str, SystemModulesTasksTasks) [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SystemModulesTasks"},{"location":"apis/public/SystemModulesTasks/#systemmodulestasks","text":"","title":"SystemModulesTasks"},{"location":"apis/public/SystemModulesTasks/#properties","text":"Name Type Description Notes tasks dict(str, SystemModulesTasksTasks) [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/SystemModulesTasksTasks/","text":"SystemModulesTasksTasks \u00b6 Properties \u00b6 Name Type Description Notes schema object [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SystemModulesTasksTasks"},{"location":"apis/public/SystemModulesTasksTasks/#systemmodulestaskstasks","text":"","title":"SystemModulesTasksTasks"},{"location":"apis/public/SystemModulesTasksTasks/#properties","text":"Name Type Description Notes schema object [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/TakeSnapshotSettings/","text":"TakeSnapshotSettings \u00b6 Properties \u00b6 Name Type Description Notes flavour str load_into_kg_after_created bool [optional] [default to False] name str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"TakeSnapshotSettings"},{"location":"apis/public/TakeSnapshotSettings/#takesnapshotsettings","text":"","title":"TakeSnapshotSettings"},{"location":"apis/public/TakeSnapshotSettings/#properties","text":"Name Type Description Notes flavour str load_into_kg_after_created bool [optional] [default to False] name str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/TakeSnapshotSettingsBackendAware/","text":"TakeSnapshotSettingsBackendAware \u00b6 Properties \u00b6 Name Type Description Notes backend_flavours BackendFlavour load_into_kg_after_created bool [optional] [default to False] name str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"TakeSnapshotSettingsBackendAware"},{"location":"apis/public/TakeSnapshotSettingsBackendAware/#takesnapshotsettingsbackendaware","text":"","title":"TakeSnapshotSettingsBackendAware"},{"location":"apis/public/TakeSnapshotSettingsBackendAware/#properties","text":"Name Type Description Notes backend_flavours BackendFlavour load_into_kg_after_created bool [optional] [default to False] name str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/Task/","text":"Task \u00b6 Properties \u00b6 Name Type Description Notes error_reason str kind str proj_key str related_tasks list[RelatedTask] [optional] task_id str task_status str task_type str [Back to Model list] [Back to API list] [Back to README]","title":"Task"},{"location":"apis/public/Task/#task","text":"","title":"Task"},{"location":"apis/public/Task/#properties","text":"Name Type Description Notes error_reason str kind str proj_key str related_tasks list[RelatedTask] [optional] task_id str task_status str task_type str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/TasksApi/","text":"deepsearch.cps.apis.public.TasksApi \u00b6 All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description abort_project_task POST /project/{proj_key}/tasks/{task_id}/actions/abort get_project_celery_task GET /project/{proj_key}/celery_tasks/{task_id} get_project_task GET /project/{proj_key}/tasks/{task_id} list_failure_celery_tasks GET /system/celery_tasks/failure list_project_tasks GET /project/{proj_key}/tasks list_system_celery_tasks GET /system/celery_tasks/status abort_project_task \u00b6 abort_project_task(proj_key, task_id) Abort a task. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . TasksApi ( api_client ) proj_key = 'proj_key_example' # str | task_id = 'task_id_example' # str | try : api_instance . abort_project_task ( proj_key , task_id ) except ApiException as e : print ( \"Exception when calling TasksApi->abort_project_task: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str task_id str Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 204 Task aborted. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_project_celery_task \u00b6 CeleryTaskPromise get_project_celery_task(proj_key, task_id) Get a celery task for a project. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . TasksApi ( api_client ) proj_key = 'proj_key_example' # str | task_id = 'task_id_example' # str | try : api_response = api_instance . get_project_celery_task ( proj_key , task_id ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling TasksApi->get_project_celery_task: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str task_id str Return type \u00b6 CeleryTaskPromise Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Task - 404 Task not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_project_task \u00b6 ProjectTask get_project_task(proj_key, task_id) Get a task for a project. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Configure API key authorization: KGAuth configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'X-CPS-KG-Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['X-CPS-KG-Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . TasksApi ( api_client ) proj_key = 'proj_key_example' # str | task_id = 'task_id_example' # str | try : api_response = api_instance . get_project_task ( proj_key , task_id ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling TasksApi->get_project_task: %s \\n \" % e ) Api Key Authentication (KGAuth): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Configure API key authorization: KGAuth configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'X-CPS-KG-Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['X-CPS-KG-Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . TasksApi ( api_client ) proj_key = 'proj_key_example' # str | task_id = 'task_id_example' # str | try : api_response = api_instance . get_project_task ( proj_key , task_id ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling TasksApi->get_project_task: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str task_id str Return type \u00b6 ProjectTask Authorization \u00b6 Bearer , KGAuth HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Task - 404 Task not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_failure_celery_tasks \u00b6 list[CeleryTask] list_failure_celery_tasks(proj_key, task_id) Get celery tasks that failed. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . TasksApi ( api_client ) proj_key = 'proj_key_example' # str | task_id = 'task_id_example' # str | try : api_response = api_instance . list_failure_celery_tasks ( proj_key , task_id ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling TasksApi->list_failure_celery_tasks: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str task_id str Return type \u00b6 list[CeleryTask] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Celery tasks - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_project_tasks \u00b6 list[ProjectTask] list_project_tasks(proj_key, task_type=task_type, limit=limit, skip=skip, sort_by=sort_by, sort_order=sort_order) List tasks for a project. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . TasksApi ( api_client ) proj_key = 'proj_key_example' # str | task_type = 'task_type_example' # str | (optional) limit = 50 # int | (optional) (default to 50) skip = 0 # int | (optional) (default to 0) sort_by = 'sort_by_example' # str | (optional) sort_order = 'asc' # str | (optional) (default to 'asc') try : api_response = api_instance . list_project_tasks ( proj_key , task_type = task_type , limit = limit , skip = skip , sort_by = sort_by , sort_order = sort_order ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling TasksApi->list_project_tasks: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str task_type str [optional] limit int [optional] [default to 50] skip int [optional] [default to 0] sort_by str [optional] sort_order str [optional] [default to 'asc'] Return type \u00b6 list[ProjectTask] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of tasks. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_system_celery_tasks \u00b6 list[CeleryTask1] list_system_celery_tasks(proj_key=proj_key, project_task_id=project_task_id, started_since=started_since, task_status=task_status, limit=limit) Get the status of Celery tasks. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . TasksApi ( api_client ) proj_key = 'proj_key_example' # str | (optional) project_task_id = 'project_task_id_example' # str | (optional) started_since = 3.4 # float | If set, return the tasks created at or after this timestamp. Otherwise, return the tasks created up to 60 minutes of the system's date, if `project_task_id` is not set. (optional) task_status = 3.4 # float | (optional) limit = 50 # int | (optional) (default to 50) try : api_response = api_instance . list_system_celery_tasks ( proj_key = proj_key , project_task_id = project_task_id , started_since = started_since , task_status = task_status , limit = limit ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling TasksApi->list_system_celery_tasks: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str [optional] project_task_id str [optional] started_since float If set, return the tasks created at or after this timestamp. Otherwise, return the tasks created up to 60 minutes of the system's date, if `project_task_id` is not set. [optional] task_status float [optional] limit int [optional] [default to 50] Return type \u00b6 list[CeleryTask1] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Celery tasks - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"deepsearch.cps.apis.public.TasksApi"},{"location":"apis/public/TasksApi/#deepsearchcpsapispublictasksapi","text":"All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description abort_project_task POST /project/{proj_key}/tasks/{task_id}/actions/abort get_project_celery_task GET /project/{proj_key}/celery_tasks/{task_id} get_project_task GET /project/{proj_key}/tasks/{task_id} list_failure_celery_tasks GET /system/celery_tasks/failure list_project_tasks GET /project/{proj_key}/tasks list_system_celery_tasks GET /system/celery_tasks/status","title":"deepsearch.cps.apis.public.TasksApi"},{"location":"apis/public/TasksApi/#abort_project_task","text":"abort_project_task(proj_key, task_id) Abort a task.","title":"abort_project_task"},{"location":"apis/public/TasksApi/#example","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . TasksApi ( api_client ) proj_key = 'proj_key_example' # str | task_id = 'task_id_example' # str | try : api_instance . abort_project_task ( proj_key , task_id ) except ApiException as e : print ( \"Exception when calling TasksApi->abort_project_task: %s \\n \" % e )","title":"Example"},{"location":"apis/public/TasksApi/#parameters","text":"Name Type Description Notes proj_key str task_id str","title":"Parameters"},{"location":"apis/public/TasksApi/#return-type","text":"void (empty response body)","title":"Return type"},{"location":"apis/public/TasksApi/#authorization","text":"Bearer","title":"Authorization"},{"location":"apis/public/TasksApi/#http-request-headers","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/TasksApi/#http-response-details","text":"Status code Description Response headers 204 Task aborted. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/TasksApi/#get_project_celery_task","text":"CeleryTaskPromise get_project_celery_task(proj_key, task_id) Get a celery task for a project.","title":"get_project_celery_task"},{"location":"apis/public/TasksApi/#example_1","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . TasksApi ( api_client ) proj_key = 'proj_key_example' # str | task_id = 'task_id_example' # str | try : api_response = api_instance . get_project_celery_task ( proj_key , task_id ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling TasksApi->get_project_celery_task: %s \\n \" % e )","title":"Example"},{"location":"apis/public/TasksApi/#parameters_1","text":"Name Type Description Notes proj_key str task_id str","title":"Parameters"},{"location":"apis/public/TasksApi/#return-type_1","text":"CeleryTaskPromise","title":"Return type"},{"location":"apis/public/TasksApi/#authorization_1","text":"Bearer","title":"Authorization"},{"location":"apis/public/TasksApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/TasksApi/#http-response-details_1","text":"Status code Description Response headers 200 Task - 404 Task not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/TasksApi/#get_project_task","text":"ProjectTask get_project_task(proj_key, task_id) Get a task for a project.","title":"get_project_task"},{"location":"apis/public/TasksApi/#example_2","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Configure API key authorization: KGAuth configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'X-CPS-KG-Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['X-CPS-KG-Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . TasksApi ( api_client ) proj_key = 'proj_key_example' # str | task_id = 'task_id_example' # str | try : api_response = api_instance . get_project_task ( proj_key , task_id ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling TasksApi->get_project_task: %s \\n \" % e ) Api Key Authentication (KGAuth): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Configure API key authorization: KGAuth configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'X-CPS-KG-Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['X-CPS-KG-Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . TasksApi ( api_client ) proj_key = 'proj_key_example' # str | task_id = 'task_id_example' # str | try : api_response = api_instance . get_project_task ( proj_key , task_id ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling TasksApi->get_project_task: %s \\n \" % e )","title":"Example"},{"location":"apis/public/TasksApi/#parameters_2","text":"Name Type Description Notes proj_key str task_id str","title":"Parameters"},{"location":"apis/public/TasksApi/#return-type_2","text":"ProjectTask","title":"Return type"},{"location":"apis/public/TasksApi/#authorization_2","text":"Bearer , KGAuth","title":"Authorization"},{"location":"apis/public/TasksApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/TasksApi/#http-response-details_2","text":"Status code Description Response headers 200 Task - 404 Task not found. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/TasksApi/#list_failure_celery_tasks","text":"list[CeleryTask] list_failure_celery_tasks(proj_key, task_id) Get celery tasks that failed.","title":"list_failure_celery_tasks"},{"location":"apis/public/TasksApi/#example_3","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . TasksApi ( api_client ) proj_key = 'proj_key_example' # str | task_id = 'task_id_example' # str | try : api_response = api_instance . list_failure_celery_tasks ( proj_key , task_id ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling TasksApi->list_failure_celery_tasks: %s \\n \" % e )","title":"Example"},{"location":"apis/public/TasksApi/#parameters_3","text":"Name Type Description Notes proj_key str task_id str","title":"Parameters"},{"location":"apis/public/TasksApi/#return-type_3","text":"list[CeleryTask]","title":"Return type"},{"location":"apis/public/TasksApi/#authorization_3","text":"Bearer","title":"Authorization"},{"location":"apis/public/TasksApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/TasksApi/#http-response-details_3","text":"Status code Description Response headers 200 Celery tasks - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/TasksApi/#list_project_tasks","text":"list[ProjectTask] list_project_tasks(proj_key, task_type=task_type, limit=limit, skip=skip, sort_by=sort_by, sort_order=sort_order) List tasks for a project.","title":"list_project_tasks"},{"location":"apis/public/TasksApi/#example_4","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . TasksApi ( api_client ) proj_key = 'proj_key_example' # str | task_type = 'task_type_example' # str | (optional) limit = 50 # int | (optional) (default to 50) skip = 0 # int | (optional) (default to 0) sort_by = 'sort_by_example' # str | (optional) sort_order = 'asc' # str | (optional) (default to 'asc') try : api_response = api_instance . list_project_tasks ( proj_key , task_type = task_type , limit = limit , skip = skip , sort_by = sort_by , sort_order = sort_order ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling TasksApi->list_project_tasks: %s \\n \" % e )","title":"Example"},{"location":"apis/public/TasksApi/#parameters_4","text":"Name Type Description Notes proj_key str task_type str [optional] limit int [optional] [default to 50] skip int [optional] [default to 0] sort_by str [optional] sort_order str [optional] [default to 'asc']","title":"Parameters"},{"location":"apis/public/TasksApi/#return-type_4","text":"list[ProjectTask]","title":"Return type"},{"location":"apis/public/TasksApi/#authorization_4","text":"Bearer","title":"Authorization"},{"location":"apis/public/TasksApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/TasksApi/#http-response-details_4","text":"Status code Description Response headers 200 List of tasks. - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/TasksApi/#list_system_celery_tasks","text":"list[CeleryTask1] list_system_celery_tasks(proj_key=proj_key, project_task_id=project_task_id, started_since=started_since, task_status=task_status, limit=limit) Get the status of Celery tasks.","title":"list_system_celery_tasks"},{"location":"apis/public/TasksApi/#example_5","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . TasksApi ( api_client ) proj_key = 'proj_key_example' # str | (optional) project_task_id = 'project_task_id_example' # str | (optional) started_since = 3.4 # float | If set, return the tasks created at or after this timestamp. Otherwise, return the tasks created up to 60 minutes of the system's date, if `project_task_id` is not set. (optional) task_status = 3.4 # float | (optional) limit = 50 # int | (optional) (default to 50) try : api_response = api_instance . list_system_celery_tasks ( proj_key = proj_key , project_task_id = project_task_id , started_since = started_since , task_status = task_status , limit = limit ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling TasksApi->list_system_celery_tasks: %s \\n \" % e )","title":"Example"},{"location":"apis/public/TasksApi/#parameters_5","text":"Name Type Description Notes proj_key str [optional] project_task_id str [optional] started_since float If set, return the tasks created at or after this timestamp. Otherwise, return the tasks created up to 60 minutes of the system's date, if `project_task_id` is not set. [optional] task_status float [optional] limit int [optional] [default to 50]","title":"Parameters"},{"location":"apis/public/TasksApi/#return-type_5","text":"list[CeleryTask1]","title":"Return type"},{"location":"apis/public/TasksApi/#authorization_5","text":"Bearer","title":"Authorization"},{"location":"apis/public/TasksApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/TasksApi/#http-response-details_5","text":"Status code Description Response headers 200 Celery tasks - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/TemporaryUploadFileResult/","text":"TemporaryUploadFileResult \u00b6 Properties \u00b6 Name Type Description Notes download TemporaryUploadFileResultDownload download_private TemporaryUploadFileResultDownloadPrivate id str ID of the temporary file. metadata TemporaryUploadFileResultMetadata metadata_private TemporaryUploadFileResultMetadataPrivate upload TemporaryUploadFileResultUpload upload_private TemporaryUploadFileResultUploadPrivate [Back to Model list] [Back to API list] [Back to README]","title":"TemporaryUploadFileResult"},{"location":"apis/public/TemporaryUploadFileResult/#temporaryuploadfileresult","text":"","title":"TemporaryUploadFileResult"},{"location":"apis/public/TemporaryUploadFileResult/#properties","text":"Name Type Description Notes download TemporaryUploadFileResultDownload download_private TemporaryUploadFileResultDownloadPrivate id str ID of the temporary file. metadata TemporaryUploadFileResultMetadata metadata_private TemporaryUploadFileResultMetadataPrivate upload TemporaryUploadFileResultUpload upload_private TemporaryUploadFileResultUploadPrivate [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/TemporaryUploadFileResultDownload/","text":"TemporaryUploadFileResultDownload \u00b6 URL to get the temporary file. Properties \u00b6 Name Type Description Notes url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"TemporaryUploadFileResultDownload"},{"location":"apis/public/TemporaryUploadFileResultDownload/#temporaryuploadfileresultdownload","text":"URL to get the temporary file.","title":"TemporaryUploadFileResultDownload"},{"location":"apis/public/TemporaryUploadFileResultDownload/#properties","text":"Name Type Description Notes url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/TemporaryUploadFileResultDownloadPrivate/","text":"TemporaryUploadFileResultDownloadPrivate \u00b6 URL to get the temporary file. (private URL, usable within the infrastracture) Properties \u00b6 Name Type Description Notes url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"TemporaryUploadFileResultDownloadPrivate"},{"location":"apis/public/TemporaryUploadFileResultDownloadPrivate/#temporaryuploadfileresultdownloadprivate","text":"URL to get the temporary file. (private URL, usable within the infrastracture)","title":"TemporaryUploadFileResultDownloadPrivate"},{"location":"apis/public/TemporaryUploadFileResultDownloadPrivate/#properties","text":"Name Type Description Notes url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/TemporaryUploadFileResultMetadata/","text":"TemporaryUploadFileResultMetadata \u00b6 URL to metadata of the temporary file using the HEAD HTTP method. Properties \u00b6 Name Type Description Notes url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"TemporaryUploadFileResultMetadata"},{"location":"apis/public/TemporaryUploadFileResultMetadata/#temporaryuploadfileresultmetadata","text":"URL to metadata of the temporary file using the HEAD HTTP method.","title":"TemporaryUploadFileResultMetadata"},{"location":"apis/public/TemporaryUploadFileResultMetadata/#properties","text":"Name Type Description Notes url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/TemporaryUploadFileResultMetadataPrivate/","text":"TemporaryUploadFileResultMetadataPrivate \u00b6 URL to metadata of the temporary file using the HEAD HTTP method. (private URL, usable within the infrastracture) Properties \u00b6 Name Type Description Notes url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"TemporaryUploadFileResultMetadataPrivate"},{"location":"apis/public/TemporaryUploadFileResultMetadataPrivate/#temporaryuploadfileresultmetadataprivate","text":"URL to metadata of the temporary file using the HEAD HTTP method. (private URL, usable within the infrastracture)","title":"TemporaryUploadFileResultMetadataPrivate"},{"location":"apis/public/TemporaryUploadFileResultMetadataPrivate/#properties","text":"Name Type Description Notes url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/TemporaryUploadFileResultUpload/","text":"TemporaryUploadFileResultUpload \u00b6 URL to upload the temporary file. Properties \u00b6 Name Type Description Notes fields object [optional] url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"TemporaryUploadFileResultUpload"},{"location":"apis/public/TemporaryUploadFileResultUpload/#temporaryuploadfileresultupload","text":"URL to upload the temporary file.","title":"TemporaryUploadFileResultUpload"},{"location":"apis/public/TemporaryUploadFileResultUpload/#properties","text":"Name Type Description Notes fields object [optional] url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/TemporaryUploadFileResultUploadPrivate/","text":"TemporaryUploadFileResultUploadPrivate \u00b6 URL to upload the temporary file. (private URL, usable within the infrastracture) Properties \u00b6 Name Type Description Notes fields object [optional] url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"TemporaryUploadFileResultUploadPrivate"},{"location":"apis/public/TemporaryUploadFileResultUploadPrivate/#temporaryuploadfileresultuploadprivate","text":"URL to upload the temporary file. (private URL, usable within the infrastracture)","title":"TemporaryUploadFileResultUploadPrivate"},{"location":"apis/public/TemporaryUploadFileResultUploadPrivate/#properties","text":"Name Type Description Notes fields object [optional] url str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/TokenResponse/","text":"TokenResponse \u00b6 Properties \u00b6 Name Type Description Notes token str [Back to Model list] [Back to API list] [Back to README]","title":"TokenResponse"},{"location":"apis/public/TokenResponse/#tokenresponse","text":"","title":"TokenResponse"},{"location":"apis/public/TokenResponse/#properties","text":"Name Type Description Notes token str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/Topology/","text":"Topology \u00b6 Properties \u00b6 Name Type Description Notes categories list[TopologyNode] edges list[TopologyEdge] [Back to Model list] [Back to API list] [Back to README]","title":"Topology"},{"location":"apis/public/Topology/#topology","text":"","title":"Topology"},{"location":"apis/public/Topology/#properties","text":"Name Type Description Notes categories list[TopologyNode] edges list[TopologyEdge] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/TopologyEdge/","text":"TopologyEdge \u00b6 Properties \u00b6 Name Type Description Notes name str source list[str] target list[str] [Back to Model list] [Back to API list] [Back to README]","title":"TopologyEdge"},{"location":"apis/public/TopologyEdge/#topologyedge","text":"","title":"TopologyEdge"},{"location":"apis/public/TopologyEdge/#properties","text":"Name Type Description Notes name str source list[str] target list[str] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/TopologyNode/","text":"TopologyNode \u00b6 Properties \u00b6 Name Type Description Notes name str [Back to Model list] [Back to API list] [Back to README]","title":"TopologyNode"},{"location":"apis/public/TopologyNode/#topologynode","text":"","title":"TopologyNode"},{"location":"apis/public/TopologyNode/#properties","text":"Name Type Description Notes name str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/UpdateDataFlowOptions/","text":"UpdateDataFlowOptions \u00b6 Properties \u00b6 Name Type Description Notes description str [optional] name str public bool template DataFlowTemplate variables dict(str, ProjectProjKeyKgcDataflowTemplatesVariables) [Back to Model list] [Back to API list] [Back to README]","title":"UpdateDataFlowOptions"},{"location":"apis/public/UpdateDataFlowOptions/#updatedataflowoptions","text":"","title":"UpdateDataFlowOptions"},{"location":"apis/public/UpdateDataFlowOptions/#properties","text":"Name Type Description Notes description str [optional] name str public bool template DataFlowTemplate variables dict(str, ProjectProjKeyKgcDataflowTemplatesVariables) [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/UpdateProjectModelConfigOptions/","text":"UpdateProjectModelConfigOptions \u00b6 Properties \u00b6 Name Type Description Notes configurations ProjectProjKeyModelConfigsConfigurations description str name str public bool [Back to Model list] [Back to API list] [Back to README]","title":"UpdateProjectModelConfigOptions"},{"location":"apis/public/UpdateProjectModelConfigOptions/#updateprojectmodelconfigoptions","text":"","title":"UpdateProjectModelConfigOptions"},{"location":"apis/public/UpdateProjectModelConfigOptions/#properties","text":"Name Type Description Notes configurations ProjectProjKeyModelConfigsConfigurations description str name str public bool [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/UploadedFile/","text":"UploadedFile \u00b6 Properties \u00b6 Name Type Description Notes filename str id str ID of the temporary file. proj_key str timestamp float user_key str [Back to Model list] [Back to API list] [Back to README]","title":"UploadedFile"},{"location":"apis/public/UploadedFile/#uploadedfile","text":"","title":"UploadedFile"},{"location":"apis/public/UploadedFile/#properties","text":"Name Type Description Notes filename str id str ID of the temporary file. proj_key str timestamp float user_key str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/UploadedFileResult/","text":"UploadedFileResult \u00b6 Properties \u00b6 Name Type Description Notes id str ID of the temporary file. url str URL to get the temporary file form. [Back to Model list] [Back to API list] [Back to README]","title":"UploadedFileResult"},{"location":"apis/public/UploadedFileResult/#uploadedfileresult","text":"","title":"UploadedFileResult"},{"location":"apis/public/UploadedFileResult/#properties","text":"Name Type Description Notes id str ID of the temporary file. url str URL to get the temporary file form. [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/UploadsApi/","text":"deepsearch.cps.apis.public.UploadsApi \u00b6 All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description create_project_scratch_file POST /project/{proj_key}/scratch/files/upload/{filename} list_project_scratch_files GET /project/{proj_key}/scratch/files upload_project_scratch_file POST /project/{proj_key}/scratch/files create_project_scratch_file \u00b6 TemporaryUploadFileResult create_project_scratch_file(proj_key, filename) Create file pointers for temporary storage Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . UploadsApi ( api_client ) proj_key = 'proj_key_example' # str | filename = 'filename_example' # str | try : api_response = api_instance . create_project_scratch_file ( proj_key , filename ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UploadsApi->create_project_scratch_file: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str filename str Return type \u00b6 TemporaryUploadFileResult Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 Temporary file details - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_project_scratch_files \u00b6 list[UploadedFile] list_project_scratch_files(proj_key, scratch_ids=scratch_ids) Get temporary files uploaded to a project Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . UploadsApi ( api_client ) proj_key = 'proj_key_example' # str | scratch_ids = 'scratch_ids_example' # str | (optional) try : api_response = api_instance . list_project_scratch_files ( proj_key , scratch_ids = scratch_ids ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UploadsApi->list_project_scratch_files: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str scratch_ids str [optional] Return type \u00b6 list[UploadedFile] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Files - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README] upload_project_scratch_file \u00b6 UploadedFileResult upload_project_scratch_file(proj_key, file) Upload a file to temporary storage Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . UploadsApi ( api_client ) proj_key = 'proj_key_example' # str | file = '/path/to/file' # file | try : api_response = api_instance . upload_project_scratch_file ( proj_key , file ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UploadsApi->upload_project_scratch_file: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str file file Return type \u00b6 UploadedFileResult Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : multipart/form-data Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 File uploaded - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"deepsearch.cps.apis.public.UploadsApi"},{"location":"apis/public/UploadsApi/#deepsearchcpsapispublicuploadsapi","text":"All URIs are relative to http://localhost/api/cps/public/v1 Method HTTP request Description create_project_scratch_file POST /project/{proj_key}/scratch/files/upload/{filename} list_project_scratch_files GET /project/{proj_key}/scratch/files upload_project_scratch_file POST /project/{proj_key}/scratch/files","title":"deepsearch.cps.apis.public.UploadsApi"},{"location":"apis/public/UploadsApi/#create_project_scratch_file","text":"TemporaryUploadFileResult create_project_scratch_file(proj_key, filename) Create file pointers for temporary storage","title":"create_project_scratch_file"},{"location":"apis/public/UploadsApi/#example","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . UploadsApi ( api_client ) proj_key = 'proj_key_example' # str | filename = 'filename_example' # str | try : api_response = api_instance . create_project_scratch_file ( proj_key , filename ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UploadsApi->create_project_scratch_file: %s \\n \" % e )","title":"Example"},{"location":"apis/public/UploadsApi/#parameters","text":"Name Type Description Notes proj_key str filename str","title":"Parameters"},{"location":"apis/public/UploadsApi/#return-type","text":"TemporaryUploadFileResult","title":"Return type"},{"location":"apis/public/UploadsApi/#authorization","text":"Bearer","title":"Authorization"},{"location":"apis/public/UploadsApi/#http-request-headers","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/UploadsApi/#http-response-details","text":"Status code Description Response headers 201 Temporary file details - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/UploadsApi/#list_project_scratch_files","text":"list[UploadedFile] list_project_scratch_files(proj_key, scratch_ids=scratch_ids) Get temporary files uploaded to a project","title":"list_project_scratch_files"},{"location":"apis/public/UploadsApi/#example_1","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . UploadsApi ( api_client ) proj_key = 'proj_key_example' # str | scratch_ids = 'scratch_ids_example' # str | (optional) try : api_response = api_instance . list_project_scratch_files ( proj_key , scratch_ids = scratch_ids ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UploadsApi->list_project_scratch_files: %s \\n \" % e )","title":"Example"},{"location":"apis/public/UploadsApi/#parameters_1","text":"Name Type Description Notes proj_key str scratch_ids str [optional]","title":"Parameters"},{"location":"apis/public/UploadsApi/#return-type_1","text":"list[UploadedFile]","title":"Return type"},{"location":"apis/public/UploadsApi/#authorization_1","text":"Bearer","title":"Authorization"},{"location":"apis/public/UploadsApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/UploadsApi/#http-response-details_1","text":"Status code Description Response headers 200 Files - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/UploadsApi/#upload_project_scratch_file","text":"UploadedFileResult upload_project_scratch_file(proj_key, file) Upload a file to temporary storage","title":"upload_project_scratch_file"},{"location":"apis/public/UploadsApi/#example_2","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.public from deepsearch.cps.apis.public.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/public/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . public . Configuration ( host = \"http://localhost/api/cps/public/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . public . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . public . UploadsApi ( api_client ) proj_key = 'proj_key_example' # str | file = '/path/to/file' # file | try : api_response = api_instance . upload_project_scratch_file ( proj_key , file ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UploadsApi->upload_project_scratch_file: %s \\n \" % e )","title":"Example"},{"location":"apis/public/UploadsApi/#parameters_2","text":"Name Type Description Notes proj_key str file file","title":"Parameters"},{"location":"apis/public/UploadsApi/#return-type_2","text":"UploadedFileResult","title":"Return type"},{"location":"apis/public/UploadsApi/#authorization_2","text":"Bearer","title":"Authorization"},{"location":"apis/public/UploadsApi/#http-request-headers_2","text":"Content-Type : multipart/form-data Accept : application/json","title":"HTTP request headers"},{"location":"apis/public/UploadsApi/#http-response-details_2","text":"Status code Description Response headers 200 File uploaded - 0 Unexpected error. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/public/UsageStats/","text":"UsageStats \u00b6 Properties \u00b6 Name Type Description Notes bag_key str [optional] last_command str [optional] proj_key str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"UsageStats"},{"location":"apis/public/UsageStats/#usagestats","text":"","title":"UsageStats"},{"location":"apis/public/UsageStats/#properties","text":"Name Type Description Notes bag_key str [optional] last_command str [optional] proj_key str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/public/WellKnownDfTemplateVariable/","text":"WellKnownDfTemplateVariable \u00b6 Properties \u00b6 Name Type Description Notes description str id str type DataFlowTemplateVariable [Back to Model list] [Back to API list] [Back to README]","title":"WellKnownDfTemplateVariable"},{"location":"apis/public/WellKnownDfTemplateVariable/#wellknowndftemplatevariable","text":"","title":"WellKnownDfTemplateVariable"},{"location":"apis/public/WellKnownDfTemplateVariable/#properties","text":"Name Type Description Notes description str id str type DataFlowTemplateVariable [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/user/AccessToken/","text":"AccessToken \u00b6 Properties \u00b6 Name Type Description Notes access_token str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"AccessToken"},{"location":"apis/user/AccessToken/#accesstoken","text":"","title":"AccessToken"},{"location":"apis/user/AccessToken/#properties","text":"Name Type Description Notes access_token str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/user/AdminApi/","text":"deepsearch.cps.apis.user.AdminApi \u00b6 All URIs are relative to http://localhost/api/cps/user/v1 Method HTTP request Description confirm_user POST /admin/users/{user_key}/confirmation list_all_projects GET /admin/projects/all list_audits GET /admin/audits list_pending_users GET /admin/users/pending confirm_user \u00b6 confirm_user(user_key) Confirm a pending user. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . AdminApi ( api_client ) user_key = 'user_key_example' # str | try : api_instance . confirm_user ( user_key ) except ApiException as e : print ( \"Exception when calling AdminApi->confirm_user: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes user_key str Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 401 Unauthorized - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_all_projects \u00b6 list[Project] list_all_projects() List all projects Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . AdminApi ( api_client ) try : api_response = api_instance . list_all_projects () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling AdminApi->list_all_projects: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 list[Project] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 404 Project does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_audits \u00b6 InlineResponse200 list_audits(user_key=user_key, type_=type_, search_term=search_term, before=before, after=after, limit=limit) List audits globally Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . AdminApi ( api_client ) user_key = 'user_key_example' # str | (optional) type_ = 'type__example' # str | (optional) search_term = 'search_term_example' # str | (optional) before = 'before_example' # str | (optional) after = 'after_example' # str | (optional) limit = 50 # int | (optional) (default to 50) try : api_response = api_instance . list_audits ( user_key = user_key , type_ = type_ , search_term = search_term , before = before , after = after , limit = limit ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling AdminApi->list_audits: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes user_key str [optional] type_ str [optional] search_term str [optional] before str [optional] after str [optional] limit int [optional] [default to 50] Return type \u00b6 InlineResponse200 Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 401 Unauthorized. - 404 Project does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_pending_users \u00b6 list[UserDetails] list_pending_users(term=term) List pending user requests. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . AdminApi ( api_client ) term = 'term_example' # str | (optional) try : api_response = api_instance . list_pending_users ( term = term ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling AdminApi->list_pending_users: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes term str [optional] Return type \u00b6 list[UserDetails] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 401 Unauthorized - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"deepsearch.cps.apis.user.AdminApi"},{"location":"apis/user/AdminApi/#deepsearchcpsapisuseradminapi","text":"All URIs are relative to http://localhost/api/cps/user/v1 Method HTTP request Description confirm_user POST /admin/users/{user_key}/confirmation list_all_projects GET /admin/projects/all list_audits GET /admin/audits list_pending_users GET /admin/users/pending","title":"deepsearch.cps.apis.user.AdminApi"},{"location":"apis/user/AdminApi/#confirm_user","text":"confirm_user(user_key) Confirm a pending user.","title":"confirm_user"},{"location":"apis/user/AdminApi/#example","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . AdminApi ( api_client ) user_key = 'user_key_example' # str | try : api_instance . confirm_user ( user_key ) except ApiException as e : print ( \"Exception when calling AdminApi->confirm_user: %s \\n \" % e )","title":"Example"},{"location":"apis/user/AdminApi/#parameters","text":"Name Type Description Notes user_key str","title":"Parameters"},{"location":"apis/user/AdminApi/#return-type","text":"void (empty response body)","title":"Return type"},{"location":"apis/user/AdminApi/#authorization","text":"Bearer","title":"Authorization"},{"location":"apis/user/AdminApi/#http-request-headers","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/AdminApi/#http-response-details","text":"Status code Description Response headers 200 OK - 401 Unauthorized - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/AdminApi/#list_all_projects","text":"list[Project] list_all_projects() List all projects","title":"list_all_projects"},{"location":"apis/user/AdminApi/#example_1","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . AdminApi ( api_client ) try : api_response = api_instance . list_all_projects () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling AdminApi->list_all_projects: %s \\n \" % e )","title":"Example"},{"location":"apis/user/AdminApi/#parameters_1","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/user/AdminApi/#return-type_1","text":"list[Project]","title":"Return type"},{"location":"apis/user/AdminApi/#authorization_1","text":"Bearer","title":"Authorization"},{"location":"apis/user/AdminApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/AdminApi/#http-response-details_1","text":"Status code Description Response headers 200 OK - 404 Project does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/AdminApi/#list_audits","text":"InlineResponse200 list_audits(user_key=user_key, type_=type_, search_term=search_term, before=before, after=after, limit=limit) List audits globally","title":"list_audits"},{"location":"apis/user/AdminApi/#example_2","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . AdminApi ( api_client ) user_key = 'user_key_example' # str | (optional) type_ = 'type__example' # str | (optional) search_term = 'search_term_example' # str | (optional) before = 'before_example' # str | (optional) after = 'after_example' # str | (optional) limit = 50 # int | (optional) (default to 50) try : api_response = api_instance . list_audits ( user_key = user_key , type_ = type_ , search_term = search_term , before = before , after = after , limit = limit ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling AdminApi->list_audits: %s \\n \" % e )","title":"Example"},{"location":"apis/user/AdminApi/#parameters_2","text":"Name Type Description Notes user_key str [optional] type_ str [optional] search_term str [optional] before str [optional] after str [optional] limit int [optional] [default to 50]","title":"Parameters"},{"location":"apis/user/AdminApi/#return-type_2","text":"InlineResponse200","title":"Return type"},{"location":"apis/user/AdminApi/#authorization_2","text":"Bearer","title":"Authorization"},{"location":"apis/user/AdminApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/AdminApi/#http-response-details_2","text":"Status code Description Response headers 200 OK - 401 Unauthorized. - 404 Project does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/AdminApi/#list_pending_users","text":"list[UserDetails] list_pending_users(term=term) List pending user requests.","title":"list_pending_users"},{"location":"apis/user/AdminApi/#example_3","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . AdminApi ( api_client ) term = 'term_example' # str | (optional) try : api_response = api_instance . list_pending_users ( term = term ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling AdminApi->list_pending_users: %s \\n \" % e )","title":"Example"},{"location":"apis/user/AdminApi/#parameters_3","text":"Name Type Description Notes term str [optional]","title":"Parameters"},{"location":"apis/user/AdminApi/#return-type_3","text":"list[UserDetails]","title":"Return type"},{"location":"apis/user/AdminApi/#authorization_3","text":"Bearer","title":"Authorization"},{"location":"apis/user/AdminApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/AdminApi/#http-response-details_3","text":"Status code Description Response headers 200 OK - 401 Unauthorized - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/ApiKey/","text":"ApiKey \u00b6 Properties \u00b6 Name Type Description Notes api_key str email str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ApiKey"},{"location":"apis/user/ApiKey/#apikey","text":"","title":"ApiKey"},{"location":"apis/user/ApiKey/#properties","text":"Name Type Description Notes api_key str email str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/user/AuditRecord/","text":"AuditRecord \u00b6 Properties \u00b6 Name Type Description Notes details object id str message str proj_key str timestamp str type str user_key str [Back to Model list] [Back to API list] [Back to README]","title":"AuditRecord"},{"location":"apis/user/AuditRecord/#auditrecord","text":"","title":"AuditRecord"},{"location":"apis/user/AuditRecord/#properties","text":"Name Type Description Notes details object id str message str proj_key str timestamp str type str user_key str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/user/CreateProjectRequestBody/","text":"CreateProjectRequestBody \u00b6 Properties \u00b6 Name Type Description Notes name str Name of the project proj_key str Internal project key to use. (use only if you really know what you are doing) [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CreateProjectRequestBody"},{"location":"apis/user/CreateProjectRequestBody/#createprojectrequestbody","text":"","title":"CreateProjectRequestBody"},{"location":"apis/user/CreateProjectRequestBody/#properties","text":"Name Type Description Notes name str Name of the project proj_key str Internal project key to use. (use only if you really know what you are doing) [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/user/CreateTokensRequestBody/","text":"CreateTokensRequestBody \u00b6 Properties \u00b6 Name Type Description Notes code str The oidc code response [optional] refresh_token str The refresh token [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CreateTokensRequestBody"},{"location":"apis/user/CreateTokensRequestBody/#createtokensrequestbody","text":"","title":"CreateTokensRequestBody"},{"location":"apis/user/CreateTokensRequestBody/#properties","text":"Name Type Description Notes code str The oidc code response [optional] refresh_token str The refresh token [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/user/ErrorResponse/","text":"ErrorResponse \u00b6 Properties \u00b6 Name Type Description Notes error str Description of the error. [Back to Model list] [Back to API list] [Back to README]","title":"ErrorResponse"},{"location":"apis/user/ErrorResponse/#errorresponse","text":"","title":"ErrorResponse"},{"location":"apis/user/ErrorResponse/#properties","text":"Name Type Description Notes error str Description of the error. [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/user/GetAccessTokenRequestBody/","text":"GetAccessTokenRequestBody \u00b6 Properties \u00b6 Name Type Description Notes admin bool [optional] [default to False] [Back to Model list] [Back to API list] [Back to README]","title":"GetAccessTokenRequestBody"},{"location":"apis/user/GetAccessTokenRequestBody/#getaccesstokenrequestbody","text":"","title":"GetAccessTokenRequestBody"},{"location":"apis/user/GetAccessTokenRequestBody/#properties","text":"Name Type Description Notes admin bool [optional] [default to False] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/user/ImpersonateUserTokenRequestBody/","text":"ImpersonateUserTokenRequestBody \u00b6 Properties \u00b6 Name Type Description Notes impersonate_secret str target_user_key str [Back to Model list] [Back to API list] [Back to README]","title":"ImpersonateUserTokenRequestBody"},{"location":"apis/user/ImpersonateUserTokenRequestBody/#impersonateusertokenrequestbody","text":"","title":"ImpersonateUserTokenRequestBody"},{"location":"apis/user/ImpersonateUserTokenRequestBody/#properties","text":"Name Type Description Notes impersonate_secret str target_user_key str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/user/InlineResponse200/","text":"InlineResponse200 \u00b6 Properties \u00b6 Name Type Description Notes audits list[AuditRecord] [Back to Model list] [Back to API list] [Back to README]","title":"InlineResponse200"},{"location":"apis/user/InlineResponse200/#inlineresponse200","text":"","title":"InlineResponse200"},{"location":"apis/user/InlineResponse200/#properties","text":"Name Type Description Notes audits list[AuditRecord] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/user/OidcApi/","text":"deepsearch.cps.apis.user.OidcApi \u00b6 All URIs are relative to http://localhost/api/cps/user/v1 Method HTTP request Description authenticate GET /oidc/authenticate create_tokens POST /oidc/token register_user POST /oidc/register_user token GET /oidc/token authenticate \u00b6 authenticate() Redirect to the OIDC authenticate endpoint. Example \u00b6 from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient () as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . OidcApi ( api_client ) try : api_instance . authenticate () except ApiException as e : print ( \"Exception when calling OidcApi->authenticate: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 void (empty response body) Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 302 Redirect to the OIDC authenticate endpoint - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_tokens \u00b6 OidcTokenResponse create_tokens(body=body) Retrieve the user access and identity tokens using either the code or the refresh_token. Example \u00b6 from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient () as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . OidcApi ( api_client ) body = deepsearch . cps . apis . user . CreateTokensRequestBody () # CreateTokensRequestBody | (optional) try : api_response = api_instance . create_tokens ( body = body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling OidcApi->create_tokens: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes body CreateTokensRequestBody [optional] Return type \u00b6 OidcTokenResponse Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README] register_user \u00b6 UserDetails register_user(data) Register a new user, provided a valid access_token and id_token from the oidc provider. Example \u00b6 from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient () as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . OidcApi ( api_client ) data = deepsearch . cps . apis . user . RegisterUserRequestBody () # RegisterUserRequestBody | try : api_response = api_instance . register_user ( data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling OidcApi->register_user: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes data RegisterUserRequestBody Return type \u00b6 UserDetails Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README] token \u00b6 OidcTokenResponse token(code=code, refresh_token=refresh_token) Retrieve the user access and identity tokens using either the code or the refresh_token. Example \u00b6 from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient () as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . OidcApi ( api_client ) code = 'code_example' # str | The oidc code response (optional) refresh_token = 'refresh_token_example' # str | The oidc code response (optional) try : api_response = api_instance . token ( code = code , refresh_token = refresh_token ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling OidcApi->token: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes code str The oidc code response [optional] refresh_token str The oidc code response [optional] Return type \u00b6 OidcTokenResponse Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"deepsearch.cps.apis.user.OidcApi"},{"location":"apis/user/OidcApi/#deepsearchcpsapisuseroidcapi","text":"All URIs are relative to http://localhost/api/cps/user/v1 Method HTTP request Description authenticate GET /oidc/authenticate create_tokens POST /oidc/token register_user POST /oidc/register_user token GET /oidc/token","title":"deepsearch.cps.apis.user.OidcApi"},{"location":"apis/user/OidcApi/#authenticate","text":"authenticate() Redirect to the OIDC authenticate endpoint.","title":"authenticate"},{"location":"apis/user/OidcApi/#example","text":"from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient () as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . OidcApi ( api_client ) try : api_instance . authenticate () except ApiException as e : print ( \"Exception when calling OidcApi->authenticate: %s \\n \" % e )","title":"Example"},{"location":"apis/user/OidcApi/#parameters","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/user/OidcApi/#return-type","text":"void (empty response body)","title":"Return type"},{"location":"apis/user/OidcApi/#authorization","text":"No authorization required","title":"Authorization"},{"location":"apis/user/OidcApi/#http-request-headers","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"apis/user/OidcApi/#http-response-details","text":"Status code Description Response headers 302 Redirect to the OIDC authenticate endpoint - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/OidcApi/#create_tokens","text":"OidcTokenResponse create_tokens(body=body) Retrieve the user access and identity tokens using either the code or the refresh_token.","title":"create_tokens"},{"location":"apis/user/OidcApi/#example_1","text":"from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient () as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . OidcApi ( api_client ) body = deepsearch . cps . apis . user . CreateTokensRequestBody () # CreateTokensRequestBody | (optional) try : api_response = api_instance . create_tokens ( body = body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling OidcApi->create_tokens: %s \\n \" % e )","title":"Example"},{"location":"apis/user/OidcApi/#parameters_1","text":"Name Type Description Notes body CreateTokensRequestBody [optional]","title":"Parameters"},{"location":"apis/user/OidcApi/#return-type_1","text":"OidcTokenResponse","title":"Return type"},{"location":"apis/user/OidcApi/#authorization_1","text":"No authorization required","title":"Authorization"},{"location":"apis/user/OidcApi/#http-request-headers_1","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/OidcApi/#http-response-details_1","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/OidcApi/#register_user","text":"UserDetails register_user(data) Register a new user, provided a valid access_token and id_token from the oidc provider.","title":"register_user"},{"location":"apis/user/OidcApi/#example_2","text":"from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient () as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . OidcApi ( api_client ) data = deepsearch . cps . apis . user . RegisterUserRequestBody () # RegisterUserRequestBody | try : api_response = api_instance . register_user ( data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling OidcApi->register_user: %s \\n \" % e )","title":"Example"},{"location":"apis/user/OidcApi/#parameters_2","text":"Name Type Description Notes data RegisterUserRequestBody","title":"Parameters"},{"location":"apis/user/OidcApi/#return-type_2","text":"UserDetails","title":"Return type"},{"location":"apis/user/OidcApi/#authorization_2","text":"No authorization required","title":"Authorization"},{"location":"apis/user/OidcApi/#http-request-headers_2","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/OidcApi/#http-response-details_2","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/OidcApi/#token","text":"OidcTokenResponse token(code=code, refresh_token=refresh_token) Retrieve the user access and identity tokens using either the code or the refresh_token.","title":"token"},{"location":"apis/user/OidcApi/#example_3","text":"from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient () as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . OidcApi ( api_client ) code = 'code_example' # str | The oidc code response (optional) refresh_token = 'refresh_token_example' # str | The oidc code response (optional) try : api_response = api_instance . token ( code = code , refresh_token = refresh_token ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling OidcApi->token: %s \\n \" % e )","title":"Example"},{"location":"apis/user/OidcApi/#parameters_3","text":"Name Type Description Notes code str The oidc code response [optional] refresh_token str The oidc code response [optional]","title":"Parameters"},{"location":"apis/user/OidcApi/#return-type_3","text":"OidcTokenResponse","title":"Return type"},{"location":"apis/user/OidcApi/#authorization_3","text":"No authorization required","title":"Authorization"},{"location":"apis/user/OidcApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/OidcApi/#http-response-details_3","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/OidcTokenResponse/","text":"OidcTokenResponse \u00b6 Properties \u00b6 Name Type Description Notes access_token str [optional] id_token str refresh_token str [Back to Model list] [Back to API list] [Back to README]","title":"OidcTokenResponse"},{"location":"apis/user/OidcTokenResponse/#oidctokenresponse","text":"","title":"OidcTokenResponse"},{"location":"apis/user/OidcTokenResponse/#properties","text":"Name Type Description Notes access_token str [optional] id_token str refresh_token str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/user/Project/","text":"Project \u00b6 Properties \u00b6 Name Type Description Notes date str [optional] name str [optional] proj_key str [optional] role UserType [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Project"},{"location":"apis/user/Project/#project","text":"","title":"Project"},{"location":"apis/user/Project/#properties","text":"Name Type Description Notes date str [optional] name str [optional] proj_key str [optional] role UserType [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/user/ProjectUserAssignment/","text":"ProjectUserAssignment \u00b6 Properties \u00b6 Name Type Description Notes role str The role to assign to the user username str The username [Back to Model list] [Back to API list] [Back to README]","title":"ProjectUserAssignment"},{"location":"apis/user/ProjectUserAssignment/#projectuserassignment","text":"","title":"ProjectUserAssignment"},{"location":"apis/user/ProjectUserAssignment/#properties","text":"Name Type Description Notes role str The role to assign to the user username str The username [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/user/ProjectsApi/","text":"deepsearch.cps.apis.user.ProjectsApi \u00b6 All URIs are relative to http://localhost/api/cps/user/v1 Method HTTP request Description add_user POST /projects/{proj_key}/users create POST /projects delete DELETE /projects/{proj_key} details GET /projects/{proj_key} edit_user PUT /projects/{proj_key}/users get_delete_confirmation_token GET /projects/{proj_key}/delete get_project_token GET /projects/{proj_key}/token is_authorized GET /projects/{proj_key}/is_authorized list_audits_in_project GET /projects/{proj_key}/audits list_projects GET /projects list_users GET /projects/{proj_key}/users remove_user DELETE /projects/{proj_key}/users/{username} add_user \u00b6 SuccessMessage add_user(proj_key, data) Assign a new user to a project Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) proj_key = 'proj_key_example' # str | The project key data = deepsearch . cps . apis . user . ProjectUserAssignment () # ProjectUserAssignment | try : api_response = api_instance . add_user ( proj_key , data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectsApi->add_user: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str The project key data ProjectUserAssignment Return type \u00b6 SuccessMessage Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 User assigned to project. - 400 Invalid new_user_type. - 403 The user that's performing this operation does not have permission to assign the user. - 404 User that's going to be assigned doesn't exist, or the project doesn't exist. - 409 Reassigning the user would leave the project in an invalid state. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create \u00b6 Project create(data) Create a new project Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) data = deepsearch . cps . apis . user . CreateProjectRequestBody () # CreateProjectRequestBody | try : api_response = api_instance . create ( data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectsApi->create: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes data CreateProjectRequestBody Return type \u00b6 Project Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 New project details - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete \u00b6 delete(proj_key, confirmation_token) Delete a project. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) proj_key = 'proj_key_example' # str | The project key confirmation_token = 'confirmation_token_example' # str | The delete confirmation token try : api_instance . delete ( proj_key , confirmation_token ) except ApiException as e : print ( \"Exception when calling ProjectsApi->delete: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str The project key confirmation_token str The delete confirmation token Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 204 Project deleted successfully. - 403 The user that is executing this operation is not an owner of the project. - 404 Project not found. - 409 User not assigned to project. - [Back to top] [Back to API list] [Back to Model list] [Back to README] details \u00b6 Project details(proj_key) Returns the details of the project Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) proj_key = 'proj_key_example' # str | The project key try : api_response = api_instance . details ( proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectsApi->details: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str The project key Return type \u00b6 Project Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 401 Unauthorized. - 404 Project does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] edit_user \u00b6 SuccessMessage edit_user(proj_key, data) Assign a new user to a project Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) proj_key = 'proj_key_example' # str | The project key data = deepsearch . cps . apis . user . ProjectUserAssignment () # ProjectUserAssignment | try : api_response = api_instance . edit_user ( proj_key , data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectsApi->edit_user: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str The project key data ProjectUserAssignment Return type \u00b6 SuccessMessage Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 User assigned to project. - 400 Invalid new_user_type. - 403 The user that's performing this operation does not have permission to assign the user. - 404 User that's going to be assigned doesn't exist, or the project doesn't exist. - 409 Reassigning the user would leave the project in an invalid state. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_delete_confirmation_token \u00b6 TokenResponse get_delete_confirmation_token(proj_key) Get a delete confirmation token for the provided project. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) proj_key = 'proj_key_example' # str | The project key try : api_response = api_instance . get_delete_confirmation_token ( proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectsApi->get_delete_confirmation_token: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str The project key Return type \u00b6 TokenResponse Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Confirmation token. - 403 The user that is executing this operation is not an owner of the project. - 404 Project not found. - 409 User not assigned to project. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_project_token \u00b6 AccessToken get_project_token(proj_key) Request a token granting access to the current project Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) proj_key = 'proj_key_example' # str | The project key try : api_response = api_instance . get_project_token ( proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectsApi->get_project_token: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str The project key Return type \u00b6 AccessToken Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 401 Unauthorized. - 404 Project does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] is_authorized \u00b6 SuccessMessage is_authorized(proj_key, role=role) Provide user-key and project-key to coordinates a project Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) proj_key = 'proj_key_example' # str | The project key role = 'role_example' # str | The specific role to probe (optional) try : api_response = api_instance . is_authorized ( proj_key , role = role ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectsApi->is_authorized: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str The project key role str The specific role to probe [optional] Return type \u00b6 SuccessMessage Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 401 Unauthorized - 404 Project does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_audits_in_project \u00b6 InlineResponse200 list_audits_in_project(proj_key, user_key=user_key, type_=type_, search_term=search_term, before=before, after=after, limit=limit) List audits related to the project Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) proj_key = 'proj_key_example' # str | The project key user_key = 'user_key_example' # str | (optional) type_ = 'type__example' # str | (optional) search_term = 'search_term_example' # str | (optional) before = 'before_example' # str | (optional) after = 'after_example' # str | (optional) limit = 50 # int | (optional) (default to 50) try : api_response = api_instance . list_audits_in_project ( proj_key , user_key = user_key , type_ = type_ , search_term = search_term , before = before , after = after , limit = limit ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectsApi->list_audits_in_project: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str The project key user_key str [optional] type_ str [optional] search_term str [optional] before str [optional] after str [optional] limit int [optional] [default to 50] Return type \u00b6 InlineResponse200 Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 401 Unauthorized. - 404 Project does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_projects \u00b6 list[Project] list_projects(role=role, include_collaborators=include_collaborators) List all projects assigned to a user Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) role = 'role_example' # str | filter for the user role (optional) include_collaborators = True # bool | (optional) (default to True) try : api_response = api_instance . list_projects ( role = role , include_collaborators = include_collaborators ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectsApi->list_projects: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes role str filter for the user role [optional] include_collaborators bool [optional] [default to True] Return type \u00b6 list[Project] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 404 Project does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_users \u00b6 dict(str, list[UserDetails]) list_users(proj_key) List all users belonging to a project Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) proj_key = 'proj_key_example' # str | The project key try : api_response = api_instance . list_users ( proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectsApi->list_users: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str The project key Return type \u00b6 dict(str, list[UserDetails]) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 401 Unauthorized. - 404 User does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] remove_user \u00b6 remove_user(proj_key, username) Delete an user from a project. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) proj_key = 'proj_key_example' # str | The project key username = 'username_example' # str | The username for the user try : api_instance . remove_user ( proj_key , username ) except ApiException as e : print ( \"Exception when calling ProjectsApi->remove_user: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes proj_key str The project key username str The username for the user Return type \u00b6 void (empty response body) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 204 User deleted from project successfully. - 403 The user that is executing this operation is not an owner of the project. - 404 Project or user not found. - 409 User not assigned to project, or the project only has one owner left. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"deepsearch.cps.apis.user.ProjectsApi"},{"location":"apis/user/ProjectsApi/#deepsearchcpsapisuserprojectsapi","text":"All URIs are relative to http://localhost/api/cps/user/v1 Method HTTP request Description add_user POST /projects/{proj_key}/users create POST /projects delete DELETE /projects/{proj_key} details GET /projects/{proj_key} edit_user PUT /projects/{proj_key}/users get_delete_confirmation_token GET /projects/{proj_key}/delete get_project_token GET /projects/{proj_key}/token is_authorized GET /projects/{proj_key}/is_authorized list_audits_in_project GET /projects/{proj_key}/audits list_projects GET /projects list_users GET /projects/{proj_key}/users remove_user DELETE /projects/{proj_key}/users/{username}","title":"deepsearch.cps.apis.user.ProjectsApi"},{"location":"apis/user/ProjectsApi/#add_user","text":"SuccessMessage add_user(proj_key, data) Assign a new user to a project","title":"add_user"},{"location":"apis/user/ProjectsApi/#example","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) proj_key = 'proj_key_example' # str | The project key data = deepsearch . cps . apis . user . ProjectUserAssignment () # ProjectUserAssignment | try : api_response = api_instance . add_user ( proj_key , data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectsApi->add_user: %s \\n \" % e )","title":"Example"},{"location":"apis/user/ProjectsApi/#parameters","text":"Name Type Description Notes proj_key str The project key data ProjectUserAssignment","title":"Parameters"},{"location":"apis/user/ProjectsApi/#return-type","text":"SuccessMessage","title":"Return type"},{"location":"apis/user/ProjectsApi/#authorization","text":"Bearer","title":"Authorization"},{"location":"apis/user/ProjectsApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/ProjectsApi/#http-response-details","text":"Status code Description Response headers 200 User assigned to project. - 400 Invalid new_user_type. - 403 The user that's performing this operation does not have permission to assign the user. - 404 User that's going to be assigned doesn't exist, or the project doesn't exist. - 409 Reassigning the user would leave the project in an invalid state. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/ProjectsApi/#create","text":"Project create(data) Create a new project","title":"create"},{"location":"apis/user/ProjectsApi/#example_1","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) data = deepsearch . cps . apis . user . CreateProjectRequestBody () # CreateProjectRequestBody | try : api_response = api_instance . create ( data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectsApi->create: %s \\n \" % e )","title":"Example"},{"location":"apis/user/ProjectsApi/#parameters_1","text":"Name Type Description Notes data CreateProjectRequestBody","title":"Parameters"},{"location":"apis/user/ProjectsApi/#return-type_1","text":"Project","title":"Return type"},{"location":"apis/user/ProjectsApi/#authorization_1","text":"Bearer","title":"Authorization"},{"location":"apis/user/ProjectsApi/#http-request-headers_1","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/ProjectsApi/#http-response-details_1","text":"Status code Description Response headers 200 New project details - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/ProjectsApi/#delete","text":"delete(proj_key, confirmation_token) Delete a project.","title":"delete"},{"location":"apis/user/ProjectsApi/#example_2","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) proj_key = 'proj_key_example' # str | The project key confirmation_token = 'confirmation_token_example' # str | The delete confirmation token try : api_instance . delete ( proj_key , confirmation_token ) except ApiException as e : print ( \"Exception when calling ProjectsApi->delete: %s \\n \" % e )","title":"Example"},{"location":"apis/user/ProjectsApi/#parameters_2","text":"Name Type Description Notes proj_key str The project key confirmation_token str The delete confirmation token","title":"Parameters"},{"location":"apis/user/ProjectsApi/#return-type_2","text":"void (empty response body)","title":"Return type"},{"location":"apis/user/ProjectsApi/#authorization_2","text":"Bearer","title":"Authorization"},{"location":"apis/user/ProjectsApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/ProjectsApi/#http-response-details_2","text":"Status code Description Response headers 204 Project deleted successfully. - 403 The user that is executing this operation is not an owner of the project. - 404 Project not found. - 409 User not assigned to project. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/ProjectsApi/#details","text":"Project details(proj_key) Returns the details of the project","title":"details"},{"location":"apis/user/ProjectsApi/#example_3","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) proj_key = 'proj_key_example' # str | The project key try : api_response = api_instance . details ( proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectsApi->details: %s \\n \" % e )","title":"Example"},{"location":"apis/user/ProjectsApi/#parameters_3","text":"Name Type Description Notes proj_key str The project key","title":"Parameters"},{"location":"apis/user/ProjectsApi/#return-type_3","text":"Project","title":"Return type"},{"location":"apis/user/ProjectsApi/#authorization_3","text":"Bearer","title":"Authorization"},{"location":"apis/user/ProjectsApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/ProjectsApi/#http-response-details_3","text":"Status code Description Response headers 200 OK - 401 Unauthorized. - 404 Project does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/ProjectsApi/#edit_user","text":"SuccessMessage edit_user(proj_key, data) Assign a new user to a project","title":"edit_user"},{"location":"apis/user/ProjectsApi/#example_4","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) proj_key = 'proj_key_example' # str | The project key data = deepsearch . cps . apis . user . ProjectUserAssignment () # ProjectUserAssignment | try : api_response = api_instance . edit_user ( proj_key , data ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectsApi->edit_user: %s \\n \" % e )","title":"Example"},{"location":"apis/user/ProjectsApi/#parameters_4","text":"Name Type Description Notes proj_key str The project key data ProjectUserAssignment","title":"Parameters"},{"location":"apis/user/ProjectsApi/#return-type_4","text":"SuccessMessage","title":"Return type"},{"location":"apis/user/ProjectsApi/#authorization_4","text":"Bearer","title":"Authorization"},{"location":"apis/user/ProjectsApi/#http-request-headers_4","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/ProjectsApi/#http-response-details_4","text":"Status code Description Response headers 200 User assigned to project. - 400 Invalid new_user_type. - 403 The user that's performing this operation does not have permission to assign the user. - 404 User that's going to be assigned doesn't exist, or the project doesn't exist. - 409 Reassigning the user would leave the project in an invalid state. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/ProjectsApi/#get_delete_confirmation_token","text":"TokenResponse get_delete_confirmation_token(proj_key) Get a delete confirmation token for the provided project.","title":"get_delete_confirmation_token"},{"location":"apis/user/ProjectsApi/#example_5","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) proj_key = 'proj_key_example' # str | The project key try : api_response = api_instance . get_delete_confirmation_token ( proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectsApi->get_delete_confirmation_token: %s \\n \" % e )","title":"Example"},{"location":"apis/user/ProjectsApi/#parameters_5","text":"Name Type Description Notes proj_key str The project key","title":"Parameters"},{"location":"apis/user/ProjectsApi/#return-type_5","text":"TokenResponse","title":"Return type"},{"location":"apis/user/ProjectsApi/#authorization_5","text":"Bearer","title":"Authorization"},{"location":"apis/user/ProjectsApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/ProjectsApi/#http-response-details_5","text":"Status code Description Response headers 200 Confirmation token. - 403 The user that is executing this operation is not an owner of the project. - 404 Project not found. - 409 User not assigned to project. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/ProjectsApi/#get_project_token","text":"AccessToken get_project_token(proj_key) Request a token granting access to the current project","title":"get_project_token"},{"location":"apis/user/ProjectsApi/#example_6","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) proj_key = 'proj_key_example' # str | The project key try : api_response = api_instance . get_project_token ( proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectsApi->get_project_token: %s \\n \" % e )","title":"Example"},{"location":"apis/user/ProjectsApi/#parameters_6","text":"Name Type Description Notes proj_key str The project key","title":"Parameters"},{"location":"apis/user/ProjectsApi/#return-type_6","text":"AccessToken","title":"Return type"},{"location":"apis/user/ProjectsApi/#authorization_6","text":"Bearer","title":"Authorization"},{"location":"apis/user/ProjectsApi/#http-request-headers_6","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/ProjectsApi/#http-response-details_6","text":"Status code Description Response headers 200 OK - 401 Unauthorized. - 404 Project does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/ProjectsApi/#is_authorized","text":"SuccessMessage is_authorized(proj_key, role=role) Provide user-key and project-key to coordinates a project","title":"is_authorized"},{"location":"apis/user/ProjectsApi/#example_7","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) proj_key = 'proj_key_example' # str | The project key role = 'role_example' # str | The specific role to probe (optional) try : api_response = api_instance . is_authorized ( proj_key , role = role ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectsApi->is_authorized: %s \\n \" % e )","title":"Example"},{"location":"apis/user/ProjectsApi/#parameters_7","text":"Name Type Description Notes proj_key str The project key role str The specific role to probe [optional]","title":"Parameters"},{"location":"apis/user/ProjectsApi/#return-type_7","text":"SuccessMessage","title":"Return type"},{"location":"apis/user/ProjectsApi/#authorization_7","text":"Bearer","title":"Authorization"},{"location":"apis/user/ProjectsApi/#http-request-headers_7","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/ProjectsApi/#http-response-details_7","text":"Status code Description Response headers 200 OK - 401 Unauthorized - 404 Project does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/ProjectsApi/#list_audits_in_project","text":"InlineResponse200 list_audits_in_project(proj_key, user_key=user_key, type_=type_, search_term=search_term, before=before, after=after, limit=limit) List audits related to the project","title":"list_audits_in_project"},{"location":"apis/user/ProjectsApi/#example_8","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) proj_key = 'proj_key_example' # str | The project key user_key = 'user_key_example' # str | (optional) type_ = 'type__example' # str | (optional) search_term = 'search_term_example' # str | (optional) before = 'before_example' # str | (optional) after = 'after_example' # str | (optional) limit = 50 # int | (optional) (default to 50) try : api_response = api_instance . list_audits_in_project ( proj_key , user_key = user_key , type_ = type_ , search_term = search_term , before = before , after = after , limit = limit ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectsApi->list_audits_in_project: %s \\n \" % e )","title":"Example"},{"location":"apis/user/ProjectsApi/#parameters_8","text":"Name Type Description Notes proj_key str The project key user_key str [optional] type_ str [optional] search_term str [optional] before str [optional] after str [optional] limit int [optional] [default to 50]","title":"Parameters"},{"location":"apis/user/ProjectsApi/#return-type_8","text":"InlineResponse200","title":"Return type"},{"location":"apis/user/ProjectsApi/#authorization_8","text":"Bearer","title":"Authorization"},{"location":"apis/user/ProjectsApi/#http-request-headers_8","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/ProjectsApi/#http-response-details_8","text":"Status code Description Response headers 200 OK - 401 Unauthorized. - 404 Project does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/ProjectsApi/#list_projects","text":"list[Project] list_projects(role=role, include_collaborators=include_collaborators) List all projects assigned to a user","title":"list_projects"},{"location":"apis/user/ProjectsApi/#example_9","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) role = 'role_example' # str | filter for the user role (optional) include_collaborators = True # bool | (optional) (default to True) try : api_response = api_instance . list_projects ( role = role , include_collaborators = include_collaborators ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectsApi->list_projects: %s \\n \" % e )","title":"Example"},{"location":"apis/user/ProjectsApi/#parameters_9","text":"Name Type Description Notes role str filter for the user role [optional] include_collaborators bool [optional] [default to True]","title":"Parameters"},{"location":"apis/user/ProjectsApi/#return-type_9","text":"list[Project]","title":"Return type"},{"location":"apis/user/ProjectsApi/#authorization_9","text":"Bearer","title":"Authorization"},{"location":"apis/user/ProjectsApi/#http-request-headers_9","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/ProjectsApi/#http-response-details_9","text":"Status code Description Response headers 200 OK - 404 Project does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/ProjectsApi/#list_users","text":"dict(str, list[UserDetails]) list_users(proj_key) List all users belonging to a project","title":"list_users"},{"location":"apis/user/ProjectsApi/#example_10","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) proj_key = 'proj_key_example' # str | The project key try : api_response = api_instance . list_users ( proj_key ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling ProjectsApi->list_users: %s \\n \" % e )","title":"Example"},{"location":"apis/user/ProjectsApi/#parameters_10","text":"Name Type Description Notes proj_key str The project key","title":"Parameters"},{"location":"apis/user/ProjectsApi/#return-type_10","text":"dict(str, list[UserDetails])","title":"Return type"},{"location":"apis/user/ProjectsApi/#authorization_10","text":"Bearer","title":"Authorization"},{"location":"apis/user/ProjectsApi/#http-request-headers_10","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/ProjectsApi/#http-response-details_10","text":"Status code Description Response headers 200 OK - 401 Unauthorized. - 404 User does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/ProjectsApi/#remove_user","text":"remove_user(proj_key, username) Delete an user from a project.","title":"remove_user"},{"location":"apis/user/ProjectsApi/#example_11","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . ProjectsApi ( api_client ) proj_key = 'proj_key_example' # str | The project key username = 'username_example' # str | The username for the user try : api_instance . remove_user ( proj_key , username ) except ApiException as e : print ( \"Exception when calling ProjectsApi->remove_user: %s \\n \" % e )","title":"Example"},{"location":"apis/user/ProjectsApi/#parameters_11","text":"Name Type Description Notes proj_key str The project key username str The username for the user","title":"Parameters"},{"location":"apis/user/ProjectsApi/#return-type_11","text":"void (empty response body)","title":"Return type"},{"location":"apis/user/ProjectsApi/#authorization_11","text":"Bearer","title":"Authorization"},{"location":"apis/user/ProjectsApi/#http-request-headers_11","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/ProjectsApi/#http-response-details_11","text":"Status code Description Response headers 204 User deleted from project successfully. - 403 The user that is executing this operation is not an owner of the project. - 404 Project or user not found. - 409 User not assigned to project, or the project only has one owner left. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/RegisterUserRequestBody/","text":"RegisterUserRequestBody \u00b6 Properties \u00b6 Name Type Description Notes access_token str OIDC access_token signed by the provider id_token str OIDC id_token signed by the provider [Back to Model list] [Back to API list] [Back to README]","title":"RegisterUserRequestBody"},{"location":"apis/user/RegisterUserRequestBody/#registeruserrequestbody","text":"","title":"RegisterUserRequestBody"},{"location":"apis/user/RegisterUserRequestBody/#properties","text":"Name Type Description Notes access_token str OIDC access_token signed by the provider id_token str OIDC id_token signed by the provider [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/user/ServiceAccount/","text":"ServiceAccount \u00b6 Properties \u00b6 Name Type Description Notes credentials ServiceAccountCredentials [optional] name str [optional] user_key str [Back to Model list] [Back to API list] [Back to README]","title":"ServiceAccount"},{"location":"apis/user/ServiceAccount/#serviceaccount","text":"","title":"ServiceAccount"},{"location":"apis/user/ServiceAccount/#properties","text":"Name Type Description Notes credentials ServiceAccountCredentials [optional] name str [optional] user_key str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/user/ServiceAccountCredentials/","text":"ServiceAccountCredentials \u00b6 Properties \u00b6 Name Type Description Notes password str username str [Back to Model list] [Back to API list] [Back to README]","title":"ServiceAccountCredentials"},{"location":"apis/user/ServiceAccountCredentials/#serviceaccountcredentials","text":"","title":"ServiceAccountCredentials"},{"location":"apis/user/ServiceAccountCredentials/#properties","text":"Name Type Description Notes password str username str [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/user/SettingsApi/","text":"deepsearch.cps.apis.user.SettingsApi \u00b6 All URIs are relative to http://localhost/api/cps/user/v1 Method HTTP request Description global_permissions GET /permissions global_permissions \u00b6 dict(str, bool) global_permissions() Get the global permissions for users. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . SettingsApi ( api_client ) try : api_response = api_instance . global_permissions () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SettingsApi->global_permissions: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 dict(str, bool) Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 401 Unauthorized - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"deepsearch.cps.apis.user.SettingsApi"},{"location":"apis/user/SettingsApi/#deepsearchcpsapisusersettingsapi","text":"All URIs are relative to http://localhost/api/cps/user/v1 Method HTTP request Description global_permissions GET /permissions","title":"deepsearch.cps.apis.user.SettingsApi"},{"location":"apis/user/SettingsApi/#global_permissions","text":"dict(str, bool) global_permissions() Get the global permissions for users.","title":"global_permissions"},{"location":"apis/user/SettingsApi/#example","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . SettingsApi ( api_client ) try : api_response = api_instance . global_permissions () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling SettingsApi->global_permissions: %s \\n \" % e )","title":"Example"},{"location":"apis/user/SettingsApi/#parameters","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/user/SettingsApi/#return-type","text":"dict(str, bool)","title":"Return type"},{"location":"apis/user/SettingsApi/#authorization","text":"Bearer","title":"Authorization"},{"location":"apis/user/SettingsApi/#http-request-headers","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/SettingsApi/#http-response-details","text":"Status code Description Response headers 200 OK - 401 Unauthorized - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/SuccessMessage/","text":"SuccessMessage \u00b6 Properties \u00b6 Name Type Description Notes success str Human readable message. [Back to Model list] [Back to API list] [Back to README]","title":"SuccessMessage"},{"location":"apis/user/SuccessMessage/#successmessage","text":"","title":"SuccessMessage"},{"location":"apis/user/SuccessMessage/#properties","text":"Name Type Description Notes success str Human readable message. [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/user/TokenResponse/","text":"TokenResponse \u00b6 Properties \u00b6 Name Type Description Notes token str The delete confirmation token. [Back to Model list] [Back to API list] [Back to README]","title":"TokenResponse"},{"location":"apis/user/TokenResponse/#tokenresponse","text":"","title":"TokenResponse"},{"location":"apis/user/TokenResponse/#properties","text":"Name Type Description Notes token str The delete confirmation token. [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/user/UserApi/","text":"deepsearch.cps.apis.user.UserApi \u00b6 All URIs are relative to http://localhost/api/cps/user/v1 Method HTTP request Description api_key_create POST /user/api_key api_key_create \u00b6 ApiKey api_key_create() Create an API Key for your user Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . UserApi ( api_client ) try : api_response = api_instance . api_key_create () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UserApi->api_key_create: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 ApiKey Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"User API"},{"location":"apis/user/UserApi/#deepsearchcpsapisuseruserapi","text":"All URIs are relative to http://localhost/api/cps/user/v1 Method HTTP request Description api_key_create POST /user/api_key","title":"deepsearch.cps.apis.user.UserApi"},{"location":"apis/user/UserApi/#api_key_create","text":"ApiKey api_key_create() Create an API Key for your user","title":"api_key_create"},{"location":"apis/user/UserApi/#example","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . UserApi ( api_client ) try : api_response = api_instance . api_key_create () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UserApi->api_key_create: %s \\n \" % e )","title":"Example"},{"location":"apis/user/UserApi/#parameters","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/user/UserApi/#return-type","text":"ApiKey","title":"Return type"},{"location":"apis/user/UserApi/#authorization","text":"Bearer","title":"Authorization"},{"location":"apis/user/UserApi/#http-request-headers","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/UserApi/#http-response-details","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/UserDetails/","text":"UserDetails \u00b6 Properties \u00b6 Name Type Description Notes email str [optional] role str [optional] username str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"UserDetails"},{"location":"apis/user/UserDetails/#userdetails","text":"","title":"UserDetails"},{"location":"apis/user/UserDetails/#properties","text":"Name Type Description Notes email str [optional] role str [optional] username str [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/user/UserType/","text":"UserType \u00b6 Properties \u00b6 Name Type Description Notes [Back to Model list] [Back to API list] [Back to README]","title":"UserType"},{"location":"apis/user/UserType/#usertype","text":"","title":"UserType"},{"location":"apis/user/UserType/#properties","text":"Name Type Description Notes [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"apis/user/UsersApi/","text":"deepsearch.cps.apis.user.UsersApi \u00b6 All URIs are relative to http://localhost/api/cps/user/v1 Method HTTP request Description api_key_get GET /user/api_key get_access_token POST /user/token get_current_user_details GET /user/current impersonate_user_token POST /user/impersonate search GET /user/search service_accounts_create POST /user/service_accounts service_accounts_list GET /user/service_accounts api_key_get \u00b6 ApiKey api_key_get() Show the API Key for your user Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . UsersApi ( api_client ) try : api_response = api_instance . api_key_get () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UsersApi->api_key_get: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 ApiKey Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_access_token \u00b6 AccessToken get_access_token(options=options) Request a user API token Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Configure HTTP basic authorization: UserAPIKey configuration = deepsearch . cps . apis . user . Configuration ( username = 'YOUR_USERNAME' , password = 'YOUR_PASSWORD' ) # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . UsersApi ( api_client ) options = deepsearch . cps . apis . user . GetAccessTokenRequestBody () # GetAccessTokenRequestBody | (optional) try : api_response = api_instance . get_access_token ( options = options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UsersApi->get_access_token: %s \\n \" % e ) Basic Authentication (UserAPIKey): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Configure HTTP basic authorization: UserAPIKey configuration = deepsearch . cps . apis . user . Configuration ( username = 'YOUR_USERNAME' , password = 'YOUR_PASSWORD' ) # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . UsersApi ( api_client ) options = deepsearch . cps . apis . user . GetAccessTokenRequestBody () # GetAccessTokenRequestBody | (optional) try : api_response = api_instance . get_access_token ( options = options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UsersApi->get_access_token: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes options GetAccessTokenRequestBody [optional] Return type \u00b6 AccessToken Authorization \u00b6 Bearer , UserAPIKey HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 401 Unauthorized. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_current_user_details \u00b6 UserDetails get_current_user_details() Gets the current user's details. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . UsersApi ( api_client ) try : api_response = api_instance . get_current_user_details () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UsersApi->get_current_user_details: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 UserDetails Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README] impersonate_user_token \u00b6 TokenResponse impersonate_user_token(body) Request an impersonate user token. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Configure HTTP basic authorization: UserAPIKey configuration = deepsearch . cps . apis . user . Configuration ( username = 'YOUR_USERNAME' , password = 'YOUR_PASSWORD' ) # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . UsersApi ( api_client ) body = deepsearch . cps . apis . user . ImpersonateUserTokenRequestBody () # ImpersonateUserTokenRequestBody | try : api_response = api_instance . impersonate_user_token ( body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UsersApi->impersonate_user_token: %s \\n \" % e ) Basic Authentication (UserAPIKey): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Configure HTTP basic authorization: UserAPIKey configuration = deepsearch . cps . apis . user . Configuration ( username = 'YOUR_USERNAME' , password = 'YOUR_PASSWORD' ) # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . UsersApi ( api_client ) body = deepsearch . cps . apis . user . ImpersonateUserTokenRequestBody () # ImpersonateUserTokenRequestBody | try : api_response = api_instance . impersonate_user_token ( body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UsersApi->impersonate_user_token: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes body ImpersonateUserTokenRequestBody Return type \u00b6 TokenResponse Authorization \u00b6 Bearer , UserAPIKey HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 401 Unauthorized. - 403 The user that's performing this operation does not have permission or the impersonate secret isn't valid. - [Back to top] [Back to API list] [Back to Model list] [Back to README] search \u00b6 list[UserDetails] search(term) Search for users matching the email or name. Depending on the user's permissions, only owners and assignees from their projects may be shown. Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . UsersApi ( api_client ) term = 'term_example' # str | Search term try : api_response = api_instance . search ( term ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UsersApi->search: %s \\n \" % e ) Parameters \u00b6 Name Type Description Notes term str Search term Return type \u00b6 list[UserDetails] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README] service_accounts_create \u00b6 ServiceAccount service_accounts_create() Create a new service accounts for your user Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . UsersApi ( api_client ) try : api_response = api_instance . service_accounts_create () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UsersApi->service_accounts_create: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 ServiceAccount Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README] service_accounts_list \u00b6 list[ServiceAccount] service_accounts_list() List all service accounts of your user Example \u00b6 Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . UsersApi ( api_client ) try : api_response = api_instance . service_accounts_list () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UsersApi->service_accounts_list: %s \\n \" % e ) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 list[ServiceAccount] Authorization \u00b6 Bearer HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"deepsearch.cps.apis.user.UsersApi"},{"location":"apis/user/UsersApi/#deepsearchcpsapisuserusersapi","text":"All URIs are relative to http://localhost/api/cps/user/v1 Method HTTP request Description api_key_get GET /user/api_key get_access_token POST /user/token get_current_user_details GET /user/current impersonate_user_token POST /user/impersonate search GET /user/search service_accounts_create POST /user/service_accounts service_accounts_list GET /user/service_accounts","title":"deepsearch.cps.apis.user.UsersApi"},{"location":"apis/user/UsersApi/#api_key_get","text":"ApiKey api_key_get() Show the API Key for your user","title":"api_key_get"},{"location":"apis/user/UsersApi/#example","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . UsersApi ( api_client ) try : api_response = api_instance . api_key_get () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UsersApi->api_key_get: %s \\n \" % e )","title":"Example"},{"location":"apis/user/UsersApi/#parameters","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/user/UsersApi/#return-type","text":"ApiKey","title":"Return type"},{"location":"apis/user/UsersApi/#authorization","text":"Bearer","title":"Authorization"},{"location":"apis/user/UsersApi/#http-request-headers","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/UsersApi/#http-response-details","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/UsersApi/#get_access_token","text":"AccessToken get_access_token(options=options) Request a user API token","title":"get_access_token"},{"location":"apis/user/UsersApi/#example_1","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Configure HTTP basic authorization: UserAPIKey configuration = deepsearch . cps . apis . user . Configuration ( username = 'YOUR_USERNAME' , password = 'YOUR_PASSWORD' ) # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . UsersApi ( api_client ) options = deepsearch . cps . apis . user . GetAccessTokenRequestBody () # GetAccessTokenRequestBody | (optional) try : api_response = api_instance . get_access_token ( options = options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UsersApi->get_access_token: %s \\n \" % e ) Basic Authentication (UserAPIKey): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Configure HTTP basic authorization: UserAPIKey configuration = deepsearch . cps . apis . user . Configuration ( username = 'YOUR_USERNAME' , password = 'YOUR_PASSWORD' ) # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . UsersApi ( api_client ) options = deepsearch . cps . apis . user . GetAccessTokenRequestBody () # GetAccessTokenRequestBody | (optional) try : api_response = api_instance . get_access_token ( options = options ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UsersApi->get_access_token: %s \\n \" % e )","title":"Example"},{"location":"apis/user/UsersApi/#parameters_1","text":"Name Type Description Notes options GetAccessTokenRequestBody [optional]","title":"Parameters"},{"location":"apis/user/UsersApi/#return-type_1","text":"AccessToken","title":"Return type"},{"location":"apis/user/UsersApi/#authorization_1","text":"Bearer , UserAPIKey","title":"Authorization"},{"location":"apis/user/UsersApi/#http-request-headers_1","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/UsersApi/#http-response-details_1","text":"Status code Description Response headers 200 OK - 401 Unauthorized. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/UsersApi/#get_current_user_details","text":"UserDetails get_current_user_details() Gets the current user's details.","title":"get_current_user_details"},{"location":"apis/user/UsersApi/#example_2","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . UsersApi ( api_client ) try : api_response = api_instance . get_current_user_details () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UsersApi->get_current_user_details: %s \\n \" % e )","title":"Example"},{"location":"apis/user/UsersApi/#parameters_2","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/user/UsersApi/#return-type_2","text":"UserDetails","title":"Return type"},{"location":"apis/user/UsersApi/#authorization_2","text":"Bearer","title":"Authorization"},{"location":"apis/user/UsersApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/UsersApi/#http-response-details_2","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/UsersApi/#impersonate_user_token","text":"TokenResponse impersonate_user_token(body) Request an impersonate user token.","title":"impersonate_user_token"},{"location":"apis/user/UsersApi/#example_3","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Configure HTTP basic authorization: UserAPIKey configuration = deepsearch . cps . apis . user . Configuration ( username = 'YOUR_USERNAME' , password = 'YOUR_PASSWORD' ) # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . UsersApi ( api_client ) body = deepsearch . cps . apis . user . ImpersonateUserTokenRequestBody () # ImpersonateUserTokenRequestBody | try : api_response = api_instance . impersonate_user_token ( body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UsersApi->impersonate_user_token: %s \\n \" % e ) Basic Authentication (UserAPIKey): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Configure HTTP basic authorization: UserAPIKey configuration = deepsearch . cps . apis . user . Configuration ( username = 'YOUR_USERNAME' , password = 'YOUR_PASSWORD' ) # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . UsersApi ( api_client ) body = deepsearch . cps . apis . user . ImpersonateUserTokenRequestBody () # ImpersonateUserTokenRequestBody | try : api_response = api_instance . impersonate_user_token ( body ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UsersApi->impersonate_user_token: %s \\n \" % e )","title":"Example"},{"location":"apis/user/UsersApi/#parameters_3","text":"Name Type Description Notes body ImpersonateUserTokenRequestBody","title":"Parameters"},{"location":"apis/user/UsersApi/#return-type_3","text":"TokenResponse","title":"Return type"},{"location":"apis/user/UsersApi/#authorization_3","text":"Bearer , UserAPIKey","title":"Authorization"},{"location":"apis/user/UsersApi/#http-request-headers_3","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/UsersApi/#http-response-details_3","text":"Status code Description Response headers 200 OK - 401 Unauthorized. - 403 The user that's performing this operation does not have permission or the impersonate secret isn't valid. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/UsersApi/#search","text":"list[UserDetails] search(term) Search for users matching the email or name. Depending on the user's permissions, only owners and assignees from their projects may be shown.","title":"search"},{"location":"apis/user/UsersApi/#example_4","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . UsersApi ( api_client ) term = 'term_example' # str | Search term try : api_response = api_instance . search ( term ) pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UsersApi->search: %s \\n \" % e )","title":"Example"},{"location":"apis/user/UsersApi/#parameters_4","text":"Name Type Description Notes term str Search term","title":"Parameters"},{"location":"apis/user/UsersApi/#return-type_4","text":"list[UserDetails]","title":"Return type"},{"location":"apis/user/UsersApi/#authorization_4","text":"Bearer","title":"Authorization"},{"location":"apis/user/UsersApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/UsersApi/#http-response-details_4","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/UsersApi/#service_accounts_create","text":"ServiceAccount service_accounts_create() Create a new service accounts for your user","title":"service_accounts_create"},{"location":"apis/user/UsersApi/#example_5","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . UsersApi ( api_client ) try : api_response = api_instance . service_accounts_create () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UsersApi->service_accounts_create: %s \\n \" % e )","title":"Example"},{"location":"apis/user/UsersApi/#parameters_5","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/user/UsersApi/#return-type_5","text":"ServiceAccount","title":"Return type"},{"location":"apis/user/UsersApi/#authorization_5","text":"Bearer","title":"Authorization"},{"location":"apis/user/UsersApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/UsersApi/#http-response-details_5","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"apis/user/UsersApi/#service_accounts_list","text":"list[ServiceAccount] service_accounts_list() List all service accounts of your user","title":"service_accounts_list"},{"location":"apis/user/UsersApi/#example_6","text":"Api Key Authentication (Bearer): from __future__ import print_function import time import deepsearch.cps.apis.user from deepsearch.cps.apis.user.rest import ApiException from pprint import pprint # Defining the host is optional and defaults to http://localhost/api/cps/user/v1 # See configuration.py for a list of all supported configuration parameters. configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: Bearer configuration = deepsearch . cps . apis . user . Configuration ( host = \"http://localhost/api/cps/user/v1\" , api_key = { 'Authorization' : 'YOUR_API_KEY' } ) # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['Authorization'] = 'Bearer' # Enter a context with an instance of the API client with deepsearch . cps . apis . user . ApiClient ( configuration ) as api_client : # Create an instance of the API class api_instance = deepsearch . cps . apis . user . UsersApi ( api_client ) try : api_response = api_instance . service_accounts_list () pprint ( api_response ) except ApiException as e : print ( \"Exception when calling UsersApi->service_accounts_list: %s \\n \" % e )","title":"Example"},{"location":"apis/user/UsersApi/#parameters_6","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"apis/user/UsersApi/#return-type_6","text":"list[ServiceAccount]","title":"Return type"},{"location":"apis/user/UsersApi/#authorization_6","text":"Bearer","title":"Authorization"},{"location":"apis/user/UsersApi/#http-request-headers_6","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"apis/user/UsersApi/#http-response-details_6","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"gallery/","text":"Gallery \u00b6 Examples of complete analysis and usages Examples are usually demonstrated as Jupyter notebooks which are listed in the examples folder. To the examples Dependencies Running the examples requires additional dependencies such as jupyter/notebook and pandas . These are easily installed with the examples extra dependency. $ pip install deepsearch-toolkit [ examples ] ---> 100%","title":"Example gallery"},{"location":"gallery/#gallery","text":"Examples of complete analysis and usages Examples are usually demonstrated as Jupyter notebooks which are listed in the examples folder. To the examples Dependencies Running the examples requires additional dependencies such as jupyter/notebook and pandas . These are easily installed with the examples extra dependency. $ pip install deepsearch-toolkit [ examples ] ---> 100%","title":"Gallery"},{"location":"getting_started/","text":"","title":"Index"},{"location":"getting_started/authentication/","text":"Authentication to the Deep Search platform \u00b6 After registering with Deep Search, you will get the following login information: USER-EMAIL API-KEY Configure login \u00b6 CLI Python Using the deepsearch login command $ deepsearch login Host [https://deepsearch-experience.res.ibm.com]: #(1) Email: #(2) Api key: #(3) Press Enter/Return for using default host. Otherwise, input the Deep Search deployment host to use. Enter your login USER-EMAIL . Enter your login API-KEY . import deepsearch as ds # API key authorization auth = ds . DeepSearchKeyAuth ( username = \"USER-EMAIL\" , api_key = \"API-KEY\" , ) # In case you have already a valid temporary access_token # auth = DeepSearchAuth(bearer_token=\"TOKEN\") config = ds . DeepSearchConfig ( host = \"https://deepsearch-experience.res.ibm.com\" , auth = auth , ) client = ds . CpsApiClient ( config ) api = ds . CpsApi ( client ) Verify Login \u00b6 All capabilities of the toolkit can only occur after a successful login configuration. Here, we verify our login configurations by checking the version Deep Search Toolkit. In addition, we recommend trying some simple operations like listing your projects . CLI Python Using the deepsearch version command $ deepsearch version import deepsearch as ds versions = ds . version ()","title":"Configure login"},{"location":"getting_started/authentication/#authentication-to-the-deep-search-platform","text":"After registering with Deep Search, you will get the following login information: USER-EMAIL API-KEY","title":"Authentication to the Deep Search platform"},{"location":"getting_started/authentication/#configure-login","text":"CLI Python Using the deepsearch login command $ deepsearch login Host [https://deepsearch-experience.res.ibm.com]: #(1) Email: #(2) Api key: #(3) Press Enter/Return for using default host. Otherwise, input the Deep Search deployment host to use. Enter your login USER-EMAIL . Enter your login API-KEY . import deepsearch as ds # API key authorization auth = ds . DeepSearchKeyAuth ( username = \"USER-EMAIL\" , api_key = \"API-KEY\" , ) # In case you have already a valid temporary access_token # auth = DeepSearchAuth(bearer_token=\"TOKEN\") config = ds . DeepSearchConfig ( host = \"https://deepsearch-experience.res.ibm.com\" , auth = auth , ) client = ds . CpsApiClient ( config ) api = ds . CpsApi ( client )","title":"Configure login"},{"location":"getting_started/authentication/#verify-login","text":"All capabilities of the toolkit can only occur after a successful login configuration. Here, we verify our login configurations by checking the version Deep Search Toolkit. In addition, we recommend trying some simple operations like listing your projects . CLI Python Using the deepsearch version command $ deepsearch version import deepsearch as ds versions = ds . version ()","title":"Verify Login"},{"location":"guide/","text":"User guides \u00b6 Common Deep Search operations \u00b6 Convert a document Management of system resources \u00b6 List projects List and manage data List and manage KGs Operate with manual API calls Custom CLI plugins","title":"User guides"},{"location":"guide/#user-guides","text":"","title":"User guides"},{"location":"guide/#common-deep-search-operations","text":"Convert a document","title":"Common Deep Search operations"},{"location":"guide/#management-of-system-resources","text":"List projects List and manage data List and manage KGs Operate with manual API calls Custom CLI plugins","title":"Management of system resources"},{"location":"guide/apis/","text":"Interaction with the Deep Search APIs \u00b6 Autogenerated API clients \u00b6 The SDK is also exposing the Swagger/OpenAPI autogenerated sdk clients. They can be used for interaction with all the CPS API endpoints. For more details, refer to the autogenerated docs . Usage of the Swagger SDK \u00b6 from deepsearch.core.client import DeepSearchBearerTokenAuth , DeepSearchKeyAuth , DeepSearchConfig from deepsearch.cps.client.api import CpsApi , CpsApiClient import urllib3 urllib3 . disable_warnings ( urllib3 . exceptions . InsecureRequestWarning ) # Import of the bare Swagger clients from deepsearch.cps.apis import public as sw_client auth = DeepSearchKeyAuth ( username = \"EMAIL\" , api_key = \"TOKEN\" , ) config = DeepSeaerchConfig ( host = \"https://deepsearch-experience.res.ibm.com\" , auth = auth , verify_ssl = False , ) client = CpsApiClient ( config ) api = CpsApi ( client ) # Initialize the Swagger client, e.g. the `KnowledgeGraphsApi` sw_kg_api = sw_client . KnowledgeGraphsApi ( api . client . swagger_client ) # ...use the Swagger client directly Interacting with the API directly via requests \u00b6 Another option is interacting with the CPS API directly using the endpoints. CPS provides a Swagger UI for inspecting all API endpoints (documented with schemas). To access the API documentation please use the following URLs: - User API: https://{HOST}/api/cps/user/v1/ui/ - Public API: https://{HOST}/api/cps/public/v1/ui/ For example: - User API: https://deepsearch-experience.res.ibm.com/api/cps/user/v1/ui/ - Public API: https://deepsearch-experience.res.ibm.com/api/cps/public/v1/ui/ Once find the endpoint for your request, you can use it with this example code. from deepsearch.core.client import DeepSearchBearerTokenAuth , DeepSearchKeyAuth , DeepSearchConfig from deepsearch.cps.client.api import CpsApi , CpsApiClient auth = DeepSearchKeyAuth ( username = \"EMAIL\" , api_key = \"TOKEN\" , ) config = DeepSearchConfig ( host = \"https://deepsearch-experience.res.ibm.com\" , auth = auth , verify_ssl = False , ) client = CpsApiClient ( config ) api = CpsApi ( client ) cps_api_url = api . client . swagger_client . configuration . host # For example, get list of KGs via the endpoint `/backend/project/{proj_key}/bags` proj_key = \"abc123\" r = api . client . session . get ( f \" { cps_api_url } /backend/project/ { proj_key } /bags\" ) r . raise_for_status () print ( r . json ())","title":"APIs"},{"location":"guide/apis/#interaction-with-the-deep-search-apis","text":"","title":"Interaction with the Deep Search APIs"},{"location":"guide/apis/#autogenerated-api-clients","text":"The SDK is also exposing the Swagger/OpenAPI autogenerated sdk clients. They can be used for interaction with all the CPS API endpoints. For more details, refer to the autogenerated docs .","title":"Autogenerated API clients"},{"location":"guide/apis/#usage-of-the-swagger-sdk","text":"from deepsearch.core.client import DeepSearchBearerTokenAuth , DeepSearchKeyAuth , DeepSearchConfig from deepsearch.cps.client.api import CpsApi , CpsApiClient import urllib3 urllib3 . disable_warnings ( urllib3 . exceptions . InsecureRequestWarning ) # Import of the bare Swagger clients from deepsearch.cps.apis import public as sw_client auth = DeepSearchKeyAuth ( username = \"EMAIL\" , api_key = \"TOKEN\" , ) config = DeepSeaerchConfig ( host = \"https://deepsearch-experience.res.ibm.com\" , auth = auth , verify_ssl = False , ) client = CpsApiClient ( config ) api = CpsApi ( client ) # Initialize the Swagger client, e.g. the `KnowledgeGraphsApi` sw_kg_api = sw_client . KnowledgeGraphsApi ( api . client . swagger_client ) # ...use the Swagger client directly","title":"Usage of the Swagger SDK"},{"location":"guide/apis/#interacting-with-the-api-directly-via-requests","text":"Another option is interacting with the CPS API directly using the endpoints. CPS provides a Swagger UI for inspecting all API endpoints (documented with schemas). To access the API documentation please use the following URLs: - User API: https://{HOST}/api/cps/user/v1/ui/ - Public API: https://{HOST}/api/cps/public/v1/ui/ For example: - User API: https://deepsearch-experience.res.ibm.com/api/cps/user/v1/ui/ - Public API: https://deepsearch-experience.res.ibm.com/api/cps/public/v1/ui/ Once find the endpoint for your request, you can use it with this example code. from deepsearch.core.client import DeepSearchBearerTokenAuth , DeepSearchKeyAuth , DeepSearchConfig from deepsearch.cps.client.api import CpsApi , CpsApiClient auth = DeepSearchKeyAuth ( username = \"EMAIL\" , api_key = \"TOKEN\" , ) config = DeepSearchConfig ( host = \"https://deepsearch-experience.res.ibm.com\" , auth = auth , verify_ssl = False , ) client = CpsApiClient ( config ) api = CpsApi ( client ) cps_api_url = api . client . swagger_client . configuration . host # For example, get list of KGs via the endpoint `/backend/project/{proj_key}/bags` proj_key = \"abc123\" r = api . client . session . get ( f \" { cps_api_url } /backend/project/ { proj_key } /bags\" ) r . raise_for_status () print ( r . json ())","title":"Interacting with the API directly via requests"},{"location":"guide/cli_plugins/","text":"CLI plugins \u00b6 We use Pluggy to extend the DeepSearch CLI. We recommend having a look at it's documentation for further details. Writing a CLI plugin \u00b6 We use Typer on the DeepSearch CLI. We recommend having a look at it's tutorial, which goes into further detail on how to use this library. In the example file below, we use the hookimpl to add our own CLI command group. The main requirements are: Your hook implementation must return a typer.Typer instance The instance must have a name set Consider the following toy example: # my_deepsearch_plugin/main.py import typer # Get the hookimpl that you will use to hook into the DeepSearch CLI from deepsearch.core.cli.plugins import deepsearch_cli_hookimpl # Implement the function to return a group. # We're defining an 'example' group, # using the Typer library. # It will be available as 'deepsearch example'. # Note: the name of the function is important! @deepsearch_cli_hookimpl def deepsearch_cli_add_group () -> typer . Typer : app = typer . Typer ( name = \"example\" ) # Define one or more commands. @app . command ( \"test\" ) def test ( name : str ): typer . echo ( f \"Hello, { name } !\" ) return app You can use any of the deepsearch package's contents to write your CLI plugins. See deepsearch/examples for more examples. Adding the plugin to your package \u00b6 Pluggy makes use of setuptools entry points to load plugins. Here's how you can add yours: Via setup.py \u00b6 Add a entry_points argument to your setup.py , replacing my_deepsearch_plugin.main to point to the file where you defined your plugin. setup ( entry_points = { \"deepsearch\" : [ \"cli = my_deepsearch_plugin.main\" ], } ) Via Poetry with pyproject.toml \u00b6 Add the following to your pyproject.toml , replacing my_deepsearch_plugin.main to point to the file where you defined your plugin. [tool.poetry.plugins.deepsearch] cli = \"my_deepsearch_plugin.main\" Using the plugin \u00b6 After installing your plugin package, you should see the example section when you run deepsearch : > deepsearch Usage: deepsearch [OPTIONS] COMMAND [ARGS]... Options: --install-completion [bash|zsh|fish|powershell|pwsh] Install completion for the specified shell. --show-completion [bash|zsh|fish|powershell|pwsh] Show completion for the specified shell, to copy it or customize the installation. --help Show this message and exit. Commands: config Manage CLI config files cps Interact with DeepSearch CPS component example login Login to DeepSearch platform query Interact with DeepSearch Query component version Print the client and server version information And running our newly added command gives us... > deepsearch example test DeepSearch Hello, DeepSearch!","title":"Plugin system"},{"location":"guide/cli_plugins/#cli-plugins","text":"We use Pluggy to extend the DeepSearch CLI. We recommend having a look at it's documentation for further details.","title":"CLI plugins"},{"location":"guide/cli_plugins/#writing-a-cli-plugin","text":"We use Typer on the DeepSearch CLI. We recommend having a look at it's tutorial, which goes into further detail on how to use this library. In the example file below, we use the hookimpl to add our own CLI command group. The main requirements are: Your hook implementation must return a typer.Typer instance The instance must have a name set Consider the following toy example: # my_deepsearch_plugin/main.py import typer # Get the hookimpl that you will use to hook into the DeepSearch CLI from deepsearch.core.cli.plugins import deepsearch_cli_hookimpl # Implement the function to return a group. # We're defining an 'example' group, # using the Typer library. # It will be available as 'deepsearch example'. # Note: the name of the function is important! @deepsearch_cli_hookimpl def deepsearch_cli_add_group () -> typer . Typer : app = typer . Typer ( name = \"example\" ) # Define one or more commands. @app . command ( \"test\" ) def test ( name : str ): typer . echo ( f \"Hello, { name } !\" ) return app You can use any of the deepsearch package's contents to write your CLI plugins. See deepsearch/examples for more examples.","title":"Writing a CLI plugin"},{"location":"guide/cli_plugins/#adding-the-plugin-to-your-package","text":"Pluggy makes use of setuptools entry points to load plugins. Here's how you can add yours:","title":"Adding the plugin to your package"},{"location":"guide/cli_plugins/#via-setuppy","text":"Add a entry_points argument to your setup.py , replacing my_deepsearch_plugin.main to point to the file where you defined your plugin. setup ( entry_points = { \"deepsearch\" : [ \"cli = my_deepsearch_plugin.main\" ], } )","title":"Via setup.py"},{"location":"guide/cli_plugins/#via-poetry-with-pyprojecttoml","text":"Add the following to your pyproject.toml , replacing my_deepsearch_plugin.main to point to the file where you defined your plugin. [tool.poetry.plugins.deepsearch] cli = \"my_deepsearch_plugin.main\"","title":"Via Poetry with pyproject.toml"},{"location":"guide/cli_plugins/#using-the-plugin","text":"After installing your plugin package, you should see the example section when you run deepsearch : > deepsearch Usage: deepsearch [OPTIONS] COMMAND [ARGS]... Options: --install-completion [bash|zsh|fish|powershell|pwsh] Install completion for the specified shell. --show-completion [bash|zsh|fish|powershell|pwsh] Show completion for the specified shell, to copy it or customize the installation. --help Show this message and exit. Commands: config Manage CLI config files cps Interact with DeepSearch CPS component example login Login to DeepSearch platform query Interact with DeepSearch Query component version Print the client and server version information And running our newly added command gives us... > deepsearch example test DeepSearch Hello, DeepSearch!","title":"Using the plugin"},{"location":"guide/convert_doc/","text":"This page shows how to convert documents and download the converted .json files. Instead of downloading the converted .json files, if you'd like to add the converted document to your project see Adding documents in a project . For the tasks on this page, you are required to identify your project within Deep Search via a PROJ_KEY . Listing projects shows the PROJ_KEY for all of your projects. Converting local documents \u00b6 The toolkit provides an easy method to convert documents from your local machine. The deepsearch documents component processes your input, uploads local files, submits for conversion and downloads the results to your machine. Following inputs are supported: Single document in PDF format. Multiple documents in ZIP format. Directory containing multiple documents in PDF and ZIP formats. Warning ZIP files containing additional ZIP files are not supported. Let PATH_DOCS be the path to a PDF document or a ZIP file or a directory in your local machine: CLI Python $ deepsearch documents convert -p PROJ_KEY -i PATH_DOCS import deepsearch as ds documents = ds . convert_documents ( proj_key = PROJ_KEY , local_file = PATH_DOCS ) Converting remote documents \u00b6 Single URL \u00b6 Let URL be the web address for an online document. CLI Python $ deepsearch documents convert -p PROJ_KEY -u URL import deepsearch as ds documents = ds . convert_documents ( proj_key = PROJ_KEY , url = URL ) Multiple URLs \u00b6 Create a text file containing the web addresses for online documents, separated by empty lines. For example, the contents of ONLINE-DOCS.txt could be: URL1 URL2 URL3 Let PATH_ONLINE_DOCS be the path to this text file. CLI Python deepsearch documents convert -p PROJ_KEY -u PATH_ONLINE_DOCS import deepsearch as ds # load the urls from the file to a list input_urls = open ( PATH_ONLINE_DOCS ) . readlines () # or, define a list directly #input_urls = [\"https:///URL1\", \"https://URL2\", \"https://URL3\"] documents = ds . convert_documents ( proj_key = PROJ_KEY , url = input_urls )","title":"Document Conversion"},{"location":"guide/convert_doc/#converting-local-documents","text":"The toolkit provides an easy method to convert documents from your local machine. The deepsearch documents component processes your input, uploads local files, submits for conversion and downloads the results to your machine. Following inputs are supported: Single document in PDF format. Multiple documents in ZIP format. Directory containing multiple documents in PDF and ZIP formats. Warning ZIP files containing additional ZIP files are not supported. Let PATH_DOCS be the path to a PDF document or a ZIP file or a directory in your local machine: CLI Python $ deepsearch documents convert -p PROJ_KEY -i PATH_DOCS import deepsearch as ds documents = ds . convert_documents ( proj_key = PROJ_KEY , local_file = PATH_DOCS )","title":"Converting local documents"},{"location":"guide/convert_doc/#converting-remote-documents","text":"","title":"Converting remote documents"},{"location":"guide/convert_doc/#single-url","text":"Let URL be the web address for an online document. CLI Python $ deepsearch documents convert -p PROJ_KEY -u URL import deepsearch as ds documents = ds . convert_documents ( proj_key = PROJ_KEY , url = URL )","title":"Single URL"},{"location":"guide/convert_doc/#multiple-urls","text":"Create a text file containing the web addresses for online documents, separated by empty lines. For example, the contents of ONLINE-DOCS.txt could be: URL1 URL2 URL3 Let PATH_ONLINE_DOCS be the path to this text file. CLI Python deepsearch documents convert -p PROJ_KEY -u PATH_ONLINE_DOCS import deepsearch as ds # load the urls from the file to a list input_urls = open ( PATH_ONLINE_DOCS ) . readlines () # or, define a list directly #input_urls = [\"https:///URL1\", \"https://URL2\", \"https://URL3\"] documents = ds . convert_documents ( proj_key = PROJ_KEY , url = input_urls )","title":"Multiple URLs"},{"location":"guide/data_indices/","text":"Data indices \u00b6 A data index stores a collection of documents in a project. This page shows how to create and delete a data index, and to list all data indices in a project. Since a data index \"lives\" inside a project, we need to specify which project we are referring to. This is accomplished by a project key PROJ_KEY . We can obtain the project keys for our projects by listing them . Create data index in a project \u00b6 Suppose you want to create an index called NAME . Optionally, a description, DESC , for the data index can be provided. CLI Python $ deepsearch cps data-indices create -p PROJ_KEY -n NAME -d DESC After you have generated the api object (from login configuration ), api . data_indices . create ( proj_key = PROJ_KEY , name = NAME , desc = DESC ) In addition, it is possible to specify non-default type of data index. For more, see here for CLI and here for python . Type Description Document (Default) Index containing documents uploaded as PDF and converted by the platform. DB Records Index containing data matching the DB records schema. This usually orginates from curated data collections, and exposes a schema which can be leveraged in the processing pipeline. Generic Generic type with the least requirements. Experiment Data coming from simulation experiments. Listing data indices in a project \u00b6 CLI Python $ deepsearch cps data-indices list -p PROJ_KEY indices = api . data_indices . list ( PROJ_KEY ) for item in indices : print ( item . key , item . name ) # If your project uses Pandas, you can easily convert the list of projects to a Dataframe import pandas as pd df = pd . DataFrame ([ item . to_dict () for item in indices ]) print ( df ) Deleting data index in a project \u00b6 To delete a data index, you need to specify an index via its INDEX_KEY . Listing data indices will show the INDEX_KEY for all the indices in a project. CLI Python $ deepsearch cps data-indices delete -p PROJ_KEY -x INDEX_KEY from deepsearch.cps.client.components.elastic import ElasticProjectDataCollectionSource # specify index coords = ElasticProjectDataCollectionSource ( proj_key = PROJ_KEY , index_key = INDEX_KEY ) api . data_indices . delete ( coords ) Adding documents in a project \u00b6 Documents can be converted and added, directly, to a data index in a project. Briefly, documents can be on a local machine or on the remote files. Local documents can be in PDF format, ZIP archives, or directory containing both ( PATH_DOCS ). The web address of a remote document is input directly or multiple web addresses can be stored in a text file ( PATH_URL ). The specification of documents is same as in Document Conversion . CLI Python // for local documents $ deepsearch cps data-indices upload -p PROJ_KEY -x INDEX_KEY -i PATH_DOCS // for online documents $ deepsearch cps data-indices upload -p PROJ_KEY -x INDEX_KEY -u PATH_URL from deepsearch.cps.client.components.elastic import ElasticProjectDataCollectionSource # Specify index coords = ElasticProjectDataCollectionSource ( proj_key = PROJ_KEY , index_key = INDEX_KEY ) # For local documents ds . data_indices_utilities . upload_files ( coords = coords , local_file = PATH_DOCS ) # For online documents # load the urls from the file to a list input_urls = open ( PATH_URL ) . readlines () # or, define a list directly #input_urls = [\"https:///URL1\", \"https://URL2\", \"https://URL3\"] ds . data_indices_utilities . upload_files ( coords = coords , url = input_urls )","title":"Data Indices"},{"location":"guide/data_indices/#data-indices","text":"A data index stores a collection of documents in a project. This page shows how to create and delete a data index, and to list all data indices in a project. Since a data index \"lives\" inside a project, we need to specify which project we are referring to. This is accomplished by a project key PROJ_KEY . We can obtain the project keys for our projects by listing them .","title":"Data indices"},{"location":"guide/data_indices/#create-data-index-in-a-project","text":"Suppose you want to create an index called NAME . Optionally, a description, DESC , for the data index can be provided. CLI Python $ deepsearch cps data-indices create -p PROJ_KEY -n NAME -d DESC After you have generated the api object (from login configuration ), api . data_indices . create ( proj_key = PROJ_KEY , name = NAME , desc = DESC ) In addition, it is possible to specify non-default type of data index. For more, see here for CLI and here for python . Type Description Document (Default) Index containing documents uploaded as PDF and converted by the platform. DB Records Index containing data matching the DB records schema. This usually orginates from curated data collections, and exposes a schema which can be leveraged in the processing pipeline. Generic Generic type with the least requirements. Experiment Data coming from simulation experiments.","title":"Create data index in a project"},{"location":"guide/data_indices/#listing-data-indices-in-a-project","text":"CLI Python $ deepsearch cps data-indices list -p PROJ_KEY indices = api . data_indices . list ( PROJ_KEY ) for item in indices : print ( item . key , item . name ) # If your project uses Pandas, you can easily convert the list of projects to a Dataframe import pandas as pd df = pd . DataFrame ([ item . to_dict () for item in indices ]) print ( df )","title":"Listing data indices in a project"},{"location":"guide/data_indices/#deleting-data-index-in-a-project","text":"To delete a data index, you need to specify an index via its INDEX_KEY . Listing data indices will show the INDEX_KEY for all the indices in a project. CLI Python $ deepsearch cps data-indices delete -p PROJ_KEY -x INDEX_KEY from deepsearch.cps.client.components.elastic import ElasticProjectDataCollectionSource # specify index coords = ElasticProjectDataCollectionSource ( proj_key = PROJ_KEY , index_key = INDEX_KEY ) api . data_indices . delete ( coords )","title":"Deleting data index in a project"},{"location":"guide/data_indices/#adding-documents-in-a-project","text":"Documents can be converted and added, directly, to a data index in a project. Briefly, documents can be on a local machine or on the remote files. Local documents can be in PDF format, ZIP archives, or directory containing both ( PATH_DOCS ). The web address of a remote document is input directly or multiple web addresses can be stored in a text file ( PATH_URL ). The specification of documents is same as in Document Conversion . CLI Python // for local documents $ deepsearch cps data-indices upload -p PROJ_KEY -x INDEX_KEY -i PATH_DOCS // for online documents $ deepsearch cps data-indices upload -p PROJ_KEY -x INDEX_KEY -u PATH_URL from deepsearch.cps.client.components.elastic import ElasticProjectDataCollectionSource # Specify index coords = ElasticProjectDataCollectionSource ( proj_key = PROJ_KEY , index_key = INDEX_KEY ) # For local documents ds . data_indices_utilities . upload_files ( coords = coords , local_file = PATH_DOCS ) # For online documents # load the urls from the file to a list input_urls = open ( PATH_URL ) . readlines () # or, define a list directly #input_urls = [\"https:///URL1\", \"https://URL2\", \"https://URL3\"] ds . data_indices_utilities . upload_files ( coords = coords , url = input_urls )","title":"Adding documents in a project"},{"location":"guide/kgs/","text":"Knowledge graphs \u00b6 Operations on KGs \u00b6 When interacting with a KG, you can obtain the proj_key and kg_key identifiers from the API section of the UI. List the KGs in a project \u00b6 proj_key = \"abc123\" # get your proj_key from the UI details kgs = api . knowledge_graphs . list ( proj_key ) print ( kgs ) Query a KG \u00b6 from deepsearch.cps.client.queries import Query from deepsearch.cps.client.queries.task import Value from deepsearch.cps.client.queries.query_tasks import ForEach , Workflow from deepsearch.cps.client.builders.wf_builder import WorkflowBuilder , WorkflowTaskOperation proj_key = \"abc123\" # get your proj_key from the UI details kg_key = \"xyz987\" # get kg_key (also called bag_key) from the UI details kg = api . knowledge_graphs . get ( proj_key , kg_key ) if kg is None : raise Exception ( \"No such kg\" ) # Get the KG topology topo = kg . get_topology () query = Query () builder = WorkflowBuilder () # ... add Workflow tasks to the query # Add Workflow and KG coordinates to the query wf = query . add ( Workflow ( id = \"\" , builder = builder , coordinates = kg , inputs = {})) # Execute the query result = api . queries . run ( query ) More example queries are available in the examples gallery .","title":"Knowledge graphs"},{"location":"guide/kgs/#knowledge-graphs","text":"","title":"Knowledge graphs"},{"location":"guide/kgs/#operations-on-kgs","text":"When interacting with a KG, you can obtain the proj_key and kg_key identifiers from the API section of the UI.","title":"Operations on KGs"},{"location":"guide/kgs/#list-the-kgs-in-a-project","text":"proj_key = \"abc123\" # get your proj_key from the UI details kgs = api . knowledge_graphs . list ( proj_key ) print ( kgs )","title":"List the KGs in a project"},{"location":"guide/kgs/#query-a-kg","text":"from deepsearch.cps.client.queries import Query from deepsearch.cps.client.queries.task import Value from deepsearch.cps.client.queries.query_tasks import ForEach , Workflow from deepsearch.cps.client.builders.wf_builder import WorkflowBuilder , WorkflowTaskOperation proj_key = \"abc123\" # get your proj_key from the UI details kg_key = \"xyz987\" # get kg_key (also called bag_key) from the UI details kg = api . knowledge_graphs . get ( proj_key , kg_key ) if kg is None : raise Exception ( \"No such kg\" ) # Get the KG topology topo = kg . get_topology () query = Query () builder = WorkflowBuilder () # ... add Workflow tasks to the query # Add Workflow and KG coordinates to the query wf = query . add ( Workflow ( id = \"\" , builder = builder , coordinates = kg , inputs = {})) # Execute the query result = api . queries . run ( query ) More example queries are available in the examples gallery .","title":"Query a KG"},{"location":"guide/projects/","text":"Projects \u00b6 Deep Search projects allow users to collaborate. All resources such as data, models and knowledge graphs belog to a project. Collaborators may be added to a project as owners , editors or viewers . Below is a description of the roles. Role Description viewer Inspect documents, view all project resources, query project knowledge graphs. editor All permissions of viewer + creating and editing new project resources. owner All permissions of editor + possibility to manage collaborators and delete the project. Listing projects \u00b6 Info Please configure your login before trying these examples. CLI Python Using the deepsearch cps component: $ deepsearch cps projects list key name ---------------------------------------- --------------------- c5e1f35a57e1a538c111c59752f06df07aab6c91 dev 20ae7fb2567d4b777712a6bb50f133c118497d0d MyProjects 1146f5cf2c5ebb4774df38888d5fa608673fca33 IT Services 744978acd58c0cd16893ec4e0ccdd69fd8dd5566 ... After you have generated the api object (from login configuration ), listing projects is very easy. projects = api . projects . list () # returns list of projects for proj in projects : print ( proj . key , proj . name ) # If your project uses Pandas, you can easily convert the list of projects to a Dataframe import pandas as pd df = pd . DataFrame ( projects ) print ( df )","title":"Projects"},{"location":"guide/projects/#projects","text":"Deep Search projects allow users to collaborate. All resources such as data, models and knowledge graphs belog to a project. Collaborators may be added to a project as owners , editors or viewers . Below is a description of the roles. Role Description viewer Inspect documents, view all project resources, query project knowledge graphs. editor All permissions of viewer + creating and editing new project resources. owner All permissions of editor + possibility to manage collaborators and delete the project.","title":"Projects"},{"location":"guide/projects/#listing-projects","text":"Info Please configure your login before trying these examples. CLI Python Using the deepsearch cps component: $ deepsearch cps projects list key name ---------------------------------------- --------------------- c5e1f35a57e1a538c111c59752f06df07aab6c91 dev 20ae7fb2567d4b777712a6bb50f133c118497d0d MyProjects 1146f5cf2c5ebb4774df38888d5fa608673fca33 IT Services 744978acd58c0cd16893ec4e0ccdd69fd8dd5566 ... After you have generated the api object (from login configuration ), listing projects is very easy. projects = api . projects . list () # returns list of projects for proj in projects : print ( proj . key , proj . name ) # If your project uses Pandas, you can easily convert the list of projects to a Dataframe import pandas as pd df = pd . DataFrame ( projects ) print ( df )","title":"Listing projects"}]}